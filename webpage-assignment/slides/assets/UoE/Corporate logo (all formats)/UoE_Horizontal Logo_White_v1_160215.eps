%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: UoE_Horizontal Logo_White.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: Marc Wright
%%CreationDate: 02/12/2014
%%BoundingBox: 0 0 530 86
%%HiResBoundingBox: 0 0 529.4119 85.1353
%%CropBox: 0 0 529.4119 85.1353
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2ColUncoated</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-12-02T15:14:02Z</xmp:MetadataDate>
         <xmp:ModifyDate>2014-12-02T15:14:02Z</xmp:ModifyDate>
         <xmp:CreateDate>2014-12-02T15:14:02Z</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>44</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgALAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:05b5549c-1cd5-417e-b947-a7017ee7563d</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:05b5549c-1cd5-417e-b947-a7017ee7563d</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:05dee829-5322-4159-8952-88c96a6650cd</stRef:instanceID>
            <stRef:documentID>xmp.did:05dee829-5322-4159-8952-88c96a6650cd</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:07+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:18:29-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T12:59:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:02:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:47-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:30:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FEE440664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:22:44+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F85BBCD703EDD11A8D1DFE8FDCD79D1</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:30:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:676AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:43:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:81784906200A11689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T06:08:19-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:07:10+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:11+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8661C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8761C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39:19+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811AFA6A99C165E9A27</stEvt:instanceID>
                  <stEvt:when>2009-11-12T11:05:09Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0f67131-f09a-4a71-ba1b-8cda4a15bda1</stEvt:instanceID>
                  <stEvt:when>2014-10-06T09:15:35+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d8389546-5e54-42ff-b69b-d2e8eff724d7</stEvt:instanceID>
                  <stEvt:when>2014-11-05T15:54:52Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05dee829-5322-4159-8952-88c96a6650cd</stEvt:instanceID>
                  <stEvt:when>2014-11-05T16:02:28Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05b5549c-1cd5-417e-b947-a7017ee7563d</stEvt:instanceID>
                  <stEvt:when>2014-12-02T15:14:02Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>296.999935</stDim:w>
            <stDim:h>60.000478</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>87.112230</xmpG:magenta>
                           <xmpG:yellow>42.169830</xmpG:yellow>
                           <xmpG:black>51.827264</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -85.1353 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 85.1353 li
529.412 85.1353 li
529.412 0 li
cp
clp
117.788 31.6816 mo
115.01 31.6816 li
115.01 45.7612 li
115.01 46.8649 115.144 47.6103 115.415 47.9954 cv
115.686 48.3806 116.211 48.5736 116.992 48.5736 cv
116.992 49.1043 li
110.513 49.1043 li
110.513 48.5736 li
111.319 48.5736 111.866 48.3527 112.156 47.9098 cv
112.445 47.4668 112.59 46.7193 112.59 45.6673 cv
112.59 31.6816 li
109.935 31.6816 li
108.665 31.6816 107.742 31.885 107.164 32.2907 cv
106.587 32.6965 106.262 33.3676 106.188 34.305 cv
105.642 34.305 li
105.642 30.105 li
106.188 30.105 li
106.678 30.5634 107.594 30.7916 108.937 30.7916 cv
118.538 30.7916 li
119.921 30.7916 120.89 30.5634 121.441 30.105 cv
122.019 30.105 li
122.019 34.305 li
121.66 34.305 li
121.431 33.2953 121.022 32.6056 120.434 32.236 cv
119.846 31.8664 118.964 31.6816 117.788 31.6816 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
138.729 45.6642 mo
138.729 40.346 li
128.754 40.346 li
128.754 45.6642 li
128.754 46.7482 128.907 47.505 129.214 47.9325 cv
129.521 48.3599 130.075 48.5736 130.876 48.5736 cv
130.876 49.1043 li
124.257 49.1043 li
124.257 48.5736 li
125.059 48.5736 125.605 48.3578 125.897 47.9252 cv
126.188 47.4926 126.334 46.74 126.334 45.6673 cv
126.334 34.2452 li
126.334 33.1198 126.185 32.3516 125.889 31.9407 cv
125.592 31.5288 125.048 31.3233 124.257 31.3233 cv
124.257 30.7916 li
130.876 30.7916 li
130.876 31.3233 li
130.075 31.3233 129.521 31.5443 129.214 31.9861 cv
128.907 32.4291 128.754 33.1807 128.754 34.2421 cv
128.754 39.456 li
138.729 39.456 li
138.729 34.2421 li
138.729 33.1177 138.586 32.3506 138.3 31.9397 cv
138.014 31.5288 137.475 31.3233 136.684 31.3233 cv
136.684 30.7916 li
143.241 30.7916 li
143.241 31.3233 li
142.461 31.3233 141.919 31.537 141.617 31.9634 cv
141.316 32.3909 141.165 33.1508 141.165 34.2452 cv
141.165 45.6673 li
141.165 46.7606 141.316 47.5185 141.617 47.9407 cv
141.919 48.363 142.461 48.5736 143.241 48.5736 cv
143.241 49.1043 li
136.684 49.1043 li
136.684 48.5736 li
137.496 48.5736 138.04 48.363 138.315 47.9397 cv
138.591 47.5174 138.729 46.7596 138.729 45.6642 cv
cp
f
157.535 37.7235 mo
158.081 37.7235 li
158.081 42.1724 li
157.535 42.1724 li
157.336 41.3918 157.098 40.9035 156.817 40.7053 cv
156.535 40.5081 155.921 40.4089 154.974 40.4089 cv
150.431 40.4089 li
150.431 46.9651 li
150.431 47.4235 150.532 47.7466 150.736 47.9335 cv
150.939 48.1204 151.285 48.2143 151.775 48.2143 cv
154.974 48.2143 li
156.119 48.2143 156.91 48.1524 157.348 48.0275 cv
157.784 47.9025 158.154 47.6702 158.456 47.3326 cv
158.757 46.994 159.08 46.4457 159.424 45.6858 cv
159.97 45.6858 li
159.127 49.1043 li
145.935 49.1043 li
145.935 48.5736 li
146.758 48.5736 147.309 48.363 147.59 47.9407 cv
147.871 47.5185 148.011 46.771 148.011 45.6982 cv
148.011 34.2452 li
148.011 33.1301 147.866 32.3651 147.574 31.9479 cv
147.283 31.5319 146.737 31.3233 145.935 31.3233 cv
145.935 30.7916 li
159.127 30.7916 li
159.127 33.8518 li
158.784 33.8518 li
158.596 32.9773 158.329 32.3981 157.98 32.1111 cv
157.631 31.8251 156.874 31.6816 155.708 31.6816 cv
150.431 31.6816 li
150.431 39.519 li
155.552 39.519 li
156.249 39.519 156.725 39.394 156.98 39.1442 cv
157.235 38.8943 157.42 38.4215 157.535 37.7235 cv
cp
f
183.615 45.2636 mo
183.615 34.2421 li
183.615 33.1704 183.471 32.4239 183.185 32.0016 cv
182.898 31.5804 182.391 31.3543 181.662 31.3233 cv
181.662 30.7916 li
188.125 30.7916 li
188.125 31.3233 li
187.345 31.3233 186.804 31.537 186.502 31.9634 cv
186.2 32.3909 186.049 33.1508 186.049 34.2452 cv
186.049 45.6673 li
186.049 46.74 186.198 47.4926 186.494 47.9252 cv
186.791 48.3578 187.334 48.5736 188.125 48.5736 cv
188.125 49.1043 li
183.615 49.1043 li
183.615 46.5438 li
181.896 48.553 179.862 49.5565 177.51 49.5565 cv
175.574 49.5565 174.052 48.9794 172.944 47.8241 cv
171.835 46.6687 171.281 45.1448 171.281 43.2503 cv
171.281 34.2421 li
171.281 33.1497 171.138 32.3898 170.851 31.9634 cv
170.565 31.536 170.016 31.3233 169.204 31.3233 cv
169.204 30.7916 li
175.824 30.7916 li
175.824 31.3233 li
175.002 31.3233 174.445 31.5308 174.153 31.9469 cv
173.862 32.364 173.716 33.1177 173.716 34.2111 cv
173.716 43.4846 li
173.716 44.9827 174.127 46.1618 174.95 47.0198 cv
175.772 47.8788 176.917 48.3083 178.384 48.3083 cv
180.559 48.3083 182.302 47.2934 183.615 45.2636 cv
cp
f
204.57 31.3233 mo
204.57 30.7916 li
210.096 30.7916 li
210.096 31.3233 li
209.211 31.3233 208.598 31.5308 208.254 31.9469 cv
207.911 32.364 207.739 33.1177 207.739 34.2111 cv
207.739 49.1043 li
207.178 49.1043 li
194.204 33.1807 li
194.204 46.042 li
194.204 46.9485 194.388 47.5969 194.758 47.9872 cv
195.127 48.3785 195.744 48.5736 196.608 48.5736 cv
196.608 49.1043 li
191.05 49.1043 li
191.05 48.5736 li
191.935 48.5736 192.534 48.3413 192.846 47.8788 cv
193.158 47.4152 193.314 46.5996 193.314 45.4329 cv
193.314 34.7139 li
193.314 33.5575 193.104 32.7264 192.682 32.2215 cv
192.26 31.7167 191.565 31.4173 190.598 31.3233 cv
190.598 30.7916 li
195.298 30.7916 li
206.802 45.0457 li
206.802 34.336 li
206.802 33.2117 206.643 32.4291 206.327 31.9861 cv
206.009 31.5443 205.423 31.3233 204.57 31.3233 cv
cp
f
219.292 30.7916 mo
219.292 31.3233 li
218.512 31.3233 217.97 31.537 217.668 31.9634 cv
217.367 32.3909 217.216 33.1508 217.216 34.2452 cv
217.216 45.6673 li
217.216 46.7606 217.367 47.5185 217.668 47.9407 cv
217.97 48.363 218.512 48.5736 219.292 48.5736 cv
219.292 49.1043 li
212.704 49.1043 li
212.704 48.5736 li
213.505 48.5736 214.051 48.3651 214.343 47.949 cv
214.634 47.5319 214.78 46.771 214.78 45.6673 cv
214.78 34.2452 li
214.78 33.1198 214.637 32.3516 214.351 31.9407 cv
214.064 31.5288 213.516 31.3233 212.704 31.3233 cv
212.704 30.7916 li
219.292 30.7916 li
cp
f
239.48 30.7916 mo
239.48 31.3543 li
238.137 31.3543 237.027 32.5406 236.152 34.9132 cv
230.748 49.3542 li
230.229 49.3542 li
224.558 34.4919 li
224.027 33.1177 223.569 32.2515 223.183 31.8922 cv
222.797 31.5339 222.246 31.344 221.527 31.3233 cv
221.527 30.7916 li
228.177 30.7916 li
228.177 31.3233 li
227.109 31.3233 226.575 31.7342 226.575 32.5561 cv
226.575 32.8266 226.642 33.1332 226.777 33.477 cv
231.26 45.2956 li
235.514 33.8838 li
235.691 33.3944 235.779 32.9732 235.779 32.619 cv
235.779 31.7549 235.233 31.3233 234.141 31.3233 cv
234.141 30.7916 li
239.48 30.7916 li
cp
f
252.897 37.7235 mo
253.443 37.7235 li
253.443 42.1724 li
252.897 42.1724 li
252.698 41.3918 252.46 40.9035 252.179 40.7053 cv
251.897 40.5081 251.283 40.4089 250.336 40.4089 cv
245.793 40.4089 li
245.793 46.9651 li
245.793 47.4235 245.894 47.7466 246.098 47.9335 cv
246.301 48.1204 246.647 48.2143 247.137 48.2143 cv
250.336 48.2143 li
251.481 48.2143 252.272 48.1524 252.71 48.0275 cv
253.146 47.9025 253.516 47.6702 253.818 47.3326 cv
254.119 46.994 254.442 46.4457 254.786 45.6858 cv
255.332 45.6858 li
254.489 49.1043 li
241.297 49.1043 li
241.297 48.5736 li
242.12 48.5736 242.671 48.363 242.952 47.9407 cv
243.233 47.5185 243.373 46.771 243.373 45.6982 cv
243.373 34.2452 li
243.373 33.1301 243.228 32.3651 242.936 31.9479 cv
242.645 31.5319 242.099 31.3233 241.297 31.3233 cv
241.297 30.7916 li
254.489 30.7916 li
254.489 33.8518 li
254.146 33.8518 li
253.958 32.9773 253.691 32.3981 253.342 32.1111 cv
252.993 31.8251 252.236 31.6816 251.07 31.6816 cv
245.793 31.6816 li
245.793 39.519 li
250.914 39.519 li
251.611 39.519 252.087 39.394 252.342 39.1442 cv
252.597 38.8943 252.782 38.4215 252.897 37.7235 cv
cp
f
264.134 31.4947 mo
262.214 31.4947 li
262.214 39.8628 li
264.462 39.8628 li
265.804 39.8628 266.859 39.4777 267.624 38.7075 cv
268.388 37.9372 268.771 36.9172 268.771 35.6472 cv
268.771 34.4083 268.346 33.4068 267.499 32.6418 cv
266.65 31.8767 265.529 31.4947 264.134 31.4947 cv
cp
263.697 40.6268 mo
262.214 40.6268 li
262.214 45.6642 li
262.214 46.7482 262.367 47.505 262.674 47.9325 cv
262.981 48.3599 263.525 48.5736 264.305 48.5736 cv
264.305 49.1043 li
257.717 49.1043 li
257.717 48.5736 li
258.53 48.5736 259.078 48.3599 259.365 47.9325 cv
259.651 47.5061 259.793 46.7503 259.793 45.6673 cv
259.793 34.1822 li
259.793 33.0991 259.653 32.3516 259.372 31.9407 cv
259.091 31.5288 258.54 31.3233 257.717 31.3233 cv
257.717 30.7916 li
265.226 30.7916 li
267.079 30.7916 268.56 31.2428 269.668 32.142 cv
270.777 33.0423 271.331 34.1904 271.331 35.5853 cv
271.331 37.833 270.072 39.3311 267.552 40.0806 cv
268.106 40.4348 268.646 40.921 269.173 41.5405 cv
269.7 42.159 270.391 43.1883 271.244 44.6265 cv
272.204 46.2227 272.952 47.2686 273.491 47.7652 cv
274.03 48.2629 274.591 48.5313 275.171 48.5736 cv
275.171 49.1043 li
271.424 49.1043 li
270.654 48.1772 269.723 46.8164 268.63 45.023 cv
267.465 43.1357 266.551 41.9308 265.89 41.4094 cv
265.229 40.888 264.498 40.6268 263.697 40.6268 cv
cp
f
286.01 30.5262 mo
286.525 30.5262 li
286.525 34.8202 li
285.979 34.8202 li
285.854 33.6329 285.424 32.7068 284.69 32.0409 cv
283.957 31.3749 283.033 31.0414 281.919 31.0414 cv
280.931 31.0414 280.134 31.2913 279.531 31.791 cv
278.927 32.2907 278.625 32.9567 278.625 33.7898 cv
278.625 34.5601 278.875 35.2621 279.375 35.8971 cv
279.875 36.5321 280.957 37.3487 282.622 38.3482 cv
284.558 39.5035 285.859 40.5132 286.525 41.3764 cv
287.191 42.2405 287.524 43.2296 287.524 44.3426 cv
287.524 45.7788 287.014 47.0074 285.996 48.0275 cv
284.978 49.0475 283.752 49.5565 282.318 49.5565 cv
281.486 49.5565 280.426 49.3284 279.138 48.8699 cv
278.608 48.6831 278.27 48.5891 278.125 48.5891 cv
277.823 48.5891 277.59 48.8235 277.424 49.2912 cv
276.877 49.2912 li
276.877 44.3426 li
277.424 44.3426 li
277.434 45.7065 277.878 46.7988 278.756 47.6217 cv
279.633 48.4435 280.659 48.8545 281.832 48.8545 cv
282.944 48.8545 283.835 48.5581 284.505 47.9634 cv
285.174 47.3698 285.51 46.5789 285.51 45.5888 cv
285.51 44.8495 285.234 44.1413 284.684 43.464 cv
284.134 42.7877 282.982 41.9143 281.232 40.8457 cv
279.805 39.965 278.852 39.2691 278.374 38.758 cv
277.896 38.248 277.542 37.6884 277.313 37.0793 cv
277.085 36.4701 276.97 35.8011 276.97 35.0722 cv
276.97 33.667 277.431 32.5261 278.352 31.6516 cv
279.273 30.7771 280.473 30.3394 281.951 30.3394 cv
282.763 30.3394 283.647 30.5004 284.604 30.8236 cv
285.052 30.9692 285.364 31.0414 285.541 31.0414 cv
285.686 31.0414 285.786 31.0105 285.838 30.9485 cv
285.89 30.8855 285.947 30.7451 286.01 30.5262 cv
cp
f
297.171 30.7916 mo
297.171 31.3233 li
296.39 31.3233 295.848 31.537 295.546 31.9634 cv
295.245 32.3909 295.094 33.1508 295.094 34.2452 cv
295.094 45.6673 li
295.094 46.7606 295.245 47.5185 295.546 47.9407 cv
295.848 48.363 296.39 48.5736 297.171 48.5736 cv
297.171 49.1043 li
290.582 49.1043 li
290.582 48.5736 li
291.384 48.5736 291.93 48.3651 292.221 47.949 cv
292.512 47.5319 292.659 46.771 292.659 45.6673 cv
292.659 34.2452 li
292.659 33.1198 292.515 32.3516 292.229 31.9407 cv
291.942 31.5288 291.394 31.3233 290.582 31.3233 cv
290.582 30.7916 li
297.171 30.7916 li
cp
f
311.719 31.6816 mo
308.941 31.6816 li
308.941 45.7612 li
308.941 46.8649 309.075 47.6103 309.346 47.9954 cv
309.617 48.3806 310.142 48.5736 310.923 48.5736 cv
310.923 49.1043 li
304.444 49.1043 li
304.444 48.5736 li
305.25 48.5736 305.797 48.3527 306.087 47.9098 cv
306.376 47.4668 306.52 46.7193 306.52 45.6673 cv
306.52 31.6816 li
303.866 31.6816 li
302.596 31.6816 301.673 31.885 301.095 32.2907 cv
300.518 32.6965 300.193 33.3676 300.119 34.305 cv
299.573 34.305 li
299.573 30.105 li
300.119 30.105 li
300.609 30.5634 301.524 30.7916 302.868 30.7916 cv
312.468 30.7916 li
313.852 30.7916 314.82 30.5634 315.372 30.105 cv
315.95 30.105 li
315.95 34.305 li
315.591 34.305 li
315.361 33.2953 314.953 32.6056 314.365 32.236 cv
313.777 31.8664 312.895 31.6816 311.719 31.6816 cv
cp
f
331.381 33.3996 mo
327.26 39.8937 li
327.26 45.6642 li
327.26 46.7802 327.403 47.5443 327.689 47.9562 cv
327.976 48.3671 328.504 48.5736 329.274 48.5736 cv
329.274 49.1043 li
322.592 49.1043 li
322.592 48.5736 li
323.497 48.5736 324.099 48.3547 324.395 47.917 cv
324.692 47.4792 324.84 46.7286 324.84 45.6642 cv
324.84 39.8937 li
320.938 33.8208 li
320.292 32.8111 319.767 32.1503 319.36 31.8385 cv
318.954 31.5257 318.393 31.3543 317.674 31.3233 cv
317.674 30.7916 li
324.84 30.7916 li
324.84 31.3233 li
323.582 31.3233 322.952 31.6093 322.952 32.1813 cv
322.952 32.4415 323.077 32.7636 323.327 33.1487 cv
326.948 38.6961 li
329.847 34.0986 li
330.273 33.413 330.487 32.8255 330.487 32.3361 cv
330.487 31.6609 330.082 31.3233 329.274 31.3233 cv
329.274 30.7916 li
334.301 30.7916 li
334.301 31.3233 li
333.625 31.3646 333.101 31.5133 332.732 31.7683 cv
332.362 32.0233 331.913 32.5664 331.381 33.3996 cv
cp
f
343.098 48.5272 mo
344.129 48.5272 345.036 47.885 345.822 46.6016 cv
346.608 45.3183 347.001 43.7892 347.001 42.0124 cv
347.001 41.2122 346.793 40.539 346.376 39.9939 cv
345.96 39.4488 345.44 39.1752 344.815 39.1752 cv
343.816 39.1752 342.921 39.8142 342.13 41.0924 cv
341.339 42.3706 340.944 43.8718 340.944 45.597 cv
340.944 46.4901 341.139 47.2025 341.529 47.7322 cv
341.919 48.2618 342.443 48.5272 343.098 48.5272 cv
cp
345.658 38.2387 mo
346.512 38.2387 347.261 38.598 347.907 39.3156 cv
348.552 40.0342 348.874 40.8766 348.874 41.8451 cv
348.874 43.5414 348.234 45.2357 346.954 46.9269 cv
345.673 48.618 344.155 49.4636 342.395 49.4636 cv
341.418 49.4636 340.618 49.1146 339.999 48.4177 cv
339.38 47.7198 339.07 46.8308 339.07 45.7478 cv
339.07 43.8532 339.754 42.129 341.123 40.5731 cv
342.491 39.0172 344.004 38.2387 345.658 38.2387 cv
cp
f
356.756 38.5825 mo
356.646 39.456 li
354.424 39.456 li
352.641 48.7935 li
352.173 51.3117 351.655 53.1433 351.088 54.2883 cv
350.52 55.4323 349.723 56.3191 348.697 56.9489 cv
347.671 57.5787 346.57 57.8936 345.393 57.8936 cv
343.82 57.8936 342.581 57.6076 341.675 57.0346 cv
342.159 54.8025 li
342.705 54.8025 li
343.048 56.4368 343.978 57.2535 345.495 57.2535 cv
346.637 57.2535 347.642 56.8395 348.509 56.0125 cv
349.377 55.1845 350.09 53.2672 350.652 50.2596 cv
352.68 39.456 li
350.433 39.456 li
350.527 38.5825 li
352.78 38.5825 li
353.571 34.7108 li
353.988 32.65 354.668 31.2294 355.612 30.4488 cv
356.555 29.6683 357.68 29.278 358.983 29.278 cv
359.588 29.278 360.313 29.4184 361.158 29.6992 cv
361.251 29.309 li
361.891 29.309 li
361.283 32.1968 li
360.643 32.1968 li
360.507 30.678 359.836 29.9181 358.627 29.9181 cv
357.084 29.9181 356.041 31.219 355.5 33.8229 cv
354.496 38.5825 li
356.756 38.5825 li
cp
f
378.804 37.7235 mo
379.35 37.7235 li
379.35 42.1724 li
378.804 42.1724 li
378.606 41.3918 378.367 40.9035 378.086 40.7053 cv
377.805 40.5081 377.19 40.4089 376.243 40.4089 cv
371.701 40.4089 li
371.701 46.9651 li
371.701 47.4235 371.802 47.7466 372.005 47.9335 cv
372.209 48.1204 372.554 48.2143 373.044 48.2143 cv
376.243 48.2143 li
377.388 48.2143 378.179 48.1524 378.617 48.0275 cv
379.054 47.9025 379.423 47.6702 379.725 47.3326 cv
380.026 46.994 380.35 46.4457 380.693 45.6858 cv
381.24 45.6858 li
380.396 49.1043 li
367.204 49.1043 li
367.204 48.5736 li
368.027 48.5736 368.578 48.363 368.859 47.9407 cv
369.14 47.5185 369.281 46.771 369.281 45.6982 cv
369.281 34.2452 li
369.281 33.1301 369.135 32.3651 368.844 31.9479 cv
368.553 31.5319 368.007 31.3233 367.204 31.3233 cv
367.204 30.7916 li
380.396 30.7916 li
380.396 33.8518 li
380.053 33.8518 li
379.865 32.9773 379.598 32.3981 379.249 32.1111 cv
378.9 31.8251 378.143 31.6816 376.978 31.6816 cv
371.701 31.6816 li
371.701 39.519 li
376.822 39.519 li
377.519 39.519 377.995 39.394 378.25 39.1442 cv
378.505 38.8943 378.689 38.4215 378.804 37.7235 cv
cp
f
391.77 31.4947 mo
388.288 31.4947 li
388.288 45.0137 li
388.288 46.3156 388.445 47.2046 388.757 47.6836 cv
389.07 48.1627 389.693 48.4022 390.631 48.4022 cv
392.519 48.4022 li
394.768 48.4022 396.536 47.6754 397.827 46.2238 cv
399.118 44.7721 399.763 42.7919 399.763 40.284 cv
399.763 37.6192 399.058 35.4882 397.647 33.891 cv
396.237 32.2938 394.278 31.4947 391.77 31.4947 cv
cp
383.793 49.1043 mo
383.793 48.5736 li
384.577 48.5736 385.12 48.3578 385.42 47.9252 cv
385.719 47.4926 385.869 46.74 385.869 45.6673 cv
385.869 34.2452 li
385.869 33.1508 385.719 32.3909 385.42 31.9634 cv
385.12 31.537 384.577 31.3233 383.793 31.3233 cv
383.793 30.7916 li
392.262 30.7916 li
395.392 30.7916 397.896 31.6816 399.773 33.4615 cv
401.65 35.2415 402.589 37.5046 402.589 40.253 cv
402.589 42.9478 401.7 45.0973 399.921 46.6997 cv
398.143 48.3031 395.668 49.1043 392.496 49.1043 cv
383.793 49.1043 li
cp
f
411.598 30.7916 mo
411.598 31.3233 li
410.817 31.3233 410.275 31.537 409.974 31.9634 cv
409.672 32.3909 409.522 33.1508 409.522 34.2452 cv
409.522 45.6673 li
409.522 46.7606 409.672 47.5185 409.974 47.9407 cv
410.275 48.363 410.817 48.5736 411.598 48.5736 cv
411.598 49.1043 li
405.01 49.1043 li
405.01 48.5736 li
405.811 48.5736 406.357 48.3651 406.648 47.949 cv
406.939 47.5319 407.086 46.771 407.086 45.6673 cv
407.086 34.2452 li
407.086 33.1198 406.943 32.3516 406.657 31.9407 cv
406.37 31.5288 405.821 31.3233 405.01 31.3233 cv
405.01 30.7916 li
411.598 30.7916 li
cp
f
427.868 31.3233 mo
427.868 30.7916 li
433.394 30.7916 li
433.394 31.3233 li
432.509 31.3233 431.896 31.5308 431.552 31.9469 cv
431.21 32.364 431.037 33.1177 431.037 34.2111 cv
431.037 49.1043 li
430.476 49.1043 li
417.503 33.1807 li
417.503 46.042 li
417.503 46.9485 417.686 47.5969 418.056 47.9872 cv
418.426 48.3785 419.042 48.5736 419.906 48.5736 cv
419.906 49.1043 li
414.348 49.1043 li
414.348 48.5736 li
415.233 48.5736 415.832 48.3413 416.144 47.8788 cv
416.456 47.4152 416.613 46.5996 416.613 45.4329 cv
416.613 34.7139 li
416.613 33.5575 416.402 32.7264 415.98 32.2215 cv
415.558 31.7167 414.864 31.4173 413.896 31.3233 cv
413.896 30.7916 li
418.596 30.7916 li
430.101 45.0457 li
430.101 34.336 li
430.101 33.2117 429.942 32.4291 429.625 31.9861 cv
429.307 31.5443 428.721 31.3233 427.868 31.3233 cv
cp
f
441.651 39.9557 mo
439.913 39.9557 li
439.913 45.3265 li
439.913 46.5128 440.044 47.3223 440.304 47.7539 cv
440.566 48.1854 441.066 48.4022 441.807 48.4022 cv
443.324 48.4022 li
444.389 48.4022 445.257 48.045 445.929 47.3326 cv
446.602 46.6192 446.939 45.6642 446.939 44.4675 cv
446.939 43.1047 446.456 42.0113 445.491 41.1895 cv
444.526 40.3676 443.246 39.9557 441.651 39.9557 cv
cp
439.913 31.4947 mo
439.913 39.2536 li
441.808 39.2536 li
443.132 39.2536 444.186 38.9077 444.969 38.215 cv
445.752 37.5232 446.143 36.5888 446.143 35.4129 cv
446.143 34.175 445.759 33.2117 444.992 32.5251 cv
444.226 31.8385 443.143 31.4947 441.745 31.4947 cv
439.913 31.4947 li
cp
443.857 49.1043 mo
435.418 49.1043 li
435.418 48.5736 li
436.198 48.5736 436.739 48.363 437.041 47.9407 cv
437.342 47.5185 437.494 46.7606 437.494 45.6673 cv
437.494 34.2452 li
437.494 33.1301 437.351 32.3651 437.065 31.9479 cv
436.779 31.5319 436.229 31.3233 435.418 31.3233 cv
435.418 30.7916 li
442.326 30.7916 li
444.305 30.7916 445.863 31.2004 446.999 32.0161 cv
448.135 32.8328 448.702 33.9117 448.702 35.2528 cv
448.702 37.2186 447.475 38.6011 445.019 39.4023 cv
445.019 39.4797 li
446.413 39.7616 447.55 40.378 448.43 41.3309 cv
449.309 42.2849 449.748 43.3804 449.748 44.6203 cv
449.748 45.9749 449.209 47.06 448.132 47.8778 cv
447.053 48.6955 445.628 49.1043 443.857 49.1043 cv
cp
f
466.057 45.2636 mo
466.057 34.2421 li
466.057 33.1704 465.914 32.4239 465.628 32.0016 cv
465.341 31.5804 464.834 31.3543 464.105 31.3233 cv
464.105 30.7916 li
470.568 30.7916 li
470.568 31.3233 li
469.787 31.3233 469.246 31.537 468.945 31.9634 cv
468.642 32.3909 468.492 33.1508 468.492 34.2452 cv
468.492 45.6673 li
468.492 46.74 468.64 47.4926 468.937 47.9252 cv
469.234 48.3578 469.777 48.5736 470.568 48.5736 cv
470.568 49.1043 li
466.057 49.1043 li
466.057 46.5438 li
464.339 48.553 462.304 49.5565 459.952 49.5565 cv
458.016 49.5565 456.494 48.9794 455.387 47.8241 cv
454.278 46.6687 453.723 45.1448 453.723 43.2503 cv
453.723 34.2421 li
453.723 33.1497 453.581 32.3898 453.294 31.9634 cv
453.008 31.536 452.459 31.3233 451.647 31.3233 cv
451.647 30.7916 li
458.266 30.7916 li
458.266 31.3233 li
457.444 31.3233 456.888 31.5308 456.596 31.9469 cv
456.304 32.364 456.159 33.1177 456.159 34.2111 cv
456.159 43.4846 li
456.159 44.9827 456.57 46.1618 457.393 47.0198 cv
458.214 47.8788 459.359 48.3083 460.827 48.3083 cv
463.002 48.3083 464.745 47.2934 466.057 45.2636 cv
cp
f
479.694 31.4947 mo
477.773 31.4947 li
477.773 39.8628 li
480.022 39.8628 li
481.364 39.8628 482.418 39.4777 483.183 38.7075 cv
483.948 37.9372 484.331 36.9172 484.331 35.6472 cv
484.331 34.4083 483.906 33.4068 483.059 32.6418 cv
482.21 31.8767 481.089 31.4947 479.694 31.4947 cv
cp
479.257 40.6268 mo
477.773 40.6268 li
477.773 45.6642 li
477.773 46.7482 477.927 47.505 478.234 47.9325 cv
478.54 48.3599 479.085 48.5736 479.865 48.5736 cv
479.865 49.1043 li
473.277 49.1043 li
473.277 48.5736 li
474.09 48.5736 474.638 48.3599 474.925 47.9325 cv
475.211 47.5061 475.353 46.7503 475.353 45.6673 cv
475.353 34.1822 li
475.353 33.0991 475.213 32.3516 474.932 31.9407 cv
474.651 31.5288 474.1 31.3233 473.277 31.3233 cv
473.277 30.7916 li
480.786 30.7916 li
482.639 30.7916 484.12 31.2428 485.228 32.142 cv
486.337 33.0423 486.891 34.1904 486.891 35.5853 cv
486.891 37.833 485.631 39.3311 483.112 40.0806 cv
483.666 40.4348 484.206 40.921 484.733 41.5405 cv
485.26 42.159 485.95 43.1883 486.804 44.6265 cv
487.763 46.2227 488.512 47.2686 489.051 47.7652 cv
489.59 48.2629 490.151 48.5313 490.731 48.5736 cv
490.731 49.1043 li
486.984 49.1043 li
486.214 48.1772 485.282 46.8164 484.19 45.023 cv
483.024 43.1357 482.111 41.9308 481.45 41.4094 cv
480.789 40.888 480.058 40.6268 479.257 40.6268 cv
cp
f
508.929 41.174 mo
508.929 41.7047 li
508.116 41.7047 507.536 41.8895 507.188 42.2601 cv
506.839 42.6298 506.665 43.2689 506.665 44.1764 cv
506.665 49.1033 li
506.238 49.2179 505.439 49.3222 504.268 49.4161 cv
503.098 49.5101 502.19 49.5565 501.545 49.5565 cv
498.161 49.5565 495.527 48.7244 493.637 47.059 cv
491.748 45.3937 490.804 43.1976 490.804 40.4709 cv
490.804 38.567 491.217 36.849 492.045 35.3189 cv
492.872 33.7898 494.027 32.5767 495.51 31.6816 cv
496.994 30.7875 498.568 30.3394 500.232 30.3394 cv
501.232 30.3394 502.319 30.5159 503.496 30.8701 cv
504.245 31.0889 504.818 31.1984 505.213 31.1984 cv
505.733 31.1984 506.077 30.995 506.243 30.5892 cv
506.821 30.5892 li
506.821 35.9911 li
506.305 35.9911 li
506.098 34.4919 505.419 33.2922 504.268 32.3919 cv
503.118 31.4926 501.773 31.0414 500.232 31.0414 cv
498.298 31.0414 496.71 31.8148 495.472 33.3603 cv
494.233 34.9059 493.613 36.9017 493.613 39.3476 cv
493.613 42.032 494.329 44.26 495.76 46.0286 cv
497.191 47.7983 498.989 48.6831 501.154 48.6831 cv
503.204 48.6831 504.229 48.0306 504.229 46.7266 cv
504.229 44.7401 li
504.229 43.6137 504.081 42.8259 503.784 42.3768 cv
503.488 41.9287 502.965 41.7047 502.216 41.7047 cv
501.513 41.7047 li
501.513 41.174 li
508.929 41.174 li
cp
f
524.9 45.6642 mo
524.9 40.346 li
514.924 40.346 li
514.924 45.6642 li
514.924 46.7482 515.077 47.505 515.385 47.9325 cv
515.691 48.3599 516.246 48.5736 517.047 48.5736 cv
517.047 49.1043 li
510.428 49.1043 li
510.428 48.5736 li
511.229 48.5736 511.775 48.3578 512.068 47.9252 cv
512.359 47.4926 512.504 46.74 512.504 45.6673 cv
512.504 34.2452 li
512.504 33.1198 512.356 32.3516 512.059 31.9407 cv
511.763 31.5288 511.219 31.3233 510.428 31.3233 cv
510.428 30.7916 li
517.047 30.7916 li
517.047 31.3233 li
516.246 31.3233 515.691 31.5443 515.385 31.9861 cv
515.077 32.4291 514.924 33.1807 514.924 34.2421 cv
514.924 39.456 li
524.9 39.456 li
524.9 34.2421 li
524.9 33.1177 524.756 32.3506 524.47 31.9397 cv
524.185 31.5288 523.646 31.3233 522.855 31.3233 cv
522.855 30.7916 li
529.412 30.7916 li
529.412 31.3233 li
528.631 31.3233 528.089 31.537 527.788 31.9634 cv
527.486 32.3909 527.336 33.1508 527.336 34.2452 cv
527.336 45.6673 li
527.336 46.7606 527.486 47.5185 527.788 47.9407 cv
528.089 48.363 528.631 48.5736 529.412 48.5736 cv
529.412 49.1043 li
522.855 49.1043 li
522.855 48.5736 li
523.666 48.5736 524.21 48.363 524.486 47.9397 cv
524.762 47.5174 524.9 46.7596 524.9 45.6642 cv
cp
f
75.7772 39.7961 mo
75.7331 39.1124 75.5761 38.4375 75.5065 37.7714 cv
75.428 37.0681 75.3731 36.3671 75.2338 35.6981 cv
74.8453 33.8466 74.3303 32.0298 73.678 30.3087 cv
73.5858 30.058 73.4425 29.8299 73.3395 29.5881 cv
73.1267 29.0746 72.8892 28.5959 72.642 28.1084 cv
72.5617 27.9686 72.4792 27.8258 72.3987 27.686 cv
72.1928 27.2593 72.0535 26.7963 71.8279 26.3799 cv
71.6875 26.1213 71.5228 25.9051 71.3609 25.6544 cv
71.2353 25.3891 71.1078 25.1252 70.9881 24.8584 cv
70.5173 24.1305 70.0327 23.4164 69.5481 22.7042 cv
69.3598 22.4893 69.1772 22.2775 68.9938 22.0641 cv
68.7868 21.8016 68.5857 21.5348 68.3787 21.268 cv
68.1826 21.0718 67.9667 20.909 67.796 20.6882 cv
67.6931 20.5587 67.6352 20.4273 67.5311 20.2993 cv
67.3761 20.132 67.2252 19.9648 67.0731 19.8029 cv
66.9799 19.7167 66.8876 19.6313 66.7935 19.545 cv
66.563 19.2796 66.3422 19.0089 66.0999 18.7474 cv
65.893 18.5517 65.6791 18.3496 65.4692 18.1534 cv
65.2651 17.9474 65.063 17.7439 64.859 17.5379 cv
64.5785 17.3186 64.294 17.1008 64.0153 16.8845 cv
63.723 16.628 63.4327 16.3773 63.1423 16.1204 cv
62.948 15.9761 62.7401 15.8751 62.5439 15.7471 cv
62.2977 15.5637 62.0466 15.3837 61.7984 15.2032 cv
61.6061 15.0708 61.4482 14.9236 61.2648 14.7764 cv
61.1323 14.696 60.9979 14.6136 60.8625 14.5287 cv
60.681 14.3987 60.5015 14.2703 60.3181 14.1437 cv
59.7206 13.7788 59.081 13.5007 58.4611 13.1804 cv
58.2345 13.0391 58.0098 12.8935 57.7823 12.7521 cv
57.3918 12.556 57.0053 12.3598 56.615 12.1641 cv
56.2951 12.0111 55.9645 11.9012 55.6358 11.7717 cv
55.4769 11.6839 55.3171 11.5927 55.1543 11.5034 cv
55.0316 11.4631 54.9061 11.4215 54.7844 11.3734 cv
54.5882 11.2871 54.393 11.1978 54.1958 11.1115 cv
53.5837 10.8908 52.9362 10.7289 52.3036 10.5347 cv
52.0053 10.445 51.6924 10.3208 51.3913 10.2345 cv
50.7261 10.0398 50.0679 9.93929 49.3822 9.78469 cv
48.9397 9.68374 48.4797 9.55667 48.0334 9.48213 cv
47.739 9.44135 47.4467 9.40408 47.1602 9.3634 cv
46.6747 9.26285 46.1361 9.17606 45.63 9.11277 cv
45.4387 9.10986 45.2454 9.10393 45.0512 9.10002 cv
44.9158 9.08093 44.7765 9.06225 44.6411 9.04366 cv
44.3792 9.03774 44.1154 9.03482 43.8505 9.0289 cv
43.258 8.98872 42.6321 8.9411 42.0063 8.93668 cv
41.763 9.00881 41.4246 8.9642 41.1587 8.9642 cv
40.1914 8.9642 li
40.1032 8.98038 40.0158 8.99454 39.9275 9.00881 cv
39.7029 9.01463 39.4773 9.01905 39.2576 9.02347 cv
39.1389 9.051 39.0192 9.08093 38.9005 9.10986 cv
38.7867 9.12553 38.6719 9.13879 38.5522 9.15295 cv
38.4394 9.15295 38.3256 9.1417 38.2305 9.18188 cv
38.1628 9.19072 38.0951 9.20208 38.0294 9.2079 cv
37.8832 9.2079 37.7301 9.20499 37.6154 9.26576 cv
37.3015 9.26285 36.8345 9.30454 36.5893 9.43603 cv
36.5246 9.44436 36.4569 9.4532 36.3872 9.46295 cv
36.1891 9.46154 35.9261 9.48605 35.7712 9.57877 cv
35.2532 9.57435 34.8265 9.79353 34.3586 9.90293 cv
34.1114 9.96079 33.8131 9.98931 33.6023 10.1193 cv
33.3992 10.1193 33.1756 10.1697 33.0127 10.2634 cv
32.688 10.2605 32.4064 10.4494 32.1299 10.5592 cv
31.9611 10.6211 31.7571 10.624 31.6109 10.7235 cv
31.2802 10.7235 30.9939 10.9124 30.724 11.0306 cv
30.5387 11.1115 30.3533 11.1861 30.1678 11.267 cv
29.1624 11.6893 28.1804 12.1695 27.2162 12.6727 cv
27.0513 12.7782 26.8914 12.8821 26.7286 12.9842 cv
25.5676 13.5683 24.4243 14.2143 23.4006 15.0477 cv
23.0995 15.2625 22.7978 15.4803 22.4966 15.6937 cv
22.3362 15.8378 22.1793 15.9791 22.0194 16.1204 cv
21.7281 16.3367 21.4195 16.5211 21.1355 16.7619 cv
20.5528 17.2539 20.0049 17.8062 19.464 18.3384 cv
19.1382 18.6395 18.8008 18.9407 18.4678 19.2438 cv
18.354 19.3733 18.2387 19.5033 18.1274 19.6357 cv
17.9778 19.7745 17.8262 19.9187 17.6762 20.057 cv
17.4383 20.2993 17.2711 20.5931 17.0419 20.8296 cv
16.8399 21.0316 16.6393 21.2219 16.4578 21.447 cv
16.3768 21.5593 16.2905 21.6716 16.2111 21.7844 cv
15.8594 22.1778 15.519 22.5628 15.2163 22.9897 cv
15.0118 23.3099 14.8068 23.6327 14.5964 23.9544 cv
14.2977 24.3394 13.9632 24.8324 13.7326 25.2537 cv
13.6635 25.3891 13.5982 25.5274 13.5276 25.6657 cv
13.3304 26.0002 13.1283 26.3323 12.9253 26.6639 cv
12.7521 27.0126 12.6339 27.3848 12.4593 27.7351 cv
12.3789 27.869 12.298 28.0048 12.2185 28.1387 cv
12.0438 28.4531 11.9012 28.7691 11.7226 29.0775 cv
11.6402 29.2806 11.5583 29.4842 11.4759 29.6858 cv
11.3724 29.8937 11.2758 30.1011 11.1747 30.3087 cv
11.0938 30.548 11.0134 30.7859 10.9325 31.0267 cv
10.8343 31.2838 10.7348 31.5368 10.6337 31.7963 cv
10.1423 33.3968 9.72392 35.0061 9.38248 36.7016 cv
9.35506 37.0274 9.32613 37.3476 9.2986 37.6675 cv
9.25551 38.0367 9.12693 38.4404 9.0971 38.8068 cv
9.07108 39.0923 9.08233 39.4179 9.00438 39.6862 cv
8.98279 39.9084 8.96119 40.1331 8.93808 40.3583 cv
8.88766 41.7282 8.92834 43.0378 8.96119 44.367 cv
8.97887 45.0036 9.10544 45.6413 9.16028 46.2671 cv
9.17455 46.5438 9.19072 46.8145 9.20348 47.0892 cv
9.28886 47.9456 9.43301 48.8138 9.56691 49.6672 cv
9.62869 49.8811 9.68665 50.0968 9.74993 50.3126 cv
9.89258 50.9856 10.0457 51.637 10.2374 52.2765 cv
10.2953 52.4237 10.3497 52.5709 10.4062 52.7219 cv
10.4435 52.874 10.4826 53.0241 10.517 53.1791 cv
10.7711 53.8893 11.0262 54.6044 11.2758 55.3166 cv
11.3994 55.5824 11.5249 55.8502 11.6505 56.119 cv
11.7226 56.2937 11.7599 56.4899 11.8364 56.6694 cv
12.0312 57.1255 12.3122 57.5317 12.5403 57.9691 cv
12.7247 58.3273 12.9395 58.6676 13.121 59.0286 cv
13.1759 59.1552 13.225 59.2847 13.2785 59.4151 cv
13.3403 59.4956 13.4041 59.5701 13.4672 59.6447 cv
13.535 59.7958 13.6027 59.9487 13.6748 60.0979 cv
13.8435 60.3951 14.05 60.6835 14.2677 60.9572 cv
14.3958 61.122 14.4998 61.3064 14.6337 61.4732 cv
14.8083 61.6959 15.0074 61.898 15.1703 62.1255 cv
15.2998 62.3129 15.4209 62.5003 15.5538 62.6847 cv
15.7902 62.9731 16.0282 63.2585 16.2719 63.544 cv
16.4695 63.7922 16.6667 64.0424 16.8673 64.2935 cv
17.114 64.5534 17.3603 64.8153 17.6129 65.0724 cv
17.813 65.3058 17.9862 65.5884 18.2225 65.8023 cv
18.5585 66.1102 18.8876 66.4222 19.1962 66.7362 cv
19.3604 66.9009 19.5248 67.0657 19.6906 67.2325 cv
19.9588 67.4659 20.2748 67.6366 20.5342 67.8819 cv
20.7878 68.1271 21.0404 68.3685 21.2939 68.6117 cv
21.4799 68.7579 21.6633 68.8962 21.8433 69.0355 cv
22.0684 69.2317 22.2632 69.4554 22.5065 69.6261 cv
22.8022 69.8282 23.0765 70.0616 23.3864 70.2382 cv
23.588 70.3559 23.8043 70.4167 23.9975 70.5462 cv
24.2266 70.7051 24.4547 70.866 24.6823 71.0269 cv
24.9059 71.1721 25.1624 71.2878 25.392 71.4311 cv
26.2542 71.9568 27.1249 72.4179 28.0308 72.8475 cv
28.43 73.0398 28.8077 73.2831 29.2389 73.4303 cv
29.6269 73.5833 30.0188 73.7363 30.4072 73.8894 cv
30.5524 73.9286 30.6937 73.9698 30.8349 74.007 cv
31.2195 74.1562 31.604 74.3034 31.9856 74.4504 cv
32.0896 74.4819 32.1926 74.5113 32.2946 74.5427 cv
32.6272 74.6721 32.9539 74.8232 33.302 74.9174 cv
33.719 75.0018 34.1349 75.0803 34.5529 75.1627 cv
35.1737 75.2921 35.8222 75.4864 36.4578 75.5845 cv
36.6914 75.6021 36.9189 75.6218 37.1583 75.6355 cv
37.4633 75.6767 37.7733 75.7513 38.0942 75.7768 cv
38.3374 75.7925 38.5788 75.8121 38.82 75.8258 cv
38.9819 75.8493 39.1379 75.8729 39.291 75.8985 cv
39.4596 75.9043 39.6235 75.9121 39.7863 75.916 cv
40.1718 75.973 40.5485 76.0319 40.9291 76.0887 cv
41.1204 76.0965 41.3196 76.1064 41.5158 76.1142 cv
41.6306 76.0965 41.7492 76.0887 41.8689 76.071 cv
42.2162 76.075 42.6272 76.1142 42.9793 76.126 cv
43.1981 76.1358 43.4071 76.1181 43.6248 76.1299 cv
44.0565 76.1515 44.4754 76.0652 44.8834 76.0082 cv
45.0669 76.0024 45.2514 75.9965 45.4357 75.9887 cv
45.6839 75.9553 45.9507 75.916 46.197 75.8925 cv
47.1073 75.8121 47.9803 75.7081 48.8574 75.5354 cv
49.1517 75.457 49.4498 75.3785 49.7422 75.304 cv
50.112 75.2293 50.4838 75.1509 50.8507 75.0764 cv
51.042 75.0214 51.2137 74.9273 51.3942 74.8507 cv
51.6943 74.7644 51.9936 74.6721 52.2937 74.5839 cv
52.4232 74.5368 52.5517 74.4936 52.6803 74.4504 cv
52.8989 74.3877 53.0951 74.3642 53.3149 74.2975 cv
53.7563 74.1445 54.1958 73.9895 54.6412 73.8345 cv
54.9041 73.7069 55.171 73.5833 55.4318 73.4597 cv
55.6908 73.3616 55.9458 73.2419 56.1891 73.1262 cv
56.2637 73.0869 56.3324 73.0398 56.403 73.0006 cv
56.6669 72.8731 56.9445 72.7495 57.2035 72.6141 cv
57.5047 72.4414 57.8078 72.2728 58.108 72.1001 cv
58.263 72.0235 58.4346 71.9765 58.5905 71.898 cv
59.0359 71.6645 59.4441 71.3565 59.8708 71.0877 cv
60.2366 70.866 60.6016 70.6443 60.9655 70.4187 cv
61.2961 70.1773 61.5923 69.8968 61.9278 69.6633 cv
62.281 69.4103 62.6322 69.1561 62.9824 68.9002 cv
63.056 68.8334 63.1295 68.7609 63.2012 68.6882 cv
63.2855 68.645 63.3679 68.5999 63.4464 68.5529 cv
63.7485 68.3233 64.0526 68.0546 64.3313 67.7955 cv
64.5569 67.5837 64.7256 67.3502 64.9591 67.1374 cv
65.1915 66.9303 65.4525 66.7362 65.6919 66.5203 cv
65.7909 66.4281 65.8479 66.327 65.9321 66.2407 cv
66.1284 66.0504 66.3285 65.8709 66.5051 65.6669 cv
66.6248 65.5197 66.7483 65.3667 66.8769 65.2166 cv
67.3094 64.8017 67.7058 64.3367 68.0707 63.8697 cv
68.3709 63.5146 68.6681 63.1576 68.9634 62.8063 cv
69.1596 62.5297 69.3577 62.2492 69.55 61.9755 cv
69.6521 61.8656 69.754 61.7567 69.858 61.6469 cv
70.1749 61.2025 70.4938 60.7552 70.8106 60.3118 cv
70.9086 60.1528 70.9646 59.9998 71.0549 59.8448 cv
71.1216 59.7467 71.1941 59.6387 71.2647 59.5416 cv
71.3285 59.4092 71.3845 59.2817 71.4492 59.1523 cv
71.6611 58.7834 71.8631 58.4165 72.0652 58.0418 cv
72.2311 57.7534 72.4007 57.4679 72.5675 57.1795 cv
72.7087 56.8881 72.7961 56.5821 72.9246 56.2917 cv
73.0717 55.9885 73.2188 55.6766 73.3601 55.3716 cv
73.8515 54.0541 74.3352 52.7269 74.7256 51.3682 cv
74.755 51.2073 74.7815 51.0425 74.8139 50.8817 cv
74.9199 50.3794 75.0572 49.8692 75.1524 49.3591 cv
75.1867 49.0962 75.2122 48.8334 75.2446 48.5715 cv
75.3161 48.1447 75.4015 47.6837 75.4623 47.25 cv
75.4888 46.9048 75.5172 46.5497 75.5417 46.2004 cv
75.5693 46.065 75.5928 45.9297 75.6261 45.7914 cv
75.638 45.5 75.6576 45.2058 75.6693 44.9153 cv
75.687 44.7643 75.7301 44.6289 75.7389 44.4759 cv
75.7389 44.2719 75.7331 44.0668 75.7301 43.8618 cv
75.8243 42.5385 75.8439 41.1023 75.7772 39.7961 cv
35.7299 11.215 mo
36.0449 11.215 36.2832 11.0781 36.555 11.0218 cv
37.021 10.931 37.4683 10.8486 37.9312 10.7711 cv
38.2315 10.7162 38.567 10.751 38.8927 10.7264 cv
39.3351 10.6917 39.7922 10.5749 40.2434 10.5416 cv
40.4269 10.5288 40.5936 10.494 40.7663 10.4955 cv
40.988 10.4955 41.1911 10.5028 41.3824 10.4278 cv
41.811 10.4307 42.2436 10.4366 42.6693 10.4395 cv
42.9342 10.4651 43.207 10.4739 43.4924 10.5028 cv
43.6837 10.5302 43.8819 10.5592 44.0761 10.5838 cv
44.3684 10.5891 44.6608 10.5921 44.9531 10.595 cv
45.0904 10.6136 45.2278 10.6328 45.3622 10.65 cv
45.5573 10.6558 45.7516 10.6612 45.9459 10.6686 cv
46.1931 10.7103 46.4344 10.7535 46.6787 10.7941 cv
46.7796 10.7956 46.8718 10.7956 46.97 10.7971 cv
47.0828 10.8142 47.1701 10.8692 47.2701 10.9124 cv
47.3977 10.957 47.5311 10.9845 47.6753 11.0105 cv
48.2119 11.1085 48.823 11.1085 49.3656 11.2106 cv
49.3891 11.215 49.443 11.2209 49.4528 11.2528 cv
49.4067 11.3362 48.5229 11.244 48.3718 11.2856 cv
48.2472 11.2974 48.1177 11.3072 47.9941 11.319 cv
47.746 11.3146 47.4722 11.2841 47.2024 11.2729 cv
47.1211 11.2729 46.9846 11.2395 46.9111 11.2797 cv
46.7621 11.2797 46.5756 11.2297 46.4442 11.2729 cv
46.3166 11.2915 46.1891 11.3072 46.0616 11.3263 cv
45.7339 11.3248 45.1925 11.163 44.8893 11.3263 cv
44.5234 11.3248 44.2193 11.2797 43.8661 11.2528 cv
43.7014 11.238 43.4679 11.1949 43.3129 11.2581 cv
43.1442 11.2567 43.0245 11.3018 42.8705 11.3042 cv
42.687 11.3072 42.5124 11.2268 42.3457 11.3072 cv
42.2407 11.3072 42.1318 11.3248 42.0514 11.3666 cv
41.2803 11.3622 40.5112 11.3533 39.7363 11.3518 cv
39.596 11.3347 39.4479 11.3146 39.3027 11.2974 cv
38.9515 11.293 38.6004 11.2871 38.2482 11.2856 cv
38.0294 11.2856 37.4565 11.215 37.3114 11.2827 cv
36.7727 11.2797 36.2783 11.2454 35.7299 11.244 cv
35.7299 11.215 li
cp
31.4794 12.5069 mo
31.5883 12.5069 31.8335 12.321 31.9493 12.2793 cv
32.068 12.2401 32.1867 12.2014 32.3044 12.1612 cv
32.4055 12.1062 32.4986 12.0542 32.6017 11.9993 cv
32.9539 11.8609 33.3629 11.7585 33.7435 11.6893 cv
34.0074 11.6402 34.2997 11.6937 34.5568 11.7025 cv
34.8981 11.7139 35.2238 11.678 35.5554 11.6839 cv
35.7418 11.6839 35.9742 11.7025 36.1381 11.655 cv
36.4324 11.6751 36.7345 11.6594 37.0484 11.6594 cv
37.4477 11.6647 37.8528 11.6839 38.2746 11.6996 cv
39.6568 11.7486 41.1302 11.7918 42.5497 11.7746 cv
42.7734 11.7614 42.996 11.7428 43.2197 11.7256 cv
43.5522 11.7345 43.8838 11.7486 44.2154 11.7585 cv
45.8457 11.7428 47.5173 11.6937 49.1605 11.7516 cv
49.7069 11.7516 50.2542 11.7457 50.8026 11.7369 cv
51.0361 11.7457 51.2666 11.7486 51.4961 11.7516 cv
51.9631 11.832 52.3261 12.1665 52.7892 12.2662 cv
53.0461 12.3196 53.6749 12.3975 53.8407 12.5731 cv
53.7976 12.582 53.7612 12.5923 53.721 12.6036 cv
53.6563 12.6109 53.5876 12.6223 53.5179 12.631 cv
53.2894 12.6281 53.0677 12.6223 52.846 12.6168 cv
52.642 12.582 52.435 12.5486 52.226 12.5158 cv
52.022 12.5098 51.8199 12.5069 51.6139 12.504 cv
51.4922 12.504 51.3372 12.4868 51.2353 12.5314 cv
51.0527 12.53 50.6682 12.4898 50.5309 12.5545 cv
50.3897 12.5545 50.2131 12.533 50.0963 12.582 cv
49.8913 12.582 49.6186 12.5418 49.4498 12.6065 cv
49.1223 12.6065 48.3012 12.5359 48.0766 12.657 cv
47.9245 12.657 47.7096 12.5976 47.5782 12.657 cv
47.3819 12.657 47.223 12.6139 47.0484 12.5991 cv
46.8366 12.5991 46.6198 12.5937 46.4069 12.5923 cv
46.2607 12.5923 46.091 12.5678 45.9665 12.6168 cv
45.787 12.6168 45.5612 12.582 45.4112 12.6437 cv
45.2209 12.6437 44.9865 12.6065 44.8276 12.6713 cv
44.3135 12.6684 43.8289 12.6369 43.3031 12.634 cv
43.1461 12.634 42.9303 12.5991 42.8058 12.657 cv
42.6988 12.657 42.5771 12.6482 42.483 12.6859 cv
42.3879 12.6859 42.2712 12.683 42.1917 12.7145 cv
41.7189 12.712 41.2686 12.657 40.8144 12.6482 cv
40.3091 12.6453 39.799 12.6398 39.2929 12.6384 cv
39.1026 12.634 38.6807 12.5678 38.5337 12.6369 cv
38.1255 12.634 37.7155 12.631 37.3054 12.6281 cv
37.1533 12.6281 36.9631 12.6036 36.8345 12.6541 cv
36.7797 12.6658 36.7188 12.6742 36.6599 12.683 cv
36.1165 12.6786 35.5662 12.6727 35.0218 12.6684 cv
34.9344 12.6512 34.8422 12.6369 34.7569 12.6192 cv
34.5529 12.6168 34.3487 12.6109 34.1408 12.6065 cv
34.029 12.6036 33.8691 12.5634 33.7661 12.6065 cv
32.9862 12.6036 32.2377 12.5702 31.4794 12.5663 cv
31.4794 12.5069 li
cp
29.1511 13.4384 mo
29.2404 13.3765 29.3252 13.3246 29.4135 13.2668 cv
30.1345 12.788 31.1783 13.0318 32.0651 13.0376 cv
32.5712 13.0435 33.0774 13.0435 33.5836 13.049 cv
33.7435 13.0577 33.8975 13.0666 34.0545 13.0764 cv
34.3252 13.0725 34.6097 13.0519 34.902 13.0519 cv
36.0066 13.0607 37.0553 13.098 38.15 13.0696 cv
38.3561 13.0519 38.5611 13.0376 38.7671 13.0204 cv
39.0467 13.0303 39.3291 13.0376 39.6136 13.0465 cv
39.7107 13.0391 39.8069 13.0362 39.9069 13.0303 cv
40.01 13.0465 40.1208 13.0607 40.2278 13.0749 cv
40.37 13.0607 40.522 13.0465 40.6662 13.0318 cv
41.1852 13.0666 41.6903 13.1358 42.2456 13.1225 cv
42.5183 13.1127 42.7537 13.0435 43.0363 13.0435 cv
43.7327 13.0318 44.3792 13.1113 45.0551 13.1068 cv
45.3788 13.1038 45.7173 13.0391 46.0518 13.0376 cv
46.5795 13.0303 47.1269 13.0725 47.691 13.0636 cv
47.9784 13.0636 48.2413 13.0146 48.5415 13.0116 cv
49.7471 13.0204 50.9566 13.0264 52.1692 13.0318 cv
52.3791 13.0376 52.5459 13.0926 52.7509 13.0897 cv
53.0265 13.0666 53.3012 13.0435 53.572 13.0146 cv
53.9094 12.9974 54.4862 13.0837 54.7727 12.9886 cv
55.1945 13.0318 55.4966 13.2627 55.8616 13.4124 cv
56.1696 13.5336 56.6189 13.6449 56.8787 13.8509 cv
56.9248 13.8509 56.9033 13.8665 56.9033 13.9087 cv
56.8631 13.92 56.8287 13.9259 56.7866 13.9372 cv
56.6022 13.9372 56.4178 13.9348 56.2313 13.9348 cv
56.0096 13.9288 55.7066 13.8911 55.5251 13.9877 cv
55.4417 13.998 55.3514 14.0093 55.2671 14.0152 cv
54.9914 14.0152 54.3194 13.923 54.1212 14.0122 cv
54.0016 14.0122 53.8152 13.9877 53.7151 14.0324 cv
53.4424 14.0225 53.1688 14.0064 52.898 13.9907 cv
52.7175 13.9691 52.432 13.8754 52.2515 13.9402 cv
52.0652 13.9402 51.6845 13.8955 51.5482 13.9661 cv
51.2176 13.972 50.886 13.9749 50.5535 13.9749 cv
50.269 13.9749 49.6215 13.8857 49.3831 13.9838 cv
49.3263 13.9907 49.2674 14.001 49.2096 14.0122 cv
48.9555 14.0122 48.7004 14.0064 48.4483 14.0039 cv
48.3394 13.998 48.1962 13.9603 48.0981 14.0039 cv
47.8901 14.0039 47.5007 13.92 47.3378 13.9994 cv
47.1269 13.998 46.8366 13.9578 46.658 14.0285 cv
46.5334 14.0285 46.3559 14.001 46.2489 14.0554 cv
45.8811 14.05 45.5093 14.05 45.1405 14.0471 cv
44.9865 14.0471 44.7687 14.0181 44.6411 14.0731 cv
44.2409 14.0687 43.8554 14.0397 43.4424 14.0382 cv
43.2972 14.0382 43.1246 14.0152 43.0019 14.0642 cv
42.6635 14.053 42.3202 14.0397 41.9808 14.0299 cv
41.5903 14.0241 41.1998 14.021 40.8095 14.0181 cv
40.7006 13.9994 40.5927 13.9838 40.4857 13.9691 cv
40.1561 13.9632 39.8226 13.9578 39.495 13.9533 cv
39.3517 13.9533 39.1663 13.9348 39.0535 13.9848 cv
38.9829 13.9951 38.9143 14.0039 38.8476 14.0122 cv
38.7455 14.0122 38.6072 13.998 38.5248 14.0382 cv
37.2289 14.0324 35.9438 13.9533 34.6617 13.9288 cv
34.4891 13.9288 34.3096 13.9259 34.1389 13.9259 cv
33.9887 13.923 33.8112 13.8696 33.666 13.923 cv
33.4394 13.923 33.1049 13.8739 32.9087 13.9504 cv
32.3613 13.9372 31.8139 13.923 31.2705 13.9087 cv
31.039 13.8881 30.4387 13.8249 30.2424 13.9029 cv
30.0266 13.9029 29.5935 13.8538 29.4248 13.9288 cv
29.3472 13.9402 29.2678 13.949 29.1913 13.9578 cv
28.8872 13.9578 28.6346 13.8955 28.3422 13.8955 cv
28.3422 13.7444 29.0167 13.5051 29.1511 13.4384 cv
26.169 15.1414 mo
26.1993 15.1414 li
26.1993 15.0825 26.3852 14.9844 26.4387 14.9437 cv
26.5716 14.8372 26.7197 14.7735 26.8625 14.6857 cv
27.0185 14.5876 27.1686 14.4767 27.3456 14.4248 cv
27.817 14.2909 28.5149 14.3555 29.0113 14.3644 cv
29.5013 14.3727 30.006 14.3355 30.5033 14.3468 cv
30.88 14.3555 31.295 14.3428 31.6756 14.3355 cv
31.8228 14.3384 31.9689 14.3428 32.1112 14.3453 cv
32.8842 14.2732 33.7857 14.3555 34.5744 14.3586 cv
34.957 14.363 35.3915 14.3208 35.7997 14.3497 cv
36.3058 14.3845 36.7836 14.4664 37.2917 14.4709 cv
37.5958 14.4709 37.8989 14.4664 38.2001 14.4664 cv
38.5924 14.4389 38.9819 14.3644 39.4008 14.3669 cv
40.2542 14.3698 41.1273 14.4306 41.9787 14.435 cv
42.0828 14.4277 42.1917 14.4218 42.2957 14.4159 cv
42.431 14.435 42.5713 14.4478 42.7047 14.4664 cv
42.9323 14.4537 43.1588 14.4389 43.3796 14.4248 cv
43.6524 14.4135 43.927 14.4478 44.2016 14.4448 cv
44.4813 14.435 44.7667 14.4159 45.0472 14.4076 cv
45.6074 14.4159 46.1891 14.485 46.7767 14.4625 cv
47.0151 14.4508 47.2604 14.3914 47.5075 14.3875 cv
47.6841 14.3899 47.8588 14.3914 48.0334 14.3914 cv
48.1001 14.3875 48.1668 14.3802 48.2355 14.3698 cv
48.3845 14.3802 48.5179 14.4448 48.6749 14.4389 cv
48.9035 14.4248 49.1223 14.4105 49.3479 14.3972 cv
49.6451 14.3987 49.9737 14.435 50.2876 14.4248 cv
50.5171 14.4159 50.7232 14.3698 50.9645 14.3727 cv
51.2931 14.3727 51.6237 14.3727 51.9563 14.3757 cv
52.125 14.3802 52.3084 14.3928 52.4555 14.3497 cv
53.1011 14.3928 53.7573 14.3802 54.4136 14.3928 cv
54.6784 14.3987 54.9806 14.4365 55.2631 14.4203 cv
55.8517 14.3875 56.4756 14.3727 57.1084 14.3802 cv
57.3958 14.3802 57.7274 14.3497 57.9834 14.4144 cv
58.0962 14.4448 58.1766 14.5287 58.2747 14.5847 cv
58.5396 14.7548 58.8025 14.9236 59.0615 15.0909 cv
59.0615 15.2267 58.6357 15.2076 58.5357 15.2625 cv
58.3914 15.261 58.1854 15.2321 58.0668 15.2899 cv
57.9314 15.2899 57.7381 15.261 57.6273 15.3189 cv
57.4448 15.313 57.2584 15.3086 57.075 15.3071 cv
56.974 15.2899 56.8787 15.2728 56.7778 15.2566 cv
56.3717 15.235 55.9223 15.2498 55.5436 15.2811 cv
55.4122 15.2929 55.2533 15.2467 55.1415 15.3071 cv
54.9845 15.3042 54.8285 15.3012 54.6726 15.3012 cv
54.6039 15.31 54.5343 15.3189 54.4666 15.3302 cv
53.4846 15.3243 52.4889 15.287 51.4825 15.2811 cv
51.2048 15.2782 50.8448 15.1816 50.6054 15.3086 cv
50.421 15.3071 50.2347 15.3012 50.0482 15.2973 cv
49.8354 15.2841 49.394 15.2164 49.2007 15.2973 cv
49.0673 15.2973 48.8711 15.2699 48.7612 15.3243 cv
48.567 15.3243 48.1766 15.2566 48.0284 15.3219 cv
47.8352 15.3219 47.6361 15.3189 47.4447 15.316 cv
47.2741 15.31 47.019 15.238 46.8601 15.316 cv
46.7895 15.3243 46.7208 15.3331 46.6522 15.3434 cv
46.2224 15.342 45.7918 15.3376 45.3671 15.3361 cv
45.1934 15.3361 44.9501 15.2973 44.8128 15.3621 cv
44.546 15.3592 44.0958 15.2699 43.8721 15.3561 cv
43.7543 15.3621 43.6425 15.3665 43.5238 15.3694 cv
43.3188 15.3561 43.05 15.2699 42.849 15.3532 cv
42.7243 15.3503 42.5399 15.3302 42.4398 15.3777 cv
41.7767 15.3709 41.1116 15.368 40.4505 15.365 cv
40.1424 15.3473 39.5156 15.2164 39.2202 15.3302 cv
39.1399 15.342 39.0633 15.3473 38.9868 15.3592 cv
38.7101 15.3592 38.4806 15.3086 38.2237 15.2973 cv
37.5889 15.2929 36.9592 15.287 36.3225 15.2841 cv
36.1185 15.2782 35.9477 15.2277 35.7398 15.2237 cv
35.3219 15.2237 34.901 15.2222 34.4831 15.2237 cv
34.3821 15.238 34.284 15.2537 34.1859 15.2699 cv
33.563 15.2699 32.9372 15.2669 32.3142 15.2669 cv
31.9856 15.2595 31.6491 15.2537 31.3176 15.2498 cv
31.0566 15.2222 30.6692 15.1227 30.4111 15.2237 cv
30.3101 15.2222 30.1748 15.2076 30.0914 15.2522 cv
29.9628 15.2498 29.8157 15.235 29.7117 15.2767 cv
29.3959 15.2767 29.108 15.2467 28.8033 15.2438 cv
28.665 15.2467 28.5282 15.2467 28.3938 15.2498 cv
28.2844 15.2595 28.1863 15.2929 28.0696 15.2929 cv
27.7193 15.2728 27.3687 15.2566 27.0155 15.235 cv
26.7516 15.2222 26.4387 15.2625 26.1993 15.2006 cv
26.1993 15.1717 li
26.1576 15.1717 26.169 15.1816 26.169 15.1414 cv
24.2889 16.4205 mo
24.3423 16.4205 24.4762 16.2705 24.5208 16.2356 cv
24.8093 16.0512 25.0947 15.8609 25.3817 15.6706 cv
25.5636 15.5955 25.8707 15.6127 26.0781 15.6103 cv
26.3509 15.6304 26.6275 15.6476 26.8973 15.6692 cv
27.4064 15.6819 27.9136 15.6937 28.4198 15.7054 cv
28.6852 15.6922 28.946 15.6765 29.2084 15.6593 cv
29.4856 15.6593 29.7539 15.6578 30.0266 15.6578 cv
30.2345 15.6476 30.4387 15.6387 30.6417 15.6275 cv
31.0056 15.6416 31.35 15.6892 31.6962 15.6966 cv
32.2318 15.7093 32.7557 15.6387 33.2756 15.649 cv
33.4247 15.6603 33.5689 15.6692 33.7161 15.6819 cv
34.129 15.6892 34.5529 15.6617 34.9471 15.6593 cv
35.7074 15.6617 36.4687 15.6647 37.2289 15.6706 cv
37.7999 15.6765 38.3707 15.7054 38.9574 15.7093 cv
39.3674 15.7108 39.7765 15.7138 40.1875 15.7167 cv
40.3406 15.7078 40.4956 15.701 40.6506 15.6922 cv
40.9723 15.7226 41.2941 15.7515 41.6158 15.7815 cv
42.0779 15.7917 42.4791 15.7025 42.9342 15.7054 cv
43.2874 15.7255 43.6366 15.7471 43.9878 15.7628 cv
44.3527 15.7745 44.7216 15.7309 45.1003 15.7471 cv
45.267 15.7628 45.4289 15.7775 45.5976 15.7947 cv
45.7339 15.7815 45.8713 15.7687 46.0067 15.7544 cv
46.3471 15.7353 46.7071 15.7398 47.0308 15.727 cv
47.6036 15.7025 48.1766 15.7687 48.7279 15.7599 cv
49.0516 15.7368 49.3734 15.7093 49.697 15.6862 cv
50.478 15.6892 51.2548 15.6922 52.0397 15.6937 cv
52.2015 15.7054 52.3693 15.7138 52.5331 15.7255 cv
53.3306 15.7167 54.1939 15.7309 55.0218 15.7093 cv
55.3661 15.701 55.7527 15.6549 56.1028 15.6617 cv
56.5031 15.6966 56.9033 15.7309 57.3015 15.7628 cv
57.6646 15.7628 58.0393 15.6892 58.3885 15.6765 cv
58.6141 15.6647 58.8653 15.6966 59.0615 15.6171 cv
59.3548 15.6186 59.6697 15.6171 59.9266 15.7054 cv
60.0611 15.7515 60.1562 15.8727 60.2681 15.962 cv
60.3309 15.9962 60.3986 16.0282 60.4622 16.0629 cv
60.6644 16.1983 60.841 16.3426 61.045 16.4779 cv
61.045 16.5314 60.9871 16.5357 60.9567 16.5662 cv
60.7428 16.5589 60.5289 16.5589 60.3151 16.5529 cv
60.1308 16.5328 59.8423 16.4593 59.6697 16.5284 cv
59.6 16.5388 59.5304 16.5471 59.4637 16.5589 cv
58.9781 16.5559 58.4886 16.55 57.9991 16.5485 cv
57.5527 16.5442 57.1034 16.5417 56.657 16.5417 cv
56.5168 16.5417 56.3265 16.5157 56.2157 16.5687 cv
56.0842 16.5662 55.9458 16.5485 55.838 16.5961 cv
55.6231 16.5932 55.3171 16.5485 55.1327 16.6221 cv
54.958 16.6192 54.5029 16.5907 54.3724 16.6437 cv
54.1605 16.6437 53.8779 16.599 53.6975 16.6712 cv
53.5307 16.6682 53.3287 16.605 53.1737 16.6682 cv
52.6204 16.6653 52.1191 16.6339 51.5648 16.628 cv
51.3746 16.628 51.1352 16.5932 50.9782 16.657 cv
50.8516 16.6437 50.7261 16.6339 50.5996 16.625 cv
50.1886 16.6221 49.7795 16.6192 49.3714 16.6167 cv
49.237 16.6138 49.0437 16.5633 48.927 16.6153 cv
48.5278 16.6138 47.8166 16.5442 47.4938 16.6653 cv
47.2427 16.654 46.9857 16.6437 46.7335 16.6339 cv
46.1136 16.6368 45.4534 16.654 44.8039 16.6511 cv
44.5519 16.6511 44.1006 16.5932 43.8976 16.6741 cv
43.8064 16.6741 43.6778 16.6628 43.6032 16.7031 cv
43.2796 16.6912 42.9618 16.68 42.637 16.6682 cv
41.71 16.6613 40.783 16.657 39.856 16.6511 cv
39.3988 16.6339 38.9123 16.6167 38.4257 16.6138 cv
38.2883 16.6138 38.102 16.5589 37.9823 16.6138 cv
37.8194 16.6094 37.6498 16.6094 37.4879 16.6094 cv
37.1975 16.6065 36.9228 16.5819 36.6374 16.5863 cv
36.555 16.5878 36.4402 16.5687 36.3755 16.6035 cv
36.0772 16.6005 35.7908 16.599 35.4965 16.599 cv
35.3611 16.599 35.1963 16.5789 35.0875 16.625 cv
34.6391 16.6221 34.1889 16.6192 33.7435 16.6167 cv
33.6052 16.6138 33.4247 16.5589 33.302 16.6153 cv
32.6988 16.6138 32.0838 16.5789 31.4578 16.5731 cv
31.3215 16.5716 31.1057 16.5187 30.9939 16.5716 cv
30.8879 16.5716 30.7516 16.5589 30.6692 16.6005 cv
29.901 16.5961 29.1266 16.6035 28.3825 16.55 cv
28.0548 16.5299 27.2882 16.4132 27.0096 16.55 cv
26.9523 16.5589 26.8943 16.5701 26.8325 16.5789 cv
26.446 16.5789 26.0684 16.5442 25.6628 16.5417 cv
25.2361 16.5417 24.7029 16.599 24.3478 16.448 cv
24.2889 16.448 li
24.2889 16.4205 li
cp
22.4373 17.7541 mo
22.4982 17.7066 22.554 17.6575 22.6178 17.6129 cv
22.8267 17.453 23.4079 16.9238 23.6429 16.9267 cv
24.0927 16.9267 24.5312 16.9782 24.9839 16.9757 cv
25.2507 16.9596 25.5175 16.941 25.7809 16.9267 cv
26.0654 16.9194 26.3264 16.9512 26.6001 16.9566 cv
27.0258 16.9655 27.4741 16.9439 27.8866 16.9483 cv
28.7141 16.9512 29.4939 17.0434 30.3464 17.0361 cv
30.5338 17.0346 30.6937 16.9915 30.8722 16.9856 cv
31.3018 16.9655 31.7668 16.9782 32.1867 16.9655 cv
32.4212 16.9856 32.6575 17.0012 32.8891 17.0204 cv
33.1334 17.0012 33.3776 16.9915 33.6209 16.9757 cv
33.8936 16.9885 34.1673 16.9973 34.439 17.0101 cv
35.0599 16.9856 35.7074 16.9512 36.3431 16.9537 cv
36.6364 16.9596 36.9287 16.9596 37.2211 16.9655 cv
37.3662 16.9812 37.5251 17.016 37.69 17.0189 cv
38.0176 17.0204 38.3119 16.9699 38.6258 16.9655 cv
39.1104 16.9596 39.6019 17.0405 40.0894 17.0606 cv
40.3347 17.0518 40.576 17.0434 40.8202 17.0361 cv
41.1244 17.0434 41.4304 17.0694 41.757 17.0719 cv
41.913 17.0665 42.071 17.0577 42.224 17.0489 cv
42.3476 17.0665 42.4771 17.0778 42.6047 17.0925 cv
42.7401 17.0778 42.8764 17.0665 43.0137 17.0489 cv
43.3933 17.0518 43.7749 17.0518 44.1555 17.0518 cv
44.285 17.0405 44.4097 17.0257 44.5392 17.013 cv
44.7412 17.0361 44.9472 17.0606 45.1532 17.0837 cv
45.4445 17.0881 45.7339 17.0895 46.0322 17.094 cv
46.2048 17.0881 46.3804 17.0778 46.556 17.0694 cv
47.5213 17.0694 li
47.746 17.0518 47.9706 17.0361 48.1962 17.0204 cv
48.5945 17.0204 48.9967 17.0228 49.395 17.0228 cv
49.5813 17.0087 49.7648 16.9915 49.9521 16.9782 cv
50.1071 16.9944 50.2621 17.0101 50.421 17.0288 cv
50.6741 17.0405 50.938 17.0101 51.1783 17.0145 cv
51.7258 17.0434 52.2711 17.0694 52.8186 17.0955 cv
53.7671 17.0719 54.702 16.9856 55.6595 16.9757 cv
55.9645 16.9699 56.2735 17.0189 56.5934 17.0057 cv
56.7768 16.9973 56.9279 16.9537 57.1211 16.9537 cv
57.6057 16.9566 58.0962 16.9596 58.5847 16.9611 cv
58.8947 16.9812 59.2076 16.9973 59.5225 17.016 cv
59.7138 16.9944 59.911 16.9699 60.1052 16.9483 cv
60.2897 16.9335 60.4976 16.9596 60.6644 16.9134 cv
61.0215 16.9335 61.3785 16.9537 61.7317 16.9782 cv
61.8896 17.0204 62.5802 17.5579 62.646 17.7164 cv
62.6077 17.7267 62.5694 17.734 62.5312 17.7439 cv
62.3467 17.7439 62.0612 17.6963 61.9141 17.7699 cv
61.4845 17.7684 60.9655 17.6517 60.5996 17.8508 cv
60.5289 17.8596 60.4622 17.8679 60.3926 17.8783 cv
60.2504 17.8783 60.0758 17.8582 59.9532 17.9057 cv
59.6618 17.9057 59.0948 17.8375 58.8731 17.9572 cv
58.6671 17.9371 58.4631 17.92 58.257 17.8955 cv
57.8303 17.8924 57.3997 17.8851 56.97 17.8827 cv
56.7247 17.865 56.2578 17.7958 56.0351 17.8827 cv
55.1474 17.8783 54.2586 17.871 53.3709 17.865 cv
52.9912 17.8508 52.5762 17.8336 52.1692 17.8307 cv
52.021 17.8307 51.8297 17.8091 51.7022 17.8596 cv
51.3687 17.8582 51.0371 17.8552 50.7075 17.8508 cv
50.5348 17.8434 50.3151 17.7817 50.1542 17.8508 cv
49.8423 17.8478 49.5293 17.8449 49.2145 17.8434 cv
49.0889 17.8434 48.9378 17.8248 48.8319 17.871 cv
48.7652 17.8812 48.6985 17.891 48.6297 17.8999 cv
48.2472 17.8999 47.8685 17.8955 47.486 17.8924 cv
47.3506 17.8924 47.1623 17.865 47.0484 17.92 cv
46.7934 17.92 46.091 17.8621 45.9076 17.946 cv
45.6653 17.943 45.1591 17.8827 44.9708 17.9661 cv
44.9119 17.9749 44.8531 17.9862 44.7971 17.9979 cv
44.4175 17.9921 44.0948 17.9273 43.7111 17.9317 cv
43.615 17.9341 43.5013 17.9258 43.4208 17.9572 cv
43.1207 17.9572 42.6184 17.8552 42.3673 17.9533 cv
42.2887 17.9547 42.2132 17.9572 42.1318 17.9572 cv
41.8984 17.946 41.4343 17.7817 41.2254 17.8895 cv
40.8742 17.8768 40.522 17.865 40.1728 17.8552 cv
40.0463 17.8552 39.8991 17.8361 39.7893 17.8812 cv
39.5656 17.8783 39.1399 17.7757 38.9437 17.8753 cv
38.8838 17.8851 38.824 17.8924 38.7671 17.9057 cv
38.3394 17.8999 37.9097 17.8955 37.48 17.891 cv
37.3133 17.8753 37.1494 17.8582 36.9817 17.8375 cv
36.7188 17.8361 36.4578 17.8336 36.193 17.8307 cv
36.0449 17.8278 35.8516 17.8062 35.7241 17.8582 cv
35.5946 17.8582 35.4533 17.8419 35.3425 17.8827 cv
35.1963 17.8827 35.0472 17.8753 34.9344 17.9401 cv
34.7667 17.9371 34.6029 17.9341 34.437 17.9273 cv
34.1702 17.891 33.8131 17.734 33.5286 17.8434 cv
33.155 17.8434 32.7831 17.8106 32.3878 17.8091 cv
32.2642 17.8062 32.1112 17.7929 32.0072 17.8361 cv
31.915 17.8361 31.7904 17.8278 31.7139 17.865 cv
31.6276 17.871 31.5402 17.8827 31.448 17.891 cv
30.9251 17.8895 30.4572 17.8405 29.9599 17.79 cv
29.853 17.7713 29.7421 17.7541 29.6382 17.741 cv
29.158 17.734 28.6822 17.7311 28.2049 17.7282 cv
27.9499 17.7282 27.5016 17.6718 27.2951 17.7512 cv
27.171 17.7512 26.9998 17.6978 26.8855 17.7512 cv
26.7315 17.7468 26.4171 17.6939 26.3019 17.7468 cv
26.2195 17.7541 26.1414 17.7669 26.0654 17.7757 cv
25.6211 17.7713 25.1669 17.7757 24.7519 17.7929 cv
24.6117 17.7958 24.4272 17.7699 24.3119 17.8218 cv
23.6861 17.8189 23.0617 17.8135 22.4373 17.8135 cv
22.4373 17.7541 li
cp
74.3921 42.1289 mo
74.3921 42.1951 74.2322 42.1868 74.1831 42.2152 cv
74.039 42.2152 73.8732 42.1922 73.7486 42.2412 cv
73.5416 42.2388 73.2424 42.1868 73.0717 42.2642 cv
72.1869 42.2613 71.2981 42.253 70.4113 42.2501 cv
70.1994 42.2441 69.7992 42.1608 69.6206 42.2501 cv
69.395 42.2472 68.879 42.1868 68.7162 42.2702 cv
68.5269 42.2702 68.2728 42.175 68.0982 42.2388 cv
67.7754 42.2501 67.4547 42.2613 67.1339 42.2731 cv
66.6601 42.2672 66.1863 42.2613 65.7164 42.253 cv
65.7164 42.3854 65.7164 42.5124 65.7144 42.6424 cv
65.7899 42.6474 65.8576 42.6572 65.9263 42.663 cv
66.2079 42.6689 66.4893 42.6424 66.7483 42.6453 cv
66.9132 42.6572 67.0799 42.663 67.2477 42.6689 cv
67.5508 42.6572 67.852 42.6395 68.155 42.6198 cv
69.1772 42.6247 70.1955 42.6307 71.2579 42.6365 cv
71.7278 42.6395 72.1908 42.6395 72.6597 42.6424 cv
72.9304 42.6395 73.2198 42.6689 73.4493 42.5904 cv
73.6279 42.5934 73.8025 42.5963 73.9771 42.6022 cv
74.0899 42.6081 74.2097 42.6424 74.3303 42.6247 cv
74.3303 42.6365 74.3303 42.6424 74.3293 42.6572 cv
74.4284 42.6572 74.3744 43.4203 74.3519 43.5331 cv
74.2097 43.5302 74.0723 43.5823 73.9124 43.5823 cv
73.6544 43.5881 73.1885 43.49 72.9775 43.5792 cv
72.8019 43.5792 72.5322 43.5391 72.3909 43.6107 cv
72.2045 43.6087 71.8013 43.5616 71.6601 43.6342 cv
71.1628 43.6284 70.7066 43.6028 70.1994 43.5969 cv
70.0778 43.5969 69.9139 43.5734 69.8159 43.6204 cv
69.2606 43.6204 68.7064 43.6146 68.1492 43.6107 cv
67.9687 43.6028 67.5733 43.5165 67.4213 43.5792 cv
67.1643 43.5773 66.9092 43.5734 66.6552 43.5734 cv
66.4924 43.5656 66.2873 43.5106 66.1284 43.5734 cv
66.0126 43.5734 65.8615 43.5792 65.7615 43.5449 cv
65.738 43.5361 65.7301 43.5018 65.7144 43.4812 cv
65.7144 44.007 li
65.7351 44.009 65.7615 44.009 65.7782 44.009 cv
66.0224 44.0119 66.25 43.9893 66.4815 43.9893 cv
66.711 43.9971 66.9485 44.009 67.18 44.0177 cv
67.5998 44.0236 67.9873 43.9804 68.3827 43.9716 cv
68.5553 43.9804 68.7328 43.9893 68.9084 43.9971 cv
69.2028 43.9952 69.4892 43.9913 69.7826 43.9893 cv
69.8806 44.001 69.9787 44.0148 70.0778 44.0266 cv
70.2524 44.0403 70.4329 44.0148 70.6056 44.0177 cv
70.7301 44.0236 70.8586 44.0266 70.9842 44.0344 cv
71.0941 44.0148 71.2029 44.001 71.306 43.9854 cv
71.5316 43.9804 71.8063 44.0177 72.0084 43.954 cv
72.3017 43.9599 72.5852 43.9893 72.8579 43.9893 cv
73.1031 43.9893 74.1096 43.9226 74.2538 44.0442 cv
74.3725 44.1502 74.2842 44.7682 74.2292 44.9055 cv
74.2263 44.9546 73.983 44.9409 73.9349 44.9644 cv
73.8732 44.9752 73.8015 44.9841 73.7309 44.9919 cv
73.2836 44.9919 72.8353 44.987 72.388 44.987 cv
72.2437 44.9841 72.0319 44.9526 71.9151 45.0096 cv
71.4767 45.0096 71.0342 45.0135 70.5977 45.0135 cv
70.48 45.0036 70.3652 44.9919 70.2514 44.9781 cv
70.1288 44.9919 70.016 45.0036 69.8993 45.0135 cv
69.761 45.0016 69.6226 44.987 69.4853 44.9722 cv
69.2057 44.9693 68.9183 44.9644 68.6416 44.9604 cv
68.4768 44.9526 68.2699 44.8997 68.1139 44.9604 cv
67.3792 44.9546 66.6483 44.9526 65.9165 44.9487 cv
65.7144 44.9487 li
65.7144 45.3843 li
65.7144 45.3352 65.893 45.3617 65.944 45.3617 cv
66.4599 45.3617 66.9603 45.3617 67.4959 45.3647 cv
67.6832 45.3647 67.9226 45.3989 68.0786 45.3392 cv
68.9399 45.345 69.7766 45.4078 70.6251 45.4108 cv
70.9666 45.396 71.306 45.3783 71.6533 45.3647 cv
72.3507 45.3783 73.056 45.3902 73.7545 45.4078 cv
73.8977 45.4108 74.0144 45.451 74.1685 45.4598 cv
74.1646 45.6383 74.1685 46.1023 74.0586 46.2043 cv
73.9654 46.2299 73.8761 46.2534 73.7809 46.2819 cv
73.5955 46.2819 73.1306 46.1867 72.9923 46.2475 cv
72.8785 46.2436 72.7342 46.2299 72.642 46.276 cv
72.5617 46.2848 72.487 46.2867 72.4056 46.3025 cv
71.5885 46.2966 70.7841 46.2328 69.9512 46.2299 cv
69.706 46.2269 69.3656 46.169 69.1556 46.2534 cv
68.9536 46.2534 68.4926 46.2004 68.3395 46.2819 cv
67.6675 46.27 66.9926 46.2612 66.3207 46.2494 cv
66.1225 46.2358 65.9185 46.2181 65.7104 46.2103 cv
65.7104 46.377 65.7085 46.5438 65.7085 46.7086 cv
65.8733 46.6448 66.302 46.6733 66.4638 46.6772 cv
67.0574 46.6772 67.6509 46.6792 68.2453 46.6792 cv
68.6083 46.6938 69.1782 46.6998 69.4774 46.5791 cv
69.9071 46.581 70.2936 46.6301 70.7066 46.6566 cv
71.0568 46.6733 71.4423 46.6595 71.7886 46.6566 cv
72.1594 46.6477 72.5322 46.6772 72.903 46.6792 cv
73.2228 46.6792 73.6946 46.5732 73.983 46.7204 cv
74.1586 46.7204 74.0409 47.3579 73.9742 47.4462 cv
73.9036 47.5248 73.7976 47.5159 73.7162 47.562 cv
73.6279 47.5757 73.5416 47.5856 73.4493 47.5934 cv
72.9167 47.5915 72.3781 47.5876 71.8445 47.5856 cv
71.6022 47.5738 71.249 47.4787 71.0224 47.5816 cv
70.8233 47.5816 70.4143 47.5326 70.2641 47.6082 cv
69.6501 47.5993 69.0095 47.5679 68.3611 47.562 cv
68.1865 47.562 68.0089 47.562 67.8314 47.562 cv
67.7019 47.562 67.5116 47.51 67.3977 47.559 cv
66.8092 47.5561 66.2903 47.5042 65.7085 47.4953 cv
65.7065 47.6601 65.7065 47.821 65.7065 47.9799 cv
65.7635 47.9779 65.8164 47.9682 65.8714 47.9662 cv
66.2903 47.9662 66.7101 47.9622 67.125 47.9603 cv
67.3232 47.9662 67.5175 47.9721 67.7156 47.9779 cv
67.852 47.9888 67.9667 48.0289 68.1237 48.0289 cv
68.3306 48.0231 68.5181 47.9779 68.7388 47.9779 cv
69.1125 47.9799 69.8217 48.0466 70.1131 47.9289 cv
70.2514 47.9427 70.3868 47.9544 70.5271 47.9682 cv
70.7939 47.9622 71.0607 47.9289 71.3433 47.9309 cv
71.8445 47.9456 72.339 47.9573 72.8382 47.9662 cv
73.0776 47.974 73.5798 47.9544 73.7741 48.0378 cv
73.9213 48.0378 73.7466 48.7352 73.7368 48.8255 cv
73.6897 48.8255 73.6504 48.854 73.623 48.8824 cv
73.367 48.8824 72.5617 48.8255 72.389 48.906 cv
72.2045 48.906 71.8279 48.8628 71.6905 48.9354 cv
71.408 48.9295 71.1255 48.9256 70.839 48.9197 cv
70.6978 48.9147 70.5349 48.8706 70.4035 48.9236 cv
70.2485 48.9236 70.0543 48.9089 69.9326 48.9805 cv
69.76 48.9579 69.5815 48.9373 69.4049 48.9197 cv
69.1037 48.9177 68.8035 48.9147 68.4994 48.9089 cv
68.3621 48.906 68.155 48.8569 68.0305 48.9089 cv
67.8676 48.8922 67.6999 48.8706 67.535 48.851 cv
67.0455 48.848 66.5571 48.8432 66.0754 48.8373 cv
65.9479 48.8314 65.8273 48.8255 65.7065 48.8138 cv
65.7065 49.2747 li
65.9862 49.2669 66.2637 49.2552 66.5365 49.2552 cv
66.7229 49.263 66.9092 49.2747 67.0956 49.2866 cv
67.6646 49.2924 68.2728 49.2778 68.8496 49.2807 cv
69.3263 49.2866 69.9876 49.4023 70.3995 49.2434 cv
70.6918 49.2572 70.9881 49.2669 71.2824 49.2778 cv
71.4217 49.2728 71.5679 49.263 71.716 49.2572 cv
71.8534 49.2747 71.9868 49.2895 72.128 49.3003 cv
72.6273 49.316 73.1208 49.3003 73.623 49.3533 cv
73.6152 49.5495 73.6123 49.7516 73.5662 49.9301 cv
73.5357 50.0301 73.5043 50.1283 73.466 50.2263 cv
73.2071 50.2323 72.9481 50.2381 72.6754 50.2381 cv
72.4537 50.2323 72.2311 50.2263 72.0024 50.2185 cv
71.713 50.2086 71.4158 50.195 71.1255 50.1891 cv
70.8999 50.1891 70.6782 50.195 70.4516 50.2008 cv
70.2396 50.1891 69.8913 50.1203 69.6962 50.2086 cv
69.5735 50.2086 69.4088 50.1861 69.3106 50.2381 cv
68.9831 50.2323 68.675 50.1891 68.3767 50.1714 cv
67.4782 50.1283 66.612 50.1028 65.7036 50.0968 cv
65.7026 50.244 65.7026 50.397 65.7026 50.5412 cv
65.7909 50.5236 65.9047 50.5236 65.944 50.5069 cv
66.0538 50.5501 66.1921 50.5353 66.3236 50.5412 cv
66.6797 50.552 67.0731 50.5785 67.4389 50.5678 cv
67.7695 50.5579 68.1159 50.5991 68.4288 50.5991 cv
68.724 50.5874 69.0124 50.5697 69.3087 50.5579 cv
69.8217 50.5756 70.3643 50.6619 70.8919 50.6481 cv
71.2177 50.6129 71.5561 50.5814 71.8847 50.5462 cv
72.1222 50.5295 73.1835 50.4922 73.3052 50.6187 cv
73.3729 50.6933 73.3326 50.8404 73.315 50.9268 cv
73.2758 51.123 73.1875 51.3426 73.0501 51.484 cv
72.4734 51.481 71.8435 51.4212 71.2902 51.4928 cv
71.1941 51.5095 71.098 51.5192 71.0038 51.5301 cv
70.74 51.5271 69.9208 51.4349 69.7443 51.5252 cv
69.4696 51.5213 69.1988 51.5192 68.9232 51.5153 cv
68.7417 51.5095 68.4768 51.4408 68.312 51.5153 cv
68.0844 51.5153 67.7823 51.4319 67.5782 51.5134 cv
66.9485 51.5095 66.3364 51.4349 65.6987 51.4212 cv
65.6977 51.5565 65.6977 51.689 65.6977 51.8243 cv
66.0931 51.8302 66.4815 51.8332 66.8769 51.8332 cv
67.2545 51.8528 67.6391 51.9225 68.0432 51.9195 cv
68.6906 51.9165 69.3598 51.9283 70.0033 51.8999 cv
70.1906 51.8842 70.375 51.8675 70.5614 51.8568 cv
70.6879 51.8675 70.8135 51.8793 70.942 51.8901 cv
71.0607 51.8793 71.1804 51.8675 71.2902 51.8568 cv
71.5786 51.8528 72.7519 51.8352 72.8834 51.9941 cv
72.9491 52.0745 72.8892 52.2452 72.8608 52.3296 cv
72.8186 52.461 72.7597 52.6022 72.6636 52.7121 cv
72.5204 52.7121 72.3478 52.6896 72.2222 52.7357 cv
72.1025 52.7357 71.9377 52.7219 71.8445 52.7651 cv
71.7837 52.7759 71.7278 52.7847 71.6669 52.7965 cv
71.457 52.7926 70.9351 52.7327 70.7919 52.7876 cv
70.6644 52.8024 70.5389 52.8102 70.4074 52.8249 cv
70.0209 52.7876 69.6226 52.7847 69.2057 52.7788 cv
69.0673 52.7788 68.8555 52.7475 68.7437 52.8082 cv
68.5416 52.8043 68.263 52.7494 68.0982 52.8308 cv
67.8343 52.8308 66.0725 52.8043 65.6968 52.7269 cv
65.6968 53.3037 li
65.8763 53.2831 66.0616 53.232 66.25 53.232 cv
66.9867 53.238 67.7156 53.2399 68.4444 53.2399 cv
68.6239 53.2261 68.7976 53.2085 68.9771 53.1888 cv
69.3431 53.183 69.7305 53.1683 70.0866 53.1653 cv
70.2524 53.1653 70.4604 53.1888 70.6134 53.1398 cv
70.9195 53.1418 71.2029 53.1849 71.4864 53.1849 cv
71.6081 53.1742 71.7248 53.1624 71.8435 53.1477 cv
72.0809 53.1398 72.3046 53.1742 72.5135 53.2085 cv
72.5135 53.3644 72.339 53.9011 72.2153 53.9874 cv
72.1212 54.0217 72.0201 54.0482 71.9259 54.0826 cv
71.6051 54.0796 71.304 54.109 71.0156 54.1227 cv
70.8841 54.1287 70.7252 54.0826 70.6095 54.1316 cv
70.4878 54.1316 70.3221 54.1139 70.2269 54.16 cv
70.168 54.1689 70.1091 54.1797 70.0494 54.1894 cv
69.76 54.1894 69.45 54.16 69.142 54.1522 cv
68.9879 54.1423 68.7917 54.0933 68.6476 54.1522 cv
68.5583 54.16 68.4689 54.1689 68.3827 54.1797 cv
68.0982 54.1748 67.8186 54.1718 67.535 54.1689 cv
67.3173 54.1522 66.9936 54.0423 66.7758 54.1423 cv
66.6649 54.1423 66.5365 54.1287 66.4521 54.1689 cv
66.302 54.1689 65.7615 54.1954 65.6919 54.111 cv
65.6919 54.3189 65.6919 54.5122 65.6919 54.7133 cv
65.6977 54.7055 65.6968 54.68 65.7065 54.6682 cv
65.7909 54.5642 66.6836 54.5927 66.8896 54.521 cv
67.0348 54.5406 67.1711 54.523 67.3291 54.5289 cv
67.6606 54.5406 68.0432 54.5818 68.3807 54.576 cv
68.5926 54.5642 68.8104 54.5495 69.0222 54.5387 cv
69.242 54.5348 69.397 54.5927 69.6109 54.5927 cv
69.9561 54.5986 70.3073 54.5877 70.6605 54.5818 cv
70.9351 54.5721 71.5934 54.472 71.8239 54.5877 cv
71.8435 54.6044 71.8573 54.6153 71.8719 54.6211 cv
71.9318 54.7055 71.8161 55.0282 71.7807 55.1116 cv
71.713 55.2617 71.6533 55.4638 71.4492 55.4696 cv
71.3629 55.4726 71.2834 55.4549 71.2118 55.4804 cv
71.0391 55.4638 70.8645 55.4471 70.6879 55.4255 cv
70.3505 55.4059 69.9571 55.4148 69.6324 55.4353 cv
69.5049 55.4471 69.3646 55.4235 69.2548 55.4726 cv
69.0026 55.4726 68.5377 55.3922 68.3454 55.4961 cv
68.2884 55.5069 68.2277 55.5128 68.1708 55.5276 cv
67.9745 55.5276 67.7803 55.5216 67.5861 55.5216 cv
67.4547 55.5157 67.2919 55.4726 67.1741 55.5187 cv
66.6826 55.5157 66.1824 55.5157 65.6859 55.5099 cv
65.6859 55.6884 65.6859 55.8561 65.6849 56.0258 cv
65.8576 56.0111 66.0077 55.9454 66.1754 55.9307 cv
66.5021 55.8993 66.8327 55.9288 67.1447 55.9189 cv
67.282 55.9052 67.4135 55.8905 67.5517 55.8738 cv
68.2159 55.864 68.9016 55.8621 69.5481 55.864 cv
69.8433 55.864 70.1807 55.8679 70.48 55.8621 cv
70.6536 55.8561 70.8488 55.8757 71.0078 55.8326 cv
71.1146 55.8385 71.2579 55.8306 71.3217 55.9189 cv
71.3991 56.021 71.1628 56.5389 71.0961 56.637 cv
71.0342 56.7174 70.9607 56.7665 70.8841 56.8273 cv
70.6801 56.8273 70.4761 56.8372 70.2701 56.8391 cv
70.0366 56.8372 69.5618 56.7174 69.3646 56.8156 cv
69.1616 56.8156 68.724 56.7665 68.5729 56.842 cv
68.3787 56.842 68.0883 56.793 67.9284 56.8646 cv
67.7293 56.8646 67.4596 56.793 67.282 56.8627 cv
66.7641 56.8627 66.1921 56.842 65.681 56.8862 cv
65.681 57.0294 65.6801 57.1628 65.6801 57.3041 cv
65.8518 57.2835 66.0401 57.2717 66.0793 57.2668 cv
66.3049 57.2511 66.4815 57.2923 66.6935 57.2835 cv
66.9014 57.2668 67.1064 57.2403 67.3094 57.2178 cv
67.6439 57.2403 67.9726 57.2569 68.3081 57.2775 cv
68.571 57.2805 68.824 57.2433 69.0673 57.2285 cv
69.4009 57.2118 69.7737 57.2835 70.0935 57.2001 cv
70.323 57.2079 70.5035 57.2569 70.74 57.2668 cv
70.7369 57.5169 70.4466 58.083 70.1739 58.1261 cv
69.966 58.1536 69.6903 58.0908 69.501 58.1653 cv
69.1684 58.1595 68.4219 58.0418 68.155 58.1859 cv
67.59 58.183 67.0191 58.1918 66.4874 58.1398 cv
66.2853 58.1104 65.9479 58.085 65.6762 58.0564 cv
65.6762 58.2184 65.6762 58.3615 65.6752 58.5126 cv
65.6919 58.5068 65.7065 58.5028 65.7242 58.4969 cv
65.8988 58.5087 66.3697 58.5175 66.5453 58.5263 cv
66.7101 58.5175 66.8769 58.5175 67.0416 58.5087 cv
67.4282 58.5234 67.8117 58.5695 68.2159 58.5636 cv
68.6014 58.5617 69.0517 58.5578 69.4421 58.5695 cv
69.6344 58.5784 69.8483 58.5636 69.9954 58.6647 cv
70.0346 58.6647 70.0248 58.6558 70.0248 58.697 cv
69.9876 58.697 69.5735 59.524 69.2812 59.5701 cv
68.8967 59.6221 68.3306 59.5191 67.9442 59.5034 cv
67.4311 59.4838 66.9348 59.4662 66.4502 59.4407 cv
66.2873 59.4318 65.9263 59.472 65.6713 59.4436 cv
65.6713 59.8732 li
66.5149 59.8762 67.5606 59.8938 68.3512 59.9487 cv
68.5926 59.9684 68.8378 59.986 69.0801 60.0057 cv
69.0801 60.092 li
69.0222 60.092 69.0095 60.1724 68.9948 60.2136 cv
68.932 60.3608 68.6887 60.7178 68.5317 60.7865 cv
68.4415 60.81 68.3473 60.8277 68.2551 60.8513 cv
68.057 60.8454 67.6126 60.706 67.4664 60.7552 cv
67.2016 60.7552 66.8444 60.6492 66.5914 60.7532 cv
66.4619 60.7532 65.9734 60.7492 65.6653 60.7002 cv
65.6653 60.865 65.6614 60.9984 65.6614 61.1279 cv
66.0754 61.1299 66.5365 61.1338 66.9387 61.1397 cv
67.125 61.1564 67.3094 61.173 67.4959 61.1907 cv
67.7598 61.1946 68.0216 61.1995 68.2865 61.2025 cv
68.2845 61.4339 67.8186 61.9293 67.5998 61.9921 cv
67.4654 62.0078 67.333 62.0275 67.1986 62.0451 cv
66.6935 62.0411 66.1647 62.0156 65.6487 62.0078 cv
65.6418 62.1745 65.6212 62.3159 65.6104 62.4689 cv
65.7291 62.4512 65.8664 62.4375 65.9086 62.4199 cv
66.1127 62.4199 67.076 62.4394 67.1437 62.5689 cv
67.2506 62.7799 66.6915 63.2439 66.5453 63.3567 cv
66.3168 63.3567 65.8047 63.3968 65.5015 63.3223 cv
65.4692 63.4872 65.4368 63.6451 65.3975 63.7922 cv
65.6653 63.7922 65.9988 63.7922 66.1647 63.7951 cv
66.1647 63.8246 li
66.1921 63.8246 li
66.1921 64.0973 65.3142 64.8017 65.0748 64.9458 cv
65.0748 64.9429 65.0023 64.9458 64.914 64.9547 cv
64.4862 65.6463 63.8761 66.2006 63.0433 66.8715 cv
62.3457 67.4404 61.6335 67.8877 60.89 68.2508 cv
60.9155 68.2508 60.9332 68.2448 60.9596 68.2419 cv
61.4198 68.2272 60.4466 68.8589 60.3426 68.9394 cv
60.0611 68.9394 59.5539 68.9884 59.3185 68.905 cv
59.2596 68.905 li
59.2596 68.8943 li
58.5749 69.11 57.8587 69.2827 57.1014 69.422 cv
57.3192 69.422 57.5193 69.4279 57.6185 69.4239 cv
57.8264 69.422 58.0324 69.4445 58.2315 69.4475 cv
58.3591 69.4328 58.4866 69.422 58.6102 69.4044 cv
58.7632 69.3955 58.9133 69.4103 59.0516 69.3749 cv
59.4637 69.3749 li
59.4637 69.3955 59.4627 69.4161 59.4627 69.4328 cv
59.448 69.4387 59.4322 69.4445 59.4165 69.4505 cv
59.242 69.6231 58.9791 69.7654 58.7662 69.885 cv
58.6181 69.9714 58.4886 70.091 58.3375 70.1676 cv
58.207 70.2146 58.0687 70.2578 57.9343 70.301 cv
57.8421 70.301 57.7175 70.2951 57.643 70.3323 cv
56.9219 70.3265 56.199 70.3206 55.4769 70.3187 cv
55.2023 70.3127 54.706 70.2107 54.4528 70.3127 cv
54.1694 70.3127 53.774 70.252 53.5454 70.3638 cv
53.3522 70.3638 53.0284 70.3127 52.8734 70.3932 cv
52.4625 70.3618 52.0533 70.3265 51.6433 70.2932 cv
51.5599 70.2932 51.457 70.2656 51.3843 70.2951 cv
51.0057 70.2951 50.1277 70.2932 49.4636 70.2892 cv
49.1978 70.3206 48.9339 70.3481 48.6602 70.3814 cv
47.9146 70.4677 47.2897 70.6149 46.7424 70.7993 cv
47.278 70.8032 48.1334 70.8032 48.5964 70.8032 cv
49.028 70.7876 49.4578 70.7718 49.8854 70.7542 cv
50.9527 70.7621 52.0749 70.8032 53.1325 70.7738 cv
53.4895 70.766 53.8544 70.7542 54.1879 70.7503 cv
54.3705 70.7503 54.5627 70.7679 54.7118 70.6934 cv
55.5349 70.7012 56.3265 70.7365 57.1731 70.7385 cv
57.1731 70.7679 li
57.2035 70.7679 li
57.2035 70.7973 li
57.0995 70.7934 56.8297 71.0014 56.7287 71.0563 cv
56.4001 71.2172 56.0656 71.3702 55.7281 71.5154 cv
55.53 71.6017 55.3318 71.7195 55.1111 71.7627 cv
54.7089 71.8372 54.241 71.7666 53.7976 71.7744 cv
53.619 71.7744 53.4738 71.8176 53.3012 71.8234 cv
53.1325 71.8294 52.8695 71.7862 52.7175 71.8549 cv
52.5125 71.8549 52.3094 71.8607 52.1034 71.8646 cv
51.8376 71.8529 51.5904 71.7018 51.3421 71.8469 cv
50.8958 71.843 50.4446 71.8469 50.0296 71.8176 cv
49.8325 71.7999 49.5293 71.7666 49.3479 71.8352 cv
49.2262 71.8352 49.0437 71.8117 48.9428 71.8607 cv
48.6886 71.8607 48.4336 71.8588 48.1824 71.8588 cv
47.9255 71.8549 47.2505 71.7489 47.0406 71.8529 cv
46.4726 71.8489 45.6378 71.7685 44.9649 71.7391 cv
44.751 71.9097 44.5705 72.0883 44.4136 72.2668 cv
44.7294 72.2571 45.1434 72.2629 45.3121 72.2394 cv
46.1263 72.1373 47.0073 72.2571 47.8263 72.2629 cv
48.2551 72.2629 48.67 72.2139 49.1173 72.2139 cv
49.4047 72.2158 49.6598 72.2217 49.9345 72.2217 cv
50.0875 72.2178 50.2405 72.2296 50.374 72.1923 cv
50.627 72.2786 51.0979 72.2217 51.4 72.2296 cv
51.81 72.2335 52.2319 72.2963 52.6577 72.2943 cv
52.8489 72.2728 53.0461 72.2571 53.2404 72.2394 cv
53.517 72.2394 53.7887 72.2452 54.0624 72.2394 cv
54.0624 72.2728 li
54.0329 72.2728 li
54.0329 72.3199 53.9751 72.3119 53.9417 72.3257 cv
53.6602 72.4356 53.3806 72.5474 53.0971 72.6534 cv
52.9471 72.7259 52.7999 72.7927 52.6498 72.8652 cv
52.4477 72.9398 52.2417 73.0124 52.0397 73.0772 cv
51.8258 73.0772 51.3491 73.0241 51.1882 73.1046 cv
51.0018 73.1046 50.8183 73.1007 50.6309 73.0987 cv
50.5054 73.0889 50.3455 73.0517 50.2248 73.0987 cv
50.0963 73.0987 49.9109 73.0752 49.8148 73.1242 cv
49.7579 73.1379 49.701 73.1439 49.6382 73.1536 cv
49.3596 73.1497 49.0937 73.1595 48.8172 73.1439 cv
48.6553 73.136 48.4247 73.0379 48.2619 73.1163 cv
48.1207 73.1163 47.9362 73.0889 47.8254 73.1439 cv
47.6361 73.1439 47.3663 73.0987 47.2094 73.1713 cv
47.1141 73.1713 46.9896 73.1615 46.918 73.1988 cv
46.76 73.1988 46.5521 73.1733 46.4187 73.2242 cv
46.348 73.2341 46.2823 73.2419 46.2117 73.2518 cv
45.9871 73.2518 45.3043 73.1733 45.1591 73.2458 cv
45.0031 73.2458 44.8461 73.2419 44.6921 73.2419 cv
44.4803 73.24 44.0898 73.2341 43.7858 73.2203 cv
43.7082 73.3831 43.6435 73.548 43.5935 73.7011 cv
44.2056 73.6441 45.0884 73.6716 45.6535 73.6834 cv
46.1793 73.6952 46.76 73.6598 47.2672 73.6147 cv
47.4781 73.597 47.6919 73.6284 47.8803 73.5539 cv
48.3012 73.5558 48.7083 73.5892 49.1144 73.5912 cv
49.5107 73.5794 49.9099 73.5774 50.3082 73.5676 cv
50.3082 73.597 li
49.9776 73.5951 49.5951 73.7932 49.2773 73.8658 cv
49.0506 73.9168 48.8005 73.8776 48.6082 73.9953 cv
48.2825 73.9914 47.9529 74.1503 47.6645 74.2367 cv
47.584 74.2524 47.5095 74.2661 47.435 74.2857 cv
47.2456 74.2837 47.0651 74.2896 46.9111 74.3701 cv
46.7679 74.3681 46.3745 74.4309 46.2637 74.4819 cv
46.0851 74.4819 45.8811 74.4623 45.7378 74.5368 cv
45.5378 74.5368 45.1003 74.4878 44.9472 74.5603 cv
44.8893 74.5721 44.8295 74.58 44.7706 74.5898 cv
44.3135 74.5898 43.8544 74.5839 43.3933 74.5839 cv
42.6792 74.6349 42.0828 74.6997 41.2214 74.6349 cv
41.2185 74.6291 41.2156 74.6212 41.2156 74.6153 cv
41.1783 74.6408 41.0664 74.6173 41.0283 74.6114 cv
40.6456 74.5486 40.265 74.4878 39.8814 74.425 cv
39.7 74.4171 39.5156 74.4113 39.3291 74.3995 cv
39.0868 74.3642 38.8416 74.3289 38.6004 74.2954 cv
38.3717 74.2857 38.1628 74.3131 37.9538 74.2857 cv
36.711 74.113 35.4621 73.9168 34.2713 73.654 cv
34.0869 73.6147 33.6229 73.5186 33.5111 73.3831 cv
34.0594 73.497 34.6842 73.4558 35.269 73.4852 cv
35.7712 73.5107 36.2735 73.5657 36.7894 73.5657 cv
36.9464 73.5774 37.1033 73.597 37.2573 73.6108 cv
37.4133 73.6048 37.5683 73.597 37.7233 73.5892 cv
37.9392 73.6048 38.15 73.6225 38.3678 73.6402 cv
38.51 73.6402 38.6592 73.6147 38.8024 73.6284 cv
38.9819 73.6637 39.1575 73.6991 39.3321 73.7363 cv
39.6784 73.7559 40.4612 73.7207 40.9114 73.7187 cv
40.8311 73.5402 40.729 73.3498 40.5975 73.1497 cv
40.3268 73.1615 39.8933 73.1046 39.7765 73.1595 cv
39.5813 73.1595 39.2919 73.0772 39.13 73.1536 cv
38.6455 73.1497 38.156 73.1478 37.6714 73.1439 cv
37.4997 73.1439 37.2917 73.0811 37.1387 73.1439 cv
36.6472 73.1419 36.2165 73.0772 35.7378 73.0772 cv
35.0943 73.0692 34.4469 73.0673 33.8034 73.0614 cv
33.5836 73.034 33.358 73.0025 33.1324 72.977 cv
32.9794 72.9712 32.8185 72.9653 32.6655 72.9594 cv
32.4731 72.9222 32.2672 72.8967 32.0886 72.8339 cv
31.9454 72.7808 31.8169 72.7259 31.6668 72.6886 cv
31.4529 72.6435 31.2351 72.6083 31.0331 72.571 cv
30.7957 72.5219 30.576 72.4238 30.3592 72.3374 cv
30.2385 72.2904 30.1129 72.2728 30.006 72.1923 cv
29.9786 72.1923 li
29.9786 72.1649 li
30.0826 72.1589 30.1914 72.1491 30.2993 72.1413 cv
30.7271 72.1491 31.196 72.1785 31.6452 72.1746 cv
31.9758 72.1727 32.324 72.1923 32.6105 72.0922 cv
33.0696 72.106 33.5286 72.1197 33.9887 72.1354 cv
34.1801 72.153 34.3743 72.1688 34.5704 72.1923 cv
34.9344 72.1982 35.2474 72.1001 35.5976 72.1157 cv
36.0811 72.1315 36.5766 72.204 37.0602 72.208 cv
37.6253 72.21 38.1903 72.21 38.7553 72.2139 cv
38.9397 72.208 39.4234 72.259 39.7245 72.1982 cv
39.5636 72.0667 39.3841 71.9274 39.1811 71.7921 cv
39.0084 71.7802 38.7906 71.7607 38.7553 71.7783 cv
38.669 71.7783 38.5434 71.7685 38.4669 71.7999 cv
38.1412 71.7999 37.8175 71.7489 37.4722 71.7371 cv
37.3711 71.7312 37.2416 71.7018 37.1494 71.7371 cv
36.9856 71.7371 36.7678 71.6645 36.6227 71.7371 cv
36.241 71.7234 35.8614 71.7116 35.4808 71.6999 cv
35.3318 71.6999 35.1394 71.6744 35.0109 71.7254 cv
34.6529 71.7195 34.2899 71.7135 33.9279 71.7116 cv
33.7161 71.688 33.3855 71.5704 33.1716 71.6586 cv
32.9921 71.6567 32.7773 71.6273 32.6419 71.7116 cv
32.4496 71.7116 32.0552 71.6684 31.9101 71.7371 cv
31.1135 71.7371 30.3012 71.7195 29.54 71.6449 cv
29.2315 71.6135 28.9171 71.6194 28.6346 71.5291 cv
28.1476 71.3741 27.7654 70.9759 27.2936 70.8032 cv
27.2936 70.7483 li
27.761 70.7503 28.228 70.7542 28.6969 70.7561 cv
28.9431 70.7738 29.2001 70.817 29.4596 70.815 cv
29.7951 70.8111 30.1071 70.7621 30.4543 70.766 cv
30.7271 70.766 30.9998 70.766 31.2744 70.7679 cv
31.4177 70.7679 31.5883 70.7816 31.7119 70.7424 cv
31.9689 70.7679 32.2024 70.7424 32.4731 70.7483 cv
33.2001 70.7621 33.9936 70.7856 34.7549 70.7876 cv
35.3435 70.7915 35.9674 70.7876 36.5128 70.8424 cv
36.5971 70.8366 36.6864 70.8307 36.7757 70.8268 cv
36.8522 70.8346 37.0298 70.8366 37.2132 70.8405 cv
36.7423 70.6738 36.2293 70.5109 35.6397 70.3696 cv
35.5475 70.3638 35.4533 70.3618 35.4298 70.3618 cv
35.0237 70.3245 34.6038 70.3206 34.1731 70.3187 cv
34.0418 70.3187 33.8662 70.2932 33.7651 70.3442 cv
33.668 70.3442 33.5424 70.3363 33.4698 70.3696 cv
33.0628 70.3696 32.688 70.3323 32.3005 70.3363 cv
32.0336 70.3383 31.758 70.3559 31.4794 70.3618 cv
31.2921 70.3638 31.0233 70.3187 30.8654 70.3854 cv
30.3699 70.3814 29.8638 70.352 29.3443 70.3481 cv
29.1825 70.3481 28.946 70.3088 28.8166 70.3736 cv
28.5556 70.3696 28.2903 70.3638 28.0249 70.3618 cv
27.8518 70.3323 27.6771 70.3068 27.4957 70.2814 cv
27.1165 70.2598 26.7286 70.2951 26.3941 70.1911 cv
26.0997 70.097 25.8634 69.9027 25.598 69.7477 cv
25.4842 69.681 25.2708 69.6005 25.2507 69.4475 cv
25.9183 69.4711 26.6609 69.4986 27.327 69.5162 cv
27.7915 69.525 28.2815 69.525 28.7616 69.5309 cv
28.9966 69.5338 29.1913 69.5309 29.3743 69.5309 cv
28.1574 69.3926 27.1293 69.2366 26.2342 69.0522 cv
26.0826 69.061 25.9325 69.0728 25.7809 69.0688 cv
25.5867 69.0522 25.3906 69.0375 25.1958 69.0237 cv
25.1149 69.0316 25.0389 69.0414 24.9638 69.0522 cv
24.5096 69.0522 24.2325 68.9138 23.9141 68.6716 cv
23.8028 68.5823 23.7494 68.5999 23.6949 68.4646 cv
23.8175 68.4646 23.9328 68.4754 24.0555 68.4783 cv
22.7115 68.0114 21.7639 67.4169 20.8932 66.638 cv
20.3209 66.1279 19.8475 65.4412 19.5159 64.6574 cv
19.3977 64.6545 19.281 64.6545 19.281 64.6457 cv
19.0848 64.6457 18.5228 63.9501 18.406 63.7922 cv
18.406 63.7599 li
18.4345 63.7599 li
18.4345 63.7088 18.6208 63.7206 18.6698 63.7059 cv
18.7636 63.7108 19.0171 63.6971 19.1976 63.7147 cv
19.1658 63.5872 19.1442 63.4577 19.1212 63.3282 cv
18.7925 63.342 18.2441 63.3567 18.0323 63.2988 cv
17.9156 63.2645 17.3014 62.6445 17.2842 62.5179 cv
17.2711 62.4542 17.2985 62.4199 17.3318 62.3826 cv
17.5074 62.3884 17.6835 62.4022 17.8552 62.4081 cv
18.0337 62.4081 18.6247 62.3649 19.0113 62.3904 cv
19.0098 62.3011 19.0059 62.151 19.0059 61.947 cv
18.922 61.9549 18.8469 61.9695 18.8239 61.9784 cv
18.7204 61.9784 18.5963 61.9725 18.5026 62.0078 cv
18.354 62.0078 17.9832 61.9411 17.8909 61.9755 cv
17.8233 61.9862 17.7556 61.9921 17.6835 62.0039 cv
17.4353 62.002 17.1802 62.0411 16.9596 61.9784 cv
16.7766 61.9176 16.3411 61.3241 16.2846 61.1455 cv
16.3151 61.1455 li
16.3151 61.1161 li
16.3999 61.1161 16.4808 61.1622 16.576 61.1681 cv
16.7692 61.1789 16.9507 61.1455 17.1341 61.1279 cv
17.3863 61.1043 17.6663 61.1397 17.8954 61.0642 cv
18.1131 61.0642 18.6453 61.0357 19.0014 61.0642 cv
19.0014 60.6119 li
18.8239 60.6315 18.638 60.657 18.6277 60.6609 cv
18.4937 60.6776 18.3554 60.6894 18.2196 60.7002 cv
18.0626 60.6865 17.9081 60.6717 17.7497 60.657 cv
17.5712 60.6492 17.4108 60.6835 17.2479 60.6924 cv
17.1572 60.7002 17.0419 60.6776 16.9611 60.71 cv
16.8457 60.706 16.7016 60.7178 16.6094 60.7698 cv
16.4146 60.7639 16.1983 60.7698 16.0355 60.706 cv
15.9256 60.6609 15.5077 60.0842 15.5843 59.986 cv
15.6646 59.8732 16.3195 59.9164 16.498 59.8585 cv
17.2583 59.8674 18.2098 59.8674 19.0029 59.8732 cv
19.0029 59.7173 19.0059 59.5671 19.0059 59.3994 cv
18.69 59.3994 18.2559 59.3975 18.0224 59.3975 cv
17.9028 59.3975 17.7325 59.3798 17.6403 59.4288 cv
17.4441 59.4259 17.1283 59.3719 16.9669 59.4524 cv
16.6912 59.4524 16.1478 59.3886 15.9472 59.5034 cv
15.7917 59.5014 15.5984 59.4808 15.4744 59.5329 cv
15.3694 59.5329 15.2551 59.521 15.1786 59.4662 cv
15.1011 59.368 15.0305 59.268 14.9568 59.1698 cv
14.7911 58.9364 14.6092 58.7402 14.5718 58.442 cv
14.844 58.4459 15.0506 58.5028 15.3361 58.5068 cv
15.5367 58.5008 15.7427 58.4911 15.9472 58.4832 cv
16.289 58.4891 16.6682 58.5175 17.0302 58.5126 cv
17.2175 58.495 17.3995 58.4773 17.5884 58.4636 cv
17.9661 58.4596 18.3741 58.5401 18.7302 58.437 cv
18.769 58.4518 18.8886 58.4636 19.0098 58.4773 cv
19.0098 58.3419 19.0113 58.1889 19.0113 58.0476 cv
18.7317 58.0673 18.2589 58.0476 18.1764 58.085 cv
18.0568 58.085 17.9156 58.0673 17.8233 58.1085 cv
17.3922 58.1056 16.9655 58.1025 16.5343 58.0996 cv
16.3999 58.083 16.263 58.0653 16.1247 58.0476 cv
15.9113 58.0447 15.6966 58.0418 15.4832 58.0389 cv
15.3621 58.0389 15.1977 58.0222 15.1011 58.0673 cv
14.9711 58.0653 14.7979 58.0447 14.6931 58.0908 cv
14.5645 58.0908 14.4306 58.0937 14.3266 58.0339 cv
14.1005 57.8917 13.8955 57.361 13.8219 57.1255 cv
13.8695 57.1255 13.9259 57.0844 13.9676 57.0647 cv
14.3787 57.1157 14.7896 57.1628 15.2252 57.1795 cv
15.3419 57.1736 15.4572 57.1736 15.5739 57.1686 cv
15.6809 57.1824 15.7873 57.2001 15.8957 57.2178 cv
16.1233 57.2197 16.3455 57.2227 16.5701 57.2227 cv
16.8399 57.2256 17.0621 57.1628 17.3289 57.1736 cv
17.5133 57.202 17.7022 57.2285 17.888 57.2569 cv
18.1436 57.2629 18.6984 57.202 19.0142 57.2775 cv
19.0142 57.1216 19.0171 56.949 19.0186 56.7841 cv
18.9191 56.788 18.8156 56.788 18.7964 56.7989 cv
17.6864 56.793 16.5686 56.7705 15.489 56.7499 cv
15.3434 56.7332 15.1977 56.7155 15.0477 56.7007 cv
14.844 56.6978 14.641 56.69 14.4389 56.6841 cv
14.3109 56.6841 14.1638 56.6694 14.0529 56.7155 cv
13.8955 56.7125 13.74 56.7213 13.6159 56.6468 cv
13.4516 56.5448 13.3143 56.0807 13.2697 55.8905 cv
13.303 55.8905 li
13.303 55.8621 li
13.5119 55.864 13.7022 55.8385 13.9156 55.8385 cv
14.0932 55.8326 14.282 55.8502 14.4419 55.809 cv
14.7911 55.8129 15.1428 55.815 15.4916 55.815 cv
15.6318 55.8267 15.7657 55.8326 15.9011 55.8444 cv
16.0497 55.8326 16.1983 55.8306 16.344 55.8208 cv
16.7188 55.8306 17.0895 55.8621 17.4555 55.8757 cv
17.6188 55.8738 17.7861 55.864 17.9547 55.8621 cv
18.2501 55.8757 18.6669 55.9307 19.0215 55.9621 cv
19.023 55.7894 19.023 55.605 19.0245 55.4255 cv
18.9613 55.4294 18.9019 55.4353 18.8886 55.4412 cv
18.5095 55.4471 18.1303 55.4471 17.7497 55.4471 cv
17.3691 55.452 16.99 55.452 16.6094 55.452 cv
16.4333 55.4294 16.2572 55.4059 16.0801 55.3823 cv
15.7515 55.3804 15.4155 55.3745 15.0878 55.3716 cv
14.8848 55.3716 14.5689 55.2793 14.3831 55.3716 cv
13.9288 55.3686 13.4688 55.3656 13.0116 55.3598 cv
12.9813 55.2882 12.9498 55.2185 12.915 55.1429 cv
12.8503 55.0174 12.7135 54.731 12.8056 54.5877 cv
12.8547 54.5525 12.9037 54.521 12.9552 54.4857 cv
13.3103 54.4897 13.6576 54.5034 13.9809 54.5289 cv
14.2143 54.5289 14.4493 54.527 14.6827 54.527 cv
14.8186 54.5328 14.9568 54.5406 15.0923 54.5495 cv
15.2193 54.5348 15.3449 54.521 15.4744 54.5034 cv
15.7657 54.5122 16.06 54.521 16.3499 54.5328 cv
16.8197 54.527 17.2956 54.4945 17.7846 54.5122 cv
18.1333 54.527 18.6223 54.5701 19.0274 54.5927 cv
19.029 54.4308 19.029 54.2611 19.0329 54.0972 cv
18.4968 54.1404 17.1455 54.0217 16.8786 54.1257 cv
16.5558 54.1227 16.2155 54.0826 15.8839 54.0796 cv
15.4861 54.0875 15.0849 54.0914 14.6856 54.0992 cv
14.4605 54.0737 14.2344 54.0541 14.0093 54.0335 cv
13.8754 54.0335 13.7371 54.0384 13.6012 54.0423 cv
13.4516 54.0335 13.2495 53.9874 13.1053 54.0482 cv
13.0175 54.056 12.9307 54.0649 12.8414 54.0737 cv
12.7135 54.0737 12.5692 54.0678 12.4765 53.9933 cv
12.3858 53.9148 12.0974 53.3008 12.2303 53.1967 cv
12.5226 52.9632 13.2554 53.2085 13.6375 53.081 cv
14.05 53.0849 14.4566 53.1339 14.8661 53.1477 cv
15.1585 53.1477 15.4513 53.1565 15.7427 53.1594 cv
15.8883 53.1771 16.0355 53.1948 16.1841 53.2144 cv
16.9208 53.2261 17.6173 53.1849 18.3178 53.2261 cv
18.459 53.2281 18.8053 53.2222 19.0373 53.2546 cv
19.0373 53.0908 19.0402 52.9122 19.0402 52.7357 cv
18.9293 52.7435 18.8112 52.7533 18.7636 52.7611 cv
18.409 52.7592 18.0568 52.7592 17.7066 52.7553 cv
17.5305 52.7553 17.3014 52.7219 17.1513 52.7788 cv
16.7231 52.7788 16.3077 52.7611 15.8609 52.7386 cv
15.7107 52.7269 15.4744 52.6729 15.339 52.7415 cv
15.0344 52.7435 14.7317 52.7475 14.4292 52.7494 cv
14.2026 52.7386 13.5521 52.6464 13.3765 52.7327 cv
13.1804 52.7121 12.9886 52.6896 12.7909 52.6729 cv
12.5879 52.6631 12.0959 52.6777 11.9576 52.5855 cv
11.8437 52.5081 11.8266 52.3138 11.7947 52.1961 cv
11.7731 52.1333 11.704 52.0176 11.7354 51.949 cv
11.8021 51.7979 12.5359 51.8528 12.7075 51.7901 cv
12.9641 51.8037 13.2137 51.8126 13.4688 51.8214 cv
13.9676 51.8302 14.4605 51.8332 14.9599 51.8352 cv
15.0878 51.8528 15.2149 51.8734 15.3434 51.8881 cv
15.6318 51.9058 15.9389 51.8734 16.2184 51.8734 cv
16.4244 51.8842 16.6266 51.8901 16.834 51.9019 cv
17.0243 51.8959 17.1802 51.8568 17.3603 51.8508 cv
17.7355 51.8332 18.1303 51.8214 18.5296 51.8243 cv
18.6483 51.8273 18.8631 51.8214 19.049 51.8302 cv
19.049 51.6831 19.0505 51.5359 19.0505 51.3888 cv
18.8498 51.3947 18.5762 51.3663 18.4767 51.4153 cv
18.3569 51.4153 18.2211 51.3976 18.1245 51.4408 cv
17.9661 51.4408 17.7237 51.4006 17.5942 51.4663 cv
17.1989 51.4643 16.811 51.4643 16.3999 51.4585 cv
16.1983 51.4585 15.9241 51.4093 15.7554 51.4869 cv
15.519 51.481 15.284 51.481 15.0506 51.4761 cv
14.7994 51.4643 14.3453 51.3829 14.1148 51.4761 cv
13.7959 51.4761 13.5089 51.427 13.2093 51.4153 cv
12.8802 51.4006 11.756 51.4761 11.5785 51.3368 cv
11.4156 51.2132 11.3665 50.7315 11.3406 50.5236 cv
11.5137 50.5236 11.7138 50.5186 11.8683 50.4696 cv
12.2876 50.4834 12.7305 50.497 13.1514 50.5412 cv
13.2828 50.552 13.3922 50.5874 13.532 50.5952 cv
13.8955 50.5952 14.2545 50.5952 14.6179 50.5991 cv
14.899 50.5814 15.1977 50.5295 15.4916 50.5324 cv
15.7107 50.5462 15.9256 50.5637 16.136 50.5785 cv
16.3038 50.5697 16.4706 50.5637 16.6383 50.552 cv
16.9973 50.5559 17.3588 50.5579 17.7193 50.5618 cv
17.9445 50.5579 18.6998 50.503 19.0574 50.5579 cv
19.0574 50.397 19.0588 50.2411 19.0603 50.0773 cv
18.9623 50.0851 18.8008 50.0909 18.7474 50.0968 cv
18.508 50.0939 18.0916 50.0448 17.8969 50.1224 cv
17.6908 50.1224 17.4873 50.1203 17.2842 50.1203 cv
17.2048 50.1283 17.1253 50.137 17.0463 50.1459 cv
16.7535 50.143 16.188 50.0792 15.9634 50.2008 cv
15.7902 50.195 15.6127 50.195 15.4385 50.192 cv
15.1428 50.1695 14.6092 50.0507 14.3251 50.1596 cv
14.0455 50.1596 13.5797 50.0596 13.3333 50.1547 cv
13.0636 50.1547 12.4535 50.0998 12.2504 50.1773 cv
12.0037 50.1773 11.3881 50.2263 11.2307 50.1028 cv
11.1331 50.0242 11.1271 49.8496 11.0997 49.73 cv
11.0781 49.6378 11.0104 49.4573 11.0551 49.3533 cv
11.0551 49.3042 11.0708 49.3121 11.114 49.3003 cv
11.3116 49.2512 11.5368 49.2728 11.757 49.263 cv
12.2876 49.2405 12.8704 49.2552 13.4242 49.2512 cv
13.636 49.2434 13.8881 49.2866 14.0687 49.2238 cv
15.2959 49.3042 16.5544 49.2669 17.8434 49.2747 cv
18.0484 49.2747 18.7302 49.2434 19.0647 49.2924 cv
19.0647 49.1335 19.0676 48.9746 19.0676 48.8138 cv
18.8685 48.8167 18.6022 48.8167 18.5487 48.8373 cv
18.1779 48.8373 17.8091 48.8373 17.4353 48.8334 cv
17.2479 48.8314 17.0228 48.8049 16.8786 48.8922 cv
16.7649 48.8883 16.6019 48.8432 16.501 48.8883 cv
16.1782 48.8824 15.2483 48.8138 15.0359 48.9373 cv
14.7607 48.9354 14.5415 48.8805 14.2746 48.8766 cv
13.3565 48.854 12.3887 48.8657 11.4975 48.8049 cv
11.3406 48.7902 11.0997 48.848 10.9859 48.7451 cv
10.8501 48.6205 10.8863 48.1849 10.8879 47.9779 cv
10.9138 47.9779 li
10.9138 47.9367 10.9035 47.9456 10.9428 47.9456 cv
11.5122 47.9396 12.1062 47.925 12.7002 47.9289 cv
13.0189 47.9289 13.4339 47.9888 13.7223 47.9024 cv
14.1711 47.9309 14.6783 47.9662 15.1325 47.9682 cv
15.3635 47.9662 15.594 47.9544 15.829 47.9515 cv
16.1115 47.974 16.396 48.0005 16.6771 48.0231 cv
16.8286 48.0152 16.9507 47.9544 17.1156 47.9544 cv
17.3818 47.9544 17.6433 47.9573 17.9081 47.9603 cv
17.9994 47.9662 18.0842 47.9721 18.172 47.9779 cv
18.406 47.9662 18.791 47.9367 19.0751 47.9858 cv
19.0751 47.8268 19.0765 47.6718 19.0765 47.5129 cv
18.9293 47.4993 18.7606 47.4874 18.6713 47.5248 cv
18.5124 47.5218 18.276 47.4835 18.1461 47.5502 cv
17.8031 47.5483 17.4613 47.5444 17.1209 47.5424 cv
16.9611 47.5424 16.7605 47.5159 16.6235 47.5709 cv
16.4578 47.5679 15.8148 47.5159 15.7152 47.562 cv
15.5421 47.562 15.2713 47.5218 15.1325 47.5915 cv
14.9682 47.5915 14.7823 47.5267 14.6351 47.5915 cv
14.1236 47.5856 13.6159 47.5248 13.0822 47.5189 cv
12.9268 47.5306 12.7708 47.5365 12.6153 47.5483 cv
12.4236 47.5444 11.9375 47.4993 11.7962 47.5738 cv
11.5956 47.5709 10.8863 47.5326 10.7839 47.4071 cv
10.7191 47.3256 10.6917 47.1412 10.6715 47.0343 cv
10.6485 46.9165 10.6337 46.7223 10.7519 46.6712 cv
10.9726 46.5693 11.3577 46.6301 11.6246 46.634 cv
12.4005 46.6399 13.2137 46.6537 13.9676 46.6222 cv
14.1741 46.6105 14.4203 46.6477 14.6092 46.5909 cv
14.8632 46.5987 15.1154 46.6016 15.3694 46.6045 cv
15.466 46.6183 15.5651 46.636 15.6617 46.6537 cv
16.0237 46.6566 16.3842 46.6595 16.7447 46.6625 cv
16.8786 46.6733 17.0189 46.6772 17.1557 46.6831 cv
17.5825 46.6733 18.0509 46.6712 18.4997 46.6733 cv
18.6409 46.6733 18.8901 46.6673 19.0848 46.6909 cv
19.0848 46.5359 19.0848 46.3828 19.0863 46.2269 cv
18.7503 46.2494 18.1436 46.2004 18.0078 46.2612 cv
17.7483 46.2612 17.2495 46.2004 17.0419 46.2848 cv
16.8197 46.2848 16.2994 46.1887 16.1335 46.2494 cv
15.9487 46.2377 15.7613 46.2299 15.5783 46.2181 cv
15.1585 46.2151 14.7377 46.2122 14.3207 46.2122 cv
14.1221 46.2103 13.8391 46.1611 13.6762 46.2358 cv
13.4138 46.2358 12.9537 46.1778 12.7365 46.2612 cv
12.4015 46.2612 12.1032 46.2043 11.7731 46.1926 cv
11.7079 46.1945 11.6348 46.1945 11.571 46.1945 cv
11.4441 46.1945 11.2901 46.1778 11.1875 46.2239 cv
10.5332 46.221 10.517 46.0886 10.52 45.4598 cv
10.5474 45.4598 li
10.5474 45.4078 10.6485 45.4215 10.696 45.4196 cv
10.83 45.4078 10.9511 45.3725 11.1056 45.3725 cv
11.4862 45.3705 12.0772 45.451 12.3946 45.3215 cv
12.5663 45.3705 12.9268 45.3352 13.1225 45.3352 cv
13.3981 45.3558 13.6709 45.3705 13.9431 45.3882 cv
14.1192 45.3882 14.2938 45.3843 14.4709 45.3822 cv
14.5675 45.3705 14.6626 45.3617 14.7651 45.3499 cv
15.3591 45.347 15.9516 45.345 16.5471 45.345 cv
16.7128 45.3617 16.8786 45.3705 17.0449 45.3882 cv
17.2107 45.3725 17.3764 45.3647 17.5437 45.3528 cv
17.7095 45.3705 17.8768 45.3843 18.0396 45.4019 cv
18.2878 45.4215 18.7925 45.3558 19.0921 45.396 cv
19.0936 45.241 19.0936 45.0899 19.0966 44.9349 cv
18.9264 44.938 18.6984 44.9409 18.5703 44.9428 cv
18.2976 44.9468 18.0253 44.9428 17.7527 44.9409 cv
17.6158 44.9409 17.4515 44.9232 17.3402 44.9693 cv
17.1356 44.9644 16.9321 44.9644 16.7231 44.9585 cv
16.5558 44.9409 16.2994 44.8918 16.1375 44.9644 cv
15.9069 44.9604 15.5783 44.9114 15.3807 44.987 cv
14.1995 44.9841 13.0189 44.9752 11.8364 44.9693 cv
11.6246 44.9644 11.4097 44.9644 11.1948 44.9585 cv
11.088 44.9409 10.9801 44.9232 10.8717 44.9055 cv
10.7593 44.8997 10.6254 44.9114 10.5401 44.8486 cv
10.3973 44.7388 10.389 44.1737 10.4405 43.9952 cv
10.6337 43.9775 10.8343 43.9599 11.0262 43.9363 cv
11.3287 43.9363 11.9516 44.003 12.1954 43.9137 cv
12.3323 43.9197 12.4682 43.9226 12.608 43.9226 cv
12.7002 43.9403 12.8027 43.954 12.8964 43.9716 cv
13.1416 43.9716 13.3864 43.9775 13.6301 43.9775 cv
13.8233 43.9716 13.9994 43.9256 14.2187 43.9256 cv
14.4001 43.9314 14.5861 43.9343 14.771 43.9363 cv
14.9138 43.952 15.0477 43.9893 15.209 43.9893 cv
16.4852 44.0177 17.8552 44.001 19.1025 44.0403 cv
19.1025 43.8932 19.1064 43.746 19.1079 43.6028 cv
18.9121 43.6087 18.5041 43.5714 18.4306 43.6028 cv
17.9935 43.5969 17.5535 43.594 17.114 43.594 cv
16.9439 43.591 16.7275 43.5616 16.5878 43.6165 cv
16.3999 43.6165 16.1767 43.5449 16.0036 43.6146 cv
15.3517 43.6146 14.7435 43.5616 14.099 43.5881 cv
13.9877 43.594 13.8754 43.5616 13.7787 43.6028 cv
13.1921 43.6028 12.6497 43.5734 12.0542 43.5616 cv
11.8727 43.5597 11.6348 43.4753 11.4662 43.5302 cv
11.3763 43.542 11.2901 43.5508 11.2037 43.5597 cv
10.9599 43.5557 10.6337 43.5792 10.4537 43.4498 cv
10.3252 43.3546 10.3237 42.7661 10.4263 42.6572 cv
10.4826 42.5934 10.5793 42.5904 10.6514 42.5591 cv
11.5338 42.5669 12.452 42.6101 13.2858 42.6278 cv
13.5119 42.6247 13.7356 42.6198 13.9588 42.6081 cv
14.7057 42.6247 15.4744 42.6365 16.2111 42.6395 cv
16.3552 42.6307 16.5054 42.6198 16.6511 42.6081 cv
16.7707 42.6247 16.8874 42.6395 16.9997 42.6532 cv
17.5103 42.6591 18.0151 42.6689 18.5228 42.6768 cv
18.6625 42.6768 18.9451 42.6474 19.1152 42.6885 cv
19.1168 42.5414 19.1182 42.3972 19.1182 42.2501 cv
18.948 42.2731 18.713 42.1839 18.4968 42.2819 cv
17.503 42.279 16.5515 42.2441 15.571 42.2388 cv
15.365 42.2358 14.8313 42.1809 14.6931 42.2329 cv
13.5423 42.227 12.3902 42.2181 11.238 42.2128 cv
10.9599 42.1922 10.6715 42.172 10.3914 42.149 cv
10.3689 42.0539 10.3414 41.9528 10.3184 41.8552 cv
10.2953 41.6619 10.3385 41.4368 10.3958 41.2725 cv
11.6015 41.2813 12.8027 41.3328 13.9936 41.3765 cv
14.1437 41.3735 14.2878 41.3677 14.4321 41.3618 cv
14.7823 41.3735 15.1501 41.431 15.489 41.431 cv
15.6244 41.4196 15.7599 41.405 15.8982 41.3907 cv
16.2557 41.3878 16.6019 41.3819 16.9507 41.3936 cv
17.2048 41.405 18.6336 41.431 19.1241 41.4972 cv
19.127 41.3299 19.127 41.1602 19.127 40.9929 cv
19.0171 41.0101 18.9034 41.0213 18.8239 41.0244 cv
18.6307 41.0213 18.4345 41.0184 18.2417 41.0184 cv
18.1029 41.013 17.8969 40.964 17.7728 41.0213 cv
17.3588 41.0184 16.9208 40.9871 16.4838 40.9841 cv
16.3455 40.9841 16.1566 40.9611 16.0467 41.013 cv
15.6475 41.0101 15.2522 40.9841 14.8745 40.9752 cv
14.2805 40.9723 13.6865 40.9694 13.0881 40.964 cv
12.9037 40.9611 12.4015 40.8743 12.272 40.9351 cv
12.067 40.9321 11.7731 40.8889 11.5985 40.9581 cv
11.1948 40.9551 10.7941 40.86 10.3973 40.834 cv
10.3989 40.6266 10.3713 40.0845 10.5631 40.0207 cv
10.7132 40.0095 10.8677 40.0006 11.0187 39.9918 cv
11.1458 39.9865 11.2782 39.9918 11.3994 39.9605 cv
11.5509 40.0006 11.7093 39.9659 11.8683 39.9634 cv
12.2401 39.9659 12.6094 39.9659 12.9813 39.9688 cv
13.2726 39.9688 13.5497 39.9977 13.8264 40.0037 cv
14.2143 40.0095 14.5675 39.9717 14.9393 39.9806 cv
15.594 39.9918 16.289 40.0178 16.9611 40.0207 cv
17.3058 40.0267 18.6768 39.9688 19.1382 40.0668 cv
19.1382 39.9345 19.1382 39.8016 19.1398 39.6721 cv
19.0535 39.6632 18.9652 39.6603 18.9205 39.6544 cv
18.7665 39.649 18.6076 39.6461 18.4551 39.6372 cv
18.328 39.623 18.1029 39.5651 17.9832 39.6171 cv
17.7409 39.6171 17.4255 39.545 17.2234 39.6401 cv
16.8286 39.6372 16.4534 39.594 16.0801 39.5799 cv
15.9344 39.5853 15.7858 39.5882 15.6387 39.5911 cv
15.4788 39.5853 15.2639 39.5392 15.1168 39.5999 cv
14.9265 39.5999 14.5675 39.5362 14.4159 39.597 cv
14.1304 39.594 13.8479 39.5911 13.5669 39.5911 cv
13.407 39.5911 13.2034 39.5651 13.0695 39.623 cv
12.7365 39.6142 12.4074 39.6112 12.0743 39.6083 cv
11.9419 39.597 11.7354 39.5392 11.6074 39.5799 cv
11.2841 39.5799 10.8677 39.6313 10.5793 39.5479 cv
10.5347 39.5479 10.543 39.5278 10.5371 39.4871 cv
10.5042 39.2478 10.5244 38.7377 10.7912 38.7117 cv
11.2484 38.6597 11.7079 38.7028 12.1665 38.7058 cv
12.3814 38.697 12.5962 38.6887 12.811 38.6798 cv
13.3333 38.6916 13.8754 38.6856 14.4203 38.6887 cv
14.7479 38.6887 15.0403 38.7028 15.3576 38.697 cv
15.489 38.6916 15.6171 38.7028 15.7383 38.6686 cv
15.9702 38.6887 16.2057 38.7087 16.4391 38.7288 cv
17.2985 38.7348 18.2746 38.7377 19.1442 38.746 cv
19.1471 38.6077 19.1471 38.4694 19.1501 38.3281 cv
18.9436 38.3453 18.5228 38.2849 18.432 38.3281 cv
17.5913 38.3252 16.7521 38.3222 15.9173 38.3164 cv
15.6014 38.3021 14.9437 38.1638 14.6538 38.282 cv
14.511 38.282 14.3207 38.2211 14.1898 38.2791 cv
14.1289 38.2904 14.0716 38.2992 14.0093 38.308 cv
13.6419 38.3021 13.2697 38.2992 12.8993 38.2992 cv
12.4996 38.2673 12.0831 38.2211 11.6707 38.2359 cv
11.5681 38.2359 11.4386 38.2271 11.3489 38.2619 cv
11.1056 38.2619 10.83 38.305 10.6195 38.2011 cv
10.5631 38.2011 10.5979 38.0947 10.6024 38.0539 cv
10.7132 37.48 10.6872 37.4138 11.3243 37.3908 cv
11.4617 37.3791 11.6088 37.3937 11.7354 37.356 cv
11.9174 37.3937 12.1219 37.3791 12.321 37.3966 cv
12.7075 37.4168 13.098 37.4369 13.4904 37.4541 cv
13.6865 37.4487 13.8827 37.4398 14.0745 37.431 cv
15.7599 37.4427 17.5379 37.408 19.1569 37.506 cv
19.1584 37.3535 19.1584 37.2035 19.1614 37.0475 cv
19.0127 37.0446 18.8543 37.0362 18.817 37.0475 cv
18.38 37.0446 17.9401 37.0446 17.503 37.0391 cv
17.3014 37.0391 17.0257 36.9954 16.8571 37.0652 cv
16.7128 37.0652 16.3798 37.016 16.2749 37.0621 cv
16.0267 37.0621 15.7152 36.9699 15.4832 37.0563 cv
14.9942 37.0362 14.5056 37.0102 14.0195 36.9901 cv
13.894 36.9901 13.714 36.9729 13.6086 37.019 cv
13.3663 37.019 12.8689 36.915 12.6757 37.016 cv
12.0685 37.0102 11.4617 37.0072 10.8603 37.0043 cv
10.8603 36.9729 li
10.8113 36.9729 10.8343 36.9238 10.8343 36.886 cv
10.8343 36.7016 10.8559 36.2519 11.0187 36.1852 cv
11.2282 36.1047 11.5235 36.1278 11.7731 36.1278 cv
12.1248 36.1307 12.4942 36.1278 12.8258 36.1107 cv
12.9336 36.0988 13.0391 36.0901 13.1485 36.0758 cv
13.9921 36.1621 14.9393 36.1449 15.8393 36.1508 cv
16.083 36.1651 16.3239 36.1709 16.5686 36.1852 cv
16.9439 36.1769 17.3112 36.1538 17.7139 36.1621 cv
17.888 36.1739 18.0626 36.1852 18.2387 36.194 cv
18.4767 36.1999 18.8803 36.168 19.1658 36.2259 cv
19.1673 36.067 19.1673 35.9145 19.1702 35.7556 cv
19.0505 35.7585 18.9308 35.7673 18.8847 35.7874 cv
18.6984 35.7786 18.5124 35.7702 18.328 35.7585 cv
17.8203 35.7384 17.3318 35.7501 16.8056 35.7471 cv
16.6481 35.7471 16.4146 35.6864 16.2793 35.7471 cv
15.1918 35.7413 14.1364 35.7064 13.0317 35.6981 cv
12.5879 35.6981 12.0959 35.6981 11.6564 35.6633 cv
11.4788 35.652 11.3116 35.655 11.1615 35.597 cv
11.163 35.45 11.2454 35.0463 11.3302 34.9481 cv
11.3925 34.8991 11.4558 34.8589 11.5152 34.8128 cv
12.1709 34.8157 12.8341 34.8559 13.4747 34.879 cv
14.2344 34.879 li
14.3889 34.8673 14.5356 34.827 14.7014 34.8329 cv
15.5783 34.8472 16.4303 34.8962 17.3387 34.902 cv
17.6129 34.902 17.8851 34.902 18.1592 34.908 cv
18.3845 34.902 18.8631 34.8559 19.1785 34.902 cv
19.1814 34.7608 19.1814 34.6196 19.1829 34.4783 cv
18.9613 34.4812 18.7042 34.4836 18.5385 34.4867 cv
18.3942 34.4867 18.2024 34.4351 18.073 34.4984 cv
17.5074 34.4955 16.9409 34.4896 16.3744 34.4867 cv
16.1566 34.4753 15.8766 34.3744 15.6735 34.4836 cv
14.9755 34.4812 14.3109 34.4665 13.6561 34.4234 cv
13.4747 34.4116 13.0131 34.3655 12.863 34.4406 cv
12.8056 34.4464 12.7448 34.4581 12.6888 34.4695 cv
12.2764 34.4636 11.9115 34.3713 11.5152 34.3424 cv
11.5206 34.1522 11.6692 33.6591 11.806 33.5523 cv
11.8757 33.4919 11.9938 33.5007 12.0787 33.466 cv
12.2155 33.4861 12.3529 33.5032 12.4882 33.5208 cv
12.6526 33.515 12.8198 33.5091 12.9842 33.5007 cv
13.1877 33.5121 13.3966 33.5238 13.5997 33.5351 cv
13.8435 33.5179 14.0887 33.5007 14.3281 33.483 cv
14.8745 33.4949 15.4439 33.564 15.9991 33.5699 cv
16.6353 33.5728 17.3073 33.5582 17.9601 33.5611 cv
18.1303 33.5611 18.7881 33.5611 19.1888 33.6042 cv
19.1918 33.4517 19.1932 33.3045 19.1932 33.1545 cv
18.8876 33.1485 18.4403 33.1344 18.227 33.2383 cv
18.0367 33.2383 17.8724 33.1893 17.6992 33.1834 cv
17.5045 33.1834 17.3073 33.1775 17.114 33.1775 cv
17.0145 33.1893 16.9194 33.1946 16.8227 33.2006 cv
16.5975 33.1893 16.3729 33.1746 16.1478 33.1604 cv
15.8565 33.1143 li
15.1703 33.0853 14.511 33.0735 13.8077 33.0682 cv
13.5654 33.0682 13.1269 33.0132 12.9307 33.0941 cv
12.7305 33.0912 12.0875 33.0941 11.9605 33.0132 cv
11.8437 32.944 12.0399 32.3761 12.116 32.301 cv
12.1969 32.226 12.3368 32.2201 12.4377 32.1828 cv
12.8027 32.1828 13.1441 32.252 13.4904 32.2721 cv
13.8611 32.275 14.23 32.275 14.6038 32.2779 cv
14.7259 32.2633 14.8559 32.249 14.9829 32.2343 cv
15.1962 32.2372 15.3924 32.2863 15.6244 32.2863 cv
15.881 32.2809 16.1335 32.2721 16.3886 32.2633 cv
16.7113 32.2721 17.0704 32.3123 17.4108 32.3065 cv
17.9287 32.2893 18.6336 32.2834 19.2006 32.3211 cv
19.2015 32.1681 19.2045 32.018 19.2045 31.8655 cv
19.0373 31.8626 18.742 31.8483 18.6424 31.8944 cv
18.3668 31.8915 17.9156 31.7816 17.6776 31.8915 cv
17.5236 31.8885 17.3141 31.8365 17.1802 31.8885 cv
17.0719 31.8856 16.9439 31.8767 16.8571 31.9174 cv
16.4578 31.8856 16.0571 31.8566 15.6588 31.8306 cv
15.5018 31.8306 15.3546 31.8797 15.1904 31.8655 cv
14.9755 31.8512 14.7435 31.8483 14.5199 31.8395 cv
14.4159 31.8365 14.2923 31.8076 14.1942 31.8424 cv
14.0687 31.8424 13.9186 31.8223 13.8136 31.8684 cv
13.4545 31.8655 12.7135 31.9258 12.4421 31.8022 cv
12.3946 31.8022 12.403 31.7904 12.4074 31.7502 cv
12.4275 31.5221 12.5746 31.0758 12.7365 30.9277 cv
12.7365 30.8972 li
13.2858 30.9002 13.8106 30.962 14.3453 30.9547 cv
14.827 30.9537 15.365 30.9345 15.8652 30.9433 cv
16.0207 30.9649 16.1782 30.9806 16.3322 31.0008 cv
16.5402 31.0125 16.7521 30.9806 16.9492 30.9806 cv
17.1082 30.9924 17.2636 31.0008 17.4196 31.0095 cv
17.8307 31.0051 18.2559 31.0095 18.6768 31.0154 cv
18.7979 31.0184 19.029 31.0051 19.2119 31.0243 cv
19.2134 30.8742 19.2134 30.73 19.2134 30.5799 cv
19.1108 30.577 19 30.574 18.9121 30.6103 cv
18.4173 30.6074 17.9156 30.6044 17.4225 30.6015 cv
17.0331 30.5902 16.6407 30.574 16.2518 30.5613 cv
16.0095 30.5455 15.5367 30.4705 15.3145 30.5598 cv
15.2032 30.5598 15.0506 30.5686 14.9613 30.6172 cv
14.6901 30.5902 14.4173 30.5583 14.1437 30.5294 cv
13.7326 30.5279 13.326 30.521 12.915 30.5195 cv
12.915 30.4906 li
12.8846 30.4906 li
12.886 30.3116 13.0435 30.1385 13.1082 29.9859 cv
13.1485 29.8908 13.1455 29.7755 13.2108 29.6916 cv
13.2554 29.6313 13.326 29.6152 13.3864 29.5837 cv
13.7645 29.5881 14.1117 29.6166 14.4998 29.6196 cv
14.7057 29.6136 14.9093 29.6038 15.1139 29.5936 cv
15.6171 29.6053 16.1851 29.6499 16.6957 29.6543 cv
17.0145 29.6558 17.3402 29.6166 17.6619 29.6112 cv
18.1882 29.5936 18.7159 29.6225 19.2221 29.6715 cv
19.2246 29.5072 19.2275 29.3399 19.2275 29.1786 cv
18.974 29.2806 18.0078 29.2359 17.7801 29.2247 cv
17.5712 29.2085 17.2711 29.1349 17.0748 29.2247 cv
16.8457 29.2232 16.6094 29.2188 16.3744 29.2159 cv
16.24 29.2129 16.0668 29.1668 15.9344 29.2188 cv
15.3807 29.2159 14.7867 29.2247 14.2099 29.207 cv
13.9833 29.1958 13.7728 29.1497 13.535 29.1437 cv
13.5365 28.8181 13.7052 28.5208 13.8636 28.2673 cv
14.0828 28.2702 14.2746 28.3305 14.4767 28.3192 cv
15.0074 28.2845 15.5553 28.2815 16.1189 28.2845 cv
16.2547 28.2874 16.3916 28.2947 16.5255 28.3046 cv
17.114 28.2874 17.7645 28.2726 18.3697 28.2962 cv
18.6669 28.309 18.9436 28.3796 19.2335 28.4056 cv
19.2364 28.2471 19.2364 28.0882 19.2364 27.9342 cv
19.1501 27.9371 19.0574 27.9425 19.0142 27.947 cv
18.7881 27.947 18.4982 27.8577 18.2819 27.944 cv
17.8523 27.9425 17.4108 27.924 16.9684 27.9038 cv
16.7879 27.892 16.3499 27.8302 16.2057 27.9038 cv
16.1204 27.9126 16.0282 27.9209 15.9472 27.9313 cv
15.571 27.9269 15.2163 27.8867 14.8632 27.869 cv
14.641 27.8577 14.3787 27.8808 14.1898 27.8028 cv
14.1437 27.8028 14.1534 27.7856 14.1534 27.7448 cv
14.1534 27.5939 14.3629 27.1872 14.4709 27.0876 cv
14.5228 27.0386 14.5978 27.0185 14.6611 26.9851 cv
15.1555 26.988 15.62 27.0283 16.0958 27.0229 cv
16.6844 27.0185 17.3216 27.0013 17.9401 27.0028 cv
18.2211 27.0067 18.8876 26.9783 19.2437 27.0415 cv
19.2476 26.9018 19.2491 26.759 19.2491 26.6246 cv
19.1241 26.6319 18.9754 26.6305 18.9078 26.6305 cv
18.7115 26.6261 18.5169 26.6246 18.3236 26.6231 cv
18.1029 26.606 17.607 26.528 17.4137 26.6231 cv
17.1685 26.6207 16.8702 26.528 16.6511 26.6148 cv
16.3552 26.6148 15.829 26.4907 15.6014 26.6148 cv
15.4759 26.6119 15.2899 26.5888 15.1904 26.6408 cv
15.0403 26.6275 14.8976 26.6178 14.7504 26.606 cv
14.7504 26.4633 15.1154 25.8158 15.2379 25.7638 cv
15.4312 25.679 15.9113 25.7378 16.1596 25.7378 cv
16.6019 25.7378 17.0518 25.7147 17.4785 25.7206 cv
17.7296 25.7206 18.0038 25.7555 18.2647 25.7452 cv
18.3942 25.7295 18.5228 25.7118 18.6483 25.6976 cv
18.8195 25.6888 19.0186 25.7118 19.1746 25.6657 cv
19.2609 25.6657 li
19.2609 25.5304 19.2609 25.3861 19.2609 25.2537 cv
19.2134 25.265 19.1658 25.2768 19.1471 25.2836 cv
18.9597 25.2836 18.7361 25.2562 18.5934 25.3429 cv
18.4433 25.3371 18.3006 25.3312 18.1534 25.3288 cv
17.9572 25.2968 17.682 25.2262 17.48 25.3052 cv
17.4196 25.3155 17.3647 25.3229 17.3058 25.3341 cv
17.2264 25.3429 17.1499 25.3528 17.0704 25.3601 cv
16.9149 25.3513 16.755 25.34 16.6019 25.3312 cv
16.3038 25.3229 15.93 25.3749 15.6646 25.2939 cv
15.571 25.2939 15.6877 25.0977 15.7078 25.0673 cv
15.7961 24.9089 15.9894 24.5356 16.1566 24.4488 cv
16.2802 24.3796 16.4421 24.3915 16.576 24.3365 cv
16.8124 24.3394 17.0449 24.3394 17.2755 24.3423 cv
17.6241 24.3522 17.9906 24.3885 18.3353 24.3968 cv
18.4937 24.3796 18.6424 24.3699 18.8008 24.3566 cv
18.9161 24.3625 19.0996 24.3796 19.2697 24.3915 cv
19.2712 24.2457 19.2721 24.0912 19.2752 23.9471 cv
19.1673 23.9544 19.0603 23.9559 19.0358 23.9687 cv
18.7243 23.9559 18.4114 23.9471 18.1029 23.9357 cv
17.9847 23.9343 17.8478 23.9211 17.7497 23.9632 cv
17.5074 23.9603 17.0719 23.9068 16.8733 23.9848 cv
16.755 23.9745 16.6393 23.9672 16.5196 23.9544 cv
16.524 23.7783 16.6383 23.614 16.7231 23.4831 cv
16.7982 23.3732 16.8874 23.1971 17.0042 23.1309 cv
17.0935 23.0789 17.2323 23.1078 17.3461 23.1049 cv
17.6762 23.0965 18.0469 23.0848 18.4001 23.0877 cv
18.5776 23.0892 18.8008 23.1166 18.9539 23.0588 cv
19.0259 23.0603 19.1614 23.0603 19.284 23.0603 cv
19.284 22.916 19.2869 22.7763 19.2869 22.638 cv
19.0343 22.6178 18.6929 22.58 18.5198 22.6477 cv
18.4491 22.6595 18.3814 22.6698 18.3137 22.6753 cv
18.0754 22.6753 17.8091 22.6958 17.6129 22.6105 cv
17.5825 22.6105 li
17.5825 22.5761 17.5712 22.586 17.6129 22.586 cv
17.6129 22.3838 17.9028 22.2745 18.0023 22.1332 cv
18.099 21.9861 18.1926 21.8448 18.3178 21.7109 cv
18.4997 21.7177 19.0014 21.7138 19.2958 21.7555 cv
19.2958 21.6197 19.2982 21.4931 19.2982 21.3705 cv
19.0936 21.398 18.7881 21.3793 18.7013 21.3327 cv
18.6713 21.3327 li
18.6713 21.2738 li
18.6713 21.2738 19.2134 20.6162 19.3085 20.5009 cv
19.3085 20.4995 li
19.5866 20.0668 20.9247 18.9034 21.2106 18.719 cv
21.3817 18.563 21.6128 18.3438 21.8291 18.2717 cv
22.1749 18.1563 22.6305 18.2358 23.0185 18.2225 cv
23.5085 18.201 24.0594 18.2157 24.5714 18.2024 cv
25.0359 18.1912 25.5461 18.1593 26.0075 18.1623 cv
26.3087 18.1711 26.6103 18.1794 26.9159 18.1883 cv
27.9744 18.1765 29.0903 18.1681 30.162 18.2113 cv
30.2876 18.2255 30.4151 18.2417 30.5387 18.2603 cv
30.7574 18.2633 30.9703 18.2662 31.1822 18.2701 cv
31.8277 18.2633 32.4731 18.2113 33.1461 18.2225 cv
33.9132 18.2402 34.6842 18.2977 35.4867 18.2947 cv
35.9291 18.2878 36.3853 18.2358 36.8639 18.2471 cv
37.1484 18.2501 37.4036 18.3064 37.7076 18.3064 cv
38.4875 18.3123 39.2321 18.2574 40.0257 18.2633 cv
40.5436 18.2662 41.0586 18.2701 41.5746 18.2701 cv
41.7119 18.2819 41.8484 18.2878 41.9857 18.2977 cv
42.226 18.2947 42.483 18.2717 42.742 18.2775 cv
42.8823 18.2947 43.0166 18.3079 43.1559 18.3251 cv
43.2541 18.3147 43.3502 18.3006 43.4482 18.2878 cv
43.6269 18.2878 43.7975 18.2878 43.975 18.2849 cv
44.2213 18.2878 44.4214 18.3423 44.6745 18.3438 cv
44.8834 18.3251 45.0865 18.3079 45.2905 18.2922 cv
46.1263 18.2849 46.9955 18.2849 47.8057 18.2761 cv
48.0902 18.2878 48.3718 18.2947 48.6553 18.3079 cv
49.1752 18.2947 49.701 18.2501 50.2386 18.253 cv
50.7536 18.2574 51.2598 18.3147 51.7865 18.2947 cv
52.0612 18.2775 52.3359 18.2633 52.6047 18.2471 cv
52.7715 18.2574 52.9362 18.2633 53.1031 18.2701 cv
53.8554 18.2501 54.7187 18.2471 55.475 18.2775 cv
56.142 18.3006 56.8641 18.2402 57.5508 18.2761 cv
57.6979 18.2922 57.8451 18.3123 57.9921 18.328 cv
58.5553 18.3569 59.138 18.3899 59.7148 18.3668 cv
59.963 18.3324 60.2072 18.2977 60.4486 18.2633 cv
60.6664 18.2432 60.8801 18.2225 61.0921 18.2024 cv
61.559 18.2055 62.0151 18.2471 62.4978 18.2402 cv
62.7333 18.2388 62.9971 18.1735 63.2247 18.2388 cv
63.3257 18.2662 63.4169 18.3697 63.4994 18.4433 cv
63.9722 18.7964 64.9708 19.6587 65.6987 20.4318 cv
65.6987 20.4577 65.6987 20.5053 65.7026 20.5328 cv
65.7419 20.5298 65.7752 20.521 65.8232 20.521 cv
65.992 20.5863 66.358 20.9683 66.2873 21.0948 cv
66.2402 21.1802 66.0656 21.1758 65.992 21.216 cv
65.9401 21.216 65.8086 21.216 65.7085 21.2077 cv
65.7104 21.3416 65.7104 21.4902 65.7144 21.6546 cv
66.0077 21.6486 66.4207 21.6315 66.6552 21.7124 cv
66.8769 21.787 67.2722 22.3583 67.333 22.5688 cv
67.333 22.6002 li
67.2722 22.609 67.2133 22.6178 67.1544 22.6261 cv
67.0034 22.6261 66.0185 22.6031 65.7144 22.5628 cv
65.7164 22.7071 65.7164 22.8439 65.7164 23.0014 cv
66.3148 23.0014 67.0348 22.9926 67.5939 23.0303 cv
67.6931 23.0401 67.8244 23.0058 67.9039 23.0534 cv
68.0432 23.1367 68.1462 23.3359 68.2169 23.4742 cv
68.2728 23.5767 68.3895 23.6905 68.367 23.8259 cv
68.3512 23.8882 68.2845 23.8995 68.2267 23.9068 cv
67.7421 23.8995 67.2536 23.8926 66.7641 23.8823 cv
66.6375 23.8823 66.4619 23.8637 66.358 23.9098 cv
66.2481 23.9098 65.8773 23.8981 65.7203 23.8549 cv
65.7203 24.2874 li
66.358 24.2918 67.1398 24.2962 67.7598 24.3017 cv
68.0844 24.3017 68.5092 24.2501 68.7692 24.3939 cv
68.929 24.4822 69.2342 25.0605 69.3048 25.2419 cv
69.2577 25.2419 69.2243 25.2738 69.1871 25.3052 cv
69.0164 25.3028 68.4444 25.2493 68.3395 25.2968 cv
68.155 25.2968 67.9687 25.2939 67.7823 25.2939 cv
67.541 25.2783 67.2036 25.1541 66.9642 25.2591 cv
66.8946 25.2679 66.8298 25.2783 66.7572 25.288 cv
66.4599 25.288 66.0558 25.2419 65.7242 25.213 cv
65.7242 25.6388 li
66.6248 25.6485 67.6715 25.7006 68.5416 25.7064 cv
68.7829 25.7064 69.4892 25.6113 69.6737 25.7295 cv
69.7884 25.8016 69.8217 25.9281 69.8806 26.0439 cv
69.9326 26.113 69.9817 26.188 70.0346 26.2602 cv
70.0827 26.3539 70.1288 26.4446 70.1759 26.5383 cv
70.1759 26.5657 li
70.0984 26.5858 70.0189 26.603 69.9454 26.6231 cv
69.654 26.6207 69.0733 26.4589 68.832 26.5584 cv
68.7604 26.5687 68.6927 26.5756 68.6239 26.5873 cv
68.4473 26.5756 68.2728 26.5657 68.0982 26.5569 cv
67.6058 26.5525 67.1388 26.5496 66.6365 26.5457 cv
66.4648 26.5427 66.2481 26.5094 66.1117 26.5741 cv
66.0381 26.5741 65.8615 26.5756 65.7242 26.5569 cv
65.7242 26.6869 65.7262 26.8237 65.7262 26.9552 cv
65.8949 26.9434 66.1274 26.9523 66.2225 26.9523 cv
66.508 26.9537 66.7876 26.9537 67.0731 26.9552 cv
67.2388 26.9576 67.4272 26.9753 67.5704 26.9317 cv
68.2542 26.9375 68.9173 26.968 69.6167 26.9724 cv
69.81 26.9724 70.2308 26.9346 70.3711 27.0185 cv
70.5389 27.1107 70.5918 27.3456 70.6634 27.507 cv
70.7174 27.6414 70.7458 27.7164 70.6369 27.8258 cv
70.5271 27.8258 70.376 27.8115 70.2877 27.8547 cv
70.0915 27.8547 69.7737 27.7998 69.6109 27.8778 cv
69.5068 27.8778 69.3803 27.866 69.289 27.9053 cv
69.0595 27.9038 68.6515 27.793 68.472 27.8719 cv
68.157 27.8719 67.8471 27.869 67.535 27.869 cv
67.4389 27.869 67.3154 27.8621 67.2427 27.8964 cv
67.0025 27.8891 66.7572 27.8891 66.509 27.8891 cv
66.3942 27.8867 66.2382 27.8459 66.1284 27.8891 cv
66.0352 27.8891 65.8664 27.8867 65.7262 27.866 cv
65.7262 28.309 li
66.0136 28.2471 66.4992 28.2471 66.6836 28.2353 cv
66.7229 28.2295 66.7641 28.2226 66.7974 28.2153 cv
67.1888 28.2815 67.6352 28.2471 68.0589 28.2496 cv
68.8653 28.2569 69.6383 28.2496 70.4329 28.2845 cv
70.6251 28.2874 70.8233 28.1952 70.9979 28.2947 cv
71.1549 28.3781 71.3108 28.8829 71.3609 29.0574 cv
71.4944 29.0614 71.1255 29.1742 71.1255 29.1742 cv
70.9293 29.1742 70.4878 29.1252 70.3378 29.2016 cv
70.1346 29.1987 69.7365 29.1148 69.5765 29.1958 cv
69.2243 29.1958 68.8859 29.1466 68.5455 29.1727 cv
68.4729 29.1786 68.3944 29.184 68.316 29.1898 cv
68.0747 29.1869 67.4311 29.1006 67.2643 29.181 cv
67.0564 29.181 66.1754 29.2085 65.7262 29.1585 cv
65.7262 29.6053 li
65.9263 29.5881 66.2363 29.5793 66.2952 29.5563 cv
66.6649 29.5636 67.0368 29.566 67.4056 29.5675 cv
67.6931 29.5822 67.9726 29.6254 68.2884 29.6283 cv
68.5533 29.6283 68.7888 29.5793 69.0488 29.5764 cv
69.5706 29.5636 70.1307 29.6038 70.6262 29.6053 cv
70.8007 29.5994 70.9793 29.5936 71.1549 29.5852 cv
71.2902 29.5852 71.507 29.5563 71.612 29.6313 cv
71.6748 29.6803 71.9946 30.4014 71.8995 30.4788 cv
71.6984 30.6378 71.148 30.4283 70.9135 30.521 cv
70.7919 30.5195 70.6056 30.4989 70.5035 30.5455 cv
70.424 30.5554 70.3476 30.5656 70.273 30.574 cv
70.1033 30.574 69.9355 30.5799 69.7727 30.5656 cv
69.5618 30.5455 69.1037 30.4053 68.8957 30.5108 cv
68.7829 30.5108 68.6593 30.5152 68.5729 30.5656 cv
68.2042 30.5656 67.8314 30.5613 67.4596 30.5583 cv
67.3154 30.5583 67.1093 30.5279 66.9926 30.5858 cv
66.8111 30.5858 66.5453 30.4989 66.3815 30.5799 cv
66.2481 30.5799 65.9224 30.5902 65.7262 30.551 cv
65.7262 30.9723 li
65.9321 30.9678 66.2618 30.9649 66.4638 30.962 cv
66.6336 30.9537 66.7935 30.9477 66.9603 30.9375 cv
67.1369 30.9477 67.3124 30.959 67.488 30.9664 cv
68.1923 30.9723 68.8378 30.9173 69.5648 30.9247 cv
70.0189 30.9261 70.6702 30.9998 71.0607 30.8742 cv
71.3383 30.9277 72.0358 30.7628 72.1976 30.9968 cv
72.3017 31.1538 72.3301 31.3489 72.3948 31.5281 cv
72.4979 31.7993 72.4557 31.7271 72.2536 31.8424 cv
71.7955 31.8424 71.3383 31.8395 70.8802 31.8365 cv
70.686 31.8277 70.3799 31.7472 70.2033 31.8365 cv
69.9424 31.8306 69.6756 31.8277 69.4146 31.8277 cv
69.3028 31.8223 69.14 31.7845 69.034 31.8277 cv
68.8712 31.8277 68.6132 31.7845 68.4768 31.8512 cv
68.2542 31.8512 68.0295 31.8483 67.8039 31.8454 cv
67.6999 31.8424 67.5508 31.8022 67.4547 31.8454 cv
67.1702 31.8454 66.7101 31.7414 66.4599 31.8424 cv
66.2618 31.8395 65.944 31.8512 65.7262 31.8105 cv
65.7262 32.2779 li
66.0224 32.2 66.8092 32.252 67.0731 32.2573 cv
67.5175 32.2573 67.9549 32.2289 68.3895 32.2289 cv
68.6711 32.2343 68.9722 32.2721 69.2361 32.2573 cv
69.4598 32.2432 69.6844 32.2289 69.9081 32.2172 cv
70.1052 32.2372 70.3005 32.2573 70.4938 32.2721 cv
70.9469 32.2809 71.4197 32.2633 71.8435 32.2059 cv
71.9377 32.1911 72.0358 32.1799 72.1339 32.1651 cv
72.3301 32.171 72.5852 32.171 72.7225 32.2863 cv
72.8353 32.3815 73.0472 32.9671 72.85 33.0475 cv
72.6548 33.1172 72.3478 33.0735 72.128 33.0735 cv
71.5237 33.0682 70.9195 33.0652 70.3162 33.0623 cv
70.1346 33.0623 69.8443 33.0132 69.7021 33.0883 cv
69.5559 33.0853 69.3518 33.0563 69.2322 33.1143 cv
69.0046 33.1143 68.3306 33.0623 68.1786 33.1373 cv
68.0079 33.1373 67.7666 33.0995 67.6224 33.1633 cv
67.4135 33.1633 67.127 33.1084 66.9485 33.1893 cv
66.5453 33.1893 66.1284 33.1196 65.7262 33.1054 cv
65.7262 33.5493 li
65.9204 33.5351 66.1548 33.5238 66.302 33.5121 cv
66.6483 33.5121 66.9867 33.5121 67.3291 33.5121 cv
67.9667 33.5179 68.6416 33.5032 69.2577 33.4978 cv
69.3754 33.5007 69.4892 33.5061 69.6109 33.5091 cv
69.7109 33.5007 69.8071 33.4861 69.9071 33.4718 cv
70.2367 33.4747 70.5663 33.4747 70.8989 33.4747 cv
71.0558 33.483 71.2118 33.4949 71.3629 33.5007 cv
71.563 33.4978 71.7581 33.489 71.9514 33.483 cv
72.1731 33.483 72.3948 33.5238 72.595 33.4541 cv
72.7225 33.463 72.9246 33.46 73.0265 33.5262 cv
73.2188 33.6445 73.2758 34.1178 73.3229 34.34 cv
73.2904 34.34 li
73.2904 34.3885 73.057 34.3713 73.0011 34.3655 cv
73.0011 34.3744 72.9991 34.3861 72.9991 34.3944 cv
72.9638 34.4033 72.9187 34.4116 72.8834 34.4234 cv
72.7686 34.4204 72.6244 34.4091 72.5302 34.4494 cv
72.0848 34.4464 71.6669 34.4174 71.2177 34.4116 cv
71.0685 34.4116 70.8665 34.3861 70.7458 34.4406 cv
70.6408 34.4406 70.5123 34.4292 70.423 34.4695 cv
70.0346 34.4636 69.6472 34.4606 69.2548 34.4581 cv
69.0458 34.4435 68.8084 34.3483 68.6083 34.4606 cv
68.414 34.4581 67.9942 34.4091 67.8471 34.4812 cv
67.5116 34.4812 67.1544 34.4523 66.7935 34.4464 cv
66.56 34.4464 66.0499 34.4636 65.7262 34.4234 cv
65.7262 34.5675 65.7262 34.7118 65.7242 34.8559 cv
65.8184 34.8413 65.9253 34.8329 65.9743 34.83 cv
66.1921 34.8098 66.407 34.8442 66.6169 34.8559 cv
67.0191 34.8589 67.4135 34.8589 67.8186 34.8618 cv
68.1139 34.8442 68.4003 34.83 68.6956 34.8157 cv
68.929 34.804 69.1772 34.8358 69.4009 34.8358 cv
69.7109 34.83 70.0248 34.8241 70.3348 34.8212 cv
70.6212 34.83 70.9351 34.8559 71.2402 34.8559 cv
71.4649 34.8442 71.6905 34.8329 71.9151 34.827 cv
72.1869 34.83 72.5479 34.8819 72.7912 34.804 cv
73.008 34.804 73.2758 34.804 73.4425 34.8991 cv
73.5798 34.9771 73.6544 35.4558 73.6671 35.629 cv
73.623 35.626 73.5798 35.655 73.5504 35.6834 cv
73.3847 35.6834 73.1609 35.6491 73.0226 35.7095 cv
72.8264 35.7095 72.5401 35.6633 72.3781 35.7384 cv
71.6267 35.7325 70.8753 35.7295 70.1258 35.7241 cv
69.8433 35.727 69.5618 35.7325 69.2763 35.7325 cv
69.0644 35.7124 68.3454 35.6633 68.1933 35.7413 cv
67.6449 35.7384 67.1005 35.7384 66.556 35.7325 cv
66.3991 35.7325 66.1774 35.6981 66.0577 35.7585 cv
65.992 35.7585 65.8479 35.7585 65.7242 35.7525 cv
65.7242 36.1823 li
65.8537 36.1739 66.0793 36.1651 66.204 36.1592 cv
66.7101 36.1018 67.2427 36.116 67.7823 36.1219 cv
68.5269 36.1248 69.2499 36.0988 69.9757 36.1047 cv
70.4074 36.1076 70.9586 36.2288 71.354 36.0817 cv
71.7336 36.0846 73.7309 36.067 73.8643 36.2431 cv
73.9977 36.4162 73.9585 36.7477 73.9507 36.9753 cv
73.9213 36.9753 li
73.9213 37.0274 73.7603 37.0102 73.7162 37.0332 cv
73.2463 37.0274 72.7774 37.0215 72.3144 37.019 cv
72.1829 37.016 71.9946 36.9523 71.875 36.993 cv
71.6984 36.9954 71.5228 37.0043 71.3442 37.0072 cv
71.0941 37.0072 70.5653 36.9263 70.3485 37.016 cv
70.1739 37.0102 69.8954 36.9753 69.7365 37.0391 cv
68.9242 37.0332 68.1178 37.0303 67.3055 37.0215 cv
67.125 37.0215 66.8837 36.9641 66.7229 37.0215 cv
66.563 37.019 65.9832 37.0215 65.7242 36.9553 cv
65.7203 37.1142 65.7203 37.2697 65.7203 37.4256 cv
65.9469 37.4138 66.2618 37.4281 66.3971 37.4281 cv
66.5933 37.4197 66.7876 37.4138 66.9867 37.405 cv
67.1986 37.405 67.4037 37.4227 67.5998 37.4281 cv
67.7725 37.4227 67.951 37.4168 68.1276 37.4109 cv
68.7976 37.4138 69.4676 37.4138 70.119 37.4168 cv
70.2514 37.4109 70.3878 37.405 70.5271 37.3997 cv
71.0627 37.4109 71.6768 37.457 72.2222 37.4109 cv
72.4086 37.3937 72.5998 37.4256 72.7774 37.3766 cv
72.9893 37.3791 73.8859 37.3849 74.0016 37.483 cv
74.1243 37.5811 74.1733 38.077 74.1782 38.2648 cv
74.1685 38.2648 74.1605 38.2619 74.1469 38.2619 cv
74.1469 38.3134 74.0477 38.2904 73.9997 38.2904 cv
73.7869 38.2878 73.574 38.2849 73.3601 38.282 cv
73.1482 38.2673 72.8245 38.1869 72.6273 38.2849 cv
72.4321 38.282 72.1428 38.2388 71.9828 38.308 cv
71.875 38.308 71.7513 38.2992 71.6601 38.3365 cv
71.2647 38.3365 70.8919 38.282 70.5222 38.2732 cv
70.0915 38.2703 69.6628 38.2703 69.2332 38.2673 cv
69.1282 38.282 69.0164 38.2933 68.9084 38.308 cv
68.7446 38.3193 68.5583 38.2673 68.414 38.3193 cv
68.107 38.3164 67.8098 38.3134 67.5056 38.3134 cv
67.3644 38.308 67.1986 38.256 67.0632 38.3134 cv
66.8563 38.308 66.1117 38.3164 65.7203 38.2589 cv
65.7203 38.7637 li
65.8733 38.6887 66.1029 38.6945 66.2461 38.6278 cv
66.5846 38.6308 66.8485 38.7176 67.183 38.7176 cv
67.4644 38.7176 67.745 38.7176 68.0295 38.7147 cv
68.3512 38.697 68.6711 38.6739 68.9948 38.6509 cv
70.1749 38.6769 71.4197 38.6856 72.6244 38.6916 cv
72.8785 38.697 74.0507 38.6425 74.1586 38.772 cv
74.2214 38.8559 74.2018 39.0315 74.2097 39.1414 cv
74.2214 39.2277 74.2724 39.464 74.2057 39.5362 cv
74.0429 39.7034 73.2777 39.522 73.057 39.6029 cv
72.9648 39.6029 72.8451 39.594 72.7676 39.6313 cv
72.4341 39.6284 72.1025 39.626 71.7729 39.623 cv
71.565 39.6029 71.2647 39.545 71.0685 39.623 cv
70.8252 39.623 70.1807 39.5308 70.016 39.6142 cv
69.7727 39.6142 69.4559 39.522 69.2263 39.6112 cv
68.6789 39.6083 68.1836 39.6029 67.6439 39.5999 cv
67.5233 39.5999 67.3409 39.5538 67.2359 39.5999 cv
67.0407 39.597 66.8425 39.597 66.6483 39.597 cv
66.508 39.594 66.2961 39.5651 66.1814 39.623 cv
65.7203 39.623 li
65.7203 39.7525 65.7203 39.8824 65.7203 40.0149 cv
66.0068 39.9457 66.6581 39.9806 66.9092 40.0006 cv
67.1163 39.9918 67.3183 39.9889 67.5253 39.9835 cv
67.9942 39.9865 68.4238 39.9918 68.8692 39.9918 cv
69.1037 39.9889 69.4018 40.0355 69.604 39.9634 cv
70.0778 39.9659 70.5271 40.0037 71.0117 40.0006 cv
71.7906 39.9918 72.6519 39.9545 73.4641 39.9889 cv
73.7486 40.0095 74.0331 40.0296 74.3116 40.0498 cv
74.3116 40.2543 74.4785 40.7389 74.3019 40.86 cv
74.2175 40.8801 74.1331 40.9002 74.0429 40.9233 cv
73.8349 40.9233 73.5662 40.8919 73.4032 40.9812 cv
73.0717 40.9782 72.7264 40.941 72.3781 40.9439 cv
72.2692 40.9439 72.1457 40.9351 72.0574 40.9752 cv
71.9151 40.9723 71.7396 40.9522 71.6169 41.0012 cv
71.3197 40.9983 70.8213 40.8919 70.5624 40.9954 cv
70.2602 40.9929 69.8649 40.883 69.5981 41.0184 cv
69.3322 41.016 69.0704 41.0101 68.8094 41.0072 cv
68.6083 40.9929 68.1708 40.909 67.9873 40.9782 cv
67.796 40.9782 67.3732 40.9351 67.2291 41.0042 cv
67.0819 41.0012 66.9367 41.0012 66.7876 41.0012 cv
66.6169 41.0012 65.9655 41.0332 65.7203 40.964 cv
65.7203 41.1254 65.7164 41.2927 65.7164 41.4599 cv
65.7526 41.4569 65.7948 41.4599 65.8184 41.4599 cv
66.3942 41.428 66.971 41.3936 67.5469 41.3589 cv
67.9687 41.3618 68.3856 41.3677 68.8035 41.3677 cv
68.9831 41.3765 69.142 41.4251 69.3322 41.4196 cv
69.4774 41.405 69.6255 41.3878 69.7727 41.3735 cv
70.4466 41.3529 71.0901 41.3505 71.7591 41.3529 cv
72.2311 41.3529 72.7225 41.3505 73.164 41.3328 cv
73.3229 41.3274 73.4935 41.3446 73.6338 41.3039 cv
73.7966 41.3039 74.3293 41.2666 74.3863 41.3878 cv
74.4235 41.4657 74.4225 41.5923 74.4225 41.6904 cv
74.4225 41.8317 74.4392 42.0018 74.3921 42.1289 cv
f
63.9457 26.2974 mo
63.9624 26.0032 63.9791 25.7118 63.9977 25.4151 cv
63.9859 25.1252 63.9683 24.8324 63.9614 24.5381 cv
63.9683 24.4056 63.9741 24.2673 63.982 24.132 cv
63.9791 23.718 63.9859 23.252 63.9683 22.8439 cv
63.9408 22.1994 63.9683 21.5535 63.9741 20.8815 cv
63.9781 20.677 64.0173 20.3901 63.9134 20.2356 cv
63.8996 20.2287 63.8898 20.2184 63.88 20.2096 cv
63.7555 20.1604 63.571 20.1781 63.4268 20.1781 cv
63.2659 20.1693 63.1109 20.1604 62.955 20.1536 cv
62.7244 20.1693 62.488 20.1851 62.2545 20.1982 cv
61.764 20.2057 61.2961 20.132 60.8223 20.1693 cv
60.5289 20.1895 60.2269 20.1536 59.911 20.158 cv
59.7481 20.1693 59.5824 20.1781 59.4146 20.1811 cv
59.2508 20.1737 59.085 20.1635 58.9202 20.1551 cv
58.7632 20.1604 58.6063 20.1693 58.4513 20.1781 cv
58.263 20.1478 58.0804 20.1203 57.8921 20.0913 cv
57.6273 20.0697 57.3349 20.1075 57.0759 20.1031 cv
56.8876 20.0859 56.7042 20.0683 56.5187 20.0512 cv
56.2558 20.0437 56.0096 20.0942 55.7527 20.0973 cv
55.3927 20.0987 54.9786 20.057 54.6157 20.0437 cv
54.393 20.0512 54.1654 20.057 53.9417 20.0653 cv
53.7396 20.06 53.567 20.005 53.359 20.005 cv
52.8538 19.9932 52.3084 20.0437 51.8395 19.9976 cv
51.7219 20.005 51.6041 20.0192 51.4864 20.0296 cv
50.9439 20.0668 50.3504 20.0296 49.7893 20.0437 cv
49.5146 20.0629 49.2439 20.0801 48.9702 20.0942 cv
47.7067 20.106 46.5285 20.0757 45.2817 20.1075 cv
45.0669 20.1262 44.8531 20.1434 44.6372 20.158 cv
44.1781 20.1434 43.721 20.1262 43.2619 20.1075 cv
43.0294 20.1203 42.7949 20.132 42.5596 20.1434 cv
42.2564 20.1158 41.9532 20.0913 41.6512 20.0668 cv
41.3873 20.0697 41.1244 20.0771 40.8605 20.0801 cv
40.5662 20.0801 40.2621 20.0512 39.9825 20.0512 cv
39.5862 20.0512 39.2027 20.1232 38.8132 20.1291 cv
38.3561 20.1158 37.8989 20.1031 37.4378 20.0913 cv
36.763 20.0973 36.0478 20.1262 35.3592 20.132 cv
35.1257 20.1158 34.8913 20.0987 34.6587 20.0801 cv
34.1614 20.0512 33.6445 20.0512 33.1618 20.0393 cv
32.8557 20.0325 32.5566 20.0629 32.2279 20.06 cv
31.9699 20.06 31.7423 20.005 31.5 20.002 cv
31.2038 20.0192 30.9076 20.0325 30.6231 20.0481 cv
30.414 20.0393 30.2081 20.0296 30.006 20.0192 cv
29.2953 20.0163 28.5542 20.0281 27.8675 20.0325 cv
27.2951 20.0393 26.756 20.002 26.1763 19.9976 cv
25.859 20.0163 25.5461 20.0325 25.2346 20.0512 cv
24.7171 20.0481 24.1996 20.0481 23.6832 20.0437 cv
23.1034 20.0393 22.5412 20.132 21.9861 20.0437 cv
21.5348 19.9746 21.0055 20.0296 20.5818 20.0884 cv
20.5327 20.0942 20.465 20.0845 20.465 20.1434 cv
20.3856 20.3425 20.4332 20.6696 20.4332 20.9031 cv
20.4303 21.1988 20.3998 21.4701 20.3974 21.7511 cv
20.3959 22.1837 20.4116 22.6276 20.4189 23.0401 cv
20.4189 23.4036 20.3856 23.7426 20.3826 24.1232 cv
20.3782 25.1669 20.3998 26.1994 20.3959 27.2245 cv
20.3826 27.4163 20.3738 27.6124 20.3641 27.8115 cv
20.3566 28.1157 20.3998 28.3968 20.4116 28.6896 cv
20.4087 29.0976 20.4087 29.5072 20.4058 29.9168 cv
20.3797 31.1017 20.3826 32.3555 20.361 33.5728 cv
20.3321 33.8294 20.3135 34.0829 20.289 34.337 cv
20.3061 34.6279 20.3224 34.9192 20.3321 35.2135 cv
20.3307 35.3489 20.3238 35.4847 20.3209 35.6202 cv
20.3135 36.3034 20.286 37.016 20.2831 37.6704 cv
20.2802 37.9617 20.3076 38.2619 20.3032 38.5758 cv
20.2718 38.8961 20.2385 39.2193 20.2096 39.5421 cv
20.2041 39.8133 20.2542 40.0728 20.26 40.3322 cv
20.2644 40.5716 20.2341 40.808 20.2311 41.0361 cv
20.2227 41.431 20.2487 41.8346 20.2502 42.2069 cv
20.2429 42.3913 20.2311 42.5757 20.2227 42.7631 cv
20.2139 42.9829 20.2615 43.1751 20.2718 43.3772 cv
20.2802 43.6264 20.2458 43.8676 20.2429 44.107 cv
20.2429 44.4269 20.2733 44.7624 20.2615 45.1017 cv
20.2286 45.5412 20.1909 45.9816 20.158 46.4172 cv
20.159 46.5555 20.1619 46.6909 20.1678 46.8303 cv
20.1649 47.1147 20.1335 47.4071 20.1359 47.7062 cv
20.1521 47.9799 20.1678 48.2546 20.1835 48.5254 cv
20.1388 50.4598 20.1046 52.4012 20.1247 54.3189 cv
20.1305 54.7662 20.0927 55.2273 20.0898 55.6943 cv
20.0869 56.4074 20.08 57.1196 20.0786 57.8279 cv
20.0869 57.9868 20.0898 58.1398 20.0972 58.2987 cv
20.08 58.9992 20.0369 59.7202 20.0094 60.4324 cv
20.0265 60.6198 20.0437 60.8042 20.057 60.9886 cv
20.0668 61.947 20.0496 62.8632 20.2341 63.7373 cv
20.2933 63.9276 20.3508 64.1179 20.4058 64.3052 cv
20.5254 64.6858 20.6539 65.0528 20.9016 65.3667 cv
21.2248 65.7767 21.5549 66.2407 21.9733 66.5752 cv
22.0307 66.6096 22.09 66.638 22.1489 66.6704 cv
22.2715 66.7508 22.3956 66.8284 22.5198 66.9068 cv
22.6928 66.9873 22.8699 67.0657 23.0431 67.1432 cv
23.2996 67.258 23.5537 67.3737 23.8072 67.4865 cv
24.0667 67.5837 24.3423 67.6504 24.6086 67.7308 cv
25.0903 67.8877 25.6009 68.0349 26.1115 68.1232 cv
26.6202 68.2135 27.1323 68.2154 27.6526 68.3018 cv
29.1839 68.5509 30.7545 68.7039 32.3378 68.8648 cv
32.6762 68.8962 33.0097 68.8903 33.358 68.9109 cv
33.7995 68.9659 34.235 69.0198 34.6764 69.0728 cv
35.1257 69.1561 35.576 69.2886 36.0233 69.3788 cv
36.2381 69.4279 36.4569 69.4848 36.6649 69.525 cv
36.8738 69.5653 37.0837 69.5888 37.2789 69.6614 cv
37.4849 69.7359 37.6714 69.8517 37.8705 69.94 cv
38.052 70.0048 38.2315 70.0734 38.4139 70.1401 cv
39.285 70.5148 40.1169 71.0936 40.8262 71.7666 cv
41.0596 72.0451 41.3039 72.3218 41.5384 72.5964 cv
41.6512 72.7808 41.763 72.9634 41.8787 73.1419 cv
41.9023 73.1733 41.9258 73.2242 41.969 73.2242 cv
41.969 73.2596 li
41.9984 73.2596 li
42.3457 72.4199 42.7626 71.5527 43.4581 70.9131 cv
43.7072 70.6796 44.0349 70.5756 44.288 70.3638 cv
44.5744 70.1283 44.9923 69.7615 45.3838 69.7654 cv
45.5859 69.6898 45.7889 69.6182 45.989 69.5427 cv
46.2479 69.4445 46.5109 69.3033 46.8199 69.3033 cv
46.8934 69.2592 46.9896 69.2484 47.0838 69.2484 cv
47.2063 69.1767 47.4026 69.1336 47.5527 69.1336 cv
47.6135 69.1238 47.6704 69.116 47.7302 69.1042 cv
47.8018 69.0639 47.898 69.0463 47.9941 69.0493 cv
48.0706 69.0032 48.1855 68.9884 48.2845 68.9884 cv
48.3806 68.9335 48.512 68.9335 48.6328 68.9335 cv
48.7347 68.8737 48.8868 68.8766 49.0183 68.8766 cv
49.0947 68.8677 49.1732 68.8589 49.2517 68.8511 cv
49.3459 68.7981 49.4813 68.7922 49.6029 68.7961 cv
49.6912 68.7844 49.7804 68.7755 49.8668 68.7638 cv
49.9266 68.7579 49.9854 68.7491 50.0443 68.7354 cv
50.1013 68.7294 50.1601 68.7177 50.217 68.7059 cv
50.2974 68.7 50.374 68.6922 50.4543 68.6833 cv
50.6114 68.6196 50.8507 68.6549 51.0371 68.6549 cv
51.0979 68.645 51.1548 68.6372 51.2137 68.6284 cv
51.3088 68.5793 51.451 68.602 51.5648 68.602 cv
51.7375 68.498 51.9827 68.5705 52.1809 68.5735 cv
52.2575 68.5647 52.3359 68.5529 52.4125 68.547 cv
52.5811 68.4587 52.8814 68.4871 53.0883 68.4901 cv
53.1756 68.4489 53.3012 68.4352 53.411 68.4352 cv
53.5092 68.3802 53.6377 68.3772 53.7612 68.3772 cv
53.8368 68.3685 53.9153 68.3606 53.9957 68.3488 cv
54.1173 68.2763 54.3067 68.2939 54.4646 68.2939 cv
54.5401 68.2508 54.6568 68.239 54.7579 68.239 cv
54.9021 68.1762 55.1111 68.2096 55.2828 68.2096 cv
55.4269 68.1271 55.8831 68.0369 56.0744 68.0369 cv
56.1548 67.9918 56.2696 67.982 56.3686 67.982 cv
56.4344 67.9624 56.4991 67.9476 56.5629 67.927 cv
56.764 67.8554 56.9435 67.7799 57.1917 67.7799 cv
57.3212 67.7171 57.4939 67.6975 57.6547 67.6975 cv
57.8038 67.6102 58.0569 67.5238 58.2453 67.5238 cv
58.3316 67.4954 58.419 67.464 58.5042 67.4316 cv
58.8457 67.3051 59.2086 67.209 59.5539 67.0795 cv
59.9266 66.9382 60.2916 66.7734 60.6545 66.6243 cv
60.8389 66.5556 61.0175 66.4909 61.2 66.4222 cv
61.4825 66.2751 61.7296 66.0445 61.9769 65.8336 cv
62.1162 65.7218 62.2613 65.6374 62.3889 65.5108 cv
62.6028 65.298 62.8843 65.1508 63.0481 64.885 cv
63.2404 64.574 63.5052 64.0522 63.5808 63.6912 cv
63.6073 63.4754 63.6347 63.2615 63.6602 63.0516 cv
63.6956 62.8554 63.7308 62.6592 63.7681 62.463 cv
63.7888 62.1373 63.7446 61.8116 63.7524 61.4967 cv
63.7681 61.1279 63.7839 60.7552 63.8045 60.3863 cv
63.7917 60.2764 63.7761 60.1724 63.7662 60.0636 cv
63.7701 59.888 63.777 59.7143 63.7839 59.5358 cv
63.8015 58.8981 63.7956 58.2439 63.7985 57.6356 cv
63.8015 57.1334 63.774 56.6085 63.777 56.0896 cv
63.7829 55.8699 63.7829 55.657 63.7839 55.4432 cv
63.7917 55.3255 63.7985 55.2096 63.8045 55.0939 cv
63.7956 54.7888 63.7761 54.4838 63.7652 54.1836 cv
63.7564 53.6186 63.8133 53.0182 63.8191 52.4561 cv
63.8074 51.6487 63.7956 50.8404 63.7839 50.0281 cv
63.8045 49.8144 63.8231 49.5985 63.8417 49.3846 cv
63.8476 48.9805 63.8525 48.5822 63.8545 48.1849 cv
63.8702 48.0005 63.8937 47.8151 63.9134 47.6287 cv
63.9134 47.2854 63.8584 46.9793 63.8584 46.634 cv
63.8663 45.7805 63.9134 44.9722 63.9447 44.1159 cv
63.9565 43.8049 63.8839 43.4988 63.8819 43.2075 cv
63.8996 42.9907 63.9153 42.7808 63.935 42.5669 cv
63.927 42.4403 63.9212 42.3103 63.9134 42.1868 cv
63.9212 41.9906 63.935 41.7973 63.9408 41.6041 cv
63.9231 41.48 63.9134 41.3677 63.8977 41.2495 cv
63.8839 40.9551 63.8761 40.6638 63.8683 40.37 cv
63.8584 39.7701 63.9134 39.1987 63.927 38.6136 cv
63.9212 38.4605 63.9153 38.3021 63.9084 38.1461 cv
63.927 38.0309 63.9408 37.9127 63.9565 37.7944 cv
63.9614 37.5752 63.9134 37.3791 63.9134 37.1514 cv
63.9134 36.843 63.9408 36.5226 63.9565 36.2431 cv
63.9457 36.0008 63.9369 35.7556 63.927 35.5132 cv
63.9389 35.398 63.9525 35.2768 63.9673 35.1645 cv
63.9585 34.6396 63.9134 34.0368 63.9084 33.4949 cv
63.9035 33.1917 63.927 32.8749 63.9398 32.5576 cv
63.9565 32.4222 63.9673 32.2834 63.9741 32.1479 cv
63.9525 31.7644 63.9231 31.3867 63.8977 31.0051 cv
63.9134 30.7761 63.931 30.5397 63.9506 30.3032 cv
63.9525 29.9918 63.9565 29.6803 63.9585 29.3688 cv
63.9741 29.1148 63.9918 28.8613 64.0075 28.6071 cv
64.0105 28.3624 63.9565 28.1299 63.9683 27.8748 cv
63.9859 27.7307 63.9997 27.5835 64.0192 27.4393 cv
63.9977 27.0573 63.9683 26.678 63.9457 26.2974 cv
63.1736 36.9729 mo
63.1619 37.0592 63.1423 37.1455 63.1295 37.2377 cv
63.1266 37.4026 63.1816 37.5291 63.1736 37.7022 cv
63.1678 37.8813 63.1227 38.0196 63.1207 38.2011 cv
63.1139 39 63.1089 39.8016 63.103 40.6005 cv
63.103 40.7389 63.1482 40.8488 63.1511 40.9812 cv
63.1355 41.1254 63.1227 41.2784 63.103 41.4196 cv
63.1227 41.5491 63.1355 41.6733 63.1511 41.8002 cv
63.1345 41.9067 63.1197 42.0166 63.103 42.123 cv
63.103 42.23 63.1089 42.3393 63.1109 42.4462 cv
63.0962 42.6572 63.0618 42.8553 63.0618 43.0887 cv
63.0579 43.4302 63.1384 43.7146 63.1423 44.056 cv
63.1423 44.2198 63.103 44.3719 63.1011 44.523 cv
63.1109 44.6289 63.1246 44.7358 63.1355 44.8457 cv
63.1423 45.0036 63.1089 45.1685 63.1011 45.3126 cv
63.1089 45.3705 63.1139 45.4275 63.1246 45.4882 cv
63.1364 45.6825 63.1423 45.8777 63.157 46.0709 cv
63.1139 47.9024 63.1384 49.8575 63.1011 51.6938 cv
63.0991 52.3629 63.0962 53.0378 63.0923 53.7108 cv
63.0962 53.8952 63.103 54.0826 63.1089 54.267 cv
63.0815 55.0194 63.0894 55.7787 63.0736 56.5507 cv
63.0678 56.7724 63.0108 56.9372 63.0108 57.1628 cv
63.0157 57.3531 63.0658 57.4944 63.0648 57.6906 cv
63.0648 57.8711 63.0167 58.0123 63.0108 58.1889 cv
63.0266 58.2752 63.0344 58.3655 63.0472 58.4518 cv
63.0344 58.5381 63.0266 58.6274 63.0157 58.7137 cv
63.0285 58.8118 63.0402 58.907 63.053 59.0051 cv
63.056 59.2621 63.056 59.5132 63.056 59.7663 cv
63.0658 59.8938 63.0717 60.0204 63.0815 60.144 cv
63.0678 60.3804 63.0618 60.6178 63.0481 60.8513 cv
63.056 61.5086 63.0717 62.206 62.9657 62.8377 cv
62.956 62.979 62.9441 63.129 62.9363 63.2752 cv
62.8873 63.5813 62.744 63.9658 62.5929 64.2249 cv
62.2496 64.8075 61.6493 65.1794 61.0921 65.5256 cv
60.784 65.7179 60.5075 65.9317 60.1709 66.0847 cv
59.7893 66.2574 59.395 66.3849 58.984 66.5174 cv
58.4954 66.6704 58.0137 66.8696 57.5135 67.0127 cv
57.3418 67.0657 57.1721 67.0824 56.9916 67.1226 cv
56.4697 67.2472 55.9458 67.3797 55.4005 67.4659 cv
55.2906 67.4748 55.1719 67.4865 55.0532 67.4915 cv
54.702 67.5503 54.3508 67.6102 53.9977 67.6651 cv
53.5994 67.7142 53.2021 67.7288 52.8009 67.7603 cv
52.3536 67.7897 51.8954 67.8877 51.451 67.9192 cv
51.0813 67.9309 50.7104 67.9447 50.3406 67.9564 cv
50.0542 67.9799 49.7893 68.0487 49.5146 68.1007 cv
49.344 68.1114 49.1713 68.1232 48.9976 68.1349 cv
48.2952 68.2851 47.6135 68.4665 46.9111 68.6196 cv
46.5334 68.7 46.1617 68.7638 45.8036 68.8737 cv
45.6231 68.9492 45.4416 69.0258 45.264 69.1013 cv
45.112 69.1561 44.9649 69.2082 44.8138 69.2572 cv
43.8525 69.7732 42.9009 70.4422 42.2593 71.3761 cv
42.2004 71.4723 42.1397 71.5645 42.0779 71.6626 cv
42.0386 71.7077 41.8914 71.7999 41.8914 71.8529 cv
41.8484 71.8529 41.8317 71.8705 41.8317 71.8234 cv
41.7041 71.7489 41.657 71.6135 41.5609 71.5095 cv
41.2686 71.1956 41.0429 70.866 40.7134 70.6011 cv
40.4455 70.3814 40.1561 70.2343 39.8618 70.0695 cv
39.7216 69.9694 39.5744 69.8733 39.4332 69.7751 cv
39.1615 69.6408 38.8966 69.5083 38.6258 69.3749 cv
38.2609 69.2425 37.8892 69.11 37.5212 68.9747 cv
37.2682 68.8737 37.0298 68.8099 36.763 68.7373 cv
36.6443 68.6942 36.5246 68.6549 36.4039 68.6117 cv
36.0164 68.5392 35.6554 68.498 35.269 68.441 cv
35.1307 68.4058 34.9923 68.3743 34.8569 68.3371 cv
34.696 68.3341 34.5449 68.3311 34.386 68.3233 cv
34.0869 68.2939 33.7857 68.2644 33.4825 68.239 cv
33.2001 68.2311 32.9156 68.2272 32.634 68.2213 cv
32.4761 68.1841 32.3221 68.1526 32.1651 68.1174 cv
31.8061 68.1036 31.4451 68.084 31.0841 68.0663 cv
30.3189 67.9741 29.5808 67.8387 28.8308 67.7485 cv
28.4806 67.723 28.1299 67.6975 27.7768 67.671 cv
27.4103 67.6279 27.0445 67.5386 26.6937 67.4748 cv
26.2342 67.3992 25.7957 67.3424 25.3513 67.2384 cv
24.7602 67.0971 24.1982 66.8284 23.6473 66.589 cv
22.8572 66.2496 21.9905 65.7531 21.5176 64.9684 cv
20.828 63.8187 20.8124 62.362 20.8226 60.8454 cv
20.8226 60.6404 20.7692 60.4932 20.7706 60.2911 cv
20.7721 60.1273 20.8226 59.9979 20.827 59.8242 cv
20.827 59.6545 20.7789 59.5191 20.775 59.3563 cv
20.7618 58.9933 20.752 58.6156 20.7535 58.2733 cv
20.7549 58.0045 20.7721 57.7043 20.7848 57.4218 cv
20.801 57.3267 20.8182 57.2285 20.8295 57.1305 cv
20.8226 57.0352 20.8025 56.9372 20.7922 56.8391 cv
20.7922 56.5939 20.7908 56.3525 20.7908 56.1073 cv
20.7922 55.553 20.8555 55.0488 20.8599 54.472 cv
20.8658 53.1909 20.906 51.9823 20.9349 50.7257 cv
20.9261 50.5579 20.9208 50.397 20.9133 50.2263 cv
20.9133 49.8546 20.9163 49.4886 20.9177 49.1139 cv
20.9193 48.7558 20.981 48.4674 20.9766 48.1212 cv
20.9654 46.7262 20.9423 45.29 20.9492 43.9049 cv
20.9683 43.5537 20.9884 43.2046 21.0055 42.8534 cv
20.9914 42.5786 20.981 42.3079 20.9683 42.0338 cv
20.9609 41.2636 20.9938 40.4794 20.9967 39.724 cv
20.9899 39.3429 20.981 38.9623 20.9766 38.5788 cv
20.9938 38.3252 21.0144 38.0716 21.0301 37.8204 cv
21.0443 37.3074 21.0144 36.8229 21.0183 36.298 cv
21.0227 35.0895 21.0561 33.9475 21.0458 32.7567 cv
21.0674 32.5949 21.088 32.4222 21.1081 32.2603 cv
21.0978 32.171 21.088 32.0848 21.0762 31.995 cv
21.0649 31.7242 21.0547 31.45 21.0458 31.1768 cv
21.0389 30.4759 21.0703 29.7622 21.0963 29.0991 cv
21.0865 28.7112 21.0777 28.3192 21.0674 27.9269 cv
21.0894 27.7424 21.1125 27.559 21.137 27.3731 cv
21.138 27.1872 21.0948 26.9911 21.1022 26.7889 cv
21.1095 26.5947 21.16 26.4417 21.1615 26.2342 cv
21.1655 25.47 21.1728 24.7573 21.1988 24.0094 cv
21.1988 23.7351 21.1959 23.4625 21.1959 23.1888 cv
21.2189 22.9955 21.19 22.8126 21.1871 22.635 cv
21.1959 22.4388 21.2077 22.2426 21.2106 22.0469 cv
21.2077 21.8016 21.1154 21.0316 21.2812 20.8762 cv
21.3817 20.7809 21.65 20.8226 21.8075 20.8226 cv
22.0106 20.7432 22.5948 20.7981 22.8616 20.7996 cv
23.0431 20.729 23.3487 20.7751 23.565 20.7751 cv
24.3017 20.778 25.0359 20.8094 25.728 20.8153 cv
25.8751 20.7432 26.1576 20.7879 26.342 20.7879 cv
26.5211 20.7202 26.8051 20.7603 27.017 20.7663 cv
27.1063 20.7231 27.2288 20.7343 27.3397 20.7373 cv
27.5216 20.6554 27.817 20.7202 28.0102 20.7343 cv
28.5571 20.7721 29.0672 20.8064 29.6181 20.8064 cv
29.8373 20.7231 30.2934 20.8094 30.5583 20.8153 cv
30.8035 20.7128 31.3166 20.8153 31.5805 20.8325 cv
32.0023 20.831 32.4212 20.8296 32.842 20.8256 cv
32.9656 20.7721 33.1814 20.7996 33.3354 20.801 cv
33.668 20.801 33.9996 20.804 34.3351 20.8064 cv
34.5136 20.7319 34.8176 20.7809 35.0374 20.7809 cv
35.1316 20.7373 35.2709 20.752 35.3857 20.752 cv
35.7555 20.7549 36.0605 20.8153 36.4088 20.8168 cv
36.5609 20.7574 36.7914 20.7879 36.9631 20.7879 cv
37.0897 20.7432 37.2466 20.778 37.3741 20.7879 cv
37.5722 20.7879 37.7645 20.7952 37.9598 20.7981 cv
38.2315 20.6882 38.8907 20.8064 39.1889 20.8296 cv
39.4057 20.831 39.6166 20.8325 39.8344 20.8369 cv
39.9246 20.7879 40.0816 20.8325 40.1875 20.8325 cv
40.4014 20.834 40.6368 20.8226 40.8585 20.8296 cv
41.6903 20.8471 42.5596 20.8516 43.4365 20.8555 cv
43.5326 20.801 43.6837 20.7996 43.8152 20.7996 cv
43.8731 20.7879 43.9309 20.7819 43.9878 20.7721 cv
44.285 20.6554 44.8521 20.8369 45.1905 20.8369 cv
45.2768 20.8296 45.3651 20.8182 45.4554 20.8094 cv
45.526 20.7996 45.5907 20.7879 45.6594 20.7819 cv
45.8467 20.7074 46.1734 20.7549 46.3912 20.7549 cv
46.9935 20.7574 47.5988 20.7663 48.2021 20.7692 cv
48.4434 20.7751 48.6553 20.8296 48.9035 20.8296 cv
48.979 20.7923 49.1065 20.801 49.1987 20.801 cv
49.3184 20.7447 49.5206 20.7751 49.6676 20.7751 cv
49.9698 20.7751 50.2719 20.778 50.5751 20.7809 cv
50.6496 20.7721 50.731 20.7574 50.8095 20.7506 cv
51.091 20.6392 51.5099 20.7819 51.8032 20.6957 cv
52.1986 20.6971 52.5675 20.7574 52.9441 20.7864 cv
53.1962 20.7879 53.4503 20.7952 53.7073 20.7981 cv
53.7848 20.7864 53.8594 20.778 53.9388 20.7692 cv
54.2027 20.6667 54.5804 20.778 54.8472 20.7981 cv
55.1974 20.801 55.5477 20.8064 55.8997 20.8094 cv
56.0312 20.7506 56.5286 20.8094 56.7208 20.8124 cv
57.4036 20.8182 58.0844 20.8226 58.7662 20.8296 cv
58.9633 20.8516 59.1586 20.8786 59.3519 20.9007 cv
59.4911 20.8874 59.6285 20.8731 59.7619 20.8614 cv
59.8502 20.8226 59.9797 20.8325 60.0836 20.8325 cv
60.4633 20.8296 60.8154 20.8516 61.1686 20.8815 cv
61.714 20.8903 62.2613 20.8992 62.8039 20.906 cv
62.8519 20.8815 63.1266 20.8471 63.1266 20.909 cv
63.157 20.909 li
63.1521 21.4701 63.1423 21.9675 63.1482 22.5168 cv
63.1521 23.0534 63.1952 23.6587 63.1736 24.2154 cv
63.1678 25.2375 63.1629 26.2602 63.157 27.2839 cv
63.0874 29.1526 63.158 30.962 63.1511 32.846 cv
63.1629 33.0912 63.1786 33.3335 63.1913 33.5753 cv
63.1952 33.8956 63.1364 34.184 63.1384 34.5156 cv
63.157 34.6539 63.1736 34.7868 63.1904 34.9222 cv
63.2051 35.3459 63.211 35.7815 63.2149 36.1823 cv
63.1992 36.4476 63.1894 36.71 63.1736 36.9729 cv
f
45.8183 62.7082 mo
45.7388 62.4257 45.6506 62.1628 45.5573 61.8882 cv
45.526 61.791 45.5034 61.693 45.4475 61.6056 cv
45.3984 61.5311 45.3396 61.5086 45.2553 61.485 cv
45.1591 61.5566 45.0256 61.6115 45.0139 61.7469 cv
44.9865 61.9666 45.1258 62.2148 45.1983 62.3993 cv
45.3082 62.6729 45.3984 62.9653 45.4906 63.2439 cv
45.5495 63.4205 45.5907 63.599 45.7026 63.749 cv
45.8085 63.8874 46.0616 64.0483 46.2479 63.9658 cv
46.3471 63.9227 46.2028 63.7059 46.1793 63.6539 cv
46.0459 63.3567 45.9105 63.0251 45.8183 62.7082 cv
f
33.9446 48.3978 mo
33.972 48.3978 li
33.972 48.3694 li
34.0035 48.3694 li
34.0996 48.1849 34.1947 47.9946 34.2958 47.8102 cv
34.386 47.7179 34.4841 47.6287 34.5754 47.5384 cv
34.6686 47.4071 34.7667 47.2766 34.8628 47.1461 cv
34.9246 47.0539 35.0599 46.9793 35.0973 46.8754 cv
35.212 46.53 35.1571 45.8002 35.163 45.3882 cv
35.163 45.0508 35.1649 44.7093 35.1649 44.367 cv
35.1846 44.162 35.2013 43.9599 35.211 43.7499 cv
35.2081 43.3164 35.2071 42.8759 35.2062 42.4345 cv
35.1885 42.2181 35.1708 42.0018 35.1532 41.7914 cv
35.1375 41.2234 35.214 40.6148 35.2062 40.0379 cv
35.1865 39.5048 35.214 38.9162 35.2277 38.3943 cv
35.2219 38.2011 35.211 38.0078 35.2062 37.8116 cv
35.214 37.6444 35.2336 37.48 35.2444 37.3158 cv
35.2415 36.944 35.2385 36.5746 35.2385 36.2029 cv
35.2219 36.0067 35.2062 35.8104 35.1885 35.6142 cv
35.1768 35.3175 35.1963 35.0203 35.2277 34.7378 cv
35.2513 34.5042 35.2836 34.2041 35.2238 33.9795 cv
35.2238 34.0079 li
34.9491 34.1148 34.1506 35.0232 34.0702 35.2945 cv
33.9917 35.5593 34.0408 36.0125 34.0408 36.3122 cv
34.0368 36.7507 33.9839 37.1657 33.9701 37.5982 cv
33.9603 37.7194 33.9554 37.8347 33.9446 37.9504 cv
33.9672 38.158 33.978 38.36 33.9936 38.5675 cv
33.9858 38.9339 33.8798 39.2537 33.8798 39.6171 cv
33.8936 39.8451 33.9132 40.0668 33.9279 40.2921 cv
33.9211 40.5143 33.9132 40.7389 33.9034 40.964 cv
33.9191 41.2578 33.9309 41.5491 33.9495 41.8434 cv
33.9397 42.3251 33.8798 42.8043 33.8858 43.3056 cv
33.9004 43.6107 33.9191 43.9108 33.9397 44.214 cv
33.9348 44.4876 33.8837 44.7643 33.8798 45.0331 cv
33.872 45.2577 33.9397 45.4627 33.925 45.705 cv
33.9093 46.0219 33.8504 46.3741 33.8563 46.6998 cv
33.8632 47.25 33.9446 47.8474 33.9446 48.3978 cv
f
49.4813 48.7185 mo
49.4911 48.7185 49.5019 48.7216 49.5136 48.7216 cv
49.4734 48.3978 49.2409 48.1526 49.0261 47.9191 cv
48.8907 47.77 48.7583 47.6228 48.6258 47.4727 cv
48.3228 47.2422 47.9146 47.0539 47.5282 46.9911 cv
47.2947 46.9852 47.0651 46.9852 46.8288 46.9793 cv
46.6904 47.0343 46.5188 47.0205 46.3648 47.0431 cv
46.0861 47.1088 45.8144 47.1726 45.5417 47.2393 cv
44.7765 47.4296 44.0898 47.772 43.4012 48.1074 cv
43.1461 48.2251 42.9205 48.4076 42.6979 48.5715 cv
42.4929 48.7156 42.3182 49.0668 42.0454 49.0707 cv
41.8532 49.0767 41.7061 48.851 41.5687 48.7471 cv
41.4883 48.698 41.4098 48.6469 41.3333 48.594 cv
41.0312 48.3488 40.7624 48.081 40.4347 47.8906 cv
39.9324 47.5973 39.4008 47.5248 38.8122 47.4149 cv
38.6346 47.3659 38.459 47.3138 38.2795 47.2648 cv
37.3555 47.0715 36.1793 47.0695 35.4288 47.5532 cv
35.2571 47.6631 35.1257 47.8308 34.9726 47.9662 cv
34.6921 48.2075 34.5704 48.3115 34.4292 48.6607 cv
34.386 48.7588 34.3213 48.8628 34.3213 48.9844 cv
34.4449 49.0443 34.6029 49.0443 34.7588 49.0472 cv
34.9099 48.9746 35.164 49.0217 35.3435 49.0217 cv
35.8575 49.0158 36.3833 49.0561 36.8973 49.059 cv
37.0327 48.9805 37.2515 49.0011 37.4232 49.004 cv
37.7861 49.0069 38.1255 49.0355 38.4767 49.0384 cv
38.5788 48.9844 38.7583 49.01 38.8848 49.0119 cv
39.3841 49.0158 39.8089 49.0767 40.2916 49.0767 cv
40.3406 49.0668 40.3906 49.059 40.4386 49.0472 cv
40.6427 49.059 40.8468 49.0707 41.0498 49.0786 cv
41.1116 49.0668 41.1842 49.0962 41.2214 49.1424 cv
41.3078 49.2512 41.2706 49.4396 41.3 49.575 cv
41.3824 49.9694 41.7237 50.2813 42.1553 50.2842 cv
42.692 50.2872 43.0726 49.8173 43.0627 49.2984 cv
43.0618 49.2463 43.0186 49.0933 43.0726 49.0933 cv
43.1588 48.9952 43.3404 48.9746 43.4816 48.9785 cv
43.568 48.9688 43.6582 48.9628 43.7426 48.9462 cv
43.8328 48.9373 43.9211 48.9354 44.0084 48.9197 cv
44.1555 48.848 44.5725 48.9001 44.7697 48.9001 cv
44.8521 48.8599 44.961 48.8432 45.063 48.8432 cv
45.2514 48.7471 45.5318 48.7843 45.7673 48.7843 cv
45.836 48.7765 45.9027 48.7677 45.9713 48.7558 cv
46.1557 48.6636 46.4393 48.7902 46.6423 48.7902 cv
46.8199 48.696 47.1211 48.7352 47.3447 48.7352 cv
47.9607 48.7411 48.5748 48.7411 49.188 48.7471 cv
49.2478 48.7471 49.4813 48.7725 49.4813 48.7185 cv
f
35.6731 45.9787 mo
35.6731 46.2377 35.6202 46.4927 35.6202 46.7655 cv
35.726 46.7655 35.834 46.7694 35.9438 46.7694 cv
36.0233 46.7321 36.1361 46.7115 36.2381 46.7144 cv
36.3186 46.6733 36.4324 46.6566 36.5275 46.6595 cv
36.5971 46.6448 36.6649 46.6399 36.7345 46.6282 cv
37.0111 46.5065 37.7694 46.6625 38.0549 46.7086 cv
38.4139 46.7694 38.7484 46.7547 39.1006 46.8322 cv
39.5127 46.9165 40.1385 47.1559 40.4956 47.3659 cv
40.623 47.4404 41.3422 48.0005 41.4079 48.0005 cv
41.4079 47.9721 li
41.5942 47.6631 41.5765 47.3599 41.6296 46.9793 cv
41.6884 46.5467 41.7002 46.1062 41.7189 45.6334 cv
41.7395 44.9604 41.7786 44.2688 41.7826 43.5823 cv
41.7767 43.2908 41.7708 42.9965 41.762 42.7062 cv
41.7934 41.8635 41.7865 41.0444 41.8042 40.2199 cv
41.8317 38.9309 41.919 37.5521 41.8042 36.2662 cv
41.762 35.8335 41.8198 35.3779 41.5765 35.0522 cv
41.1195 34.4351 40.4956 34.21 39.8266 33.9564 cv
39.6461 33.8956 39.4714 33.8352 39.291 33.7715 cv
39.0888 33.7342 38.8887 33.6964 38.6827 33.6591 cv
38.3717 33.5812 38.0176 33.5179 37.684 33.5007 cv
37.2152 33.4949 36.7502 33.4919 36.2783 33.4861 cv
36.142 33.5493 35.9144 33.5262 35.8222 33.6651 cv
35.7299 33.8034 35.7781 34.337 35.7781 34.5386 cv
35.7752 35.3287 35.7398 36.119 35.7349 36.9381 cv
35.7299 37.4138 35.726 37.8926 35.7241 38.3713 cv
35.6957 38.772 35.6692 39.1703 35.6437 39.571 cv
35.6299 39.8565 35.7476 40.116 35.7398 40.419 cv
35.726 41.0072 35.7163 41.6502 35.7025 42.2613 cv
35.6799 42.5184 35.6672 42.769 35.6437 43.023 cv
35.6309 43.5449 35.6731 44.0296 35.6613 44.5426 cv
35.6437 44.7966 35.6202 45.0508 35.6025 45.3038 cv
35.6005 45.552 35.675 45.7541 35.6731 45.9787 cv
40.7428 45.1488 mo
40.2434 44.9114 39.7068 44.7211 39.1663 44.5543 cv
38.9819 44.4936 38.7887 44.4699 38.5905 44.4327 cv
38.306 44.3699 38.0088 44.2895 37.7076 44.2424 cv
37.3781 44.1934 37.0386 44.1757 36.7188 44.107 cv
36.6835 44.0933 36.6462 44.0786 36.6099 44.0668 cv
36.3441 43.9197 36.3402 43.4096 36.7208 43.4096 cv
36.7208 43.3772 li
36.9621 43.3772 37.1348 43.4409 37.3437 43.487 cv
37.5516 43.5302 37.7694 43.5508 37.9764 43.6028 cv
38.1529 43.6656 38.3295 43.7293 38.5061 43.7931 cv
39.028 43.9658 39.5047 44.1364 39.9933 44.367 cv
40.108 44.4102 40.2268 44.4533 40.3406 44.4936 cv
40.6201 44.6171 41.0223 44.9153 41.2214 45.1547 cv
41.3 45.241 41.4235 45.292 41.4235 45.4254 cv
41.1783 45.4569 40.94 45.2371 40.7428 45.1488 cv
41.4402 41.9445 mo
41.4235 41.9474 41.404 41.9557 41.3804 41.9646 cv
41.3686 41.9675 41.3608 41.9705 41.349 41.9734 cv
41.145 42.0018 40.32 41.3274 40.0679 41.2063 cv
39.7765 41.0674 39.4714 40.9581 39.1663 40.8399 cv
38.7612 40.6815 38.3649 40.5024 37.9058 40.4421 cv
37.7311 40.419 37.5585 40.3984 37.3829 40.37 cv
37.1436 40.3612 36.7678 40.4161 36.5932 40.2719 cv
36.3755 40.0988 36.5167 39.6313 36.8012 39.6343 cv
36.8012 39.6029 li
38.0961 39.6981 39.2124 40.289 40.264 40.8743 cv
40.5485 41.039 41.2803 41.48 41.4275 41.7772 cv
41.4431 41.8086 41.5001 41.9445 41.4402 41.9445 cv
36.5304 36.0037 mo
36.9582 36.0067 37.2995 36.142 37.6762 36.2548 cv
37.7861 36.2774 37.9018 36.3009 38.0137 36.324 cv
38.2589 36.3873 38.4963 36.4913 38.7307 36.5835 cv
38.9358 36.6585 39.1399 36.7306 39.3517 36.8052 cv
39.4518 36.8571 39.5528 36.9121 39.651 36.9641 cv
39.9345 37.0965 40.2208 37.2348 40.5034 37.3677 cv
40.6849 37.4487 41.6639 38.0598 41.555 38.2849 cv
41.5236 38.3511 41.4157 38.3541 41.3539 38.3394 cv
41.1783 38.3021 41.0489 38.1437 40.8997 38.0598 cv
40.7329 37.9617 40.5594 37.8666 40.3906 37.7714 cv
39.4773 37.3128 38.4571 37.0446 37.4623 36.7679 cv
37.1779 36.687 36.8032 36.7075 36.5609 36.5546 cv
36.3598 36.4246 36.3519 36.1568 36.5304 36.0037 cv
f
43.4208 28.7199 mo
43.5386 28.7283 43.6611 28.6277 43.7475 28.564 cv
43.8721 28.4688 44.031 28.3432 44.082 28.201 cv
44.1771 27.9342 43.9593 27.5634 43.7053 27.4712 cv
43.6248 27.4624 43.5386 27.4511 43.4561 27.4423 cv
43.4532 27.6267 43.5974 27.7135 43.5847 27.9068 cv
43.5738 28.071 43.4247 28.1084 43.3639 28.2442 cv
43.3188 28.3423 43.2521 28.7024 43.4208 28.7199 cv
f
44.0958 25.8722 mo
43.8858 25.7913 43.6818 25.7452 43.4758 25.6633 cv
43.3021 25.5882 43.1648 25.4872 42.9686 25.4494 cv
42.9686 25.4784 li
42.8871 25.5102 42.8008 25.5593 42.7871 25.6544 cv
42.7498 25.8938 43.0186 25.9571 43.152 26.0783 cv
43.2677 26.188 43.3424 26.4216 43.5238 26.4417 cv
43.6524 26.4589 43.77 26.2974 43.8661 26.2372 cv
43.9682 26.1763 44.1016 26.113 44.1438 25.986 cv
44.1615 25.9399 44.1428 25.8894 44.0958 25.8722 cv
f
42.791 30.058 mo
42.9618 30.1644 43.4443 30.0781 43.4855 29.8619 cv
43.5149 29.6916 43.2442 29.5504 43.1207 29.5185 cv
43.0166 29.5965 42.5438 29.908 42.791 30.058 cv
f
48.3355 33.7573 mo
48.1962 33.6911 48.0334 33.7195 47.8666 33.7141 cv
47.6783 33.7023 47.4918 33.668 47.2829 33.6651 cv
47.0651 33.7425 46.7895 33.7171 46.556 33.7602 cv
45.472 33.9647 44.4548 34.1207 43.5238 34.6196 cv
43.2913 34.7407 43.0441 34.8702 42.8665 35.0865 cv
42.7351 35.2425 42.7302 35.447 42.7027 35.655 cv
42.6213 36.1568 42.6242 36.687 42.6057 37.2377 cv
42.589 37.512 42.5693 37.7832 42.5497 38.0598 cv
42.5438 38.4552 42.5438 38.8559 42.5399 39.2566 cv
42.5183 39.4126 42.5026 39.5681 42.4859 39.724 cv
42.4477 40.0929 42.4575 40.5054 42.4457 40.8659 cv
42.4252 41.428 42.4575 41.9964 42.4692 42.5355 cv
42.4801 43.0496 42.4477 43.6087 42.4536 44.1443 cv
42.4673 44.2895 42.4791 44.4366 42.4929 44.5838 cv
42.4791 44.6701 42.4692 44.7584 42.4575 44.8486 cv
42.4555 45.0938 42.5046 45.3352 42.5026 45.607 cv
42.4987 46.328 42.4801 47.256 42.7685 47.8249 cv
42.7832 47.8563 42.8735 47.9828 42.8735 47.9191 cv
43.1952 47.7926 43.4855 47.5444 43.7858 47.3776 cv
44.0545 47.2334 44.3488 47.1412 44.6186 46.9999 cv
44.9453 46.8243 45.1179 46.7056 45.5417 46.7086 cv
45.6633 46.6282 46.0223 46.5644 46.1891 46.5673 cv
46.2549 46.5555 46.3226 46.5467 46.3912 46.5359 cv
46.45 46.5261 46.507 46.5183 46.5658 46.5094 cv
46.8778 46.3534 47.6036 46.4948 47.9136 46.5751 cv
48.0706 46.6183 48.2246 46.6566 48.3825 46.6938 cv
48.4572 46.2377 48.3825 45.7276 48.3718 45.2861 cv
48.3875 45.0331 48.4031 44.7819 48.4208 44.5288 cv
48.4238 44.2081 48.4031 43.8912 48.4041 43.594 cv
48.4208 43.4351 48.4434 43.2791 48.4552 43.1212 cv
48.4748 42.7513 48.4533 42.4031 48.4728 42.0396 cv
48.4826 41.8317 48.5179 41.61 48.5229 41.3966 cv
48.5317 40.9929 48.5415 40.5834 48.5317 40.1679 cv
48.513 39.9918 48.4984 39.8162 48.4797 39.6401 cv
48.4728 38.9078 48.513 38.152 48.5189 37.4487 cv
48.512 37.2236 48.5042 36.9985 48.4963 36.7737 cv
48.4866 36.2141 48.5003 35.6721 48.4699 35.1356 cv
48.4375 34.9653 48.4081 34.8011 48.3757 34.6338 cv
48.3492 34.4406 48.3865 34.2213 48.3992 34.0227 cv
48.3992 33.9535 48.4179 33.7602 48.3355 33.7573 cv
43.0991 41.2636 mo
43.8064 40.6118 44.7197 40.289 45.5799 39.9428 cv
45.8497 39.8276 46.1695 39.6284 46.4912 39.6313 cv
46.5982 39.5479 46.8444 39.4298 46.9857 39.4298 cv
46.9857 39.3978 li
47.1583 39.4298 47.2858 39.5018 47.2897 39.6922 cv
47.2947 39.8594 47.2133 39.9918 47.0857 40.0816 cv
46.8267 40.2489 46.5217 40.2773 46.2273 40.3783 cv
45.8959 40.4882 45.5515 40.6148 45.2199 40.7158 cv
44.9884 40.785 44.7609 40.8369 44.5431 40.9233 cv
44.1487 41.0822 43.7543 41.2867 43.3894 41.5089 cv
43.2619 41.584 43.1246 41.708 42.9637 41.7135 cv
42.9205 41.7135 42.8764 41.711 42.8519 41.685 cv
42.7106 41.5408 43.0166 41.3388 43.0991 41.2636 cv
47.1878 43.6538 mo
46.9484 43.7931 46.6326 43.7931 46.348 43.854 cv
46.0979 43.9088 45.8467 43.9893 45.5859 44.0462 cv
44.7147 44.2463 43.9937 44.5946 43.2521 45.0409 cv
43.1588 45.0959 42.9126 45.3293 42.8185 45.1566 cv
42.7518 45.0389 42.9323 44.9153 43.0069 44.8486 cv
43.2972 44.5975 43.5935 44.4269 43.9093 44.2307 cv
44.2586 44.0148 44.6069 43.8167 44.9923 43.6715 cv
45.1179 43.6028 45.2356 43.5361 45.3592 43.4693 cv
45.8399 43.283 46.3343 43.1614 46.8199 42.9965 cv
46.9601 42.9965 47.1034 43.0005 47.2172 43.0545 cv
47.4516 43.181 47.3899 43.5302 47.1878 43.6538 cv
47.2339 36.4966 mo
47.1211 36.5746 46.9562 36.6065 46.8267 36.6468 cv
46.4952 36.7448 46.1637 36.8459 45.836 36.9469 cv
45.3808 37.0882 44.9119 37.2608 44.49 37.4688 cv
44.1928 37.6444 43.8947 37.8116 43.5915 37.9906 cv
43.5464 38.0137 43.1324 38.233 43.1343 38.1206 cv
43.1049 38.1206 li
43.1403 37.8092 43.4974 37.6013 43.7387 37.457 cv
43.8544 37.3736 43.9721 37.2927 44.0859 37.2093 cv
44.3842 37.019 44.7039 36.8341 45.0198 36.687 cv
45.3553 36.5315 45.7084 36.4476 46.0577 36.3293 cv
46.1783 36.2749 46.299 36.2201 46.4148 36.168 cv
46.5756 36.1131 46.7306 36.0586 46.8924 36.0037 cv
47.0132 36.0037 47.1524 35.9919 47.2613 36.0297 cv
47.4899 36.1107 47.3751 36.3902 47.2339 36.4966 cv
f
42.175 28.3938 mo
42.1004 28.3492 42.024 28.3432 41.9297 28.3379 cv
41.8532 28.3914 41.761 28.4345 41.7276 28.5282 cv
41.6825 28.6361 41.7012 28.7774 41.71 28.8955 cv
41.7189 29.1177 41.6767 29.2953 41.8237 29.4597 cv
41.8817 29.5259 41.9621 29.5361 42.0288 29.5793 cv
42.0828 29.6166 42.1279 29.6916 42.2123 29.6774 cv
42.3888 29.6382 42.9009 29.3021 42.8597 29.082 cv
42.849 29.0168 42.2574 28.4458 42.175 28.3938 cv
f
50.3621 37.0475 mo
50.3621 36.7708 50.3092 36.4913 50.2896 36.2259 cv
50.2818 36.0787 50.2699 35.9346 50.2621 35.7845 cv
50.2582 35.7325 50.2818 35.4671 50.2318 35.4642 cv
50.2318 35.4357 li
50.1425 35.4357 li
50.0816 36.0125 50.112 36.6379 50.0973 37.2496 cv
50.0963 37.4889 49.9894 37.662 49.9698 37.8666 cv
49.9737 37.9819 49.9767 38.0971 49.9776 38.2158 cv
49.9659 38.3252 49.959 38.4316 49.9463 38.5356 cv
49.8069 38.5587 49.7069 38.5214 49.6765 38.3831 cv
49.6324 38.1869 49.7265 38.0226 49.7226 37.8347 cv
49.7069 37.7081 49.697 37.5782 49.6795 37.4516 cv
49.6765 36.7561 49.7382 36.0238 49.7324 35.3489 cv
49.7157 35.2278 49.7069 35.1125 49.6931 34.9973 cv
49.6765 34.9369 49.6608 34.879 49.6461 34.8212 cv
49.6167 34.8212 49.5902 34.8212 49.5578 34.8186 cv
49.5578 34.8472 li
49.5303 34.8472 li
49.5136 35.3459 49.4578 35.7903 49.4313 36.2803 cv
49.4107 36.3701 49.394 36.4564 49.3734 36.5457 cv
49.2851 36.5457 li
49.1301 36.1592 49.182 35.652 49.1752 35.1964 cv
49.1713 34.9541 49.1987 34.7029 49.1223 34.4955 cv
49.0359 34.6539 49.0418 34.8186 49.0241 35.0173 cv
49.0025 35.2537 48.9889 35.5368 49.0016 35.7815 cv
49.0183 36.044 49.0673 36.3293 49.0437 36.6036 cv
48.8996 38.282 48.9751 39.9256 48.9673 41.633 cv
48.9555 41.9758 48.9476 42.3163 48.9428 42.6572 cv
48.9202 42.9475 48.8711 43.2565 48.8691 43.5656 cv
48.8672 43.9893 48.8966 44.4386 48.8878 44.883 cv
48.879 45.298 48.8319 45.7649 48.8574 46.1984 cv
48.8593 46.2534 48.8711 46.4054 48.9397 46.4054 cv
48.9397 46.432 li
48.9702 46.432 li
48.9702 46.4054 li
48.9976 46.4054 li
49.0731 46.1611 49.0506 45.8669 49.0624 45.5864 cv
49.0771 45.1253 49.1359 44.6583 49.1223 44.1796 cv
49.1173 43.8795 49.0536 43.5067 49.1546 43.2222 cv
49.1732 43.1751 49.2096 43.1584 49.2635 43.1751 cv
49.3773 43.2046 49.4047 43.3772 49.4185 43.4812 cv
49.4753 43.8392 49.4107 44.1875 49.391 44.5622 cv
49.3881 44.8565 49.3871 45.1488 49.3831 45.4431 cv
49.3822 45.7589 49.3635 46.1023 49.395 46.4054 cv
49.4146 46.5751 49.3773 46.74 49.4263 46.8989 cv
49.4578 46.9882 49.4734 47.1951 49.6068 47.1951 cv
49.6382 46.7144 49.6598 46.169 49.6598 45.6766 cv
49.6461 45.4431 49.6363 45.2087 49.6225 44.9752 cv
49.6451 44.7388 49.6676 44.5053 49.6892 44.2719 cv
49.7157 44.1159 49.7382 43.9629 49.7638 43.8009 cv
49.7638 43.5852 49.697 43.3772 49.6696 43.1849 cv
49.6264 42.8701 49.6334 42.5355 49.6363 42.1951 cv
49.6382 42.0136 49.6382 41.8317 49.6873 41.6733 cv
49.701 41.6183 49.7863 41.5692 49.7863 41.5231 cv
49.8129 41.5231 li
49.9168 41.6158 49.9815 41.708 50.0041 41.8463 cv
50.0542 42.204 50.0296 42.6513 50.0041 43.0142 cv
49.9953 43.1418 49.9541 43.2507 49.9551 43.3919 cv
49.959 43.7186 50.0404 44.058 50.0502 44.3925 cv
50.0443 44.5249 50.0365 44.6642 50.0296 44.7996 cv
50.0296 45.3902 50.0247 45.9238 50.0228 46.5261 cv
50.0169 46.9538 50.0562 47.4149 50.1013 47.819 cv
50.0934 47.8966 50.0816 47.974 50.0689 48.0495 cv
50.1886 48.0495 li
50.3053 47.7955 50.2699 47.4835 50.2818 47.1726 cv
50.2954 46.8439 50.3455 46.4604 50.3053 46.12 cv
50.2699 45.8954 50.2405 45.6707 50.2052 45.4431 cv
50.2131 45.2087 50.2876 44.9919 50.2954 44.7418 cv
50.3024 44.3758 50.2386 44.0462 50.2405 43.6891 cv
50.2602 43.3114 50.2866 42.9279 50.3053 42.5492 cv
50.3053 42.2589 50.3082 41.9646 50.3053 41.6703 cv
50.2915 41.555 50.2779 41.4368 50.2592 41.3216 cv
50.2582 41.1341 50.3092 40.9841 50.3151 40.7938 cv
50.3082 40.4907 50.2994 40.188 50.2915 39.8854 cv
50.2954 39.4268 50.3249 38.9623 50.3269 38.4806 cv
50.3327 37.9877 50.3681 37.5208 50.3621 37.0475 cv
49.3263 41.5521 mo
49.3125 41.5811 49.1418 41.8263 49.1418 41.6644 cv
49.1007 41.578 49.1144 41.4427 49.1144 41.3446 cv
49.1007 41.0763 49.1065 40.7737 49.1007 40.4966 cv
49.0987 40.1218 49.0987 39.7525 49.0937 39.3807 cv
49.0987 39.0805 49.0683 38.7691 49.187 38.5297 cv
49.2742 38.5758 49.344 38.6509 49.3714 38.746 cv
49.4578 39.0693 49.3881 39.4356 49.3871 39.7932 cv
49.3831 40.2773 49.5068 41.1254 49.3263 41.5521 cv
49.3989 37.2755 mo
49.3989 37.3044 li
49.1713 37.2608 49.1301 37.0793 49.2576 36.8949 cv
49.3773 36.9553 49.5146 37.2755 49.3989 37.2755 cv
49.8452 40.8772 mo
49.7903 40.8772 li
49.697 40.6467 49.7324 40.4245 49.7343 40.1449 cv
49.7363 39.7961 49.6598 39.4439 49.8285 39.1526 cv
49.9187 39.1703 49.9894 39.1962 50.0326 39.2855 cv
50.1169 39.4817 50.1032 40.8801 49.8452 40.8772 cv
f
46.0459 56.5134 mo
46.1283 56.4821 46.246 56.5075 46.3343 56.5134 cv
46.5795 56.5163 46.8248 56.5193 47.0651 56.5193 cv
47.125 56.5046 47.1838 56.4996 47.2427 56.4899 cv
46.9935 56.1239 46.5805 55.7954 46.2637 55.4784 cv
45.4995 54.6995 44.6981 53.958 43.9437 53.1771 cv
43.7779 53.0182 43.6121 52.8652 43.4443 52.7121 cv
43.1814 52.4385 42.9186 52.1647 42.6518 51.894 cv
42.4929 51.7292 42.3182 51.5271 42.122 51.429 cv
42.121 51.4467 42.121 51.4702 42.121 51.4869 cv
41.9954 51.5301 41.9062 51.6341 41.8081 51.7292 cv
41.504 52.0412 41.2019 52.3521 40.8958 52.6631 cv
40.009 53.5371 39.1261 54.3916 38.2795 55.2793 cv
38.1451 55.4206 37.1494 56.3839 37.1494 56.4614 cv
37.8175 56.5311 38.5522 56.4899 39.2536 56.5046 cv
39.4979 56.5193 39.7383 56.5311 39.9825 56.5428 cv
40.1296 56.5595 40.2797 56.5801 40.421 56.5997 cv
40.4445 56.6174 40.4524 56.6174 40.4524 56.6546 cv
40.3249 56.8156 39.1555 58.2291 39.1261 58.2291 cv
39.1261 58.287 li
39.9423 58.2929 40.7624 58.3273 41.5864 58.3331 cv
41.6139 58.3223 41.6433 58.3125 41.6737 58.3046 cv
41.6737 58.2733 li
41.5609 58.1025 41.4471 57.93 41.3373 57.7563 cv
41.1273 57.4767 40.885 57.1912 40.7329 56.8862 cv
40.6976 56.8135 40.6427 56.7174 40.6849 56.641 cv
40.8389 56.3035 42.1769 56.4899 42.5605 56.4899 cv
42.7401 56.4123 43.207 56.5193 43.4091 56.5252 cv
43.7907 56.5369 44.2193 56.4329 44.5705 56.5566 cv
44.6549 56.5821 44.7197 56.6488 44.7294 56.741 cv
44.7667 57.0117 44.2154 57.7592 44.0761 58.0222 cv
44.0349 58.0996 43.9564 58.1859 43.9564 58.2841 cv
43.9859 58.2841 li
43.9839 58.2958 43.9839 58.3046 43.9839 58.3164 cv
44.4322 58.3184 44.8834 58.3184 45.3308 58.3223 cv
45.5849 58.3184 45.8379 58.3164 46.091 58.3125 cv
46.1283 58.3046 46.1783 58.2987 46.196 58.2575 cv
46.244 58.083 45.4063 57.1569 45.267 56.9607 cv
45.1964 56.8627 45.0423 56.7174 45.0472 56.5919 cv
45.316 56.4673 45.7114 56.5075 46.0459 56.5134 cv
f
43.207 58.2752 mo
43.3855 58.2007 44.08 57.1795 44.082 56.998 cv
43.9348 56.998 43.7858 56.9951 43.6425 56.9951 cv
43.6425 57.0235 li
43.5758 57.0529 43.5032 57.099 43.4581 57.1589 cv
43.3639 57.2717 42.7263 58.1948 42.7263 58.2752 cv
42.7537 58.2752 li
42.7537 58.3067 li
42.9068 58.3046 43.0785 58.3331 43.207 58.2752 cv
f
38.9574 56.9685 mo
38.7377 57.1853 37.6665 57.9584 37.6665 58.2203 cv
37.8528 58.2184 38.102 58.2575 38.2668 58.1918 cv
38.4767 58.1025 39.3988 57.1853 39.3988 56.9725 cv
39.2517 56.9685 39.1026 56.9685 38.9574 56.9685 cv
f
48.3178 58.2242 mo
48.3022 57.6984 48.36 57.0961 47.8842 56.842 cv
47.8097 57.2227 47.8254 57.6523 47.8214 58.0731 cv
47.8166 58.6912 47.8057 59.3023 47.8018 59.8899 cv
47.8018 59.9508 47.7999 60.2107 47.7508 60.2107 cv
47.7508 60.2196 47.7508 60.2274 47.746 60.2371 cv
46.8502 60.2332 45.8949 60.1901 44.9708 60.2136 cv
44.5647 60.2274 44.131 60.2391 43.7367 60.2371 cv
42.9657 60.2332 42.1593 60.1783 41.402 60.1764 cv
40.8311 60.1724 40.3131 60.2538 39.7284 60.2509 cv
39.3556 60.248 37.1004 60.0724 36.9817 60.2764 cv
36.9532 60.3196 36.9934 60.4059 37.0131 60.4382 cv
37.2211 60.81 37.5683 60.706 38.002 60.71 cv
38.0902 60.7002 38.1765 60.6924 38.2628 60.6835 cv
38.4973 60.6835 li
38.7338 60.6924 38.9819 60.7002 39.2027 60.712 cv
39.5715 60.7178 39.9423 60.7178 40.3131 60.7266 cv
40.419 60.6805 40.5652 60.6943 40.6937 60.6943 cv
40.8595 60.6119 41.3529 60.7002 41.5746 60.7002 cv
41.6433 60.663 41.7492 60.6924 41.8356 60.6924 cv
42.229 60.6776 42.6125 60.706 43.0069 60.706 cv
43.2354 60.6138 43.5602 60.7208 43.7955 60.7385 cv
44.3302 60.7727 44.8403 60.7787 45.3749 60.7787 cv
45.5279 60.7208 45.7575 60.7532 45.9321 60.7552 cv
46.1087 60.6865 46.3971 60.7266 46.605 60.7297 cv
47.0838 60.7297 47.5173 60.706 47.9803 60.706 cv
48.0344 60.706 48.2158 60.6865 48.2158 60.7385 cv
48.2452 60.7385 li
48.2452 60.6805 li
48.3502 60.4275 48.2688 60.1126 48.2845 59.8291 cv
48.3022 59.6447 48.3178 59.4602 48.3384 59.2758 cv
48.3502 58.9246 48.3277 58.5499 48.3178 58.2242 cv
f
48.2188 65.6237 mo
48.2188 65.4452 48.1824 65.2833 48.203 65.1273 cv
48.2119 65.0606 48.206 64.7496 48.1628 64.7496 cv
48.0451 64.6858 47.9039 64.6858 47.7518 64.6858 cv
47.7057 64.735 47.6684 64.7663 47.6528 64.8389 cv
47.6106 65.038 47.6449 65.2883 47.6361 65.5001 cv
47.6116 66.2457 47.6528 67.0285 47.6468 67.7603 cv
47.7881 67.7407 48.051 67.7082 48.1393 67.5876 cv
48.2845 67.3797 48.203 66.6528 48.1855 66.3849 cv
48.1727 66.1201 48.2158 65.8885 48.2188 65.6237 cv
f
56.7993 66.0965 mo
56.2696 65.56 55.7105 65.0351 55.1817 64.4985 cv
54.4882 63.7981 53.8318 63.0417 53.1227 62.3472 cv
52.8578 62.0883 52.5704 61.8606 52.3153 61.6037 cv
52.2172 61.4791 52.126 61.3614 52.0318 61.2397 cv
51.0018 60.1704 49.8717 59.1865 48.872 58.1085 cv
48.7436 58.5087 48.8446 59.0188 48.8279 59.4524 cv
48.8162 59.7369 48.8044 60.0204 48.7926 60.3029 cv
48.8073 60.4844 48.8397 60.9435 48.7583 61.0867 cv
48.6297 61.3064 47.0651 61.3035 46.7189 61.3005 cv
46.5698 61.3005 46.1783 61.2828 46.0979 61.381 cv
46.0645 61.4183 46.0793 61.4938 46.0832 61.5428 cv
46.1401 61.9921 46.3961 62.4022 46.556 62.8122 cv
46.658 63.0889 46.7679 63.7834 46.968 63.9767 cv
47.0838 64.0835 47.5939 64.0404 47.7881 64.0404 cv
47.9245 63.9767 48.3051 64.0149 48.4866 64.0168 cv
48.8073 63.9129 48.7436 64.5368 48.7514 64.7212 cv
48.7573 64.8968 48.7652 65.0724 48.774 65.249 cv
48.7652 65.5981 48.6602 67.4601 48.8505 67.6102 cv
48.9633 67.6994 49.4479 67.6504 49.6382 67.6504 cv
49.7402 67.5993 49.8893 67.5935 50.0188 67.5935 cv
50.1768 67.518 50.4092 67.5386 50.6074 67.5386 cv
50.676 67.5297 50.7438 67.5238 50.8115 67.5131 cv
50.9782 67.4522 51.2274 67.4865 51.4236 67.4865 cv
51.4864 67.4522 51.8366 67.4032 51.8366 67.3424 cv
51.9514 67.3708 52.0514 67.4032 52.1888 67.4032 cv
52.276 67.3659 52.4016 67.3737 52.5105 67.3737 cv
52.7283 67.2472 53.0736 67.2933 53.359 67.2933 cv
53.4257 67.2815 53.4915 67.2698 53.5621 67.2619 cv
53.6965 67.1805 53.9143 67.209 54.0899 67.209 cv
54.1585 67.201 54.2272 67.1893 54.2939 67.1805 cv
54.3606 67.1717 54.4312 67.1638 54.4999 67.154 cv
54.6 67.0971 54.7363 67.1049 54.8511 67.0853 cv
55.0061 67.0598 55.1817 67.0304 55.3445 66.9931 cv
55.5868 66.947 55.8134 66.8381 56.0842 66.843 cv
56.199 66.7714 56.4933 66.6988 56.6385 66.6988 cv
56.715 66.6528 56.8326 66.638 56.9308 66.638 cv
56.9828 66.5987 57.1564 66.5458 57.1172 66.4418 cv
57.074 66.3103 56.8994 66.1965 56.7993 66.0965 cv
f
62.7578 37.4977 mo
62.744 37.3791 62.7342 37.2608 62.7244 37.1426 cv
62.7263 37.0475 62.7342 36.9523 62.7382 36.8518 cv
62.7244 36.6497 62.7067 36.4452 62.694 36.2371 cv
62.7117 35.8854 62.7263 35.5368 62.744 35.1846 cv
62.7333 34.8442 62.7166 34.5013 62.7008 34.1639 cv
62.694 33.489 62.7263 32.788 62.6872 32.1392 cv
62.6714 31.8655 62.7764 31.3455 62.6322 31.1464 cv
62.4733 31.4039 62.1711 31.5943 61.9632 31.8277 cv
61.1646 32.716 60.2798 33.5351 59.4107 34.3655 cv
58.8476 34.9541 58.2836 35.5392 57.7195 36.1248 cv
57.4311 36.4015 57.1426 36.6786 56.8503 36.9553 cv
56.5934 37.2147 56.3412 37.4771 56.0842 37.7395 cv
55.8909 37.9244 55.6712 38.0799 55.4829 38.2761 cv
55.3219 38.4665 55.1572 38.6597 54.9973 38.8471 cv
54.8168 39.029 54.6353 39.2046 54.4548 39.3866 cv
54.2684 39.5739 54.0899 39.7613 53.9074 39.9487 cv
53.8279 40.0178 53.7485 40.0845 53.67 40.1507 cv
53.4561 40.3612 53.2286 40.5716 53.0206 40.7879 cv
52.7832 41.0244 52.6037 41.2896 52.3536 41.529 cv
52.126 41.7453 51.6669 42.0509 51.5511 42.328 cv
51.5511 42.3564 51.5472 42.38 51.5413 42.4085 cv
51.5472 42.5036 53.0049 43.9658 53.2031 44.1649 cv
54.3312 45.2636 55.4672 46.3828 56.5855 47.4835 cv
56.6718 47.5856 56.7581 47.6837 56.8406 47.7837 cv
57.0073 47.9427 57.1721 48.0986 57.3389 48.2566 cv
57.5164 48.4332 57.6743 48.6529 57.8587 48.8432 cv
59.0143 50.0106 60.1984 51.2132 61.3628 52.3924 cv
61.5217 52.5532 62.4546 53.5695 62.5684 53.5695 cv
62.7401 53.5695 62.6283 52.5198 62.6302 52.3315 cv
62.638 52.1392 62.6508 51.945 62.6577 51.7469 cv
62.6518 51.6017 62.644 51.4546 62.638 51.3084 cv
62.6577 51.1701 62.6773 51.0367 62.694 50.8993 cv
62.695 50.6619 62.6322 50.4431 62.646 50.195 cv
62.6626 50.0998 62.6783 50.0046 62.694 49.9036 cv
62.7342 49.4945 62.7479 48.9668 62.6989 48.5596 cv
62.6635 48.2997 62.646 48.0172 62.6656 47.7346 cv
62.6773 47.6082 62.7146 47.4727 62.7146 47.3285 cv
62.7008 47.1442 62.6841 46.9558 62.6773 46.7694 cv
62.6832 46.5153 62.7088 46.2494 62.7028 45.9847 cv
62.694 45.8954 62.6832 45.8061 62.6695 45.7158 cv
62.6891 45.4745 62.7088 45.2352 62.7263 44.987 cv
62.7008 44.5887 62.6773 44.1875 62.646 43.7873 cv
62.6421 43.4576 62.7166 43.1319 62.7263 42.8209 cv
62.7302 42.6081 62.6773 42.3741 62.6666 42.149 cv
62.6773 42.0308 62.6793 41.9156 62.6872 41.8002 cv
62.694 41.4481 62.695 41.0964 62.6989 40.7447 cv
62.7166 40.5888 62.7342 40.4333 62.7518 40.2773 cv
62.7263 39.9918 62.7008 39.7123 62.6773 39.4298 cv
62.6656 38.8701 62.6695 38.3281 62.7166 37.7886 cv
62.7333 37.691 62.7421 37.5953 62.7578 37.4977 cv
f
47.7341 22.9955 mo
47.641 23.095 47.6135 23.2118 47.5527 23.3256 cv
47.4821 23.4222 47.4026 23.5218 47.331 23.6214 cv
47.1878 23.7916 46.9788 23.8779 46.8434 24.0393 cv
46.7247 24.1781 46.7051 24.3423 46.5501 24.4517 cv
46.2519 24.6739 46.0459 24.9996 45.8457 25.3052 cv
45.8006 25.369 45.7516 25.4322 45.7065 25.5014 cv
45.6888 25.5333 45.63 25.6083 45.6888 25.6083 cv
45.7339 25.7162 45.8242 25.8045 45.8959 25.8996 cv
46.0704 26.116 46.2323 26.3784 46.2617 26.6668 cv
46.2911 26.8914 46.3187 27.1136 46.3461 27.3412 cv
46.3382 27.6012 46.2264 27.7969 46.1695 28.0191 cv
46.1224 28.1804 46.1322 28.3507 46.0704 28.5052 cv
45.9929 28.616 45.9144 28.7283 45.8379 28.8382 cv
45.7761 28.9652 45.7114 29.0932 45.6456 29.2188 cv
45.4142 29.5415 45.0522 29.7176 44.7412 29.9226 cv
44.5999 30.0089 44.4822 30.1331 44.337 30.2081 cv
44.1094 30.3204 43.8387 30.3592 43.6278 30.5019 cv
43.4208 30.6378 43.3208 30.8511 43.152 31.0184 cv
43.0657 31.1017 42.9303 31.1464 42.8735 31.2533 cv
42.7782 31.427 42.8499 31.5943 42.8362 31.7963 cv
42.8126 31.9057 42.7871 32.0096 42.7626 32.119 cv
42.742 32.327 42.7792 32.5316 42.7773 32.7336 cv
42.7685 32.82 42.7576 32.9093 42.7479 32.9961 cv
42.7792 32.9961 li
42.7792 33.0274 li
42.8087 33.0274 li
42.8087 32.9961 li
43.05 32.8312 43.2423 32.5717 43.464 32.3672 cv
44.1252 31.7271 44.7755 31.0616 45.4357 30.4141 cv
45.8193 30.0394 46.2058 29.6657 46.5933 29.2909 cv
46.7679 29.0849 46.9425 28.8784 47.1191 28.6738 cv
47.4918 28.3247 47.8607 27.9686 48.209 27.6012 cv
48.3384 27.4452 48.4689 27.2897 48.5964 27.1367 cv
48.7141 27.0386 48.8279 26.9375 48.9428 26.8395 cv
49.1487 26.6379 49.3596 26.4358 49.5686 26.2357 cv
50.1425 25.6819 50.6496 25.0605 51.2157 24.4881 cv
51.352 24.3423 51.5177 24.2295 51.662 24.0839 cv
52.2849 23.4742 52.9088 22.8572 53.5366 22.2426 cv
53.8662 21.9258 54.2822 21.6344 54.5627 21.2607 cv
54.5706 21.242 54.5774 21.2277 54.5804 21.2131 cv
54.6216 21.2131 54.6107 21.219 54.6107 21.1831 cv
54.5804 21.1831 li
54.5804 21.1527 li
54.339 21.2308 53.982 21.2308 53.7054 21.1988 cv
53.6268 21.1831 53.5465 21.1743 53.4689 21.1586 cv
53.2384 21.1527 53.0323 21.2391 52.795 21.2361 cv
52.5262 21.2361 52.2575 21.1758 52.0053 21.1454 cv
51.7816 21.1425 51.555 21.1399 51.3353 21.1326 cv
51.2048 21.1915 51.0724 21.1802 50.9214 21.1988 cv
50.6212 21.2308 50.2906 21.242 49.958 21.242 cv
49.7962 21.242 49.5784 21.2107 49.4498 21.2769 cv
49.3822 21.3416 49.3125 21.4038 49.2439 21.4657 cv
49.0516 21.6658 48.8878 21.8605 48.7337 22.09 cv
48.6729 22.1793 48.6151 22.2686 48.5533 22.3608 cv
48.4699 22.452 48.3629 22.4766 48.2707 22.5458 cv
48.1942 22.6178 48.1138 22.6958 48.0344 22.7675 cv
47.9313 22.8543 47.8293 22.8975 47.7341 22.9955 cv
f
45.787 23.6214 mo
45.6201 23.8406 45.3808 23.9745 45.3396 24.2644 cv
45.3416 24.3625 45.3416 24.4577 45.3416 24.5528 cv
45.371 24.5528 45.4014 24.5528 45.4318 24.5557 cv
45.4318 24.5283 li
45.6192 24.3262 46.0979 23.8926 45.787 23.6214 cv
f
45.2053 28.2962 mo
45.2493 28.309 45.3523 28.3737 45.3523 28.3305 cv
45.5378 28.2442 45.6495 28.0162 45.6495 27.8028 cv
45.6201 27.8028 li
45.4809 27.9313 45.2082 28.0853 45.2053 28.2962 cv
f
44.957 26.015 mo
44.8834 26.0954 44.7255 26.1822 44.6961 26.2847 cv
44.6686 26.3667 44.6608 27.3128 44.6843 27.3903 cv
44.7147 27.4726 44.7588 27.5374 44.8609 27.5389 cv
44.957 27.5403 45.0256 27.477 45.0983 27.4236 cv
45.477 27.1465 45.3769 26.782 45.2395 26.4157 cv
45.1631 26.2166 45.1748 26.0841 44.957 26.015 cv
f
44.236 29.4032 mo
44.3527 29.5185 44.7353 29.2791 44.7353 29.1437 cv
44.7539 29.1236 44.7628 29.1148 44.7372 29.1148 cv
44.6549 28.9882 44.5421 28.978 44.3821 28.9676 cv
44.2762 29.0746 44.0702 29.2419 44.236 29.4032 cv
f
46.2479 22.736 mo
46.1891 22.8817 46.04 23.0995 46.2401 23.226 cv
46.3088 23.2667 46.4079 23.3011 46.4952 23.2594 cv
46.6365 23.1858 46.7444 22.9436 46.8366 22.8165 cv
47.0278 22.557 47.8607 21.5246 48.1707 21.5275 cv
48.1707 21.4382 li
47.9352 21.4294 47.739 21.398 47.5282 21.3764 cv
47.435 21.4701 47.3428 21.5593 47.2505 21.6486 cv
47.1417 21.7958 47.076 21.9542 46.9513 22.0871 cv
46.8366 22.1778 46.7238 22.2671 46.6071 22.3554 cv
46.5276 22.3956 46.45 22.4359 46.3677 22.4736 cv
46.2931 22.5398 46.2823 22.6477 46.2479 22.736 cv
f
44.3832 23.4943 mo
44.2959 23.5694 43.9113 24.1663 43.9093 24.2526 cv
43.9711 24.2526 li
44.1586 24.3178 44.4136 24.2443 44.5528 24.1359 cv
44.7137 24.0109 44.7137 23.7999 44.8334 23.6532 cv
44.8982 23.5925 44.9629 23.5306 45.0256 23.4683 cv
45.0923 23.3992 45.1591 23.33 45.2209 23.255 cv
45.2945 23.2015 45.3651 23.1456 45.4357 23.0906 cv
45.5309 22.9783 45.5583 22.8439 45.6378 22.7243 cv
45.7516 22.5703 45.8673 22.4143 45.9782 22.2642 cv
46.0793 22.1072 46.1754 21.9415 46.2705 21.783 cv
46.3382 21.6648 46.5324 21.5162 46.5324 21.372 cv
46.4148 21.3705 46.299 21.3705 46.1793 21.3705 cv
46.04 21.4324 45.8959 21.4554 45.7918 21.5898 cv
45.6927 21.7177 45.6653 21.8722 45.5437 21.9861 cv
45.4063 22.1191 45.1826 22.1621 45.0865 22.3407 cv
45.0139 22.4766 45.0149 22.6409 44.9649 22.7934 cv
44.9227 22.9116 44.8039 22.9436 44.7451 23.0504 cv
44.6961 23.1397 44.702 23.2393 44.6441 23.3271 cv
44.5803 23.4222 44.4655 23.4251 44.3832 23.4943 cv
f
42.7871 23.8406 mo
42.7959 23.8926 42.7782 24.1575 42.8283 24.1604 cv
42.8283 24.1894 li
43.1599 24.1276 43.5365 23.6444 43.6876 23.3619 cv
43.7475 23.2216 43.8064 23.0819 43.8661 22.9376 cv
43.9378 22.8097 44.0133 22.6811 44.0859 22.5516 cv
44.2468 22.1936 44.3645 21.8218 44.595 21.5 cv
44.6127 21.473 44.6127 21.447 44.6569 21.447 cv
44.6569 21.3892 li
44.5019 21.3877 44.3488 21.3877 44.1928 21.3877 cv
43.9476 21.5162 43.1922 21.4009 43.0716 21.5422 cv
42.9499 21.6835 43.0127 21.8247 42.9637 21.9949 cv
42.9196 22.1391 42.7832 22.2372 42.7459 22.3785 cv
42.692 22.5948 42.8185 22.8037 42.8264 23.0186 cv
42.8283 23.1947 42.742 23.2982 42.7302 23.4571 cv
42.7165 23.6042 42.7626 23.7106 42.7871 23.8406 cv
f
42.0563 26.0581 mo
41.9808 26.1013 41.6364 26.4529 41.6158 26.5309 cv
41.5765 26.7041 41.8914 27.6817 42.1092 27.6526 cv
42.3329 27.6267 42.5183 27.4496 42.6714 27.298 cv
42.8185 27.148 43.0137 27.0283 43.0676 26.8223 cv
43.1324 26.5888 42.5497 26.1213 42.3673 26.0611 cv
42.2652 26.0493 42.1632 26.038 42.0573 26.0262 cv
42.0563 26.038 42.0563 26.0493 42.0563 26.0581 cv
f
41.6913 28.0363 mo
41.7708 27.6978 41.0429 27.1627 40.7918 27.0474 cv
40.6113 27.2245 40.6427 27.2676 40.5652 27.5031 cv
40.5191 27.5864 40.4779 27.6689 40.4338 27.7508 cv
40.3641 28.0249 40.5034 28.3678 40.6976 28.5341 cv
40.7761 28.6047 40.8359 28.6896 40.9566 28.6797 cv
41.1116 28.6695 41.2646 28.4978 41.3755 28.3997 cv
41.4824 28.309 41.6639 28.1804 41.6913 28.0363 cv
f
41.1734 29.6136 mo
41.1018 29.516 41.0664 29.4018 40.9674 29.3227 cv
40.9124 29.2806 40.8536 29.2791 40.783 29.2679 cv
40.418 29.8069 40.8939 29.9226 41.3373 30.0149 cv
41.3725 30.0261 41.4824 30.055 41.4824 30.0046 cv
41.5069 30.0046 li
41.4579 29.8275 41.2862 29.7554 41.1734 29.6136 cv
f
39.7599 27.2087 mo
39.8638 27.1917 39.9855 27.0876 40.06 27.0096 cv
40.4406 26.6231 40.1424 26.195 39.7765 25.9571 cv
39.7765 25.986 li
39.6951 26.0233 39.4851 26.2803 39.4822 26.2803 cv
39.5127 26.3956 39.5528 26.5226 39.5557 26.658 cv
39.5636 26.8395 39.4165 27.2593 39.7599 27.2087 cv
f
40.7123 26.2023 mo
40.939 26.2253 41.71 25.6976 41.5452 25.4425 cv
41.4863 25.346 41.3382 25.346 41.2401 25.3214 cv
40.937 25.4843 40.7006 25.5391 40.3386 25.5907 cv
40.2758 25.6054 40.216 25.6196 40.1572 25.6388 cv
40.1572 25.7266 li
40.3317 25.8722 40.4622 26.1705 40.7123 26.2023 cv
f
39.9825 29.4194 mo
40.1208 29.392 40.5505 29.0859 40.5387 28.9245 cv
40.522 28.7691 40.009 28.2845 39.8678 28.1981 cv
39.8128 28.1863 39.7589 28.1662 39.7029 28.1545 cv
39.5656 28.538 39.6637 28.903 39.798 29.2419 cv
39.8344 29.3253 39.8678 29.4439 39.9825 29.4194 cv
f
40.9997 23.1643 mo
41.1508 23.4251 41.5765 24.5626 41.9474 24.5656 cv
41.9474 24.593 li
41.9787 24.593 li
41.9621 24.312 41.9454 24.0279 41.9307 23.7455 cv
41.9532 23.2952 42.017 22.8371 42.024 22.3667 cv
42.0435 22.2632 42.0602 22.1563 42.0779 22.0469 cv
42.0573 21.9503 42.0337 21.8552 42.0121 21.7585 cv
42.0063 21.6315 42.0003 21.503 41.9954 21.3764 cv
41.7747 21.3661 41.3048 21.3764 41.1195 21.3112 cv
40.9527 21.3602 40.526 21.2842 40.421 21.398 cv
40.0992 21.7393 40.4779 22.4952 40.6878 22.7895 cv
40.7889 22.9278 40.9154 23.0186 40.9997 23.1643 cv
f
40.317 24.4793 mo
40.3964 24.5096 40.523 24.5312 40.6074 24.4881 cv
40.7094 24.4346 40.6918 24.2271 40.6897 24.1187 cv
40.6849 23.9672 40.6662 23.8229 40.6133 23.6876 cv
40.5368 23.559 40.4583 23.4281 40.3778 23.2952 cv
40.2601 23.0475 40.115 22.8097 40.0051 22.5599 cv
39.8412 22.1778 39.7 21.5721 39.285 21.3661 cv
39.1399 21.297 38.9182 21.3259 38.7455 21.3259 cv
38.5846 21.4225 38.1177 21.4264 38.0549 21.6025 cv
38.0549 21.6114 38.0529 21.6172 38.0529 21.6226 cv
38.0529 21.6315 38.052 21.6374 38.052 21.6457 cv
38.052 21.6687 li
38.0647 21.806 40.1679 24.4174 40.317 24.4793 cv
f
36.6148 21.6932 mo
36.7542 21.8826 36.9689 22.0165 37.1151 22.2083 cv
37.2466 22.3785 37.3015 22.5948 37.4536 22.7532 cv
37.4584 22.7561 37.4623 22.762 37.4633 22.7665 cv
37.6115 22.9033 37.8175 22.9293 37.9568 23.0705 cv
38.2031 23.3099 38.3561 23.6327 38.5572 23.901 cv
38.6611 24.0407 38.8024 24.0883 38.9221 24.2079 cv
39.1134 24.4012 39.3027 24.593 39.4871 24.7862 cv
39.6019 24.8726 39.798 24.9334 39.958 24.9334 cv
39.9697 24.8961 39.9668 24.8456 40.011 24.8471 cv
39.9118 24.6048 39.7333 24.3699 39.5372 24.1834 cv
39.4439 24.1031 39.3498 24.0221 39.2576 23.9372 cv
39.2095 23.869 39.1634 23.797 39.1163 23.7264 cv
38.9888 23.5634 38.8593 23.3992 38.7307 23.2364 cv
38.5856 23.0819 38.4355 22.9264 38.2904 22.7704 cv
38.1765 22.638 38.1255 22.4893 38.0294 22.3554 cv
37.843 22.0944 37.6439 21.8276 37.4133 21.6025 cv
37.2515 21.4455 37.122 21.3803 36.9052 21.346 cv
36.7953 21.398 36.5638 21.4657 36.5893 21.6315 cv
36.5893 21.6374 36.5932 21.6432 36.5942 21.6546 cv
36.6041 21.6648 36.6099 21.6747 36.6148 21.6932 cv
f
31.0665 22.2632 mo
31.6324 22.7881 32.1396 23.3359 32.6851 23.8867 cv
32.9401 24.1589 33.1912 24.4346 33.4434 24.7083 cv
34.3919 25.6388 35.3425 26.5687 36.3009 27.5046 cv
36.4147 27.6414 36.5364 27.7753 36.6482 27.9126 cv
36.9287 28.201 37.2112 28.4836 37.4849 28.772 cv
38.002 29.311 38.565 29.8172 39.0868 30.3621 cv
39.3517 30.6432 39.6146 30.9261 39.8785 31.2043 cv
40.2434 31.5451 40.6074 31.8856 40.9684 32.223 cv
41.1469 32.3991 41.6364 32.9901 41.8748 32.9901 cv
41.919 32.713 41.814 32.3442 41.7531 32.0848 cv
41.7276 31.9749 41.7551 31.8483 41.7492 31.7326 cv
41.7453 31.6089 41.7041 31.4677 41.657 31.3637 cv
41.5775 31.2116 41.4098 31.1219 41.3048 30.9954 cv
41.1911 30.8339 41.0783 30.678 40.9606 30.5195 cv
40.7859 30.3523 40.5427 30.2655 40.3406 30.1385 cv
40.1905 30.038 40.0423 29.9398 39.8873 29.8358 cv
39.7814 29.7868 39.6725 29.7377 39.5636 29.6858 cv
39.4489 29.5965 39.4008 29.4597 39.286 29.3772 cv
39.1751 29.2924 39.0192 29.2477 38.9299 29.1252 cv
38.8063 28.9593 38.7671 28.772 38.6866 28.5959 cv
38.6179 28.4345 38.5522 28.2726 38.4845 28.1128 cv
38.4433 27.9587 38.4081 27.8028 38.3688 27.6443 cv
38.3433 27.402 38.4002 27.1872 38.4414 26.9724 cv
38.4669 26.8365 38.4845 26.7041 38.5032 26.5687 cv
38.5885 26.2327 38.7749 25.9742 39.0162 25.7206 cv
39.079 25.6574 39.2154 25.4583 39.3105 25.4583 cv
39.2154 25.2679 39.0613 25.0821 38.8927 24.9393 cv
38.8024 24.8701 38.7151 24.802 38.6258 24.7343 cv
38.4757 24.5759 38.3787 24.3939 38.2237 24.2295 cv
37.9598 23.9544 37.6762 23.7626 37.4133 23.4899 cv
37.2015 23.2721 37.0033 23.0112 36.7953 22.7895 cv
36.4843 22.4766 36.1743 22.1705 35.8575 21.8581 cv
35.6613 21.6589 35.4347 21.3661 35.1768 21.2769 cv
34.957 21.2047 34.6941 21.3533 34.4724 21.3533 cv
34.3693 21.3327 34.2595 21.3141 34.1526 21.297 cv
33.4228 21.297 li
33.2481 21.2881 33.0716 21.2769 32.894 21.2651 cv
32.6674 21.2607 32.4319 21.2738 32.222 21.2322 cv
31.9611 21.3014 31.604 21.2607 31.3166 21.2568 cv
30.9016 21.2538 30.4896 21.2798 30.0874 21.2769 cv
30.1855 21.6432 30.7849 21.9978 31.0665 22.2632 cv
f
38.8907 27.1798 mo
38.8838 27.3618 38.822 27.9136 39.1084 27.843 cv
39.5283 27.738 39.1026 27.2548 38.8907 27.1798 cv
f
27.6688 47.6718 mo
27.97 47.3599 28.2716 47.0479 28.5802 46.74 cv
29.0412 46.2848 29.5087 45.8345 29.9677 45.3783 cv
30.3012 45.0409 30.6309 44.7211 30.9605 44.3837 cv
31.0959 44.2463 31.1822 44.0757 31.3215 43.9481 cv
31.7256 43.5881 32.3436 43.077 32.6066 42.6278 cv
32.6497 42.5669 32.688 42.5036 32.7312 42.4433 cv
32.8636 42.123 30.6151 40.0095 30.2601 39.6721 cv
29.7019 39.0923 29.1408 38.5126 28.5743 37.9328 cv
27.9857 37.3736 27.3687 36.8542 26.7835 36.298 cv
26.6707 36.1881 26.6163 36.067 26.5123 35.9576 cv
26.2685 35.7064 26.0031 35.4877 25.754 35.2508 cv
25.6181 35.1242 25.5117 34.9854 25.392 34.8472 cv
25.0516 34.4552 24.6724 34.0889 24.2904 33.7313 cv
24.1172 33.5468 23.9441 33.359 23.7671 33.1716 cv
23.2652 32.6816 22.759 32.1882 22.2544 31.6982 cv
22.0262 31.4731 21.787 31.1425 21.4872 31.0341 cv
21.4858 31.3838 21.496 31.7414 21.5 32.0877 cv
21.4872 32.2142 21.47 32.3412 21.4539 32.4654 cv
21.4397 32.6871 21.4843 32.895 21.4814 33.1143 cv
21.4671 33.2986 21.4554 33.483 21.4441 33.668 cv
21.4499 33.8235 21.4598 33.9795 21.4671 34.1379 cv
21.4745 34.8559 21.4485 35.6113 21.4554 36.3613 cv
21.4715 36.5457 21.4858 36.7276 21.5 36.915 cv
21.4745 37.2667 21.4539 37.6159 21.4323 37.9676 cv
21.4137 38.7028 21.447 39.4298 21.4554 40.165 cv
21.4397 40.5054 21.421 40.8457 21.4048 41.1886 cv
21.3862 41.633 21.4353 42.0711 21.4166 42.5355 cv
21.3994 42.7346 21.3817 42.9417 21.3616 43.1476 cv
21.372 43.3164 21.3803 43.4812 21.3847 43.6459 cv
21.3847 44.2021 21.3817 44.7564 21.3749 45.3126 cv
21.3862 45.5088 21.3921 45.705 21.3994 45.8983 cv
21.3994 46.2299 21.3749 46.5526 21.369 46.8675 cv
21.3749 47.0774 21.3847 47.2932 21.3921 47.5071 cv
21.3965 48.0172 21.369 48.5489 21.3587 49.0295 cv
21.3647 49.2061 21.3734 49.3817 21.3803 49.5573 cv
21.3847 50.0655 21.3749 50.5756 21.3749 51.1121 cv
21.3587 51.7527 21.346 52.3953 21.3356 53.0378 cv
21.3356 53.2516 21.3416 53.4675 21.3431 53.6794 cv
21.3489 53.7245 21.4166 53.8893 21.4166 53.8314 cv
21.447 53.8314 li
21.5995 53.595 21.8953 53.3753 22.0984 53.1653 cv
22.7144 52.563 23.3315 51.9597 23.9485 51.3564 cv
24.3654 50.9591 24.7127 50.4922 25.1408 50.0909 cv
25.9065 49.3846 26.6707 48.6469 27.4349 47.9367 cv
27.5129 47.8474 27.5893 47.7582 27.6688 47.6718 cv
f
38.3159 63.4087 mo
38.4806 62.9555 38.6572 62.514 38.8338 62.0736 cv
38.9299 61.8175 39.1084 61.4673 39.1104 61.1848 cv
38.6631 61.1789 38.2364 61.2142 37.8224 61.228 cv
37.586 61.2397 37.021 61.2142 36.8444 61.1161 cv
36.7198 61.0436 36.6835 60.9061 36.6148 60.7983 cv
36.4903 60.6119 36.3402 60.4324 36.2666 60.2254 cv
36.191 60.0086 36.2205 59.7486 36.2234 59.4975 cv
36.2264 59.1062 36.2352 58.7304 36.2636 58.3615 cv
36.2842 58.1281 36.3647 57.4512 36.2381 57.2746 cv
36.0439 57.4738 35.8516 57.6729 35.6583 57.8691 cv
35.0002 58.5617 34.3174 59.2091 33.6248 59.8762 cv
33.1284 60.3549 32.6811 60.8768 32.1935 61.3751 cv
31.4058 62.1745 30.5838 62.924 29.7784 63.6971 cv
29.6499 63.8383 29.5199 63.9855 29.3919 64.1296 cv
29.2315 64.2817 29.0745 64.4386 28.92 64.5917 cv
28.6017 64.9056 28.2628 65.1823 27.9485 65.4962 cv
27.7448 65.7012 27.5418 65.9062 27.3397 66.1102 cv
27.1151 66.3124 26.8095 66.5812 26.6535 66.8284 cv
26.6319 66.8656 26.655 66.849 26.6103 66.849 cv
26.6103 66.9068 li
26.6423 66.9068 li
26.8728 67.0285 27.2186 67.0304 27.4883 67.0676 cv
27.84 67.1314 28.1937 67.1952 28.5438 67.258 cv
28.6998 67.2638 28.8553 67.2698 29.0083 67.2815 cv
29.1177 67.3051 29.2247 67.3306 29.3311 67.356 cv
29.5749 67.3973 29.8206 67.4375 30.0639 67.4748 cv
30.3533 67.5268 30.6564 67.5238 30.9693 67.5562 cv
31.6394 67.6219 32.2868 67.7603 32.9862 67.7661 cv
33.0902 67.7201 33.2756 67.7368 33.3952 67.7485 cv
33.6974 67.7779 33.9996 67.8064 34.2997 67.8329 cv
34.4567 67.8554 34.6156 67.8721 34.7746 67.8957 cv
34.9776 67.8957 35.2013 67.8465 35.4121 67.878 cv
35.6338 67.9133 35.8516 68.0143 36.0881 68.0143 cv
36.0881 67.9859 li
36.1518 67.9329 36.1959 67.8613 36.2165 67.7779 cv
36.2872 67.4424 36.246 66.9499 36.2441 66.6125 cv
36.248 65.8336 36.2538 65.0528 36.2626 64.271 cv
36.2636 64.2013 36.2715 64.1267 36.3283 64.0865 cv
36.4794 63.9884 37.3211 64.0424 37.5722 64.0424 cv
37.6311 64.0316 37.69 64.0286 37.7488 64.0149 cv
37.8626 63.9707 37.9823 64.0316 38.0726 63.9394 cv
38.1922 63.7981 38.2482 63.5754 38.3159 63.4087 cv
f
41.0841 69.2141 mo
41.1528 69.1905 41.4353 69.2425 41.4353 69.1886 cv
41.4667 69.1886 li
41.4707 68.7177 41.4883 68.2763 41.502 67.8122 cv
41.5098 67.3394 41.4824 66.7195 41.6767 66.3555 cv
41.9101 65.9121 42.0219 65.5981 42.5968 65.5314 cv
42.6635 65.5197 42.7537 65.5197 42.7626 65.4412 cv
42.7901 65.1214 42.1975 65.0351 41.9592 65.0351 cv
41.8198 65.0841 41.6864 65.0979 41.5609 65.1705 cv
40.6937 65.6551 40.8046 66.9245 40.7986 67.8642 cv
40.7986 68.0143 40.7986 68.392 40.7094 68.4813 cv
40.523 68.6627 38.5002 68.5823 38.0745 68.5793 cv
38.0362 68.5793 38.0461 68.5705 38.0461 68.6117 cv
38.0176 68.6117 li
38.0176 68.6431 li
38.0461 68.6431 li
38.2422 68.7638 38.4905 68.8041 38.7082 68.8943 cv
38.9819 69.0091 39.2595 69.2219 39.5656 69.2543 cv
39.9246 69.2572 40.2827 69.2592 40.6456 69.265 cv
40.7889 69.2572 40.9252 69.2141 41.0841 69.2141 cv
f
43.2089 68.7638 mo
43.1619 68.6608 43.0814 68.5529 43.0627 68.4322 cv
43.0618 67.9251 43.0569 67.4169 43.048 66.9127 cv
43.05 66.7018 43.0971 66.4418 43.0363 66.2496 cv
43.0127 66.1799 42.947 66.1514 42.891 66.122 cv
42.7086 66.1965 42.5144 66.1829 42.3751 66.3389 cv
42.2348 66.485 42.1798 66.7362 42.1436 66.9382 cv
42.1063 67.1001 42.072 67.2679 42.0337 67.4375 cv
42.0121 67.7308 42.0475 68.0487 42.0514 68.34 cv
42.0475 68.4783 42.0386 68.6117 42.0318 68.7491 cv
42.0475 68.8883 42.0612 69.0258 42.0749 69.1621 cv
42.0612 69.3063 42.0514 69.4534 42.0337 69.6005 cv
42.0219 69.6575 42.0023 69.7183 41.9896 69.7751 cv
41.6512 69.785 41.3078 69.7987 40.9645 69.8086 cv
40.8585 69.8282 40.7496 69.8517 40.6407 69.8733 cv
40.5995 69.8792 40.5534 69.8634 40.5534 69.9125 cv
40.525 69.9125 li
40.525 69.94 li
40.5534 69.94 li
40.5534 69.9694 li
40.7614 70.0734 41.1175 70.2774 41.2941 70.4344 cv
41.4736 70.6326 41.659 70.8307 41.8356 71.0308 cv
41.8611 71.0308 li
42.0288 70.7228 42.2907 70.4834 42.5458 70.2225 cv
42.6488 70.0989 42.7518 69.9772 42.8519 69.8576 cv
43.051 69.6869 43.3169 69.5201 43.4443 69.2769 cv
43.4561 69.2543 43.4532 69.2572 43.4267 69.2572 cv
43.3541 69.0925 43.2844 68.9315 43.2089 68.7638 cv
f
43.7533 68.498 mo
43.77 68.6775 43.8671 68.9433 43.9996 69.0581 cv
44.0271 69.0748 44.0447 69.0925 44.0447 69.0552 cv
44.3096 68.9315 44.5822 68.8099 44.8531 68.6922 cv
44.9433 68.6491 45.0738 68.5647 45.1866 68.5647 cv
45.1866 68.5038 li
44.8667 68.496 44.5303 68.4705 44.1958 68.4705 cv
44.0633 68.5097 43.9015 68.498 43.7533 68.498 cv
f
1.45333 36.0871 mo
.82159 35.8914 .666091 35.4587 .853434 34.6279 cv
1.05404 33.7313 li
5.76914 34.7868 li
6.62107 34.9771 6.69168 35.2625 6.59365 35.7064 cv
6.77848 35.7471 li
7.26556 33.5582 li
7.08264 33.5179 li
6.96441 34.0457 6.73046 34.1408 5.98541 33.9736 cv
1.23556 32.9122 li
1.446 31.9749 li
1.66669 30.9924 2.08065 30.8683 2.62259 30.8683 cv
2.65152 30.7487 li
1.23556 30.4298 li
1.19386 30.626 li
1.30908 30.8565 1.32043 31.1204 1.19828 31.655 cv
.477242 34.8962 li
.417879 35.1532 .351678 35.3435 .288393 35.4759 cv
.213356 35.6142 .136811 35.7035 .0416838 35.7731 cv
0 35.9547 li
1.41556 36.2691 li
1.45333 36.0871 li
cp
f
4.05141 26.7733 mo
7.60007 28.5052 li
8.35004 28.8725 8.40207 29.1526 8.18871 29.5905 cv
8.35687 29.6715 li
9.35948 27.6169 li
9.19223 27.5345 li
8.95436 28.0206 8.65561 28.0824 7.96652 27.7479 cv
6.317 26.9449 li
7.83111 23.8436 li
9.47771 24.6479 li
10.2374 25.0168 10.2939 25.2783 10.0731 25.7266 cv
10.2418 25.8074 li
11.2365 23.77 li
11.0664 23.6876 li
10.8314 24.1751 10.5229 24.2212 9.84948 23.8926 cv
6.29982 22.1621 li
5.62489 21.8336 5.47331 21.5623 5.71117 21.0748 cv
5.54252 20.9943 li
4.54774 23.0303 li
4.71801 23.1137 li
4.95588 22.6261 5.23544 22.58 5.93046 22.916 cv
7.55105 23.7077 li
6.03835 26.811 li
4.41635 26.0164 li
3.69531 25.6633 3.61877 25.369 3.83655 24.9206 cv
3.66789 24.8383 li
2.66287 26.8944 li
2.83153 26.9783 li
3.07834 26.4721 3.37698 26.4446 4.05141 26.7733 cv
f
15.1585 16.8056 mo
15.0373 16.9512 li
15.4341 17.7699 15.3189 17.9749 14.7244 18.69 cv
14.0181 19.5406 li
13.7905 19.8089 13.6272 19.8206 13.3893 19.6214 cv
11.6476 18.1681 li
12.6526 16.964 li
13.0695 16.4637 13.1863 16.4289 13.6865 16.6741 cv
13.8048 16.5299 li
12.6266 15.545 li
12.504 15.6892 li
12.8644 16.1061 12.8183 16.2817 12.5403 16.6138 cv
11.4112 17.9705 li
9.32754 16.2386 li
10.4969 14.8372 li
10.9428 14.3021 11.1271 14.1682 11.753 14.5013 cv
11.8305 14.4076 li
11.0173 13.7297 li
8.09499 17.2391 li
8.23874 17.3588 li
8.58349 16.941 8.86455 16.9483 9.47178 17.4501 cv
12.5114 19.9849 li
13.1573 20.521 13.1343 20.7879 12.8169 21.1729 cv
12.9626 21.291 li
15.8824 17.7817 li
15.1585 16.8056 li
cp
f
24.3423 11.3333 mo
25.0746 10.9192 25.493 10.3036 25.6745 9.38941 cv
26.1086 10.1624 li
27.4668 9.39826 li
27.3731 9.23241 li
26.9479 9.47329 26.6609 9.43301 26.2542 8.71056 cv
24.3178 5.2718 li
23.9427 4.60671 23.9848 4.30114 24.4473 4.04308 cv
24.3566 3.87884 li
22.4113 4.97456 li
22.5035 5.13589 li
22.9577 4.90837 23.226 5.0481 23.5865 5.68375 cv
25.4568 9.00589 li
25.4091 9.82056 25.0285 10.4508 24.3914 10.8113 cv
23.4585 11.3362 22.6477 10.9957 22.1651 10.1496 cv
20.5931 7.35487 li
20.1982 6.65151 20.286 6.38611 20.7403 6.12966 cv
20.6494 5.96633 li
18.6552 7.08857 li
18.7474 7.25281 li
19.1814 7.00911 19.4557 7.04638 19.8652 7.77767 cv
21.395 10.494 li
21.9355 11.4461 23.0057 12.0861 24.3423 11.3333 cv
f
34.9835 .729379 mo
34.9393 .54937 li
33.0853 1.02069 li
33.1334 1.20271 li
33.667 1.0683 33.9348 1.21396 34.1398 2.01838 cv
35.0599 5.60631 li
35.0384 5.61022 li
29.9815 1.81677 li
28.407 2.22048 li
28.4516 2.39949 li
29.2001 2.27834 29.4782 2.61827 29.6528 3.30345 cv
30.5721 6.89239 li
30.8006 7.78058 30.5937 8.00529 30.0826 8.13819 cv
30.1287 8.3182 li
31.9924 7.84095 li
31.9434 7.66245 li
31.3882 7.80067 31.0841 7.63935 30.9261 7.01886 cv
29.8206 2.7134 li
29.8432 2.70798 li
35.5377 6.93257 li
35.7202 6.88646 li
34.439 1.89723 li
34.2585 1.17669 34.386 .882367 34.9835 .729379 cv
f
39.8462 1.29784 mo
40.0423 5.23986 li
40.0835 6.04578 39.8962 6.25472 39.3772 6.27773 cv
39.3851 6.46858 li
41.659 6.35136 li
41.6512 6.16692 li
41.1195 6.19435 40.9194 5.96924 40.884 5.19817 cv
40.6878 1.25565 li
40.6486 .49593 40.8252 .239376 41.3548 .216373 cv
41.3431 .026017 li
39.0683 .138322 li
39.079 .328675 li
39.6235 .299748 39.8069 .503263 39.8462 1.29784 cv
f
51.0969 1.01486 mo
51.1235 .81617 li
49.29 .570967 li
49.2674 .756803 li
49.8384 .83626 49.8893 1.18945 49.6215 1.69854 cv
47.6429 5.41696 li
46.6501 1.15901 li
46.5276 .641585 46.7796 .428225 47.2269 .490003 cv
47.2505 .302661 li
44.9717 0 li
44.9501 .187342 li
45.5378 .28699 45.6535 .599894 45.8467 1.40723 cv
47.1073 6.76241 li
47.2829 6.78541 li
49.7913 2.07915 li
50.2248 1.26599 50.6251 .951578 51.0969 1.01486 cv
f
55.5477 8.50163 mo
54.5097 8.12202 li
54.1801 7.99987 54.1154 7.84678 54.2243 7.55838 cv
55.0022 5.43022 li
56.4756 5.96924 li
57.0868 6.19435 57.1584 6.28958 57.0995 6.84327 cv
57.2761 6.90655 li
57.8038 5.46457 li
57.6273 5.40129 li
57.3575 5.87994 57.1731 5.8942 56.7719 5.74754 cv
55.1101 5.13881 li
56.0381 2.59517 li
57.7509 3.22249 li
58.4042 3.46036 58.5935 3.58743 58.4905 4.2923 cv
58.6063 4.3359 li
58.9692 3.3363 li
54.6805 1.76775 li
54.6196 1.94334 li
55.1268 2.13269 55.2151 2.39949 54.9483 3.1362 cv
53.5876 6.85462 li
53.2992 7.64176 53.0383 7.71388 52.5704 7.54121 cv
52.5056 7.71689 li
56.7924 9.28595 li
57.4703 8.27651 li
57.2928 8.2073 li
56.6561 8.85923 56.4207 8.81996 55.5477 8.50163 cv
f
61.8239 11.8061 mo
61.3903 11.522 61.35 11.215 61.7768 10.5705 cv
62.7333 9.12161 li
63.1561 9.40117 li
64.1233 10.0398 63.5808 11.4691 63.7761 13.3202 cv
64.859 14.0324 li
64.9591 13.8754 li
64.1252 13.2324 64.9414 11.27 64.3764 9.98238 cv
65.3043 10.2605 65.9371 9.97656 66.3207 9.39826 cv
66.7847 8.69439 66.664 7.63493 65.4731 6.8492 cv
63.3032 5.42138 li
63.1992 5.58029 li
63.625 5.85693 63.7133 6.10214 63.2551 6.79575 cv
61.0764 10.1074 li
60.6065 10.8202 60.3249 10.8202 59.9198 10.5518 cv
59.8188 10.7103 li
61.7209 11.965 li
61.8239 11.8061 li
cp
64.4706 6.47984 mo
65.0229 6.84628 li
65.8341 7.38229 66.0352 8.22599 65.5731 8.92834 cv
65.17 9.53798 64.4185 9.91568 63.5249 9.32613 cv
62.8794 8.89941 li
64.4706 6.47984 li
cp
f
67.3841 16.135 mo
67.535 16.2846 67.69 16.9165 68.1649 17.401 cv
68.8633 18.1088 70.0033 18.1191 70.7134 17.4182 cv
71.0127 17.1254 71.2177 16.7649 71.2255 16.1405 cv
71.2344 14.8588 70.3221 13.4933 71.1549 12.6713 cv
71.5747 12.2592 72.1702 12.3397 72.6323 12.8154 cv
73.0845 13.2711 73.2875 13.998 72.6891 14.7303 cv
72.8206 14.8647 li
73.8791 13.8249 li
73.7535 13.6979 li
73.6123 13.7758 73.5798 13.7758 73.5082 13.7037 cv
73.3395 13.5306 73.2875 13.1328 72.8147 12.6512 cv
72.0927 11.9189 71.1333 11.8885 70.4388 12.5702 cv
70.0827 12.9195 69.8796 13.3388 69.8747 13.8857 cv
69.8649 14.8892 70.6958 16.4578 69.9189 17.2249 cv
69.4265 17.7066 68.7573 17.6517 68.2208 17.1126 cv
67.8343 16.7143 67.4331 15.7569 68.263 14.9294 cv
68.1286 14.797 li
66.9092 15.9992 li
67.0416 16.1321 li
67.2016 16.0556 67.3085 16.0556 67.3841 16.135 cv
f
71.6424 20.9335 mo
71.4864 21.0375 li
72.7863 22.9116 li
72.9403 22.8037 li
72.6401 22.3667 72.7206 22.0813 73.3601 21.6403 cv
76.5993 19.3934 li
77.23 18.9583 77.5341 18.9725 77.8373 19.4081 cv
77.9923 19.3012 li
76.6954 17.43 li
76.5444 17.5379 li
76.8484 17.9802 76.7759 18.2471 76.1245 18.7013 cv
72.8785 20.9477 li
72.2153 21.4093 71.9377 21.3602 71.6424 20.9335 cv
f
80.2034 23.7626 mo
80.582 24.596 li
76.1912 26.6119 li
75.3976 26.9753 75.1671 26.7874 74.9777 26.3769 cv
74.8081 26.4529 li
75.7399 28.4934 li
75.9136 28.4169 li
75.687 27.924 75.8155 27.7032 76.509 27.3858 cv
80.9342 25.3601 li
81.3335 26.2357 li
81.7514 27.1495 81.4982 27.4986 81.0686 27.8273 cv
81.1196 27.9396 li
82.4361 27.3358 li
82.3547 27.1568 li
82.1202 27.0445 81.9525 26.8424 81.7229 26.3377 cv
80.3407 23.3242 li
80.2308 23.0819 80.167 22.8915 80.1386 22.7473 cv
80.1122 22.586 80.119 22.4766 80.1563 22.3608 cv
80.0808 22.1911 li
78.7613 22.7934 li
78.8408 22.9666 li
79.4657 22.7389 79.8473 22.9897 80.2034 23.7626 cv
f
84.1842 34.6917 mo
83.9998 34.7319 li
84.1096 35.2508 83.6486 35.3258 83.0992 35.1297 cv
81.3315 34.4783 li
82.9521 32.8548 li
83.2758 32.5256 83.5299 32.5487 83.676 33.2295 cv
83.8605 33.1893 li
83.3435 30.7687 li
83.1581 30.8065 li
83.2405 31.3009 83.1424 31.5138 82.5538 32.0877 cv
80.7773 33.8495 li
78.8319 34.2674 li
77.9482 34.4581 77.7883 34.1983 77.6872 33.7195 cv
77.5057 33.7602 li
77.9883 36.0179 li
78.1747 35.9777 li
78.059 35.45 78.264 35.2484 79.0085 35.0895 cv
80.9548 34.6715 li
83.4465 35.597 li
84.0616 35.8276 84.2293 35.9606 84.3588 36.4275 cv
84.5461 36.3873 li
84.1842 34.6917 li
cp
f
5.48074 56.7096 mo
7.25572 56.1995 8.23623 54.3759 7.7183 52.5689 cv
7.18219 50.709 5.42138 49.6986 3.61344 50.2185 cv
1.80642 50.7364 .802906 52.5689 1.32626 54.3856 cv
1.84961 56.2015 3.67522 57.2256 5.48074 56.7096 cv
1.55579 54.3072 mo
1.16192 52.9348 2.09632 51.6664 3.87141 51.1582 cv
5.63322 50.6481 7.07671 51.221 7.49218 52.6572 cv
7.84979 53.9128 7.06788 55.2391 5.1604 55.7894 cv
3.68115 56.2132 1.99527 55.8355 1.55579 54.3072 cv
f
9.66505 58.7048 mo
9.92894 59.1698 9.84114 59.4347 9.14853 59.8291 cv
5.72152 61.7851 li
5.03925 62.1745 4.75528 62.1226 4.49139 61.6605 cv
4.32414 61.7528 li
5.45764 63.7313 li
5.62197 63.6392 li
5.35658 63.1782 5.46597 62.9005 6.13799 62.514 cv
7.75758 61.5889 li
8.5865 63.0398 li
8.8072 63.4224 8.68746 63.7461 8.30393 63.9913 cv
8.39022 64.1444 li
9.93477 63.2615 li
9.84948 63.1065 li
9.37806 63.3135 9.08233 63.2811 8.84446 62.8672 cv
8.02829 61.4359 li
10.3341 60.1214 li
11.1315 61.5222 li
11.4759 62.1197 11.5249 62.304 10.9325 62.8201 cv
11.0016 62.9495 li
11.9807 62.3845 li
9.82939 58.6097 li
9.66505 58.7048 li
cp
f
17.4137 69.167 mo
17.8307 69.5143 17.8292 69.7967 17.3318 70.401 cv
14.821 73.4617 li
14.2909 74.1111 14.0195 74.0895 13.636 73.7756 cv
13.5149 73.9228 li
17.0463 76.8147 li
18.0195 76.0828 li
17.8739 75.9652 li
17.0562 76.3693 16.8487 76.2536 16.1306 75.6649 cv
15.2782 74.9646 li
15.0045 74.7389 14.9942 74.5741 15.1904 74.3386 cv
16.6266 72.5847 li
17.8405 73.5794 li
18.3481 73.9914 18.3814 74.1111 18.1436 74.6094 cv
18.2863 74.731 li
19.2609 73.5421 li
19.1152 73.4205 li
18.7013 73.7854 18.5228 73.7383 18.1926 73.4675 cv
16.8257 72.3492 li
18.5414 70.252 li
19.9515 71.4056 li
20.4925 71.8489 20.6264 72.0314 20.2964 72.6631 cv
20.39 72.7377 li
21.0635 71.9156 li
17.5305 69.0237 li
17.4137 69.167 li
cp
f
26.8497 75.2863 mo
24.1894 74.062 li
24.1099 74.2308 li
24.5916 74.4545 24.6622 74.7526 24.3423 75.4491 cv
22.6914 79.0336 li
22.3608 79.7418 22.0783 79.8577 21.6167 79.6438 cv
21.5377 79.8145 li
24.2673 81.072 li
26.5265 82.1158 28.0593 81.2015 28.7243 79.7536 cv
29.4135 78.2567 29.0486 76.2987 26.8497 75.2863 cv
27.8346 79.3554 mo
27.1151 80.923 25.8055 81.5154 24.3825 80.8562 cv
23.7886 80.5855 li
23.255 80.3363 23.1323 80.0773 23.5449 79.1827 cv
25.5 74.9351 li
26.5971 75.4393 li
28.4139 76.2791 28.4688 77.98 27.8346 79.3554 cv
f
33.3786 77.8565 mo
33.9093 77.9722 34.0368 78.2174 33.8642 78.9924 cv
33.0146 82.8476 li
32.842 83.6363 32.6046 83.7893 32.0984 83.6736 cv
32.0562 83.858 li
34.282 84.3485 li
34.3213 84.1641 li
33.8014 84.0503 33.668 83.7796 33.8367 83.0281 cv
34.6863 79.171 li
34.8491 78.4312 35.0845 78.2311 35.6035 78.3429 cv
35.6437 78.1625 li
33.4189 77.672 li
33.3786 77.8565 li
cp
f
44.1271 78.7452 mo
44.1291 78.9355 li
44.6843 78.9296 44.905 79.1376 44.9158 79.9675 cv
44.957 83.6677 li
44.9334 83.6677 li
40.9233 78.7824 li
39.2988 78.8001 li
39.3027 78.9865 li
40.0502 79.0473 40.2434 79.4436 40.2523 80.15 cv
40.2935 83.8521 li
40.3033 84.7723 40.0502 84.9391 39.5205 84.9449 cv
39.5224 85.1353 li
41.4431 85.1117 li
41.4412 84.9214 li
40.8663 84.9312 40.6133 84.7036 40.6074 84.0602 cv
40.5534 79.6163 li
40.5779 79.6163 li
45.1061 85.0686 li
45.2915 85.0686 li
45.2356 79.9184 li
45.2278 79.1768 45.423 78.9198 46.042 78.912 cv
46.04 78.7276 li
44.1271 78.7452 li
cp
f
53.6367 80.1342 mo
53.6317 80.1146 li
54.3979 79.6065 54.6589 79.0611 54.4744 78.3921 cv
54.2635 77.6151 53.414 77.0815 51.9436 77.4837 cv
49.6421 78.1154 li
49.6892 78.2999 li
50.2013 78.1566 50.4368 78.2999 50.6496 79.0788 cv
51.6943 82.883 li
51.9014 83.6304 51.7826 83.9031 51.2705 84.0425 cv
51.3236 84.2249 li
54.135 83.4538 li
55.2847 83.1302 55.94 82.3375 55.685 81.4174 cv
55.4574 80.5992 54.6265 80.0714 53.6367 80.1342 cv
51.2048 77.9408 mo
51.816 77.7701 li
52.8048 77.4994 53.4257 77.9133 53.6377 78.6805 cv
53.8485 79.4476 53.4444 80.1088 52.5488 80.356 cv
51.9199 80.5306 li
51.2048 77.9408 li
cp
53.8898 83.2694 mo
53.3875 83.4048 li
52.9088 83.5382 52.7048 83.3754 52.4771 82.5553 cv
51.9847 80.764 li
52.5634 80.6051 li
53.6377 80.3069 54.4862 80.7287 54.7315 81.6234 cv
54.9806 82.5199 54.5058 83.0968 53.8898 83.2694 cv
f
65.371 77.0049 mo
63.3807 73.6009 li
62.9951 72.9398 63.0344 72.6338 63.4955 72.3689 cv
63.3994 72.208 li
61.4727 73.3322 li
61.5649 73.493 li
62.0161 73.2537 62.2889 73.393 62.6557 74.0208 cv
64.5804 77.3169 li
64.5441 78.1331 64.1723 78.7707 63.5435 79.1376 cv
62.6145 79.6771 61.8004 79.3495 61.3069 78.5078 cv
59.6922 75.7435 li
59.2831 75.0449 59.3734 74.7742 59.8188 74.5172 cv
59.7236 74.3524 li
57.7499 75.506 li
57.8421 75.6669 li
58.2708 75.4177 58.5484 75.4491 58.9732 76.1731 cv
60.5427 78.8668 li
61.0921 79.8125 62.1771 80.4344 63.5013 79.6614 cv
64.2273 79.2377 64.6314 78.6157 64.8021 77.6975 cv
65.2495 78.4627 li
66.5914 77.6779 li
66.4972 77.5131 li
66.0774 77.7583 65.7899 77.7211 65.371 77.0049 cv
f
70.7723 69.885 mo
71.2255 69.0316 71.0745 68.3508 70.58 67.8613 cv
69.9787 67.2698 68.9173 67.1864 67.9117 68.2047 cv
66.0931 70.0499 li
66.2225 70.1853 li
66.5797 69.8222 66.8396 69.7811 67.4282 70.3638 cv
70.2524 73.1497 li
70.8625 73.7501 70.8096 74.0208 70.4682 74.3701 cv
70.5996 74.4996 li
72.2006 72.879 li
72.0652 72.7456 li
71.7023 73.1163 71.3962 73.0947 70.8468 72.5513 cv
69.6089 71.3329 li
69.9679 70.97 li
70.7822 70.146 72.077 70.9582 73.933 71.123 cv
74.8394 70.2029 li
74.7041 70.0695 li
73.9124 70.766 72.1457 69.5799 70.7723 69.885 cv
69.966 70.5953 mo
69.4176 71.1485 li
67.3565 69.116 li
67.8235 68.6431 li
68.5082 67.9476 69.3744 67.9192 69.9728 68.5097 cv
70.4917 69.0237 70.7154 69.834 69.966 70.5953 cv
f
78.2424 60.5158 mo
78.0806 60.4216 li
76.7465 62.6101 li
76.9054 62.7082 li
77.0339 62.5003 li
77.3056 62.0569 77.6333 62.051 78.2944 62.4512 cv
78.8781 62.8083 li
79.3627 63.1006 79.14 63.6794 78.9056 64.066 cv
78.1228 65.3529 76.3766 65.5825 74.7924 64.6143 cv
73.3052 63.7147 72.8451 62.2786 73.521 61.1652 cv
73.9742 60.4275 74.9631 59.7781 76.0823 60.2627 cv
76.1745 60.1126 li
74.5785 59.1375 li
74.4744 59.3112 li
74.5707 59.4465 74.5707 59.5505 74.4686 59.7202 cv
74.2175 60.1352 73.7809 60.2705 73.315 61.0376 cv
72.5067 62.3708 72.698 64.4818 74.6128 65.6463 cv
75.8587 66.4046 77.7794 66.485 79.2273 64.1071 cv
79.3755 63.8618 79.915 62.8691 80.0161 62.5179 cv
78.5593 61.6292 li
78.0894 61.3408 77.9196 61.0494 78.2424 60.5158 cv
f
82.7892 51.5909 mo
78.9988 50.497 li
78.2767 50.2901 78.0806 50.0478 78.2306 49.5289 cv
78.0521 49.4769 li
77.4204 51.6507 li
77.6038 51.7096 li
77.751 51.1876 78.0197 51.0896 78.7652 51.3054 cv
80.4976 51.8037 li
79.5383 55.1175 li
77.8099 54.6192 li
77.0339 54.3935 76.9044 54.1169 77.0466 53.6382 cv
76.8642 53.5861 li
76.2304 55.7865 li
76.407 55.8385 li
76.567 55.296 76.8544 55.2215 77.5773 55.4255 cv
81.3648 56.5222 li
82.1742 56.7528 82.2674 57.0216 82.1359 57.4905 cv
82.3154 57.5434 li
82.9521 55.3431 li
82.7686 55.2901 li
82.6225 55.8129 82.3341 55.9249 81.6023 55.7119 cv
79.8385 55.2038 li
80.794 51.8901 li
82.5577 52.4012 li
83.366 52.6316 83.4661 52.8799 83.3278 53.3586 cv
83.5054 53.4105 li
84.1381 51.2329 li
83.9586 51.1818 li
83.8055 51.6998 83.5122 51.8018 82.7892 51.5909 cv
f
2.19145 43.1319 mo
2.18703 43.4409 2.43816 43.6951 2.74233 43.6951 cv
3.05523 43.6951 3.30636 43.4498 3.30636 43.1418 cv
3.30636 42.8298 3.05965 42.5817 2.75117 42.5786 cv
2.44258 42.5786 2.19446 42.8239 2.19145 43.1319 cv
f
82.5067 43.1496 mo
82.5067 42.8435 82.2595 42.5934 81.9515 42.5904 cv
81.6435 42.5904 81.3924 42.8357 81.3924 43.1437 cv
81.3904 43.4527 81.6376 43.7029 81.9436 43.7068 cv
82.2516 43.7068 82.5058 43.4576 82.5067 43.1496 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 18.0.0%%For: (Marc Wright) ()%%Title: (UoE_Horizontal Logo_White.eps)%%CreationDate: 02/12/2014 15:14%%Canvassize: 16383%AI9_DataStream%Gb",Kk@3F5Zg`/@g]JuNU]>;b31ZLE+hauYPHY'].(dg>5L-Zd,Bk(C);'UQ3R?BkM(FWC,>FFmMF93t^K%DF?8BrYCLNC"_[IDp%3@7Et>UU6<X'^ZgH^-S:F$.s1ZR!@RANJ*J49mIj36*:iBU4i3rMJ64STU`cf^3:IL=GIjKd,d[jE%$O&.;C6.J09%S3VcRopk9u%)qC.$ZRg9mNta(?TB16_?/\4W$d6;[@d\NV#pi$Ff7Pf#f>7M3P!-NBbkAY3W@?F$&7HcSi^f6,i"q+l=[!#(,fpb>dGa:lqP84Z%Oq1J?.\'dBgRAG+!%@k9mk;VGHFMK<H?H4[\>5.d,IO"-k7)PEE!c/d9K3248YpYi9QEsq,"SPN8SkgS6;Nj1#@iT<Tk6CnhlVC-%[=LLKV7AS30WB#MjI&!SPn0bu67JX3BYe@6$u1^8lJh9?n=D%-`K!:QFJi3As%c#r`t3pp;u(I]Dhst-<kS`/aH1Y#i5\_qCoi=>%]mZRt]I8TQJ#)U5WDF3g04GHXM:C`6'!7j9.\C*4O+]`,a6;Hg/[e:"Ps!2+&a/p'P75nS"*9`"L++64R%buM<X'(a-KT]d<1'I1%]mJ3&WUtdM,)BE(8XRg[=<XT5qFeN0V@Ji;hX/gn`iA!rE(]pLit>.Urpe],A^GsWY:$bX,[dlhO%l[9L`[G,a*aqVQ'uA)]'rc*%ek?Ge<'tt/^?NDU?_D\ZXc-TcqtWX3g@Z55)*3npUn5mNIJC2(Oo"JD<_WoidoE@uL9JNf:[5`[<l:isTCBm!3%Au;\C;*?!!*#L%lbnL'HcZp@+P.4Cb"$+os/Gt#J*WV,"'.=K/#E'm0<l\.9jj64rp\2O6;-Nqj`2Bs;>h;Y&V)tJ5ZCVIh-`L$2:2VKa=u[)2Wu1s%9V;5E.TXnGl%Cj`IeP^)P,*ihL%UXiK3BgmUAC)$a-k;$%;-SgX4l*T.t8I6d>TJb=R]\uXj`R;G];_Y"oHA,n0i.*NW$ckdb?bS%"!>9M+'G;bW5!G-p1qA$e;_@i]g)+t+NsOUZRe!!h57H'9dOF=VcU&Y`8[D,:W/A5lC@";FV&jO9^Z&]pflr^?B=A_cfL,L>-#+t%Z\FD:H;?@G,W4>t6ja`;KsiC>T[bUY!0ba%"jD!N(@tH)ne[^qlL70gb>q8LK&e<$V%=56_nV\uTg&CP.:t"'"+M<+00c/oGF/[Y%L[Q=AE#$p:#fUJ]:Z<YG;dlm5_#E><1>G::6o(@p$//@+A1=C$!nr4AFCYF3;JZE_;?qFbdT#u\W_1]ZJtY1-!Rs>*W5F-pRUIV@%R,_=5X;%rKV\O57XVUI9Y6*WaOpbo&!$'=i.U3nMg&^\"RoBb5*fLOV9ZBXJWOE,mK2P;j19'q8nt]HScsbW>aG+H'aE%Em0NYG#%>=duU$%pq.*!OfT:N7qt'M]?h0[DE2BI8qGJDGAlojl6d.D-!&fAW>a#f%jb+i0:K>;k$k'LU8_0u8Ro11$jf6'H%,c_U2"6DFu(%o5%#NVG[a=OsW<$,Y)X(WMEQ#QF$Z8V$#*0_?a%);PfI%q62(JA#'SR#7FW[".s,3V8MS.L=)3<L.I1qW?^Oc:.#n&B`RdjPCt)p%<Ds=$O;EEoBhBnOkcj(I`eYU<Mk%4*H%"sd0bR/P7?6>O'b;cc1$[]4R+A-pf,"`8Y(X/K67Yb"UcumL`hCafk+O:p@2?d^PX\.]%OAcNIT(aK_c'+q]%htq$T2')kYrYc@!dk,j$1Nn<@[]o'49V]GW>%*ZFla`HB@Jf)Uk(QANA5]bL!,P\V(j-cU/ae%diX*FP"<_H%QNBqiVFX(7AX/OEMR+a<RlQd4U]q'e5VM197EQe2P>8)Ua2V7W5qW<RO]GL#(T0i9Q2rJQ-id-f*0p2Q$<^*!VP#QB!_BRG&&GFp%Xc5RZoR*0.LBX>AIIZgRN8rD"5Vl@U>\>\2as5j)8WHKdK`q$@CP=$i[>I!Hk^cWh@FdsaKbUFMKl0I[B5LD3F_F,u`ptL@)A1qp%Pbs"0Uc)C_'fZnjJJqi'7B$9c3;ana@MT8YV3"4tlON3#b,>:l.]HHBd7IY_Y71KcVc4*0*])+fQ,4fklZrk3^0CsD%)$8g"i@1e%-(6(b'jI-';dm^h1qkh>+S(\sb%W8)dSu-gM!YoUiT4K5=\?()5VSsEG:Q_u9GpU-8l1Bf,1*VdZ5-IcGkat5XHmBGPn$WU-Wu_:%3JunIp&J1uRS#"Z'FJ9CjL#+_J0>@%'W8bND5c!]<9g3oVK;gZ=AVHeU/hGJecimhE-Y@!QDYFV%5nnO6a`$6PIt'T`Mi0t!i*jK%(b;F`L"3>(/#eYBJD+M'8WY'p,_N?6%'Q._Y`MjI#b%$F,S]fk;PU$[0fRlEji-LI8]VX0C*>:A<lc`4$OU$:;P9UP7W6Ugh/c.S%D,7*n_IV:c+iU:"!(g[&<*7&&,1Rl8;-eh<O&;#1@'fC'OoZ/fC+0^=VFAYTne>$<f"eQE@SgS@Pr&O"BNc]7'SC#L<\?i1C0_ku%cRNop)*81fPgHCke,Z_acps`CHNOTmQI_@NP2b"YYQ<6^Ypl-k!It5L!O.FmUd,o>)FLf%F]9?Z>`GF[,d!=)_#12iL?^P$>*hr]%Ut1lA(.07CRRW)M7XHaZCP3iF[3lc*H<N4,eO#SK_urZ2FqbVm_s6;0[/m(F2?Q+;%mUjCl:TVsTP7mOPUWG;Rq*CZ%VXD&66tK6%Q'7T20n:NDCK7p02HZ8<W=,5*%()N0^k8V_M(_:u;CPl`!F"D(WJ)#nQ`J:`V.q2&Al>)q"/D&]lPejHBb^W2^q<,fNam/2+Eo]Z%%VC;"^mK(>U!!]I<\qTj"JIClSk*k0Aa$]4#YnTD*(O^"A@8G7A]U%'%EMEmW=OO-=,\-?<sgfT%%2j-QiIaEBi["u&_Riu4=jIO%X;R8>'P5p_ME(]k4O%Y<OVX.I!DUMK`E"R'Q<-N`KdhX,U]Qf._/LOH&V(En[29TVX>YtnR($g9RaX<mOmShV1;%$8e!pnuiAA!0%iMqTj-?s2\j(b9fg/R+b!2+P%,.,W\H"hs@cYA/*:%6Q+VFP@)SmZE98tT%`"t311=s'7BR><\Zr5#1@FXK$H1uQ:(7uK\;g,`[L%Xc1kOQ$'RaShWY;(lD;X115Y%RamHEl]kY?Ts[=],flcbQR+KtfVB]NB]Ne=ZpSIt?/Nd#8h$PR9o78tbDM$CEiOpdl?3Pp![FLU%(P4hDWgEfkBuApEcNfSj@+;?HPU?:_l8h1Q)1ftE*V"0G6.//*StqS_a:c[$(DWAj+7L\A3WQDZ[GVUsE'AlR(*\6spDeb-N&f1c%D&ml&R=Y$R)ff;CNbd3WIIg$i)bH4@&2Q-[Th62jL70@5UH[cWB;ddYd&PPidu'4++O<`V+ZOp+J0`@5.M:)-Yi^-U;rI'ndfA]e%<"qMhlM^r06R\[aATV]0*%2#5]F9<XFVT0e`fYL8AY9)b`C-I$(WAp<_#Oe\lN,D#Jn64::P$?EP3p("Lg8JP7%cM?NG4!8,S'm:%!Ooiak`fe;*%Rk0,caam@Gi&>&Bt`b>H#U^<Z9Gu?AIBg5\faMX-ioX%k/97$@Z!?.N!XdY5nWIQ:e-JF&F#m$<]BX.gVkTSq%NO%#9,p<OK+c-AB1!(nQ8sr<#cek-PmtF=]+*n8k"X]JE/C)$31jhR\H'Vc/)mFaH69cKc4-.!bGV6Tc@:$0h?m2K?O?V+q2bq4G"h\%`3Ng%l8"TuX'r9L$6`CL)T+:CLe4^%eSh<NeP\(h)$AP=7YRAtpS(!<Q9ZbuY@:/)-6qMP3BepVJ4aR^O?lR7(9/&KjTFM!=%c+b%;*kdBRT9bE2'@n&*C^WpTZLX%eH$5=#aFWfWa,U$=kR)E!UtapN:il"FA`Q#TtsWcg)5Nf9@\*`*QY"s+K7]heCZVc?>*BK8^jPY%k7iZiV^QE$V.^;kQ=X&1OshHNR4CCtKhmk>^T-MGWZ);GN)",B,YKU>Db=.C]"u>6C&eKt.n6X6dtG;C=k2,V6BY9k0^).!Wt[p[%e-AI><&]T_@uA?V9i@GK_kbet'J'@(pRt\@d_Vm!'HK</[*aK?UD4\D\Kn3nNC]u;C/b=:'WZOeYa@:iPDV&e&:`(W\Po:N$n.o8%PNoqC:k*4cMBI#XW"'7LkH#"Ja_;M,'U,U6?.8-\"G#"=3kA*Wlc'rcR!?kl2.Qi&&=e?[:9+^a74IO&$>J$hj:oeN'(W!e!7bW`%/u*R-bE3!"#`u&Oe7/=i0K*\P6q*W-5\,UH7mMTLf40qH/-(Q18rHng*[%Ae-n<_D+:-56#Nslu\]Mug)$*)Y.UE7W&dFcVX;X$*%-sf8ld-VQeOr59jB'-GXa)DpsD4:P5&V_251s6iFS#S^#5pA2Oa6N1s7'.0LCPJAI`Y83o)67[q5p?"^RU0LR:`p+>C69/Fn[M$j%&ikduAqUr3,udqNKaDG3mR:Pj65u8'/XU"^kffD4piN3RaqT9O_JN,jcs!f8:MLP<l2E;rU<%Y-Q#Dd(XbPsC+tU35Mr#RZa0;#]%8ue@Z8?U@OQ)ZEV?io/lP#n;SQss1"&BP5QKISHAnb>Z"m052kS5rXTK4&;5Z]?CL?&"Q5[[7>\d%i7+RWLjuC.4dN*njkRpi(=(%Hufb3a[`Lsjt1BDT5'24.i;:J^$pEMC=rpfgE<DM&N7^AP>AWSOK:dta/3NmK1@RYZ4nfd,+,DUZdCa7Anp0@g_8;n+a"(E9O9\d%))?5G)];HtU$1>IJbB(W"Wik,X=@btagsn/7'XSiJ994K"*2JejEYh&5>W0o,_/Onf"*,<YPS^X"_.[!0pXPuaSI8ulY+OB;DCNh%d\nZh;G)rl(f1r2@<fs$FHTZUUG]0&"#IXY*t&h-S>&qUYPTh\VQOVA`]TVXCS*9p!leBSJIdBpK^u*e[9KRg!)+f7rsG9`\2c`6%OfBW%e\\&`+4e?Ws-eo_I#>bE3q[O.-[$**!ge*6>E-d@]i"0Q1+uSb`."b"Hp^,EJ'bHeePMJUL^8fgb>u:X`L91K=8aF%qF]RF%Z2X=Jo<+'t)-)ErB[p03)5lBbC@;lV-+3H%@t]ohJ(V:/2plmJ_8bN]-f?/ia*:=VluCFQao!e6iPn@6dcSGE:%(<E)sp_cRDd(L%?8^CO/i]OcWu*(Q'J\;,GKTl=fW'b;<)B#m:9iBr8$aGMi4/QHKs"PAM!oa7!^:\Z>(&Ab'J=^6Ie0qp'7Pf5HtdKhiJ=02M2PS.%m.MCnH<[HLiAe6@@^"Xhpo%[)YHD+LA`)EAR\^IR"EHe]oK^>tqO*Ru=>GdJmh'oj_?WjI3^8W`0iD6B#X,/>4Y'!SM.WQ0b=A.k%2&rXniRej@I]"CX.d-^!d0bES-ZY2oC;29kj7d,R^G,`A%eK'LOV;Nhor5DZM)\5C]ue3&lKq<7\&\EihHm</J77=pOm:b@k3l_?%nR'c$_d9`LGAld7:#3L^]/Om,VXE;"G5%ABkjAVil"deU1$ZA1HpKHSCmP\1TT&Y=C_U61Wq?2GhYY/JWk5rZ:Ae*n%hW5SB]_dV%Ud8RapTNi-%n<PRkkg`VA+13saX5XTqV?$pBOqkt^PXV&bsGEXYumQ1#J5ksWN)SaWe)qHUbfY_X*)Bfjr:Z*WJodP@e^/5NmT;l%ML7AEmoRJf_,R1Z)Yg!o[J%YqiRmA$`CdlgFL"fFgCmccX)>0#-gWDg`A7I#>AB!^?thIqE%J9?!-S10RSXTS'd:X"[5=<Zq@R[4%CZVqlZaN%cb"mnbN?nl4Rn"j]Gp\@J\4j@.*2A,DnipqqrqD7-aI-"Goo@NEfk85J`M0@^N`>&u$e[o)F#.7'i5)5X.0NU*;k<``%Sl(SDP"?5ifS\Y4-er*u#ZPqeI@rM;*t`gn&]'f?DkA2cn<]FOb%=&_:I%>3e9eAnZ%p)rqiqk.?l_&f9(QONi]fP]eW\m0R-MtZ%83\P<2gC_bX.0ka(-=/nU?!+GJq>c0GFXT+2h:.TTj]Ohms&B!r,tSbP1U%7GgJ7^EguEWkJ*9-P*Mh4VB^uu_qrrAN[LUC3-Kar%8#Y#9p_0`/s7!S$f$V*bhpLWbL*s\(&ZOb7;Oq>d^7't*/9T[MkT.c0?cY*mMR>)_f"R+t_b\IDE+/J7'D86>/;T)O?-_:2aBP-Q%:(NXc1!-MWNQG8^oe1OKpA="=@iJob1M8q&1miBqL-8J!0%[='"Fmh+'_&#6HAfZ4(56bH9!P/GfiOlt&fX9E+]a3iSq@J:HjsCi%Dak.njC#k98(-Q+Q\iV3V+5o6?3J!JReY>jhoLJd?=f=<6JuAEeQekS^"[E1'sT3rHH/AL$RqjJ!2-PT-GP4X'\<6k&,]%'I`990%rXIaAd]-(sIndT"$[1.[,g/;d9YQt>bG$iU@nh>u'mYS,U\k:6/d]<OP:cj>_[R84!3e3R#BFm$J^+MNlA\8po1t?AQsQKV>PR5g%)d&uI-ZfF7Yu6'l_gOZSh]S.I!Kfjb,mr;FgVNKa*(s:Z,M-T_\J\SYNmu#1,J!Bc>OC'*<(9Z^iGW9U[6HjG$/9h]0[mWuOiNN>%Trlk#A(hN+f,#CJC:2p!rsF:KhVdFJ+SMP2qIS$@:C?_Y,?EK\>53/lhYum=+-/2'P,ZPN\KjMBh@r0@C=o_9%p^_D4Ua,Tc;3QV%*/;;MjJt^6VMAS,-/ACb+"RgC%OPJcI@J\>ppU6P[Grt9F#6#i1Hc4(4Us82%\k8*m7D\bj"LM@e\iPbq*m9\[lFqNO3(IENi'j*%*+ib[Nl-tYb&NdKP%)jNhR>KTK9+,UPBkX;0MYs%V]LU"^c%B/!5?]t(jo#kRK+2Vrm01VbnFJb#3E$aR_u=RCLD[fEmn1dCU<O)%mbIR=POS;Nn4B1#rC\*Yqp.:uJt(q2nIdCBiTmEjr".'DeflrB:VVkURm('tkan<D7.Z^Xm(Y+!Y`YPM[&HH_9!enkB_`,P9MMm4%-.#%:Vc.k!Q"U,u4I[7&;gC9dB2a*Lp#VTe;s-0n0)RXACY6^hAZ,<=m,:[l#)@'*J!k/XOe8r(5L)/Y,+QS8K;[XS&`=LtWPsW3%>6!/@88%Vq`5YqIq"#IVO7Si4^5gj1r6kMXem0s%<`Q6O>BTjWF[p8+68'/5EWB$r&'+.NhIY/QUJ#!6nbPjZ^jNUq;_ZbUoZ@ji%r''Sl'G>me:@Cl]gmR`\',;kG.3_G4i?o4lJ*ZScr9l[o#ljQsOABjqn1TTc'H?=I]uNnT^OE68(X#*N;P3HBqE])r=3p/]\-"MB%LA<SRf7@JKKZgc\e8.c`E-tIY5$\)0AO9G8nI#X+m!.KYch<?4,#HgN[mmV7nMr447YI@H7.B<igLl<qr2&M-Z5F8F'+ba:p"jI_%m,@8rYGXJb)UXbO3epQk?V,s#gKP91U-l]@(<96mqIL-J9bRN)gW?TkF1Rq?n_;1%DU4hj-Vq48Vq]=C!O(thU<%F<H+KR5K\pl5%H+KQ*@rA"MAVsS#A9q"[OJc=(dk0YF(@kN7Fa_XhjFErE@\B4%/T!\![J^[V%I#f(IZ=3ICCe/".d5keC_Z9]-?k*A>-HKQ>qmk;%^enk*F4NUgO1-F><E?k5"2d(M,.0=tBULjE\k66XhaLfS7->Y:YBLn,Rg.]G6+:RT/_EbU)ckG/gZ1i\VN9V`NQ@UKp8l#N7'X-0%etokd3j/H+XoGCo%C*D!&Zb4q7qfSD;d^N,qn"Z(@L#EB#5f&]+D5HZnKK33NL94MHF)N#H'6Lt@9WV*Mtc;tZ9*Ge[+f5aLrh(U%b)r]4^X/.aIkS._(+UM"4+ZE-K+1%2B*Q=1s'H^Edh#V"%6q\mnaYYS6',q%K)-Z7.#f;q,;Eb-`9fC!1QC-_j#5Arbqs;oNS@.e%2No#f;55s?gdVb4aPiV&gd[`+-[$E;)'s1l)=$Rlm7dPt6)^OCEIGYOe9AVkj-ukF&)l,96PZ5B-usWh7elTCd(i.^_XGje7qBL*%d(mC)A9s$N-S!K9`u$11H%*uT-6I-PpWeH'hcAE0G>>$2SoELG]mjeFFQ`;qW@sr,L[rn@?%3&Y2.&dp:@F_lNV8R1Fp$(RoZjEY%"8J\;^]'d&s45._`E/`_rVj8Jq8'e.C3mM-6s'N>N;SP(Ts5]jXT$%#XmtQfeeUFn5'k&(aF=lK,a6OC;Q\LbH\`t/@Ps5qqeGJI%.V&<n2upkBl?Dk'-=p5lpNtmufBb$"AgC)=E0oXdk^RcuZn/WM+!9f\n8\;1Y6HtpVUk`cN+-<1)^B_Tl8*7T+IM*A[@^mYrf]X-%J,60ZFrJjIbs[t-J*j:^2.&2=Onp[r%=CR@6&dPUrdH`uT*@1P<?HNbAn;n1Qj,Dp25p&+\RmuJ^`g#Pka9m]6DZ%d:8BrMBl0\$%jrA/"IIp[_3;.bVAYCUi3oYKnCfTt!B3VDI8$MRY:+CZK-G^lN6#oRFp.DJg^Ng06pFALH\[ffbcdC,-^k^g";!c_Z'qYK73A?/%%Qg0P1;eBb8Q*eF#ZD6Yq8!@rG&J<'4D5Sc?)^Wo[T^n*2D8J6?C)s:10.Z,++!9+P2[H=j2Yl;*H+,\+05\Ru--N,ZT+X-#^UiX4%"H?%P::]6^IfE#[`9H).?RG_'J<0Rrik.SJ_ks,.k@h[j4?jS]Vlt)h$m2+`5!=X]a7S`NjD7X0G0.):/IC<]S"aQ(cb@dR"nBi]%.Bq.pI'nJa>*.3pp]lJjVs`Ekh>;6\?4c?TFnhgDh]TL/LMuJI9c^rtg>Tqm%DJUTpO1Aa@Gg>=2*F->oVN\eeDm$EHrH)ElL@S3%^2N?--,6.o(BCA:iUOn.n)EpB_.;j(9odhL/P4KZNe">%^SAu-m5]RM4!MDlq[nAli$UX2B6rUW`48+]CHT9ARGN0CU4o;s"7[t]%fC]'&M%sO.#$?)l'B!ZfL/</"%kC(H>H$%uJ(=\>KY+o^%K%'P>5R>U3sU'!I*t#*&2IUPR0mUNIN`%oSe9@IY3DAH^h>E)0]=oW%=2)g3qjk[[^LK6N`Rb(l4tfp;#Q`-O9:HH!Ge[Sf,i^i5QdK:[il$MD^"LF2bHX2pjh]HJe<6H!a*.XQm63_[(>F$"GA9H5%(8X-%NM[3S#e1"cPBXkY=$Um,U:-L)A\hh_59r/FO$MZF;i?\QU,9<;&cPjMp&f+klLd@].9SP,]pl2hai;KRAMnS*DIn=;W<!ig//XCH%h>\Lt4me*Y^uiLA_bW6H*YcfqIr2/2%Y:J(E,+3(9tu21oGcd]l)D?Q[?i5c?CI<Uiu^WcPmq*I?M^8*!T3HqoFMpSW`5l>o-'t7%>H,C5m(/Z5!`f3o<&&2WI'/2Y,=50_,5>(&m5'D4[X\;=;q$[2q$Di_SU0b4.0b%oi%$8'TRlNf=.\=?n8P/Z3tpn.;4X]SS4lL;%iOT\0;GXgj`(+@TFXR1:Rd/0oe=Au&Bp5\aK;tB>lMLjdoBX>gVlqpPU+Q#hKuOprMn_3$0=2;)lW$@1rpn`\pb)I<I:98mpkItr%,tl][QGtUA9`[Lf?SCpa"?RJJeGl%fdn=XWQ@HeZMH][++@.>[g@%AWY5aohYO(I1Us?6bJ6t`Squ[b#Hn1uV?V#)3U/u`\Y[*>^%^Z-R4D(bYZO?h;#j)k.DA@[0"lS6-:+hlnOguNCO"?&n#>rnYW"uK>VO1=3F/+9HbZm1M/Y4PdP[>.n.?\t&PZQ$Xt07?]-qch51%S!qtYe2rj*,+4[@mKmJ&3W9?d9e)+8m31M='eEg.C%HUOEV3P$M_?>M^>18sF($9jDlg;$krS^[F[l?\i[j\(7ndH+#A*n$3^TlO%_g"UZEn:-^N/%h0_D(5JOC9]eY@(?\dkr:loe[_acA[-k0&:27^mn(*8VUHNe$GK/#4P3T#C?@uP27RCkBs>156HUsP,RI;6u&7n%#l1KjQr9Fd?g967LX8UsL;>:1MLV(+W=b"oLt+3'Yk38k7"j%Yn)ehm+#8l*h#)^f%cE\G;"QinKTF%FO$pL8C0lR&'HO*8,T.rn%314=@E&0mZW.`\oNqAL%;5C[B.Plrcnk`*?*td\p?Rc?aGr'2%7?6H&dhi[0BU[HYNq<C.;%R`!+AGk[6dU]%*%GM;k[9P0=UbR[%&L%2^,+C\m140@DrHmOYg'qboUCL`":?)%$6]l#C3B`:6NBB_mcHuTZ(abG<="=12L"+QrglZ5WQ"LuXRqd`g8!h(Of2+5Y.$WC^%22Vf1,0pAT)V&<ZH@mW8\ofP\FkdlCg1313DP7]YfnGMU30B?!##sA*kqeFo@],K0+cgBI?`tq75Ot=DjdN0s"c/.UY9S6o;FMQ:%B<WSkPcW=iWlQFF[@,C\Qm.'8O^T^#b?:SN5>UBbZpN/^<@Wpc9W-cr%3Gs0iC3*d:HMPfYhn9Sb/^U1B[gB'lWpVq!\u(=,S=qg%io*gtgBk8?&G<C6aM*DFs,2FC@am":i.6DLKrL6l7#(uD\n[Qe#jD"Y@OW9uci\SrO;g!<>]<t8Vlt5Rd9d0)pjXoQr]`lg+/GVK%A-`-E#4"Z=(n6)oT-Y199nY0(87tt3N/=e4*u\i;$pR:"f]lU:dqMZ47"UKC\c?P6UPSFL/MN00jU7$ZLgJ?iL(]7nl$#f""!iLK%3"dSm;VCC=WUWX2^*[B/U>N!902P-EY<oo;<[ne_;[/4BTiR;8UT8^M%\a+-*/%/T$'ht"&2HS]?84B/,fXauaWDG!*OXk+eU@bQ%V;?o.O[(U"d7:%%8qF4JicX(6CESas*`?gaE$u\`!S,CU(^&E7iP_/2ktMANG"]ge>O&D"S!@1-I_CMhW!=#)J,fu#Ma"_d]^1OO%?Xi?.Wn[c;\hJpu@&(:c&<NP#R\>TSRd#?..-?)(VBNCJA&:;N"#DXL7*!*\B^^gL.$=O*XRsmWj:CNC[oU%=Pb4b=8gY(7`Em;O%`L`jNd6o[ur86DmD*+2DWKHL;mBFS7UcY#B<)KV2([>jF)9$9>g7l_P;%'HnWS[4oO;?lTF?:4Mb/C8)K4H'h@VI(h)&d3"!rXt`%[CVVm`uJV=2d5e%Y]2!):0`TA,HP3\],F9S>"M`X]V1K*'aLX2/UWgEs&234PMI#>E]YHTVQF#.4]`uNj%Ko3M4L6Q+TBu'ni`3E%rC68',aOA]B"OapANRqG`fmG`iFk>&$UW-:2[r57B#4=$9Nb_Lpe5@Wi1.rB3%KbTeaAISS%[NG1c%)HOM*Jm<\`PG]p<TN7YPN@%V`9j8./8Li8=!&f01dofEHF0dQ9HagT&ddgM@*u.kl3uX1'HVgUQ8_#A.UQr#f^SM%p`NP:e@fM<61.TLC=c^s(@0-g0As#JpU!;%!]d7.Di1Z':?W!4;PF%@#:U:oTS3thi57^bj4P2/.-EYhd]$<ch>70$:]kF3#7J*o$(Yg5^HC9ar8>J0jJkN+B"qc3UR:'dA@SY!%Wns#6Q5D5!%]Z9sA3DEW[A:s7eF16CUjcOIC.CjRYe]JP_9oj@Ba]e.13LqX\o0Wi8l<&Lok_$h7U6J]E#Qium<W#s_k:Fme,>jP%^(@juHZZP>.>CI*Oq'&AZ5U'hW;=pS`>3&kE0QWVCbeR0h.r0cW4mD6_>73_#G>iCOH<rE8?DKe"<@oEK#iQ39Qrlj0gO9'e[@sP%B:.^=,+Kh`F^!*:huY;:7ka]JZ#eWu^XQK=%W_5[]-7)4<]+"?3L\Mgm''95U2CRa90sNp=o(H68MOa<Q/^IN@I!bWCm:_'V.4cn%B4uc+7P'%c['>]4dbP%_h3,,sbl+\&CfN#(,@/o&U09o2TA#m5;m\_mRQSXuX^=E(BP)5tbFNdoY1WOrL.gNU]l:\hmg8*%UYaHb%1.HMO%-o+7./*N)n<)(DkmK.Rpe5Gg>\\*C%8Nkf*gq-gr+-FLJFBe3A]S#Pm4;A!$a&jg0;6j#GM0A"AakX`hY#RWdRV`nr:NLX%dummP4,IRd1dF!UISZ-LUX3b9BjhL0=1Kr!4;%`T=<,+\$G62qB<FCpkoZ$#?JE"5p2KN)UTG6#L$q+(T?QMaI^^[^rt_Yb,q6:r%$QD**'n7\4]lgj9'p(A/N,)fUgu\=_q4d)B\G;7Sq$pZ`Xo4i!D>_Llcu%8_?X4GJ<j?,k]-7##@Q^k=%md8l\M>!0WSdBKr,@]M%:27aD7S32Egs@KC4j^+J[FAGGJ'8,OHnLR:fr+M22nti"PhnVF($(e'H'7@hnG.]hc_$'@qm+"9:5``2I`nW>IS`h44bT]b'<5FF%NB.Pu`,X"8iBa!qA?'GVH4]%="!+a`M4JTi$\(^^`(h8*=hEN".ZJa9>`k+bpg:NU^&YWV!CP=u06<&3*%HpG&h?,E'.sY%6,%gW%2+]MZ&a(#Y'i*.%)^cJLT^,;<T^0$`Zu!3MY<H;9h/`c3`2qU)jT"Q1#\jr*pD3<8M&b4up4T"YR>W?t_RE_]"aGNRKn^jqY(Tih%q[1i>l`5i']S[!81LqUr8lFCU:l5Pb-mOXr1G"j@@$*Q0/1:'L4rJ1.OMZ"-VSIl5+^+'j3o*89FMCfjs!rsAWDst%[X-g5UrD`8%;"&LSR`K9eI=ZDY)/KqNd.?08](N6Ol.CFVr`H8Qqp"VafTdA'Fd'ui89P?#(3BR"LKJn3;mb61CILP^A$Pp2D^`[G.Aksd(,TH6%ESBlhq`UQ0eqgsoKr15"XadfY"KbfO>T>&X3"\*ASpa9#(]',GL@5j6LJHg/C,I8B+n%uV>,eoB2PKMeJjmct`Q"LrK:\+!MU4U&%m$cqi/p1Tk`QiqX>grV]KUc,nX7FBF`Si3V0!knY4'ls@e$`*#j5urm3297NPB)A&<>U,e\Wun2/%W66ek/iTf;Q0sE)6C-7>n$&%QLc$5Y-B/2VX$(;?29^XG=X/\<"<&@YTe%O>(]DXOTi"*6)]V(ek8AS*(\sABJ0L8JX4DeK8ioeLZ$P2#3cI0EDmWH8JSRBMGK?U%&2WHC1M;NL`7-F01>D'eMT,sCYLObJ_cZ!*'4kM1'MI]F6V`n@/'PJP'2'TLS/YG<WX5d(?kjTJ8"4U520n3+>2#`(6Hj%cRA?p!%5n)&4r"W2@opa6LXGQ7r<j*P[)Ke>W3+E2Rf9?UT_rlFKl)O68pe,G%_q'.gD+J&I?ARutUMJpLTWe2`(n9To+-c<o*$*O\$,^1E%r05?DD6p_sZsIPf_=jlDWR3EQUs>5dJ8(o38oid>`Nui$m(V$)A^K[[hUQ.`?YD:_%`gmuPj`!&i<N,qgP>p240@]Xc@JsODq1Yf%Tn&(H(JlQ1<XbVS>S4;PU!umQJ)X(?.5GM%_KqkA#,b)`P-,`pf/c@,U`Z\(7F"\0FabsecB!*&UUk0HN72GXl\@W.N%'Z"Kpm=U%:'N/GE-gE*<cS@;;CTCD.:oL<8gq4c/tL@'P$uEWGN)=Cj-3;317[*<]d5bDC0ECtT0"c;V&@n_AuYOi`Jg[_Q0+\tX1GT:K].d!%M%I@Z(ZXIiYmb.G_,(S*7#TZpB+IYo?Od<$#.g%6onE^\6CjuQ*=+cpX+8jf`g%RW,ohI`f,%UBa]LQ\/0:ac8c!>V?/-kDqlP`O%'iE7<Ws8)obV9$3a,QaKe$MAoDSM1.Yko@[g6:7Y"+n*^]A!"Yd.It@EeTD35&X6uBh-"V/hRl9TZ4Tqe3[eH($!kd:hi_B\<\-p%Vj]7Z-caK2B#e4VQX$tVQ@P+XWbO&"b'QQC-'/_iH7#iD?M.:u,qF;ZCQM)O#X-L+5eEV8XM_A>;dNpFf@?j,97.>1K4?O!b&nuP%<!6J2DO=*m5\dDBXST4cE+,qJD6uA^aW*!VWFgr)ere`@c*qprke)&7=tSSc>[r`H4cLU>l8HFu[99=.Q-76B[1*55G0_EMr9@I?%0fV7nY'da`/9JOj+0*pI*A[>fMG1N@fNiqhGJ#2kJV[JW:*j0XY)5)I.@@QpHo-Z7$LGhT8h%PoU$*mlhmj60X.<GgW+44&Ng!W1%<9)&iBF+##0?eaGm_,?0]m@RpR%l^u8u:XgO@l'eUS=;`F;A^c25)1.A,!,"lA&m4`LdW:k>c`R*66o:O+Vag#V2pW-";DAk1o5n%SN8a/5($4AFQ0l?#i8J@c+C-U0ABCNK/$4t6f;BtM1u&jk4^<R<OZ6%2$FNYe>o$s5:;piY?+a`pq-T-`GYXNj[VnHOQ,i1HEW$Q%._SHOY`4";hg!\q7hIk6R3YU(XFX'FL<G(`\IN:NLPru"1'*g_o:qpk*ir=ZJp`P.S*fK-k;_qQ-4N>>]W:>_`NQ#0>>bmk<n0mO%,k!;"X^lJc8uP?^3LoI[;k[(h+/7M*W7BYiWdE?rRbG/U%g+T:7?#nR-5<?i@MH)r)K<LJ#,Kc#*"l29PF'H>2&`4UKV%rG"%<RL%NFr[3_n7r`X<hq1a8*1Emrua@<0;f\N_uFUf$G-*d:C^gd-YP&q=er_@=k;[ZZK7J:McPXSXQJ^O+NtL\*Q7,JV;j>:dt4)/@;GB%AsCp@PLAY#76t>6E[*Sg^u!/dP7lOTg6L+/^G!?0jo'Y'd?dQrW=p=];7[TlBV]:O_K2\TDkc$NCQjQonj0YZ=kS;)>7rPNWpcZq%O3eP5YPi(D-.El>/3ZO%L77;DDQg5,ZGD'[oC0O*cUklUb$!B7]!der-!@upkb1:P'@EjA\oTuLG^r7::*Ms@jg$DZS5o-b*R1-7%@=h'3A]#8EDO[^aD^qD$X[I-Ea*Sm=F+A#>jWEB:[BG6>WDV9+Ak0,)iM13K'fo5+3:XK-Gq3T43I'=NK5#.7-m;8ooYH9&@Bq1A%VW:io8X3@j-9<`4?sOi<VFIe5)'?Pd2:V3&dbp:SL#.s]8*kJUD6ONT0N]T@A4_tY[s*gOMLfaUS!glHk%,VPFQp*,7=1OlDD%*p%hD%GZq->V4m61?(3bM%gBVfV.i?2m#A&7ZA[^DkJ8.qXA(9QG]&ngqsg5H1e>D>[3)Z.rh%92:_11_u*I!4+R`I8\ESCHh0TN12/%%+X#rc>D/[&7(a`SHg-0[HptGYk;2UCKC]&R"h4gFBs>:PZ$[k^Jt;Eb!mj6AIVSjDX4nKV,rap@@5D\mo9dsIR=t7$tZqm_nTQt%<k'[X63Is*@C+pI3Y)U(<34m@!PnAunTYme!X'-b>(QX7qVcT")M(El&X<APl<45_K!%tM><5ps6YC_o()Z`'SqK@.`,K#=6PI<G%i=F(,#K2,sMR`!G/$EW2qlQA.2))fo]sU+AJtimCC.@sjDReSM6WZXnZ&Q7cVr%,eIC,D#*W<he9?NDgGJ&'t4H<k]N,e>hE!LCD%*IYBGeL_04dHWg.(nq6\h7as.FTKY+e5`&!J!aV_+]4!1D$p.4Q:H2EU)5YWJT&0$JPifT9)2XAUB>);1Os19Bh!u:GOc)nAVIRU%7p["V<_FRabc]bAGKB7a>C3Ja(Th9bE8])19uTlPlFrtWIV.l6l^9A;p\.V.S;8""I:Tc^([b?_Xu@0KKq$TpHJp]Hg$.i]?e8Uf%1C&W%e`^JN0#YBnm,_QFSQjjZgtb#'[b$N\(6<Z#r<cWI;objCaY7c=dEVX6]rVk<46o]4jdhC]G'Bj280pTbSb8bGN`PD;Q[.7G%5MFdu`+$0h\Q-bjj,5Pm>ocp`Tg(/2LobT?]=m"G`sd#*>>7&QUMbCmfR$oW@d!TA*&E)8q:Sl_%RkCqih5WDCnB[&gsu6!6b8MA%?b(AqY.+,7Zgh(@gf`s_Rk)&"8A>_lXk#fNR95.b0IaQdj#*0;lniV2C73[[p6E67/`c]3OK4I5mlMKCMq8:U(ihS4o^X9DD[Z$E%rTaAU-C4KgT.\.G>07\"KPE^ciI=<u.eu^-4IU\0T%>pL&UIk3F0bXPALG*7=icL!jfPS9\_$LH7<h27eQ;=LUK=:)P"5j`V`t,j%Xo<E=bqpX!Mm:RM6U,uu>^/d!?eSXIGbmb>G5^]G-f(dR2HMetf+VE\@C+7!M/J;JG:NLNb1di66`f>Y\lV-TDGfJtBqi1>cR&d^%?h/Ft)I!q4%IU<s?uUH,fu`Z#b['C5q.(<(AcJ?mgZ#Nee&o[1omVlMcTTEY[osA/BT$/f6W8$O?F/fH7&R02gCbH(Qf_<@L`df&%NcPM8A"bT_En<UjYirug$q7<3M@en&I7F3aAZN&/rjHg;5?+Xq=7\Wj@+6d9%nlYO=P;ENY>VpuQVA4?p#a8?p#jG\4HoVl!T%N;%WV-CY1'dXU*fU2^dEN%u8S$nfj@gop/<^uOi\n^2Ys0c';XW^?Y*M%pcO7VLI"j4[So<uWT"!.Ef1I]E2IAI>QREba5Ku@Jc9[rb%?2j!,G$cVZZ>(u7o]aU#Q>4?"HeO//9"A+[?^9j^@"kGBXh"+?AVLcW:aH'7Y$>P*RtJRQVt55VX;tYdb;5ATeiPEVhX]r(7cL',%UpM=`VRo;FARZ7M:h4ucZQCd[)J"R^8?Tdi?)"L;fj`.Qc?cHKRk>`RqLbTNc(p3ag;MljAl)V:jOeglT!m+IJ&.%skX'VFqoW7#%jibT^E_btC<XJ;4F'TlD64TP'8%\$K"&`HB)mLIg`2SO^h#:)E:j??8crBPKH'gdDarD5'[=]/Z*gWj\CpeO=$VuO<fZc8*c"dD>%gH4-%bNtMV2Jlq07:6hhBl<Ys,!oAo)b@im6uD<p)B>lm?3Pd^mHq>pb<3PFcCEN8ZG,4]C>!pBc6?s?]0E'Vk4\NXXOb@uKdLd0%`=c?\a"*VaG6_<L0+T2GB_WK+>2JX0=.AI6O+U]3^)8LN!,@F=Cq=^>^$K!hp4YgsFab!]Coe3D#Fuk%r2Oj*'c,H0)jp4\T<Go@%05)BI%+5\$_7Xa%GQd#GF"r*jBJ5k@SI9cerY?C>icR8Q5.iJU64oCef=jK<PdlFrm*U0:[&ArFKj64CpghbQ(PT`td`ebN#0>Sc%#V;5lgV0\oO1rA31l\L-1+:OU.DK&dC]Y?tYCWrsk#\uL=^(fn0!=WLZM"'>'qmO<Wg%OZLO6;C7R"@.Impl[/@Ul/V;n+;VK"l>%d9PKHr5keDlc[Mt<B7mdm2]Pqjep9Y]eD77Vj?J;ZK,osBF"LE"\YB@,fK9-2RsaNDX1k<Tnp+9;H#28IqFd=bfUCV5M>$.FcO1R%b,t=HZD]=LJ4aau$=#?P]:bbag3HY/"(X0eNXBfQ<uG!%`.4WTK)2g*f[0r=V70QnX.[k1a[;63!4W$!Zn`>KVLgK?'V\>/Q*&6F%N*^$+FqUJl4*<%QWDX-j/6[lZ[ol4.AMgh);C[sZi"RZL?ImGF&eno'lFh#$E%r\XbB%F'-c.bNTnmP0PW">"#&G.dR8-e'Cs#it%J'+GVSp-/KKHf!Xgi?S=Sl;?l=oM.99'Ok#;d!Uj$NjmATZTbc<lS%BY?;#F=(6"rR*(qoO^lkU)-&kC,-$W$6P5lBRl3*GR]KXX%Cg0Dn2;62[D4R]u@doq&`E6_pb?2/mAOMB^"08Nh,<XG/LU'Gc>RE5,A[&\?2N>Oo]uVISfgg/6@;e.45T)GM21mJJGsW4&D<N"]%A%Z2JjO1%*RmMQE;i\PKf0FldUfG+KVd&DDg<1Y,Q%s4G_FU#r%U4W-P'dX+FsFWF5a,`C2;'>To>jD[\Q;tk=XVL,<q9<NH^ZFB%c'uo`P>u#bP0ET,,pUGq0jd0LYF&QNOp?d(0Z,Mpl*kd'l:l9aG=R?DrAK-JqZ0`N<b)FY'M1k$"IG1OesP7Op,cdP-1`[b03Z?<%FKr=4bc`!4U=QN-_@@Z%CJMjfP2Ud;*UM[MhUACUbSd]p<9pPu+UiUga9o7_C,.]WoucAbRX7$(a;oAgIlII"-he\VdtcQ<?mi!"%]8XDiG#-);CAJsU),T&uESYhpHi"<0Scc8N1uA<7j1*9&nM"$+mhQT0Z[4BqoC#i$hPR:*HZ*Q<eJ/E[bg)<T64msiLOG@M/`_@e%5A0:Hfu/3=)0l8[G*rK%D#N;%MlMF7(GkD&eVl(<*XtrMP#YoIag5BAom"8QmNo<KX`SMWDuBZ'm;t)[\oO97e@.?fe@Dm5al85k%_6T+<$qD/qR!B1ep13_]Vt:r9*ZQVE?<s(uJ[d]T$X:b72]1IhY5t5K@K0Q6J($[Y2t8R0#ZXq55G#@Zh!Qaq"*Zk'&_&FSC^5;N%Zh.XH;Ns&)f=Lp#SuZ/"m"1`[jJ\ni?K"0&;ai`t<s7.(`kn2a?ZCdta5siu^=E6L7JLIeSc+Puq8@]=WuN-jcHgY6QeUYZlJVDT%,O+f`i`./2<7O/LMd9L/\@6q_N&WjL[gaG4*cn"BhI'ZqY7EF).pKX3ce?NfN5H(D%l8.E.q%)'eI8$T6]m\4bT!rM@slW*!Q80L%fcZ@h3C20/1SPoJnN$5)m[b.dl,:fWmJ-M"p6G-MF\q(@edl\3_0p^%Z,/\!(O)oE@9tiReB[.a0@,23".R\%-))\eP<XR;gOAP`%j[nU\6)[+':BH%pFn<prZFmMm\JR7/af&`[G.lHkqjB'B$FeBu>(\4cm*IGT]pLFCm/`/BKPqR#RbN]CopR1dHd0>[\X,3E'YX=/%T\/m'Y0;\j?g]c\"EEl<XQ77H=_#.,9AWMr>IT[:K+KcMHkY-W'DH+!SmQ&T_Rs]i#Q7p*U)Mch48J]LX/HXm>A.TuclamR=SlC(%k7T`>3uU6u`PehPoE3LIWt'#+\#E!Hlcg\Qo2MT4\cl9]@X+CsRF=?J#Gf)tk#[l%RRq!,lOGKmG(/jB[Bk&T?=0o'Q!\^cD@0uP%MSrPCGJ5&Sa;TD8op4Et@@MAJ>*FboTAHWar8"L<`:iGXCeh3U8'Dr&UN2-dj&r.(m](8+!_'R]T781kO1AFC<sqIfX3tuPS_Qfo%k::2)-(DH@7ODIdD]hmP=g"5R\Or3KFq>V`Z,+7p7!C[H^7RU$83F'*T2IP6n`sbR(R'->W2%T?XI,bo0MifC$d\.B$%&T"epA&W%q.41$ICg[A+4+9ce#@Bb,u3l6Xf>qd`F+alk20[&W5L@B5*=s%IEDP`lW5q(P?=^0,\jPihX9$u[F<m$oeoSUU8HL/o)^e[e@DsQ%>"Pm&<iq\F#HQY!EWgm$=NHBd>Ip%4a@mg9QQiBYp\N1hl$5Xf0U%/-=@Mf[`+J,n*ge9uSA$E=]FV0)\SejiH/.4Y.msM`S%[M"%Sn,%5FmG,hoaA6+YMA=7.i2h9k*kQE9`3Ap$n)YG]F[6Y52u;X$9coF<[TU3$gj$]5FbO$E\DKp%(FfJB>GRf0,pQpWt,63M%X!6%pDZcsO_;&42tH(K?/'+>.jI]P(?UO/kIH9ji4&9=J,7j!a>(b%HLCLtjiha%'NmM(U$pI,d_^rSZ#&mp@#recQ+AN,'HsRVq;APD%p>u_8oHT`Z48UrZa)\5WU`M<k7a&QCo;+:a?bGmPO%^4KbRgpWO<P6tX0`RVXd4)#%(rgmeb7bC``DsTFCh49/3&.k1N/2bK+)f_%Hb$W]^arr'Wg\2K.+.ellK)m_"Pf'NAEGss7mbr!!6$u"h'>,g0#AWIJ64$p1FImQgTt5_n<U/E3o)n\WTL3TIau)D!@*MSPWsSC%1$#M^KV]co8JA#e],-@?>re$rk%af[,?J3S8,/i$SW,tId@-?<TsjUqZ]DQcekWN-LYUkI7RAi[W:OK"O=+hk_HQeF<h%J%-qO>8%K&%uR[k_cqS]pI/NQ?YJBq-aUD&t?l/</g&pLgfT/ZfGgZ._FS/aO%^B:/9k\M1A&8qIFtM;%G5E";gKfPio`!_Y1:QPAVG.reA=%hUPB>])/?;@D*6.Dl3?^LQf88md.GcLpS$20%]++%\:.?$sloX+Sa28YiIs[1fp3jVW$Fhc:0A!jOaj?['5I?`=Gco:Cm$Kgfp5(%AhN]&DYXkN'%0N+U:Y_!cN#Y:m+/S2i_bG6Wg+PiOGa?Dj>%gSV:X1-ZfgDgWUd@H4?h)FY6WtRj]qjC=&_pCmQTu,FrsYe?JbOU%b.XRe,L$/4]PNJHH^)THAp98Vn^H)!e#M55=/Ee)dOGW:&/,(G@](Af2Qhscj\"?\@h13:R$pARgJhU0Fk1Ni#M,8FD7?RR6M,5`%2c$`l<mMlMd"b*%=Dl_)DinLA?S]mZe5):)['SA5f=98U06/_toS1/`T:_^OMu?:`:n]-r\c$-R$Yh3@KFp,p_N3^_mqr/rY&.DD%`K$uhF3`7:fb>lA8lY@mBeSUIYI&9IQkt5<cXrUr$RQ%ZXYH%4Z$gWp1L2s,gY77Hphg(1UekgP0St/"mpL2)T4f-G(8!fQM`6?D%ITt#Mr=!p3i+\[.Ek+duRK<d6cSmUDJ"H&gp8dAigd*c#5hht/b.^`a+Z*cZ.,S7]T@%sKk^t`VBY5BH=g4nDgR5+:Fgmf'?[`1g%=_X%2EI?.%&c;=7)`E.AE<-0<;Hc/-.ea<8Su<u>A$it<IV2tZRpsA_rXkbQFGLKHpRiLDU:JuEH]IJ6p,3<)NHi=g9DrSt"_OOA%bcO%1'[_BVMLAgpV%sLE!@+D.`C5V2Y7D<2e8DaNNX^M)[kHP'FI-lWF,(!]ml>CJC"AY*g#i=NJ;UM;6$td?fX:;7!cDf'Q3ZSf%Dm/ZcH]/\_(<)GZ1QI_<7?K9m@rMXPGpi<SK)SepGOJG+LO?Xs^<XD;([<pCV$enMB'EK&O]1P0jQ3oX7H?&Am-FViHQdgGdp>-(%p*FKfOCd<@rZYFc$?*K:HD88nd!7?q=52'eiCURP&NIL,5e9NXVdf1!'FWTZ`Kj3&ZTG>^@kU^#p!`K?j>g<^Mm6N\Ps,EN=^&t\%X`)-W"2tK7"U&)8?`G"L2\]u)!^31#,aSiEOCQhKgl"a-Wo$Hj.[=#f?)B9NUEAjRqpLteAO\N%/8cHh=!'6Vn$?!B#gUT2!o<`M%#E!B30-B8t2rY![gXb6Lm;r/[/0f<2EM:$/3GP(''*NQ]0ZS@^pU7p1f`i%:pn!V'Ud[eQo4SZ:V[`@jXI9,a]j*-Wa=-i.k8120%K:*Wd`^$NY-J>Ho>$=r5Kuak8AqR3eL,E"6\9hrOC=;."*'/,!?`TnbP=![UdV_;+IS(^=/Z"EZ7n3Opo9K=A;sJIc0(JT!_0Y'c%okMa+M[lYLQY^Ek$KjqQjgD=KG.gh?+mT-^lu$!Qmj?EGNmlcnrH?K!>AXXr[0,CQfYHD(7\>>3HX'\.N>2)T\m#:Ide.uMGH`ih%2##ehc0$V=eLEUKE(t2MV9RZs2"Ao5?JD\P\f\JRoqtnV?-736i,r):_bS.'[$2=6`o%OZF>U\FZi53;iEH+)1ACS78:eN_D!WE(%?m%,JWka,W%7&QTMWP9S]16_u3)Y-9J\P[IKDGs[MV[,dq3b>3n_0uMoDHdS#KF?1m\J!eg%rqk,4NduEofGSbf<nmH;DgsQV$ZQ%R^6Di?^>n5j>93Os0nh;[Sc68U[Y71&@EJ&ak+Ga1=qE#0CcR0kgeDs0l=T;M;rjJ1uJA8U>o`_[a_aod*f(9cnE!K\Fcn78f)ZM%ngaUpX6\H]`i3G/S0(ADQ]tq30AnRGfJijq`+;"&em"p(McYifij@4OrRP0i]`i#j)-e8:BtWS?I1Qg<:`]s2)0=N@OF6'9>iL!A%EFgZrK*1#GS0/Fpa"^CX4W=8g0cT:k[/T#hs%WKs:2cJF)/u'ghtH1b2?dKCgF`@S[Bb(o^<S:WH^cgr`$-%3+BmY\AsQ3[pmK[a%3dgd$MpJKsf8;Aba#CPs(i`4]M9XeRgc[41V/rM,FcTsM\MmWf5ITcLMGA^,C#6r:M<*JJj"%D//:uX+l"k4&e#Vl"K:PBD]9V+)%\;hB$46A$MH+5)>GD4dL@5GT"+d^Y_Mb'@qQRGBq&I2qb=^phi1-tl+ffLK](LOAi"(>4`cu0e8p5kRhQ@%BGpZ?tZ#1/od>g-''%>I-=oQ$B$mg827@p7C3gh$-_^\BSa[4R.)NleSVe6R-_E,ab;m!r4OL"u`k.\Y45mUJY\q[a7iG%4ZQCZcbFMqC'm$g"N!"0ZYSb%b"*>fQ<U7_5dAAmf:pZpV:3[2anOmTiRmB.H["W'l/#[?S@C@978AB\mDd@uGOFbibdl3oc,Hfmm/;K6V^q'JB#CIo,adc<o@qKo%1Tnsh%8e76Nu^<Q/QCDKmUGG!WDfNf]$;1a_Ru8JA`k7M`H9h9diZNrgtefJVn94)`VjiT`i2n(Q\V17X*/iu\7h@3HG.q/b+6D4%/Ea.AHJ<_@%Sfiu97q:(^LoHcZRaBO,D@<D9Bg/ci7_nNEB;iqlW!(1/OZb33XnNND5"hT(0Oi/f%t+"rCFPC]#RA9[utg1)mdr[%,.Gp]4-^g\F17_>%l1F)h7eA\l?$TIrPB"BG&H`]J&aQlMBiUOHVY=c2pNBL4BlLi&`t?_maN[_OQm(RSLtnSMS!o,Tu[5:bcOG&%T$Q4Qcg&V0&U@#S'qnR/D<nR@\GN@ipGNdE3XnO=DNjO-`<uk$r52aTdcoR'EO='@W70i/9_[E#3@;)W3-@h52/ArA.?^!_DWOVl%a8)X=>Gk98C#cSah!*eWh-iDuF_mU8064P@A"%JU<UTKmQT8S]3k]0^dXH2XV:0msGdMhDKd)Pe?4jl^CSrKK,k:0Nkrs+[[(']5%'REWf4lR9]U,+1ONh'LsXqk8(]hV)LkM/,#'6gLH+ShRJ4kUX$c;^+)Nh&A"B9-=[I9UJ<*nWMB]dV]#C_KT?Bu[^4e!8V[15L.p%:4LVL;:eQUDkE=/Z:9#QF^o$\dj^g#Th\YnR-'Xe=d`!$<1q^JGIpQ6PH?@Cdl2_YmSqa6EjtM`>dGZ!$JI\TB-Hcmfufc5bG.g6%#<B2VLn*%W0;-dbXrZ!h8Xf^_<4_I6YLl6OKU@6iR"fqRXW:N__`<k*?PZJ9nNfGXR9:6!gb!VOkf]NK(,JA;Ag2E#FLk0f`b_3k%Q4?NEGbDN!O,hGT;SCWiQ0hRJVo/S4=7ej.o(+3;YmfG0bh*6Wl/Yo&Xa8R*I@[),rL3Ub]!<D6^(+g2n@PNOCMOKp$Q[j&7"1oB%WdQJ-"sqL@cJH8.rG"U5+'k,&4hasH<8>50cSSu#fm!;<bfAPST(_&j\pl;<n\"C7J7:q:24nl,?+Q+m?,(Q/X-BL2G&JC3o$o&\%Y'kf(1E(9+P3ol2]q.HXp\;lp6k,#6I,B:q\UV:chQOG=I=-sE)IE^up(V(Ugfm"V4Gg4J6+LoN3IOmV7P\%"_7fMR]QWQ=28_5/%qq%#`>4S='H2>7`meV'CTe/F>I[sVDaX4F!c^b)oc-.8J]kQBIG1efA&\4e3CYS!&+Ye&34/!%^QaG:Lg1Z+d3c:q68%?X=^\p.E%f"H^Lbu3thb[qImf=<p3TU=J?.@*l:R>!j&[X5HHkUgBS2\1VBiOo8B\OAlDR2k.q7")DS"Of?"#Dp0C@?Gu/=__sJ/>h'+aNlSL%\huu2!pkQ:/6\1.F)/5)'$%!&,'^p_IAB?Znu?OdFUAb0NHFPep2aJ"A`lAljQScFh-)kQI;nQf9\VJmhC8#:/1]E-/b4!iZqbfa%k"[jIQHYmT`Ha7bc]XNle*=feSC&d1(<HL,];7*M-=;o.hf/"J=aG2YFLE=1/bYR>>M8jsknO%]Yl9-^FF*iNg*tr8]0"?Mi[S14%/tIT.!&fPhf'.n9WFGO'#^gZ;jk_Gl.BH0V*dq>EIuC;gddh"e55Qrikq%AdOnc2oQM.JZ8k[ji1?8TG+u)]Z_8t0$9H>?/Zc2Ci%A?!Ob@NU_d[KjIR<qC?Z%/rcmOc:r*Fa"k%&j:`)at=*?!hq$.<\dSI6l?+)Q:#YE]\Khf0L>H"BCP(N7(2pgb?>..&Zg.`)UI)'%>H:ZW0uokNkRe'A8At;.eW*['Wl6MV0uoNO3Xg,n?)_@klcDN>,[SGp"T=_:WO(q*R0*lcF/1M)\>L"%186pFaBSIrqIB2#EZ10R%8;450OQOX796(dG\6!Nr2<LWnm*nGqm:cLGS*9,Ji?i2^eMd=j^E<sLq=VWM"%-`!ck!ne>F]i)5;`8')+=CJD>%Z`n3b32T_VM2%,Yg-dLd/kZ+N/;-$n-t.qf_?3$u<+@AH&jGlU:JD,j<BSO(3-hNUA-N=XjC+)%YmA[;9)Pa[6W_-@54n>K^'pP;bmj`qqgr!GCG9%[::AQ5%"a!dHmLE(DNW\OEPp1:%+QTgILkj?Nf&2]W0H+EBc_Nb,7ApfZtNu$Z8J;<8qm-W5WA>:`J=b+4RaNcAt+b;g;ti609>#%+BE3%]@th]bR:K-_Zb2V*>X#$+W%I.A=!/G#U+E;]ZtXX[&ij&o]&9g08#2\.8SI7g"YG<Z'!#PdRrlCWi%XMFkLRP-T'><TT1h4%bT22kU@M;\Tnkca)rCt.].6pr/(dk9)qTdk<CWDAHh1O;5.@sMs%m:"]JF#"(@"MHJNhEV:M<.a:fI"5?u6S^A=u+>o(O.kls1qB%7TQCQ*#G\1HVCsoR<Xut2@UVLTU<ca.$gT=8p:070T5-llsrWF"4aHajDsBq_:]sXNC?p,dA"V:;E\s;KJC5^AJk>DhaoCc0+R]>%VtIE4Qd^T*=uNEeF^N@4:u\RGY2%DpK/Fobd(/GadgKF]pa?Yurk&\$?^oqPrJcjH3IfU#.tq),Z*>m8/&gG/^":Y_-+q85$3Z;)%-cO0s;2cD@`TY\tVQ+3MTreecXtP,iF]$5,HR0gTl^5iM<#m9?P<nL]a*QJrfESc?=2+$(4n2CZZF;t=cr$,'@ia0'k,&q4KfWm(%$b"GBgLK*i+[k;b'%9jjE5gqlLQetI@WCn!Fl>CrLOo4SY&,:V[Nu@$Am5a&&/1tAH[J#kTeP6UF\kq^Ep+EOW?Bqn?0NjLa,EuR%gX072=St?u)XV&/V2)Yu'cY.IX9$iH\aSfg41j&^K@gG8\3+rl?$3fD5O:QZ<rnukqj7EbC]toglm)R9Cm`7LFC@<,dG%a!@qAt9%,!(h`eQ4!M=07B4^FsNj%>g_Q1mEqB;-SF_#nYF%n]>5,pPc>Nk#i*g/-]T=KJ87:`T#1$!>sUt0=FRrFDWR(ch$P<^Q[dn?'6EX%bl]JS%hVI-kLZI"Y+l:lJiFJMp5l@s+CH<;lQl:q#?D4]37O=oJXV9Ch#\Qk"0nn<cgZ[LMf$"g#CWXG3>=gX4)M<3SYL:uEM!>Y%Eu-(h'8lPrVR@8R_h`kga(pbG"4ZjsfJn]h9;KC=8gag;l1Q9pR+[l#mD-]*VRJ3[k'ZsCIo3Ta4nb\!eY"4_\@m("L_7+=Z@iH[%>8s,?g4usD`*MQO)B"8B+`XaW>3CZqhU<o3'LHu.k9^0q&bcPY9[erC)f6Dm!+]M*&IcPOgTlS:MU$&bcf*N^BX>j-IcFZ^oAmIo%2W#Z$]JAQ*0Z>V@%KPN@qf&q`!k$Uui>7Gt.g!04)d+NF'SkJ>Yg"*?jU%UP>iF=Z$E[,k&SsFo*9[Mo456OG)0r,HL,,_%oUM$D%RSO*QNSibG;-E@7KZ2=sDq&B;U9_9fkL]i9#T&i;(BR'b8)9gqp/>5i;hXj-5$(Vt>>Cu9Ql!(0l7(,`Ud9hAAI]>I?Xj*f$,deV%>s*%^k."Wd*B7"Q]L2iu8,Z9&?OYma2#)#J1U<j!F#f+G1O(#(D%%$d5oGo#:2A&i:1/pU>=pe5UJ!EH7?_D2gsWk.Ec17(384Mc%$1m_\Q&S-o2XYCX[*>]C@qfN$TYJ%SfRUq'F1$AL*lX,i:(b9pqFF*2bln6m^0U$0^[Egf&MP,)b\3nkS_,t&nDNa0?o%>=C0cc#%N]!Ui#UP-1-f>RBV`9VD#Krt;*KB[,,L[.+QUu'"(+bQT@Qcqff7jh)KA$mZ!diJC*ZpPTM,?FM/;TFX^5p<iY7:G+;hXYJTeK[l%Q@02?EcXARq]9@o5o0aW@L/!\I?1GJ!6tlD]bu^)$U)hQ@DK/%pMRRhD3r;eL=[9rcs%;ip\91g`>l8D%IS3]=']KA9$\LgD.l+g%KjbAETKq>)ALGkf1,CWoL3/>UA>.JX]1$H'FsqsYh#QdVK-B&rgDj2n?uPI1oH7W?`l?ppM?S#QT0$.5YC9*g1$4.V+morR%WF1!%p+'QJ*[[r&WG,F,jfV<0ah<qNisGH(QdRT"WEO_YZYR9R;XSi6!=,#cM(,tfQJ4-c[KU'VmG9g_CR[FK)Gc$^gr5-uCGUfnEB/`/%jt_L1pf7U]@Uc#%"GB8Rf!6Ki[ju8^Ea9:JGo0o^;A`JH$T&GcS?lj:ad1t%pGFRI=1B`7,!1Wfjs],4g3aqfLX%u6c?=QPcoH4)%)0F"2n)ucRhALEUIcVDeke&_8XP&3CkKnKed"N\(aeA=OTGtrf*&<;p4+e$=j]HQe]JJaUZNZ--U%?R&Z^`3V+c"?)K?h&lW;\\C%%\<';jle^H[KFX(qH>r_^RX.sqn'OR]?WPAlSc1e)j43Zq$p"9;V!q%B[.gY\[K[1JuuA5mW]5Z3^e;ml/^jYk3UgY3d"U?%Z=(N%mrN)a3k=U6UWbKoU)uL$"J`e+_CN'rH[MTi-bj_)$@_t7,@6dZ\G.L-V;+>s.KIk56ZP6CBAFHA-G!"6b*-1a,gElfc&Ttii3Y)O%hR=lS"HE7@j_^aB+hJNa;"SU@#'Xu<j:aEUe8@!=M0r,-704J6ED(KHg%Z(d-G0(BN%lNi.+rIu:t=rJgXG<*-]IqWK=;fZ[$#Lu%#Au5C)XA!:A^uC?(_K*NcR6aG%gAHOlOY5UF*m!liMMusI$77Ie@V'0KG?I&X:$/:a2%bG^mT<YNA3ljFd`/nlAWcR!3C))'&/p.%(b?3A_<c35?/Ib.ldZ/+MH2`uO8$bG5ta.oOd]lFl"E-\+!A**%;F+18B004k0GoGcPjXl\sgHJr_NaH1ZodJ5HDEQ3AHD.)$$&u%/I3u%SB`K,@,A@8";r$(.:]-?B?!VAMKs#l"K.V]U'3p4(AR96]ut&7/_MqJS#9YKUGH9M[S/.'c5AtRZb(bWbEfI8E7bumD*-T#%@Kpgq6cqW@UiY\\IGVOc3jc6&kO%VM]*Vdee33[MVRrnt#%6p7J]CHrVM4gkfZ5kEmd[iiPHIEI\CIBpjtN%Xk0Nr(jM5fp4Ec!d%=`XN,c#$89AIl<!Qd;!Qm7<#GcCb!>($V,rA[Nc=1O]2f$tCU\U`]E.a'#7aJ,uY,4r;JUlgnNXfOHRDB+L1h(5V#F0f\%$s5HYK%hTFh+F>>Vl6BP[7S`)?a6BONc$5ScOLLc86We1WmOms9OrD&Uik_'\5EUf3n&K,ndInNlg1'`@S1A[!ZN]CIQUP:@h#:@c+M"D\Y%*0>p`Gd.X8oUP_7EcFY"%)9)n0QKPcV4fmR*eN4GF>.5n`g2aEda1ICaN3%[eqf:>*Husc8Hqf4#t<VZ],Z'nk6+E&6+F"ep$?t&%gQrMEdkj&(1>$VgUZWmDigs[7S[ie4>2"`Vh]&G.jL+UCk\4^J8+u#",3B5<4.j>M\hLWXbpS:oS7<WFp<'ET3&Kr7?23R4"[0I]%kTqCh@&8t[T#Et%iNQ?<k-=TX_`hh_s1U\0]e\Aj31p*E`fq"3lm:=@il7N"(OV2OP7Qhu65=(;NAhqsPS:(lq/BXXWT20W6QY,E%1;UZqiN1JU%G7WTE;H[TR&M"AjhnX!JKJqsgn6%_H_bS9HoV/MHE:tSm(e%g_rcl:E$j"F>GC2bELhs!1u.:lGlLCQ[GS[CoR[o`%):G%Z5s[.ANHhRZ%*(F3.teFGKH,?`ImJ$-\+4q8,*eAX/50`h9e6!qkM,\Q)a]sX$(Xg'i3?^P1C^KG:8@HVE?%]=6(qW)`J.Gh%8!AR/j+uPZ]$Zg+51&;iUU)+q@Um8`]N583O@2XK9J-H\e>k34./n3'4O[U;k-j[BFq]R">^FfV8mmnCFl[%)g[6&)bt*8-+%o'Q%3U:aC$@YGo3G\@.8'"4IB,Or%e12bDQk_?=DS45JlS2tH?B6N[om0:LWRkY%8A02X#28/.@H=Up-d6`C[,o)T_]be+C^qC'3a;cH%Ej771'c?@Qg[V/X.Ce`TBX)QR_@:K$oFS!@qYQP<^rDWH-c[h;^%W+;i>hg=Z)>H!72<h7$E*)[X(gdi$AW72)OC^kk#M`!&K]WD%4u^>?h$35.,rXh<C/4@%^rH$9"Nk%<f,0OeL<7FqXM#kf8W:+TII75Y]dDBrNIL2moR\Ls1aLP-Yb$XVEX((P?M%j"j)S155^Da`%lFtK\>3F3fX&i*mR95o,RY`'SH1[VP(B&D<ZhjO)KRW:3XAn0a1TS'E/GapheE#fcl!1G%=T.Wt1Fl[X>&mE*N-*9KCWTC^AuRZE%3U^coG/<LT\9Q4B_es%<H9$36Pb";UCcCe<P25Og1@2TYKqDZhG.!O.CSqR$_/mSte#G:CcCU#\.@N<*-+hF8MM=s7-\-'IcSou?%m2:)kd]I;_5i>B2$p13!'.5E'b4"k+1oVk3]JIkB].W.#l0dht/#1S0p\;ZTpZhGn?eh^2UIEd0JR?!T>;NFlcKm[58sWTpH*)Gh%2g$=1Z?OirCH\*[[@0niB$1u7488`=^H(thQ[DfbSUO?f8ih8hgItI]$R[u[V.$(dr^r@&OkYH!e>sFe_]I3RcL9Ke6%/.oNn)fl%_*#`r+8qAihuIDmgf&R$-Eus,X)Yctk@FO[p6*GfP2)A@4*&5.iH"]`,e_OATQeeL?!T(<F+)p6^5_Ll3S20t\i#M=1:ZcLU<4U-%:?Rhg@r:(@%H%aG@G=9nRckSY.<5/ph=hp)LD.r/G+*1=NA6pJ5!fs-*]X]dOA4p!#AB^Jpp0.S!a_2%36.1Vk7hr[\9W,5Cc\Hr%+SIUKUM&%9jjL]qFYeD'*IcLaP\`Ac:ul:KKK*Pl3T\\7T2?RTS'G`?7Yt<01Rl\3DmnrREFdOdLo$#,VnL^0ZK[m"l.g;KL<l_Q%]P@':A)kk3F.-CPh]GoXSPq/s^i%$1flU!"FL$Q;CGqa4r5njlendAh95.)QFAAK6GBengVK2h#s/'b^Cq?lKbh"0M6F#LTl!,Vp%k%m)V>WV3k/*q(5-b1'4HT%En/mZQm)98E'FRD.6j34BAb5F)@Y@G_Po=9!e9\FM_1Se6ZA':aeoIEGUVXrGc+(I4"':4(&60)L>%U*1fbc&cNb>>J3rO54j3l2^5W]Xl589*3bJR/d</2=W,6:Rq*_/r"VScH5#7Z7^lYYKk+un9qJMQVNIA6Se$TiR#^(Y]*hKKC;l*%G$hN7'L"n47=ipYp3u>U3[>\W2J&b1%Ecuun/7B9@:2pam-H[,,N]#*_O*cheK`f7ff^OD<9:SrM&-@8m?p&$@bqXO"Yn+>T=OQ=%B>ff-!M?oDGqI59d+sdTNs5t&Im,m61Nso'PDt@c7S$HUT",e#U58Kd>mTa5b,EYAl"Au)2NA=(NI9AGZ2+stEJ#DM_qMYJ&1h4\%"hf?+@3iVA9lA""Ys[+f^d1e$ni3Z]+HaraGn5&K)Wk95H4@Vf)P);;Do`1KE&(gLZI04gNu\Ec6mg[d.*XH]$X8)U7)JPibu%Nu%8mCl+)GebSoKX4q$ZnH.X?";L:]P<:VkMD)R&?Xjdl`:rS@9Xr1*;iP:@?BLfc3Z.,Jt\cGE.'H,po/4+\-$h-ZKIUFY\o>>mOCL%93PdOeh.Es]pmFeDZp8OR/&'PN/Wr5VD'gl/h8A&o28keYhmJV3Kftj%/NuJk$F^&c$OdJ0D)`#A\4j`\BGX`Da$/XS[u'-_g5K%%mfgVsS,4p@lrT,3pDsj9q&$o;E'Mlu3KD?i)9Ne6$'=*K9Or*'h''[UIU$ZE7#'gq])<'D^JkCZ2B4h\JMQc$D'/c]P7@Is\AQLn%*;,"IHgVggk6-7mDHL[:fF)npR?,7lT`keGXW@]e^O.6\Qh!Vh-Sf#NF(`D<?at0A0UOLqj1fOl`3&/Mqrn1BEXY/mG!3RXg2#Bc%Z1,s+M7(sl?8_.TcO]K>geVM(I#O%.Yniul7C*&e\Ph>gNaN@8`YCJ.-e8>5c[4W&jgV#Jo%Z0ueY>"E8JTH+VWZ5I)a]sB>UpN)%?ph`phY!RbS0TG^(0c]+?CQt;`:ViiccaZOccO!#h=_DWj8RiM$<+RV/Zf^sa5^7<9O>[>pm!I`lR#F@PM1rXTLQ[ehrH(8;OO$/%Qp&L?IaR[^L8"HAhY;+rDk/Xg%F653Nbde>c25khBu`]6(\\nNql,RKY,5+c\H6/%%*K'sL:MHLE#neO4P]*@4`>7(0@GjA\OS4r%FW<EEL;An1f,f&Tc]G)K,YD%)=[$(<jWm!RelSAEIBJlJQ:kp-rH>(#p)Q=EM8[XXV^e94l-2=M/\5J':8)L?NL?aBj):p'"C\1*%opNG2H)YX]FI%.'U?23/2mXlL9hg!(H?&@%k1V7]aKVR;SVA?26[(,.rRib3n&_?Rh3k'cVn9R3>>sV*Sq]2ucLr@8;U[c!iDSi#%(T't#e23hcSE79;\9(B]9>3%I>VESBP476_s+%a8KLLgPF8m<Ug_(+M\]A"7WpJ<9i7+`r=YCGU=ED>Z9d5!GQuhY:k$a:`F<g7S%go2`TgPY=rJo+O#CW>H'jkmEZb^L;%?7=5rS^*'O&8+ctB/&UnqTj'l;uB$daTH.Q`k'NC2/6'\?LH;,KnHh?]kCf[<mMPM[f)kM%f]`[FR'd#;)04(&0jh'FpkfsW.pp"D`b6;satAa%C/^e#<N_XjI,F^NcN-u"8.s;6bjb\%j%2d;3\C3Bh12&](@5_"7fq>#?WL?\%osDHuN?@TA*gG[HEb#gc5>."O$n<<gkfuQ$SG9>EfG9G0`45T]l("%l\1X>u`nH*rm:pFpbnN1\4GF^EmA`>LAV_1>5#?4AqsC;Z%r-7q;Q0d4-%%l&T2:&mN0]QZPX6idD>1sppq1fs8k-"02HHqXaPI/9O!Z^J<>-"e/_Mmg'7Kc=JV<&8D_0qJNIt;Y0Y.0)NaL'uF%23rn-AoINUnrX=?\ReWuo:qO3pJZ.L!W`J&X74B;b@(P@XP7SBK*M[^]2#gff])h=fki24=*h.>LbKi5[RVj':F$mlIr'f1,?NpM%I#k!6_t1rEltmiS.5_NLgc?jA]_=u$oLoCXpWqa;:??<fjA;h\ENE,7QUDjQ`F.$MhHdD#CckUQU)lRBIpX`4YZpSj]7Wu)0:+$t%`I)h]K-7-c[.-sdFHmG"k5?)"R(Ie1Op-[-bf]i=F;?!:%Ns?))K$\%?e!Q^7ij,f0N^G_fIT;$5G&o\lO3&FZN+ud!(2lGZ2elc%!(.uB!TMO+f#U3k!TN5Ag3r$i=b%R5U?h6:G8?i4RR+#/*p'`C!q:CTjg2+#T<,/g+6BhR(4Y^K50#),fH95HHfof>O7LCO[-)a9%f6$A?o!q6K`qh*UA'W0J+6=Hbqj"mVo%EFMpDT9OmAu8dpMQplht?SieSbka>[tAbb5Ya3r4AXlH.UA-D%(VU\\@Cm*>Pm7ahtjY%kP_F<:j58e]^+`$/p#4>%/R-!pT&a&.iIZoU?AS+NjghUnZLcJR9\c3Xf,iPN@>I]m8^o/moR*8lPC[]3PrCWeiCcuSK[L7I_egY%%eHiq;`^ZQ=h(-nqY@8Sn\"2NXlr)8>ALb;qI*p2NT"/-/Utt><Bki#J(SuDK!2FfhXtq^7iY%E]CfGoD^bVRnW!C0XnEgn38X?"%:41Z;X@@Thchj*!o.;f8ht?U7e-=6&&,36!1Il5aqYB<fik=[@9hJnCEO9rg]FS8&#2GI%hXq8>Pr>eX#Q(QNY-qoWGPt"iIJe<f%4OYQW9GsfS_=>7Y,J\YR@sH$d*:[<!",bR9Q0orXpo^7`X*tEEO8c;SGH;o$):,pDDMqeGe^$$].)<HDhYYQXEbpPUrIUO`)#df*%o*O]u=8dl'O"\T7RU5IQNPL8q.#81"]Y-U\f?Y]@A`sqKdiROT^L0"c%/[3"[mR8jQkA6Ke+:$g'26X,.rIo3l!6Ml1IjWI3JMbV%]O1=Nc[1%g=h)!1nVn=/1>_%1m9MpcMK9PNTJKXZn+tuh_`PlXLNqFs3uM@M05:'&rEM1gqPp0W*"2VGTD,C8VOdIDhY$J`gR[LR%pq)"3YPO4i\$T$Amj-tMn+o'+4LsW#%f<E$j,eBOg[DRrgir]$%7B`fI]g5U!T3QkQroP##Xquof9o4pqlZQ86EJEQ)u<i)Vd)&'%I-__J%.LElIs13=hY$Ks>VP'i1Wm=Y3e'3)lK<?I1?c?!?7Wl,*VFgPFmoat/<miXB6>_`X.T/@8P<9$QZ*5thKss"4V$=!ED(*,%@_m4[3,=O_rJ39]Cl_7Jr=#qTQrObM).\kXYqsLpW6H,I\SlhofZZZHJ"=-AJ[/`hXn"#T4.T(qZZZ(g)kDhm3+ccBN@<"%9?$K?%C9;`nZJJ^,XSdS%hK2Dk@d+ZBK"?_(62IVJ)b!#<[Hp<_723\+7VTm<cC]1F?d9OObu5<mPeGs/?8p33Q+=2WN/W4VIK'W5q6,;G%gJN%fe%`Q+;D4Y$=)Qp0B!._Orh\;k(VV\PhqbkV4ur.Ta*dR:d:g8*F7+Xjrl<iebr8-7rFWdsZ[\H_rqbi_q=`V"9BPq\Isu3O%5MN_WmX09UOnnOcQUf8\B7;h#r5qf2++<_PKA5Y4e&Up)puM7_cb=c&p0SVbg$sFN\Rp$aqY9Zgl0+g:Y$X0Jo!+gIhZ*N@Df0uO%p@+h)]3!j/iQe>kJ,JTfo%)D7h)g&UlRSSL4o<3dqs!04"Pc%Yo\0940;$O:n,1SAjQ%&O]q%@ZjS.E@7m?hKP:nBQ+)pSum*aq/%5H'?44pYM3Hie?W.DI'Oo$!NNn$ZHeTZ,o2ZjFKWIf/9Z(U'FpanP4Wf%-?QCT`'`m1j^8mDkh`H!7r\R@0iq,;gJ@qW.OcVti3m%[j3?ko&W)ZT03)OnU&(.hC#PN.@J6>m/)8Q=Y-WG!iWMLYAWPW#Hbq$gK1!,gR'q\o9lL?q=_h%A#Fg&$RrM+iBQeiPFA*c3kbF9%%p69Hpt"U%plK+,i$Pp_VamZBIs/PF[m#'3Gjjl%++O1T%js$$3qE3kZ"kG1fJLs1hd<p8r4A$ERD'O^E?#1<BaXTqDk@fil"p:s%.=U\7-]Zf=Ndp$R$tlb+IfO6q5-&blK]N*?)uC=uT$j5IGBWIsB/JC,H23pKf.`Z^rOHkG\o@36T6@?i4WBDe\a2MrJ3Q4]LC'r`%55XUBH[CO>i(k_e)4]DBH#NW>o_O=bo)8*6h=V;.?2SjC_/?pIl@lu-NDE>$O'fSLlu%=Ndo5QSILSN&5O<>0m'Xao%9Lq`4+5*.%%ot4>>eTR0MC5?(5-$a'cS(kXagb::5P\1Rq;LS`9qG#C;T&3Op]s)odsca[^p.bRcd2B36b;sR^4*F6qfhu-c>iM%S)'PUE\H0O%0&$'lV)LWniEQ56ilc]CIlRGN`S]+/cRq=.DjQ/#7l$r`[AgjRn2:$mm?bHbSSgAI]l$g7A%1_!qsRkhi;,P(rHRkAr:+,9I/UmV%DgAYDL$qe7+I%9OhMpFi^3o;QU&DJ6g>0G@j#m7h%d=J94M,gPgqdHj6:0"<q:AD\I<1kWC<QY-$2N2,>Q,P$rQQYiSb\BInqZPK%B<?en,>Sef+1(k-oc7."Ctl^FP^f>pnUk?LG<:0ghq.Drq3)cX\_CG0rETB?YG%SE>B.mKY!7./$FHTNgE4kGe!G6-3qLY/^HO])%rQ:POiK(D'KjMSsDg\8P3r.)`)s24NG@m\oBA`)cKV5pf:<:1&J,dnfq:?H@<p\MCSuB8?oAo"]j%6^$?@-YUQQo;@5(D_MNUXd)%2b[_QnTJ^rieq<B<WCA58)Ce(n'Ac79.t>N063>%ReZ.915(cc2loug1>K3[%NRe*BkTX"kVln;QOY%M<6bm^H4GH"kg6<Ds8!.R%3!Y37o@B&DCN!H>FQ2buT=e:E?l(?ep9DoV5'\E\])11Z'6<.<D3,-uRQM4aUL=E,gp`W",&'Yd>I)+UEXj#F4LN9iGMT+EhjlU9%nblC7j0,#N<7J.13tRQm-tC!fnStsd`@JQie[)092h#FHfR<amnQOF/feG]548*RT^[H1]a6_n0hEB>moAh%@ftM9Mm-KM>-Jn]'%C>+0MZcQ:nV2rna2XR3am(@4(HBPDBqYl>k,QB_2c?PMa-F2FW+*J2#qrqgtK>%-5];WaJkq:hU^U\OXa$2euY8m#rQV66'*#s:]%\D[/rS%A<#q]sKGL;mu+cFW7Pf_iJ9rpS@"W1KSfA>XS1j"$%(8aNR;+2$-mIJF9^J$W#;5rq!NY:u"i:AoWe?Pb(C*^1s'0r7Qf%XPWSJOs'JL>A)8f2*W1.FK(+cO&)k*Fq[*0jE9R?hYV]Ugj^jBmd&lPNR'g+?2T.fd0M-Q#b>H9/q<oXC&cJ*hq?#d/tKihM8i;L%dHTQT#^ZC4*D\D`'C;9&)_:s^dJ;J^;1dj%'X4$:p=UfQ9lKFrCpZ`*8&p9bFlK=\'@Jjur58&7kJ"Ra"raYQ5M2M92<<hn^+[eC%iMD<?#K"sYgAQ9Xc68>HDMW9+@c[tho[O\gE;\`>qHgeIo@>#8.J*+giRAjeBHHN`=R9$Fc<P\leOCRBYmA[jqeRh#NQkWM-^Q.S%mYS^5Qf)/]/A];05QB*u(L;]bN@H8>jsR?=K_Eh-LR0;HGOb.BCM;M.92B()nC%,$l+SJDGnD<lPqVh+ZTiR=giN?j3nX@FH*>OI%7""4gmU]OS-PpZL2\uL;?bV!r*?7;KXQ#?uLORaQ)Z*(iQ!KpXQaA`QC)fH\cm\n8(f%iQK<6B%fu;7+*%@l7D;K4j:AkEdAjm`:%lBfliWDbJ7icUUYeBZ2g?TJXGrek:,[#:R%IC@g_I>ost*I/BL3otZ(l0Z##:Z&b[n\pLNG#-?F:h](a?=i8mgJ;>"hNZ$?^H%;@%^<%4F`pB2Cf^UnuYnO>/i]hX+HD.U1PK630qkrsF9=]3+Pq-;"O<SjDWWiCP/+Lb7?CUQ2>ASd*Vr)GPFslIb[WUY<&_6;6,Ac3i%qn"P#3fX(c6gJ"UPA.OV5).=l^)qRtIm0LV_Y]s14=OPu3?.od#O]AhJ1L?)/)a8%b:u\.l/%Z'gs/PAicVf.HQD)-V=tP3V0gZ9%md0(3\,"Kkoho5=If?o-`TNjk8R8IUB>=BCb1Gh5]lj.m%m.6a\<]=lG4DJ;5PbKUKt&$YRN<sd)5P>fY%MuXUZ@VgAlMmEq*VXN%I.CraI!;GNVeOKgG#[cC6flQ?C@umrCklb]lKN<OB`FD^`[YR_0<ht*9T9jN.NeZ/$1VZWDSCHA"4`--G)&+r<i,QSD\$QtBM*2,%5)+?Pp9q(J?&*n/jRT4fmW8*]l1p*WM40krs54F&pZi(_&,T>l,7gFn28+=1X0(jU`Dar%Q8`1LE!In5U<W=W>'>ob4mnBoe?<;9%3,,Req[s/3$SdBR*K^ZcrUhGep'WVBg3\VH];d0JqW+n0oCl"pO-B1S/o;U%hRO0%CgU:]n\oWoM`Q2thPP9*"mY=>52>eQj/2th%jO];Af,[)"r]RpU4b)ncB4"tiYk.1;%mIc&bMK(V5<SSgoZiE!Dd;)i`ZH0&J&*/?G3-qtZ!6VfMnSl<l.-GgHQbTMr:'Zc[r7O=%5PXO>iSQ<GqY>3&e?A88A9[qH&*LQEp'9I]mH^u-_523ufX\a31Pra9`C3s$ijZPu#^kD'^3^f>caU@;X1kF,lnSM$a1m4JEV[;'%E9>s(*q.mZeb[iNp>7XCpDRs%`cCgKqdET0Du'&:Qi9+K-fWH:i\4[cdGrI@_o9+j?QH\)WZH'`gjF0fg0Vk@](MoS\GC^)O$!h1%[hme_J*6T>=Oc*m5<$?2oR#>QJ%>6_:OWbCbO'8aGeU]Yj#8nM?925L?b(4QPAc<sXe%\7k5O1\'.odSn<l's_O>ZVCb8G<MqCgY%>J,IWQpa:^*p2;mI7:pI9-=#pn'dh?Kk$<Z%5r9,.S/@pj$'WfCWFD'prh("q6U%_k2RJb=CYE&cQB_m'-hlVV\nkij7Md.2kKCB%RJq[#h36pUNLO2Pkb)<?J*re%58F_ire!F?k?D=[fZ3!m620n-ZI-\C`+F8kl.nQW4F$2>PtcI])-4GCVcB=9m+p]pKMT+dNB\..%X*F=61"^l'rTkf#0Oc=*2.4D]HGRpCLX5Fhq=3`_L)b'lS#cSNa-.FlnG*$Sh9%aImG`0?0u_f4h(PBb\GtWr-bo]XqkNOW>OQFr%Idj&=f,sthpr\ftpV4HBs#n!dptkUtpE)QQIWp/5K<HnVpgK#Gmb`BhoDNO']>bp?;4LYo;Wl(=f!+-3,6PMrl'H_hcYIHKq>O0V%IPEe-me7/3rTidai>ZTb.ia".:j_rK6`8_)Y7;Sbp@K&JhA"EKfAidHLT]:1(Os/,I^sM*FZQ-?HgUa!O'WS[^OIA17p\BDj8Rd0%0Va+(KDM!'8+,,m0s\"Po1C+B?Ush1*%]t;mTNtU!E/bSRuUa$Id,FKq_p.@rU]X((N3[Znj`KJim2P6hgK\1U[u)nIt$iYIJ_@:%07S?*s7"mI]gl_=55=9[pJ'@$FLUr6c/5!kggcQq[Z:9HjU%L^]]HmN:YZi.jS8S,mJn!>qu=Y>3ZXm\/cSN]-kGNr4OIH;s''c#%dKEY<hoHJ+i9`fHs2LVe":5D!q60JDV20OT`7C(NM%m3jL1##-s1T2P:PNQ"hZ#p"fI'%&*Vl<u&c6*pG4ts<'_1HZ&rg515S*0O%i9K0a<VnhDO1tM:@i$bIHf=F3)RhhKl"#e49]qmpSSN`MjJ,AoJ,9)Lp4rCg?)`Uor;#@>O5@Top@#m0pY=0&Dd>CQ+kGY[d4P7Z%U%59C?9-Y&^%Dunj!X^Khu!r#hSC+?Z$O4,M"+=3TlE`Jdd99fs0[nlIMLKoJk,jlNK<6uZ^NdE[GGZri0u*"0$.bE9Dm!+GJ?3n%f'o"Jc@>lRmc.+$Ye(,of96GYe^MB3a_"<HqL056c<f1,FgLpW;o(lC3IU\?hZc;-^A9e_hV(iIma^nVVhig?_t/p.G3-*0@,b\0%\gK[BoO=&1VS1lqNf:]k2/Vg]E9-Z*34[;dep#]$5Eat5M&gJVFW^SMi\6<^5hk]KdkYp)5Oh;>o[4Q3TD7L.5*t>o-YL_Q[<1os%pSW2c<(%WNc<e8,ipuT0?9c5LqY'27^#_H3k;bDdc[7W4pgTitO^1*,ki1;Xf@GJ(n<MLMk8lHHqpaR,Eq$YI4,JIS$uC,qD-p%d%of#9kFs@C2RU\Fgp?;\ZhAS`sL'ai[o[%P"^A%-?m]rUooOV?%`nC8gYN==J]I%"5q^4#.9o%QJ:$8Q[lrB@ZnFp%<+/[Xf*Qbkq%\(2j=UY.%#-T1[*]a-inq/e6@s6bFiEsX*Op6FM#p6Jc3_I@K`=6AZ:caa0t;SV"0qb$=b,UCP_I_W&F8k@CHJY.B.acn;5r^0kR%O2:&tkh(=&-sk?@SL:U&NNk/6]3sk&RnVkOkPO&u\mhkX)kVW[f0?1tNM8[N5JQfQA+@-'q>'ue#=S_O^%-=+!R?/nps=L3_gtJ6%6f64=rhKeCKUWKb(ZsF!2t(TO?[P*%pZAdOS"C%-;AJ.bC$_ljDbO[8TDbN;?L6UdTf8jRD]ZSHNST![-EO\!E;.I?*ON@nXMh5B%:#i^4]9JN!rd=]W]5dGfbE(u?Ok8pYmb_q<"r>FtJ)FeMrbgNhmD'D8O+O&(Hpbcbq<0i&"Q*`.:\LE?K2./krKiN'q-.bqL0JT2%rL\"=p[n@9`M''ar:\[p`SJ/0I0Y]MH/C%<hZ*I;Xi,]+_f#oSD0!hO?&?1C5(-@IH2#^ms1"c+]SGqS^&NU)-muce0(1tg[/R`4%p0/J#hg)g=PTjcWnmkZrCZdC7[8D-(bc_1>d(MfE0AHt8qd>@)p+^)B88cLTg)$@ZdNjh?FF2InNE7KAJA_<61l\I7mu&8oHi]^&%`*5_I:Zp,HHY<5J<c*/j@@c41Mjh>lrp%,&4rdqegpCf[gtk@nkOS&<>gHtmg9YJF@aqpaR=S)lUdjit2o2PY1o?<2An`0e:=<5X%+'t(*JZX?'5/h<uB>A]\DgT-7?8ja:;=YYOB=r+s#/ZQ'I<*?nVIg7GrkD(NGhpl.=fC`F,\Oc-C<"hef1aIT^?,;$-YH!E5Ht^(%,h,&c&,pY9?r)+F-hbB+DB8(+q4H:Es1*96G*mbm++/cbn:UabG3ci])aC_'cK.P\YAVRd,=`[Cebs.,s2"m.c@u/1rr-U"VuM,D%ad1a@gNFP92>hBqgX_X,(M!=SJaV@M3lYgAmIBSW7pALOm!eHbfqmTp4o>3JUS".UhsGUgh=tOLqM1EGhqaT2n$H`bgHO1XA+$_%%gRjMDGC$0HnBR?Qrh05iNW6=roYp4<s(staCB+((62tRZCk&bhh/0Ls1S4JalSLc7etnoW;VHT0<Kd%HpYOK+:QKFdd)UaoM/`(O%;uL?YaG-p/;dTC<%gR9h=Hdp.X`Zbo>i"r,a,T6eGX-oE>:6#O;1H#cFD?;C=gS(KQ:lBKQWU_4gbC7&F;*u#0f]\VDaMG0e.V<Z%jgnBJh8X@PCr(&U@j2Jc&)4Y]jCmQH4gmr$=$Sr<^[73;EMi:ES"0Pee2i-2BL$hj"e5;TYS4-]#=@,U:u(TLD8bYN!@@QYf2qDZ%OEPH)nJ%T8LR<6ORrb'QbLQ0G=E;@(ND!sdm#K16CE#V+K)(u&^"n4o:.boT@U&]UG-6QX/5ll-A1N0AUC>2MY!W5#6<bi<D&M*j%p`5ub-Xb]1[]=0GDnWMITe/&^<bQE&')n6EBXe)>*&A^A>i^]M[/jd?O^iQO?B"qGJGjILdDn5>ekbk0^=b!D)01:S^FARR?cmUP%\nQ8&o/`>#bZV;b.H^S*E$\sV68XO))iFl7LF3paH16j;*)2]Bq4/-\T..<[4De9Dc;X5LZ+.:9bLVO93(0pZSa<X0!L,LVLC9=b%@I_jXgn<=!H4Zk](T<I#X_hMIWX4g[LDdO,GFWfOl[mU87c0kPMi_pm1X:t<ZCdp'T]?[86StH]@T$p)e.1G'coa^q*V5ZXE^C]k%)40IP3;<q2296q]L'JodZoEp+0d+p^P9p)[-Ir?fLT!RWDe!9.>b)B#S^_gn>P`J)+MJ$t9IWOkd`@8Z:onNkgWhgKAUGi3_d,PW%%MYYDm(g<:($[X2=6s=N%0bbFO3[Xbi:Wc"Z%6bJ3S)'Hl6^!Z2O3Yq#&U)OXka%d0mmmbe<>)]&V:p3pEJ*+Xq4X=[*BU%S(oQq%#VOm4=*'L('K4Sd@r7X7fQJ`T=6E!+?Dc`57@ZnU0FZ1WQU-$/gCXasUo!DN3#FU+YZ(\G7NULsrdgDe\]YQho>,@70YXuK'h^Ld%V'ftEW)MO/KQ$o!f0]?<mCF;#]0Y:G@XWVd!Y48>)2pr2B=XPJ!R9Z%$[)M*cQC`OqW7W`B7+#mmP&*'"!"oh99hN%\33B5ZV5iF%"WfSTRl?>gqmOM@*?40.@rL3`=g&>&/PorW\IEIqBt+1hhtA(K)M?iM?tq4m8n^A5@iAR0i0#E(:_AeFS$PD`h/M,O[R&qAJWoqR%TPE/Zg%CtS[^[qq*Q[)*g3dt(HX_Ogjo?NM6RLL]ZR:jJ8-d,FTKQAK\K;-`VZT@'/p.;,_XF"#(]`:2n2dkq)-NF6K&>*h1<bQV%jYDP2/^:^lXoe#5l+#PK==Dch'b9-ZL;rZn4YM\Ch7punaY@bh)lKY%)37Lt@(Yg&N^.Pa%R=dW!#i8G3oLs1p'A)%V[^4RHf1@n%ILn>M[@6gKQm]#e2DLCCWE)R'1@os\)H9VVo=VL&C.si(5ca3h$nu5FE.sUY@R)!4[;8LN??e"lJFCKY@@Mr[2l%HI-ThkQd>%+b%?20LVETM0R;N<Z$lQF:-C:&:pg/aGd:tpK*XIMoBT)'eKE6P#<5,b,G"U'u!70t29hJ&e=R%p1ED"A?Hg3LdefgU!#`4nj<j3TWk%e?2>/mH0@>L![@<NW"&,5hfEC?>-DP1MNpfL*7q\&=o/#8gM53*bO08QUV34K^BS#beeg6lNa<uI'5Nn,6OBYg4UBRD^;e$+J^3E%6+^t']1WJkE"UgH[ZqYkc6fu6r1`\iY8F-PS3ANo4b:>N^)]Q'h+Jm(ce?n'p:3:.n(STqfco9c!$Vp6][$R\8:Z#YiO9,=>\E*k%\BR&i0=-5.PU1at.>Ip0E\",b"sfQ#LG[&fHT,NV0u8.#9k\KuYos?;"Zi5"`O?"f`%R\5[QE>'5s/1+ZgBCTBU$m]g]6'_Ca7,>%dsT.NkX&fL3ORnqR-IEU*+<uUVo6"[OTaE:1^:W&_"#.E+B,lPN?r%nU_0;Sc3Ar=8CEQQVT<UHkblNr=OUh3)\eKtKS.,B^fWg4%Vfl?U8]")8$e.bK9tWG)?NP@bZb4$gC26)0G\([<''R1GeK8^L0WPJ0"c'SgfsVX^,2r`ugBlp):g5UY$c_$)[EAmjk*qfsLh1L.%X1Z"Jg&s/6GhL?37):OUE>J!]"0nRa"NWIfpu8_!^Msb<K#Sdr8!7+j\GW(bj1iDf(5<IU/\;@i%l^/qYd&%B%0n,+V'EFIcMPFJ%0Q>u!ZI01qdpJHQ.F?VPo/2gP9#"/E0(f5,;Kle79J?q:ZuP/S;2S5I@=d//BB/:b@1-gS6NBhrjSasIa7%#6MjS490SPC$$t?)B%S(<t8S^%p9P>f;,(8`dYAVBH^$,mnj%B0A)omU=/$$$Yc(7O5PJD,;s)2tfiJf$Ku%g`>g=(Yr0ndAhK*GZUtf8/t&>TIP1FX_m$%XKc5OBq1Bj:,!5E=N&I<DOOfKKm4"Y:lN.0G>_%s$o$PB6OV.$g_1RW7UsOtjpcp[/R^Wu%,tS9fK0KV]ErkF$g>W=EPkU"!ONLR%(PNNa0e!U/e;"AsE$=?AVdqeQWKDTdFq"'&#1O.gX?`XXcK%p!r066SoGWfZ<UYmP+[2kHN'"6AFr#sL^[q^aDnQW4f3X6D%QF7O%11bt.'KaA!\nF.E5KL(TE?XiQ/a"msc#O%4PJC\JI560?OVaBk\rbkhd*<//SnetYd8UTh$^a<9?2W!Y\1SPXhp[04TICXP81c7<%D90VH,-NVEZ(Q&\8];G.rg\N3bMMM((CHc?C#m*gA@"3D$?pC5H)7GCU+k0<hK2`_6_*]bVFmgK1lB.6j02%dU<39!$G\VVj?;Ic%XV'0X6'PXk-oGb#On(O-S04s&Ke92\k9R?XJB.f-(--#eaFk>`Uh`q.'A>:o&G2QL\s41HE#XP/($asG[s9mFm3PRn?b'GB-;@da%B*1#\C^AbVp`1J'n^Mc9``UP7`!-Vja[q]?fAK7S,eG&4h.RW2NG/.M-@]/gD6"qEj"fur7?#TuM'E#Sm]iZ:DWM%8_f8#j$WPk4%MVh-lE6F3oq+uXT0@p8J]%TqB$XHb'pgM'^;)9cB)lAMo9fp=-\,iFp(=P^+N@-BV$Q-3k?;24Nibb3_$Vthp)5[e&;qGoE@Cg,N%CD::qe&=SLl!f?[\c>R,S#-SN1fp,GVWe.Y;s:+C!^Pe&G+'T.WT!ZA[Ym>``HHgG:fE')C/\($9l(U\#=%D%G0q)XL9T;_.elN$%[Ysjk[-N(H?.:&VP&@k0&7Wmn\nF?`lY&"Y<*oPCV@,554a>r+D8.(8dg&.%8%/r32G_d*J<[()(IWh;;-2M+Vb,3.gBE+N:l"FI%r1:?T!A-uk5\do=^FlBl]AU;L=DScn?LY\`0(@WF]NjZKNltj7T[%6IH6!,_6No@qp^PtHgVOlh@_6;=@gS(\U&e!2fs"a=>,g&J%BtF@&_;s27&t]+OX6j@ms0Q(U;_njtkRpqi'l)Ga%7f5t;;is`Ms[5>SjYJR(Cc6Z0")/72e;_m]@bG?VPM_/9&ge0riN;AaYq/c%p.#O]K_?0p\:Fk6h*:u(+RO%h!)<*fM]2pubp@Kk&DeJ!Rj8tIqh*SKga=og6\)"qp?_sTEBXG?<A(2GF4_6s"-C"$X+5rsAUoc3%K:8JQ%IoikKb7;Jg]Np1b^aXrP*a_`&Gf&J:D/AI1(<'2eWD=OPJ`#YUWY?]J=kHVR,^:N/#7ro/UaCbY\K'3@]Xi]f>4ne,C?;P%f/Qso*0Ei]JeHX\[dDj^Z0!mVXM*FV=&99:qnE;b$^eEFJ/[N,dV^lA1I@iict7gnL7q"?dc=Dj)r(X-N>K&Kgu/7eWQDf]*#gbH%-X0nn9o@q"@Dq[8i;+rqhW/[DgKiPJD],arV$EF4<b[ek9@,C7@1336+cV&RkDY+/j".!^=t%#g=DjX6-_YL]g,2c]L)V)LMjiq!%8m,kO5a+Gb2f/X'+:5K70IL@*fbleJ:",8ZE$?uKk@@ecOHUZ^RB44=g0?u'6535tp:h<uq+^=9,SKZo/mjIGnrs:b$@9Qrhu[9t%G5Dm_TCqJJCD,1?*]g[;_(c;JBTET)0";X2"#J45#X^97dt6=?Oi-5m9LXqgN9A0=-#!<NJ=9H#\L-Co&1H<@<;:1g5Rtk$6qMdG%_k[XucXXgo`[[FJ21`fo6J0@Z65u@-K(2<snsJVKM_Wn`_-4[>aVY_n7YR$H:ucJ*5^NmgZoJp/3F'6Hm=U:B="QaW*0ah#a;Rgh%(#3)([UGh$E4k&+H@U:JT11"`1AnSs_#]qDD`#7p-A&6]'#si9"D,2gQCM'U/%d]PjBA<4j#mAfk=(=6pR4?o1=C]]6;?;dI&:G1%!jI+K_Dcb]rJ`!db\6%k,Hs]Xd?HZH(ap/HGcQF3/ArD])\5u"7T>O#.10]pehImODd.-iq/JNcY`)'._NZ7]27O$ELrBQKZ0doP%!&b8nIhOS6at95?:cTX.Jp+]*O?BD)M;bk%Q@#Zu^eMt2%YpSlF7L#$LFjA_(J4tV1N8!9G@O^[9@cb*6K9<B>>8D#0bCL34(2U&%_K#X\rSe!27M^/N[li,&?]D90(Xp5&_pJ\T"<*[?UHrR36@H-4[RS/_O;CiGYL7XRh:u$_OFH.+'PF+^E^JMKPIDan)CI%tBOks9%Y?$IlGd2)s5U.3$h==6oSR(A\EoBlQ7]^lMjh]f9Ps]u9L&m,"ImSR%/7JNqZkKdr2B=8)$10`+<0I`O'@&.6R3#,9WYAkZ<72Ie%=Qha"!fL7B6MLY[jP]W`"!:^#*Y%/NDQ.RE3!I!,ZYj\k!X(!]:q%7p:BBq)-%P@lkSV]&3>19KgOKFUP;G%Ka0Oq:kSMb*#e'gl%KGA0j48Vbc!n!39Q#),31a]/rK/3YiEM^U4.Cj957u<.f6k73@'c(CHnh9JQr@L+#e&EWB>9fo\>_%KZ"n)p.-TAB4&sPj=\F*l@%!r]t>/#9>R_'reSO<C"^9[i@LCn'jpI)\gp%SbO&W.;UT@CQ1OL(FFT#@lIm?aqd*Yrk:K.T9f'\,iR[V.lFdEm.Hj$GO20W-'0d%9E6fG(8eGJ1N(Qi,V2jjD5qZpJiSBj_&Uh/?k0,>0Lrl`ZQ/G*g?0;[f20KrL5au%\Hl+9R\CISe&D(aTrA%e#RAAVNrl74k@):;%0T9dLRMmm]7GCP(pm#;\>rs+B([8\%;`gS4RP:R:^PMo7Z-+*G56_qBpaG.:V\*p2s8*KHq1!tFf^o709Oh!_'C@8A;g3(X`SehC%`dnV5#0m]L")$@3CX[KQ"O7'^!g[$lB)s:tnd(b&pObjmNpVY&;_NJ\TXh<.AeeqhK]ZSG:gX\?+[P&sB`u]c3"upi3Wj!q26!@0%aB8L;+qGo=Fola"41)(ka9^S")\A8)q+q>/b4(4V`U@ttaq?YfN_8Usjq0N[^fD+=gaiJf`f-C(67k=E96BD`7SrAd[K.\#=#@K'%j,)&U6G`jtMUTe$R5[U)dRmXcB&#Mt4qf,^l/H?r&cB'!-#=>nKtV%8c[b.?)AHnVfmnIOIK[sUD&)-_"(qZ0jHmAZN3MQOEQ$+2%(8\Tf#[TJ*$QIA&VJ.dUnBeT7OtDX;["jsU?l7FEVK&D!?lMg,f`i"H&a!bGXZ%@gDl(fHh@HPsNAStk"#DpZb.eLSR;H7@b^ej?%8-nUcks/o'R$81N0[ERG4/'f:KqSjggVFKqm:^2=PV?4`,2r)d3(ks=)h^BO"W0OO':LG;&>LSdN2H)HKj5?7@>3sJ/U+h_-&Oh5%n<.1h(QG=2\RH-P*JJ0tK/23^:MZNt?NRlRH1h"b8>kE1^k8>0f>>(]lb\VpC^5pCnS.tj*(>r*FhgpdB^OQQ8P?I1]eca2l8d)L%!#]72.(bERg#N&iab'U8$2b6/^m82%AoWYcTP4\[[=b80J,gZBV>C9^(_lcO;_Z453[$(J[6T.K@.^Co]EIM8"j1m]FO:0_[/ib,%7$EGsZ6m/n.XmX63_P+<#'aYr&/8/4G%c/?pDq98QpP894f^i2ca6SLKI\oXm8-(/>X\&u%)\0VTl":P+>eG__h9N[lOL`LVL8FJ%-;7N:&sV,OJ-\ls7KOa_!]pi%*Rs:r"sQbuOHuZ/8rHeQ3+?!sE;EsJ$5cfc4LC.0_'"+[HTDHD$#LABPs]tsEH.I91.&oEJ/V:=%X*>JAcj5t.(/G-GOTq2;-%;HjUCQ4rYJk6$JRCWrg>%4;_^fZDGT5I#.jh(Y\.FHEL'=5%BVo>FA;nlgYm:1#Bpb:qkTbAXW>1js%YTU0aF9mj8!co5WJLcs#+Gl\Oql)?@K)nmOL0lPqm,56=jS>9BZUpVtM$W%)-Shi0fF&,M=Wnslo(sui1r:^+DTmo%QW_/R:r"1r%<#1pdr;c8*IKe+uo9hE:KW>?S@3%W>#i16h/)-%<[F+gjA[cFd/\3C`Foe&M(PG-d#Uq^ZfF%EfG<<[H"X&]`AumCs$k:Nh/=c&c%M77IWrP%[P1jh^p=Mhb1/ONLZ6UD*k1;j"lS2;oEXABQ1]S+]j4rtED\T.+tCn#sm_Zac#Gj'1)5iZ8>'HiiHGR(`24^ebh_)B`)%g3PL@SPY-Y4r_Dn:(/R\)_94>"B00';]66S!T"oD\mT2,'Bo<qQ:DQ?"mH0a"kKu%QM;M:]cIR8;fKDT3be\,#f6tt<]Il6$K!!P%;/#Bcr<0W)8Rsf;*DgcpS8^ZE.D^kuJ9D5'c8sr,E12,nE);i/>cO0aiBZ*J#h"6a)Oh0X!(.K@S<FpDG]Jm<[qm'?PYBm<7@49@%)9?]-35/H"5mh(j2.#^"39H)*^5,JcWMCfu^_'-G9u;QjN'a>@1q/"P,3Yc\?>X21Lbd6e+V@c0:/WoDN;+DYUNY8[:#d*Z+@1Or%A_]2Y$'X!nbAQ&ZC]m6pAK+E(*KX/15e-nU&Ph$h@Yk5MDE"8&e,gbrpTR(`$nncC*FhhQKMhfRLFD8M7gr('PYIksMo,Hd$r%Hl%`DN\ZJUHtH)4ar>K_<FE!ZN9g&a%^mR`l%jJW+8pfk^a_n.kTr"99K\Y9&2oTIF;uM*QkN9W9n-&I8@fZqLo_L^jIAFpUHJG:DmV%Bnd`=A;25.&47!/j=1cp6P(/M[JNOIS2:?ldR,:Z@gkX'&EAp*dJ-BS\U&*<"CV^X`ZSY!^8.SC%'E`S/7=4m>)@(!emU,7M'Cb3%"p%!)*SZ2X!+ZqMB+RBK)M3M;LdD+"K-Yq%$3<EPF+/s4LpSVnYXBY=)$9]5dL`NL(oBA+)L=fYD+EEV7f[4=3=Hi;J9L)1@L%d0%kV^J$fSTYcif;j?14IOtKE4e/bCh\Z62FU9(<D$p%Q;W]":d)BM?""pa)@7H\M;,R#d9=^]jn_cJk!f^G:-#D`.0sd"`?^O!/OX&%YDbdJi'OG:'EZTa(#K_M,:'0pB@$ZmYiZc=-$C8YBpG%jB7q7t@6s>G$:/W2^Dn?r[E@%eKufcd>@nQNTZCWE;$\H:!jA@g+hYU'%mO]t<6gU7Fm)'!qU]s27Nmku]@A^LoN(a3ObhAH;!e@SA4>J5t!%;Pn*/rdm_UFX$coRmJda>&J:rdp\R<=IjRpsG%#GLf./qgYu%SZ6'H9H*uNP%fVaN)kaMcpBucRja)q0EO5Nr"KKdob#[p@@om-9S)$Dq?9EO-?r`)#f-pO?M&hO%qHpgcu/>&`Yus#73bX+&V#(>%]F*]\A`!.s1C>gfG2V58qnK%d6'HuV.EU&lg^(eVg(UJepN&j_-229Z0r!C\[q<]O:=_5gN/Z73hO0?[E$s+&d\QcK`uYfsiXbX:%7VKXC]^^7IpUE3qQF.4]eW$7MM//;e!QfmY6ckdq_>U*uAAj1X7>%'gP20+T,e8U8;0_R<L#k6eE40L#JZ:+j!":)?U$:^`(Pt?Z%$ogeQG#eA+^3+9c&Sn#XVT7eG@E%u_qD"$.!Hh);O;\+.A2(m-T)`h5A&!7,:i%7IfQob:0Gm/.mY<:/r@2@\jO=WH3$nhd*>8P?%Neu0P\8;#RQOBdRDd6Io#(tP"=\d`+K]WFU=CEBq#Ydc(&.)5!d^d2Ym;P`e7`^M-V2bjIeVbWtM^q+H%-,@WT*lT:A78sg;7?\?%$t;Ds>Cs&<C+Sa&@usM!LKf@_[rpBY5/Dr6/WdOi?6Gb,!6rT39Tq7rgjhHC@k>!n07c1G26A0n]SnI!InPOR<Z&T>0f\`0J2ec>%^<Cd%@!ir6e`6DFG3R)RbHS0e(+X'%";X0RaY![aaY!\\aY!Qk&S?`QWL0-)U'3b<f`b2kP$lOFQ^BmWJq]joc,,,k'4=.JKFFYP%r]k-pCXf$?8ZcrTNa.p<N)idn\LrCNj%1KI"[K@KETXi+T]`lpAE:<q6uuW6YV8MlFhpU^5Ff8:J/T(8cO4c!0VadV?AZ3F&O$T9%00?j":oCGF1L1f;K79g:NF]X0BP+kM8@)TjEmtT%<;0e/$\3mHcYOC_h?5DPcigA)dKt)r3Ujm/=emF&>]CLMW$'"f2Dh);Z.P#H%lns=[o>1YKSfq0Ak6KYD+F.e?9ptB5rP8C+_MAn/(f<f7gs/[<b^AQ2&`u"5G)S"g4qQ?g/6jg2$`"G@[WR/t*^XF[S(h*`?og52%_Q]Cq\;l@iLpRdA[8"h`&B]ZJ?tLmq`W3=,4V_l3!*B]HC*Q%KO_&C#@qC@O,"CfnphBnh#:/\%'BKS3PXoq64AGUK7U3bZcqb(M%1=NH-H?9eq*uG4r@JGC*W2](`]H?tT:*T&BM3I9+6A(Y23[(T<ZuJQGl%DYb>QlL_O@l7\)+-,Unq-YO(k6Q6/ab"<D?Pu]F_'%7%W2BnPoMnI@Je6B8PhSqM59T<jL"M=X+=e*j:#ZNLoKZkZN4X]6M_HQ\.&BuBDrakZJD=W)Vh$i(=4miFHK1OU2=QVLcG^YEg*U)c%WVAcO'aG]%P[6)<*8C\b]s&!V..LD+aqH=]eSHds,'sthl?Wmi@O/QK(:]YVBHpni!#S<sRtr;O(8_.k+IormW`KUcQCFPMFVTQq%YAbR:JoG._ocaZOYuSleL5-agY1]r>%%?Yp.8GP"*'K\A\jLH=%_@/:7KOac)N.dErF@YTj,/H]'N+pihmaY:CYG$s7g@93aI#8#%`e(q/k*qNQ]9sdZ01l0aRCUrPd?OZAi,c0.Vu5R6btKqT+-?40?GMg*-K66_D!$r_Yf<feROb1=/MX"^QBsid/gZ/jQT2N(!#L5+%JpO^4nT1b(Sf"):>Sko[]<,rjK),V)TK]"tW)#rAEVA]E?]_9KhlZ-,Wm5[5RV>E[T/4P]@a(5$'R_;bY/@t00-W4F+0,b?@b/d'%KFA(l/n?):6624H<&:5b%$Jfs'1R4E:]$3os!]]Jc22D\!.sObaSV#5r\Nk0hZ!^JhZ&*QX\D@XrW0rBo#U\5i2R^5<9Jk$gI*Xb%:r1PA16uP/A;'t/CaA,D:a[iI!7Pm@dV0.:28Wg)_s3J\08F?RJB#t[Rfag`lEWDMX'D".q#lFo5+n>;59WbukH!+sag?PVNhHP2%n"3O_>0mJ*/N2Cf8c?a6W:Fp.BS;&4>*ik/3.)d(s8*\SA1ItP^DN;BSE)5=?GGR\9PB*K%&i@K!2rXbmk>P*3B)tXVRcbb^4`'e%K9mNR`AgCtWEaS%#qa1EK7"1rL7jrr6W"U)5k6XjGGF;PEuW$'Lm0?"AE!UY;,RahM)0Z2Bb"fgi_2m!ES.NRALP6>\R/<BN\49i%<*kU"k-AqtRGu)7-diNU_^X>"&dVV6Gm9]_`sfhQLQ`9)m)0R7GrWp@TNm9t%gP?KFemuTh]iN,,<Z><]d?9a4UEL0dL7<5AeGTH%KNl2=iF$I33c7a1!K[nA4d0hE>ZdG@&l)nl/$';NKYsK#M1O5'S45^0#hgtqE8#;r@'-#RP@0:&beaAp&PUrcE0<`0QV]?ADuaFV%c?3kBd%jBsQpt<S6*AhN65g>HKb3UBL;RjXA]_g*C=.^jZZ*.Vejp8OZZ$POp4N/32%<%],2867PNX#X1[AZQq<sJ$n>+/F.N4?m%5Gc;`=(o_chr$BmUcl3o@Gh/H%Qt&P["4b;R=bU?L)<Ai%Mm!XTMs1Q)8OJ4R?6RhYSYq6H4CE$0hT$gk29W(m@GsU#7'9H,u&19%$VRa#-psXW*<$NA&<ud*"#</C.Y8R9"@f)<R\=&>mNEY2[me+F-qd*5BgY6"$RF:;"B2`n!GLa8XlBH9d0.74C=G_+88`GUU)9ns%D#`-I?:%d&oSX+bf2u&e3MGV5B(2O2VL\FL%K,`.N=]AEW>Qmn+FGuTZjJ$3`$8B)4G.lp-h5gn=]ULuJI@AoQ\=$W)i:q@GQ^"a%#SeSP0^[Z?hhg,`c56SP3f&]cG<%)SG0@m'g(I&QO->d_-ngYBTI0-DI4-rQ\DpoE.&J5iadU;b=6[/$[TML!8*#/`7O1Q7Ad;^4%*0tM,"3r5:"Do=`g*4'`dn\8_+F]lWL6,.-B#Zd3!/M"KLiKm2aQ*qCm,\f$,D\)"P)bqTmbOhEiQ<:)g^+9.h[]$*OHF:&!dQ&f%CdQ@5f*W(b*(592)Kqqs$@G,GLW%?a!f8r\mD7$-L:M=LgB"A@W^QjO1U'o;Q*%n7Lcl*(l1L40LM\X,LM:VX+cmK!?U+im-RJhW%D%ZKsTuIl\*/-R=:F[%\-j6L-_tjO+ghdlJK*-?1<&fUeg02F,`EXcadAk6YJ1Q=/,5p^]d*&fs!1-T41Q8a<:(<3aE(rNn0%U]H%QlXp<3oq@^\o$nL68eRk:Lr=X1!$i:'XAqif&Zej3s#-^P3GS(kVcV.<d(l9A82W]jE&e=Se.Dko@0-L0$l$5RpqMER"M%\=E\?`%QE^dJ&&Al%fk"*&A&[dq"\TQR%Xom<mH!]&&D*D_,P+rr893JSX\<C8Q8(uM`TS5Fgr#0Toe7T>->ocD&Wrr)QC%acNTBYe,!(6'%=a"Hs0didb'^=7GG7%];aG33m_uLC_3+PZU_(J/S`\\LjEe1eQW@N-7dM8q!n?ZodR;QRW]/M=h@u%\(HI+p$@n^8EqOOE<U;82$%]a-1oOo]]J0#>^S#tliA$Qq-oAJFtEA;^h:%24P..JAr<A'Hr+,R`+'$mBPdk*J>]'f/1^(/$c?-3YtJP0CetX'Q768Z1$*P-'tZ%+"!-O9G:!Q()'8p\oE/jgTBr)h:"\T`n.?f@g:tXoN<doE'X$-obBOoRR[p)T,(39G/p#V]KT2)f.&%U#BQt\<;R\Xd&[,Z^r99u%]?ZH<h"Z.FD'(jRIH0(ak6HD^^ff_N8?ak-SWDY_[Q=g\*NQCE5fJ*b!A%7O085ado?jM8O@'2gXO#h9"cu*7$9TY+UF+KaJ-[<_%TS?X+`0C(pN.M=<,YKYI+O!Dn?/+,`SjCbf`8@d\2>m`+irl#3$HU(ga;7uQ#r*@OM(08mJV8X;CEj@6BbdS>&L*'SN\WY?SV"qr%=W=&lL5l`T!1/$a,#kO1"B?1FR?L)bW$3E^oAorR#\VH19!11dFn-k=T+reW?W9c2DRM9U\d<g:9P^t"*ldI[E&]iZ3!.YbYaSCN%g(Eu,!@Z<k$Y*U$Ja2=HVT>5Xm"-uTGdd-(0YC!S"i)m""K7+YW`DY[qNXAeAb6AG;;daHAa*Y89ldULMA?#*iZ?YiOU6_QWiU*>%7<CSa-8PpQaSK,*?m\H6)8.oW%fg/gdY[[e7NVI-'"%FFktj&9eYM@a)*Bn)AO3.B>o"uj*/]F(M\*UuJ<NAS3-=qa#U"kQ^\p-?%\j_o"[;fa%1):pFf#H&s9;;MrP+07#PhfGHBb[*4`H8eUIc\L&#!Wq*AqdH=IaLV?)F..<)8qn-3_[[9Wa,U1LF=1ta>lOB99^P>%WYTPr&L,4aWAB=R$jD=b7.Mu*i_YHgU*O\,,+(uRC.>I#OV!FSi(cUGjje;e!oR3KglZV#p`#15[h_E6;#l@H0cmr9[jTMl$qq3b%`5#>@5_k?UA[%Ram3*4eH^mt9-7a4B#a+:87H@jY(]%_Ek@Ht.I414k3Yk]7(6c7LghJm`r5R1$+spk@/0ZZk*0GD"LBik"m/Z4g%L8t-*`*/aZ>ePBGNrl\0kP$hh$te]DPG-L:O^pHZ36'khnPRbi)KcWW#^N*K`\*bhB'a]U>hkd06]h[g!n*,RNKqgKXT3)QF?mm)%6nq"ok"&ts_W$`[<63cb9V%N$gB.bp3tOK<QM4dtZZ[P'8),C+klHIslI\V:RfF_iHs[;!-94`XD[,FjN;>=JWoY3@^-s3:l7CIP%86$4rp^D(V&,%PmMS*odl,"Jn;aQ>',#ILqS!3IG;s,EF7UlRtH,ftU+Bu,VAjV`A7Z!G[AKb`D>h1'3jW!S'5c+/[^d^JK]_"_'%&3'IrE3p3(!WeJKD'DZ>F7&1kF^lt_1%2\se^i"tC6^r4d>KO[`kf4D&Goqi=?Dh>>onP%1@rc0iVP'3Oo4nXf#`)9la)[YXNEC@%B?cn8$BRL4c820#=p2@QqHCu^O=e=-fM;E6FaO&"fRDcn/Rb!PMJeFP8XWaM:D.V]dZ$QI\0;[5J8iY;$C#(KQU9>@X96h'e,1``%2Bh3R\uf;k/>GQLR[Um,;.t!eJ@Nq^kqc(JJJkX3&Gc]9Uu<;XJ:,e*UU5"hccVsB+X/rRD!m@gUA+#l6c=-en*r.n4qm"FKLDiN%$oh>"/m7X#S38OOjF0:0Eaq`^*P2r\R>YAR%a0s#V1QH9(YSZGj;P82Cc&H=A[Dgs0MKp>?Kbc-ZI>2qatjddgOMCCKEiGm5h7Ae%GVr_5cRTZ7#<Mt"/>A)+ScMcK;Qrdp#63m#[PPm%KK9F%.67ol$X)P)6ona)-?UKEH?g+OaIRRh`DDI\$8NVL"Q>JD,m7%A;OIF6%Q!n(S3N3^#h8\YT?Vk4eoU.8hLGT<-4\S_R<;U/%JQ%Hfb:*qcC4[Ig4!8bW^Pg79J/h'l9hrkffMaF'r<%!Q8Y?V*3t5l%_2qVD%A!<c$#W'OU6N]mX>XqE'Jrjn2.;f`[%SW8ud2hSK"C6YCAL,[mUa2HA4($1D7=@nt]HBP9-"M^d1>s-:Io5,Y0o/9e,'Y[0U4C_9%HU;aV=Y>@D&ou%b`Hjk]LHpM(4H0(1SWa%3l>*EcB<=XmQ=Y(JEcbmi2=,Bdf+$u,&e5L/AQ'H)V+i@('Hh<OaM+N(#?f1a(n@jW%*-EP>NlGR@UqfIlZlH927n$bcdYu+H!TRkuk38]>B5e;_&Rh\U#qM5/CaL[3$)r#td,9gb*TA>sVD!aENP$%q#9\qk@'oufLj;k+%'F79\OJU]$^g.r-[;*#a%Gk)64D=PiQQ]TQWVNLeIFM&$a:-un'Zr7dZl=!ND`31\5rR"f^#)7A(irBl<3I6>6=,_pbHt--b],/8%]NXc+aGJ&c=VWIs8F.S\TD,1\%O^qq>cmrfeQAqfDQVd5;FK-Y:!RZ3+O[gq]'>0':n2l7;uiSKdSMUu6oU?.<gj%'jRW$8R7E0/%D+[)[4t+3AA@7VMNko>*i`4@R(90,e7V3TNpPAO)0FL4[QE>hh3U6if8NQOT;aQX8'-!*jTuKV;^Wg4^nN,RA"AZfM42h!rpV6on%5Z7PMUINA5DE];QiN^m0!"Yc]:CK+R^gKO.(=dOa!"2qNj5eTeDWYr(6M1Pcd0UMd%(H@!NAa?@,Z1.lVq4O/+k)&MUoJqX:EPK]%U4<pa+"U_nYB<T5W!G&m,b7njdmcl>PE`>2`#;gVXH.cXd\^]?j;bMiQ8JjE[$<<KbHc?_>IK@%D'0*gU!BB.UnScce1Sgp+]rO"%RYYE((>)TOo35uf(H$D*6S%R@"N47$.oK1m=">28P^jdWU?WUr**p-F?n,'UZrm.kK@NaRG*PA=#$tg#ZLbe3VC="nqd_WD#>*NE%?`aBPbdf97_bD\oB82LED4Qd@:PDQ&m:&+C\6*^so]nT4W*tGeKVBdmKKg_2%`M4V8J@_lGW)782:"H/b"HmUilC^dMb/]6/5AM9%)(7e*JT=-Ym*N1mIQjQ0A^D38/cdr,HCfR#V7>$C8?*:4?+enV,'$^e^+h*=0iiX@IaCEM&;BqY<=QX?]@EArJVJ0ene*1/McbdF%Q=:6@'VW?d]p+MmH!I7=THZ^Il!ok'6?L;_^K;"6=r'l7P?^%X?;C7<pKO#=V1:rsa"6=6(BDi"dR=V9]pTuL2tRH-)+4deW((]P%PGM!mjFldI+?N]-RZ@i/i]8(g7R\'?G%Et5!;Sr<K3BO=-KqL9P);o+)L8e;paMlU&hRT/`6PE\Vqs(><+SNBl<S9tYR!IW2_=?a%*sr\QHjLF%(QqtA@&9*L;t`RNd-u?7@Pg2]dYJ4@8qWu*n0fQtr/g%Tq$d<g?ECMOX$39@TuY[J'N%=MN'<N77-g128#[oW_02$K%H?hkS(65Dt69r@e@4g&&'GmBENkDQuWs-U;=JDoIjYJM>6b!XNC.*BI')5cN^)D\!U=`6U$&8H7"sg7L:I&&AjHS?Oho#lHXQQM0%'s7mUSV]'ZOU`+f#mFWF9,h2Ag8gTO+DE),ahp#T3SFai=&r\J)Pa8>VZDmj^0c,D']LaOg?`JeTOu:/_pB!dcZ*[[EGddf,h?l:%>_P0RTt/7H*lA(-8NOL6]m(O7FVu/fb..ihPu?o<AuCnc:fAZ^I6Zp(F@VE6:t[8E%a=NZUB#ER<fQMZd`kk/LU%4GFkk@j<4I15%$l5`^&bR(Ce:.II=A`5)+lSW-,!P5nLt85NjQsm%0Ri)`Z&+?PPe[ohd&7i:-]Z+,143g2>Gca:(b@llPTWj2&=fgc!EndUA1TVg%Y;^DjY[:R8Qk#@,YA+NC8AY]rh8U`'!W!Z?XN9CjWgh.E0Bkpm>qlPS:JgpuEB<&>gmt[#F.Km7??DaLA!I@'R5L+3^XNk)KQk=p%8AJ^G;&2*J^]Em)dQJn"P%PLVWWjd4P`ldeK2Kc&;iF#r'J_r&0SY<5rOAY(f#$Df8087CR3Mi5``.*C8BD'I2,k&n+WCD6W>NVT%,d(35Xr6?F#jM:mali.N?Vr=0F*43jCU-B[?[r1ljP%(69Ud\%>`b3gH$)G?(p.KiSXSF)+qs'Anb\dmKVisL1l*hMN_RSOo$_J-%kgjm+q?,kqN-n1*cNh!5.(S1N;GLNW`u_"/.'A)WlF[Z.KeI7d7.=E]pj,D/7A"T05Go[FY[iQP$HO**N!TTI<<!QCEqo%oWb&OP%!O[G;q-XaWg?9FQ09(W("mi6G$E<Vq9.:GRXB'4>:H""!PBr*1__QM+HD:UCC42s%^Q6&RGuJ:'D\,9`2](]IjI$:>&XH`aTe:7M%\6)AH3[>ufkunt8S-hm^iM0B"p'[r+:-3$fVK'O/k9-HKiZ9LqK!E7/6:2%ke1*"89]K7lO$6n,PUq?;MY=d!.&(luLVt#Ifr1$c%f;mBie]+%qYdD&+'r$fK[?1jO;o+#mAGY";k*cRtl(f[H5Ej5=M(/YQDuE-8;5'qgIRR!PhlH$FVGQBN5+HLAb"Jr\Y8SA5]9b70%X<6O1f87>J,dDMK9^m+FC2YJ]HN8Rfg.f^>.;ID?>)OBs*-B=eGJRQY.pcu1M$`%[*+@56OW=F<m'fhXpg](InhsqM_BUT'K'W0j%ejR.r!'O0U?')'r8IoZ:V)XiU]o(M@N0==c@LreHaCMhE7@=B''*u2"EH&5%Mi^@N<&LQ[$<`j$(8`j]OXUZd216#]3An6DLOn6E%A_.?s\<)uK02f8eLUa\C^YUW#!TC14A2h"eAc3N4@I`mXeabf+(4c>NFt6^ICch$q/FW7O\ZZQY<r*C_=\+Egk..4p4*n`bZZB.C%@2-e@';sRgTS2NkG+a5YWlNO>EQhYf"Kd?\`kCQ2E"!8To)^3+a,IYG88h97aoNWVAUH/VZf5=Y`eXu6Ks+60leuou'0VqDFuDH;%b]aK9m1=QLoV(I"+j^NqG>%;m%?63a,VeU+JkK^qT1^+j@jHHQWQ-rRg8to>m@Z_$C8!"2B8(nc'J")%/YGQgA\h].Qk9?sOK+(/%U\4o$FR2hrGoa&6fDBgcC?L^k(:2eL_PmP=%B],KFJ;enI`PgP/\V5.2HbcM`4X[AYG*X6Xu*$*e`<uJn;M1r7rA$2r&p?sCT5]e%U:=[Y6B;-4&2F[Fh[\r-$5i6CBgAI$h"i?K4NkPb^/tTtMT_J-!mIuO(*ODq"<5%uVpJK+5Y/e1J^9>V12>OIZ9uoOr)`p1mFIDQ%__bS>ai$K@ekP6bZiJTn161i_bd#!#;n.[a&:7NcSTL@5jhN;_3i`<0YCePOYR@"AoY!tqI*W?E4[MV/_o<lJ,-g^H%Tg32Qa:DF%#)cA5QD8NSG@R,4GkTS1P#hDc<r#qK2i15NR_7(iKmp4,=7b3K4G-CJ:FQ+^Lb2$fD'(h9TrP5G[DOAL'&H%t!s.@O!:oX<H^%h\%UjA)se-(86kMqirE@Hoe%\K)*+h,!)9o>t:j8gA0e(t"p`_Lbt771Ga4l!+g#p_0X7(kJ658\+a)r:'0B2Q6_dYhT==<5&3%gZ=.%o5Wc]6_ijF3JV)Q:P@GE9ZId$Q3o?r4))TA"&r6`/@Mm]S%*4a8_YHP+X?k*J5_5KPSs)%)?C[rN.-bRc5[Ae(p+Mp%N?j:j)CHs%1bo]i2#soc(j>rgY+Q%bLb]"n;\fNVJNUi[(coePX$Hn,`!']s6&p=KU9"@IfLNst-"sM_nPZHs=EQl2-?C&hr9X7f18<IALs;/!%5QJa$)Hd'Z62=ALdci]F0mkK5eF[s1F7EuX%V\%u7K?CYRr(uM]4erGV2Rh,IAiCRo%&5WpjMr`0?u&11Wpd2c0`%6Xd(oP1<,,H%jYKcZPc)K?Xo^'qA6F=\bo*gSi@%_Y]5gWIWT23R0]9;h,(EZB9rO/CCU\"K`EZWY+GVY8NlZm+eC<#YMSpI5Z.nG[OJ+`XJ]K2@%e^s((`"V!Llb%qagS&&]R6u$n/"59(f:YW]>),LC8%:Zr;JUZNPMamLe9lp:d31MG3Nd3i>C=51qLj%L&N+Ba\)J5YfoK!j6^(S"%6^ggO^DTYPr!pR:Mn=LK!@9)t"+u+:!'*#=/S+&gf.J7lYW(,qf&K6e+$`d[,N6h(]j#2Mi+20Pn:2\C'Vgj/^;f>pluI3cm$<7I%H9>,'^FujXLp09<dsP$W-A.[r'gde`LW):<_l4L`H5ZdQ4!FAKD5%PUpW5<Fl[gg5R8FC1Ggu-eD'VLeND@(+WMOTK>rgJ&+lmrI%!PV$VD`T.d5\@!4SST<D%'Y6Ae'h;A`_o)@BL*Y_%=R0mb>a-3o'-DDjsF=.9K"B9i.0j=m^2)"`X&M>A=1tI`0r*Zp;k]5;g!\=%fZR*Q@5H\%S<)o6)V@\42%D)N.([^_(%C_'$fD=NWV\L47mba$i=NdY69?QSL/;&MEenR3en$fU!*=j+,<gV^T_fMS_7`$"6e2D8%[Bqd%e_?5.B6]094c##\B5H/lk;=Ab;^93rnW8EU#SJItUJc2D_rsIr[:r3;Dk"%eFsHX^G=u\MZ6Q4OPCYO$3$89AR.FN,`bkjO%oIG_-X:>\`6UKF_`]Wd44nu\cbYfm/_uOg`?t!XZCY4O)^Z(_K.8-+J?b8o5G&F<;ON%=nOFmQ10L"#q`msH%'+:+&4&\T#W,kI@%18@]N(c?gT9(G]o#9j5b3!h#+8;5,a.&9tES.Cqj^Y#.6fJg]\RT:U:RK>P`J66Asi,?GMKFV;C>*+Ck^'@k0([05%8\nJ;Z<BUG%Mp9/U1Iq]iPX2N/\:faL#naB+RZ%fk'6<>PkCs#fr=]W\atWuS#][>21E!@0'P6l84b]:UnS<>8cE%&&(Q!VZ+$^:`C\P8@3#CS)%G]7$q6DL"!716:7T5`U$'B#qV&3#b_#!c\lBhL]EYX0fm+9]/CB/3=FcCo:n"d87e9ls)C8TlT#"IrK'98S0jrE(ka,p>UZ`oVr,%"]q*;,>/'UOX3:4.j<050OQL56K\M+>S6IRQQ2/;'>uJbY%\D;YX'YIpDCi@?kN+gS/tKp*frd^;Bt.=X,P3<edoQ`Okmu\N0/&D%/VC[)SJ^n$V4`f)YS7Y,^B@sG">&$(G;LX*6-mO%K;P)tN*q*1..kl\_"W/dZ09l)f6B5,'+=c<6fOELc%eb;W^q%'KH5>A%ODK[%<`>ji,\7a1f.RORp9WIuLI[k<LR``(2\?=A[=g$#KW14>(*@#BN$ojc9.q&r$c'ZUafcl`9fc:1PD5iG!+Y[&ZsGA&D*X+mPIf\M%^k2eurF`h_,b2YTK?T.fM[?l>d#]S"HY*h7f,o"08CgVcW,AskU5^Cq)6!p:]P!mU@_ca:D^2+8jC=ruP9f&e3R.1%RY\0,T]dHP%',V^BI8i]fo'%Y]Jd'_\!>0jo.cM+!<e8=QQcS`.)`ZkT?b*sXOnhO5+;:c2l>M`h](dl--igO)\0;D)U4@Ro?RHLmdj*[0n-LAk%j4;#+j3&2Fm;51G.=`]bC4]qkM-SV6jHcHl-k<4$?pI[G9Bf(X#6k8E0iSEDKM`3ZdRis`%3:IAM/%2ANI3X84j=7?GW),R@RZM!%'7ndY\hQj]Pa#"t5uq`BOs'>rckp\Rg_D>91t$;28Kn-g8miABiYVZ+X%O1j9c\M`M+B9"Mu\m\quU!jirTRn9cd=j!f3_EF7^lS%'P3:;B4]SQ(*S">Q%AIW4SU5S\1J@\J]K)Y/s858E(Rc<-gQB\E4D'`XG]RX&(DH;@QVEs)AWIq-RHEA!'Gc+/0BSS[RCqC"X&K4%d4Ce<J<S<u$c#GLA*"p]!3@pq.,\)K3b;G@<WHCV[SfCiJ<C3]a0/2o#\c(hK9/'8N]%6[=8"#gLpEg`)J'4&"G#tI!5,4+=eX3B%!Qa;bm2Z79i3Joe5g$C\..XYK'G1&_7`"X5K.F6'd^#a@PmKi>N<)IYGB=)jI=PRAisGM?r)c^.A74TdO@<RsR)NYjUs(5PP2X6:%+7leTOL?]IbthOG8GMs#JAg@_Msm"KJeCq=VdSAcMe)s_B8b1ma?>UZYUBTnq$<_j$+6V7/7WJo"q[UF\,\9F_]%t&OQ6P+#m)5j%0bH5&V+nAG#$fVJ,FF=ti7Y5NB%b`X]o9'&i:;Q$Ck%#j^3<8..6;pWKF#XdrU(5IR.Sp63`';Ii\GUDW&5c3$rEUY@.YBQ#fS"4%_k^u-G@Sr8[g"%imLaEXL6j$m*Zo2)mq$cfI,QRG9a0E$6QM7""N^AfBLI5^m3`H3%k=Hg,,6rMA<$?a?HbN^=a%`/'DmaXq61'+%>f6V)jRF)KF9$hk$m/S'j7m2QYQ1Au(BB5l;?47R3KK7Q#hZ)&`"0Y+LmnU\!PdDnUlfH)-%P<@A?U"-VC4s!L!)b/2%pP@KYR_k%7lFO,&H)7#4cJ8Eat^BF.R:6>LTbq?DlIb@,O?.IKKr-upp76r5ZL-&ea"Ehb4?OE+6k*GD7F"85<0:O:F@F9Ifpj`lNVVe8uL84%6fameG)3&RjcCX)E5tdg't)J4JnRP(.kYmt8nAaY<mGX2<@Z[F^4=SGZ#D1ki^I*e.tuf$OjF.f1m8&V:S;/QYAJ`ZZ-a$h-p(>&%1!CX<P_7<i^SVA]nf.i_)?:m^)6;JafZ;/U#5HX9-7`FF5uo.YHRnt,7<69'X=daE80Q"aAUJSt]4<+VaLZq^p0P"_6KaL*"$a6Q%qet/XJ1tFV7Q=S7:M?ErKs[i#OmITpN[[i!@S&#ob6gXj_#Wu;c<)eHBqlrl'l`d7\j3(DHkC5NF`a?WD.NF?7LI"VLl@<%k=c!k%55YFHd_pCGK$65c]isO007D5E9!7rKQ#;p?^GqktO+0a,$H<@(0ZhO.(UmG$0A7)\$`bHC?k[R;4]eH^+64e#qu!d?S^6fBis4:k%XnXGXgU`Tr)2RVkk#(4rLfE@Y7MnMtB9!DR&KmcZ=N#W!L1#P)@R*c'\[X>u2'AZC#VReU'B(GcP"3M$EVq#>5f-Rs4/8`-I^=E0%A3jtf016ep%[$9(8X9A&2Erin"j!7Q+p&K(a\`>$iXfU?V%]h8^<ssi!`t2R$b(e:#":LIZ.d:PcCH_\09IkoU&V-&1"&S_18-,R%Qm7ZMZ7[[e9SS9p)F38@j.mHfG,"mcHC;)_F+r(LL6@OP3=\Lr%]q'pA)W7.&G[:2XnP9#n^g4Wf?h,k#EMhbD'1?<V2RQ,RR7mM%XEA\O?oo)LCH7jq"gF+^&qb4.eE/7`_=&d(ZBHmB/1:Mp3ZD<4dYT9H^mo't2J=Q;D1qgR'g>Puqe726OU+l-mf=)57=+T7XL9i7%*N]l4Dnun8hc#V\AB&QHblM9!OZ#T-/AX*]MXS+l+o<Z0#U!Z2/j(`l!"&)i#`1H@!YK#dHndh3995*9=Z/%g6uE$OZ1q>p+P/l9%g*jLO%:n-J,BEHZI"S369hdrkf%Wq)5q%ti7jVI!:6/T<KVYAa[^B&4#VSH%>d2o&0kIa^\NQH!+S=+rNKC)5A=PW"Z?/!e<sA+/%!J!4TEGGX`/EO][=X_?\4bg0e7XjK'hX*)556_=(]5Z%kEP^+'FhlA<!Mk2AnO5!gdE`LWg_'t"&@;L--`%'X</D]56lKK@9it7:%&qIVW')>6(KG.FtLBA0W!6gYj!l&ma?^;Zp<1gtpa=@nk?T.F`algA^YCo`<NV6M0ik\B77]8ICKlLf//"cqd+.@I/9.pMqHg/tH%g(-`MLnbMqYfcSXmN'G48<Q6?fV6l%+Ct"*$tLO>A-j)#7KE`5%R:*h!-sGf$<_iW_FZBpS?dN]?%8UU5IW,G[V13lI)Eek.r,nH%R%^qQ")&;nR%?jKqM;5c7C;^l+CX,WCmNn]#R%X-V$H5gT?8=-KN9uD[1c!ZBP'VF&O[I8g6,3QiD<NCW0TV>[)$l/45q:B4pH.M%0HM<LYUm4.;tcB*%`k:o)B]/?=d0]\eI75-r/S050o6fJOGfusOS>O<FHWI.SdYsjDTbYJr"p*^cj(@g><<On`b.$HR6m$Mphq@[%3)0cOM]A:n)p</k)ZgL+@@;%6#A_gI8Ckd*A4Xf@/AfOM\IGm+'-"J-&dmpOlan/H.7fBC_AmDI!otQ,Oap-)"q^oi!O9e!Fd!W9%&d-nn*.JY@@SDVB6b9T:2Rk[)-O)UfPXa29]/2jiQE1I3A_E66L"jYL]+ehQLu<L*$V]+a4)KouN*=rb>a=3!PH]pFe;GUZ9mJBn%RP?!JJF8Z;+`3li>SQ=<*1%:1?^3epF.31"b=>m=^#=0YZ6R*Spp)qR*-.+I@7J.r'lX;UF]6pC?4;6f2Nk>a/GgpV'$<<OQ$k&\%Z9hSpAM,Nub'tUV'tVg^Su>)d/0U.%$:Fa@P00u((.M*!4<*?L=J+$q";No-i"h"*XGgITQH;t$!%_[7mKo::6<#MNrtn`%">=3?%WKj.li?^H-7APVG%fcSO76\lD%'k?;-h;&PEq3$P9uoIBNQ!ZN06'uIJe.o-'`_Ai5oKp#0M:d.h5,gW;ZE%S:5M?;,!@'T8/Jnt%;9RI`:qCt8R3Y%oV,=ML-=Z"'QnVJs-Gt)n-l,F.jbMlt!'/,JOL+>R]fEO[pQVX-GsiAIn2qc5'dur60Zf%f?R&#?es]%b6hJ(^%;tk)@#I>GhRQtP)'.U5UZX#;CAEaqK/c:>*M6Bt9/K#.l0`t9fooUZUD#dJ"ARN)UU`6Kj<R"il9,V]CVkFW]RqTAr_.P&1K@g8k%YdfmGBKLk3P_9@pU4=M'>Lk)8mC>::\P8TU(ZCObGoA<HQB"iIn9Y7h_FVB\`+4s;fDuQ617%ht2+A;SKF1,5'j3pDN<gfH5r4au%?tIDZ%jrUU#uQ5'Zr&`4bg4iM@msfXTJX4\TAX@VWS8d$Z;Y7eHp!hP-AaH(Ja8D%b'R69SBOGl?cC.1qj4T,ap9Gcc:&16#_?*u%<`;ba6R=T#-<btjIWBS`P&Ts6.2&7;kNp`,86N`#iUq)m!XHogMY3q_>rQ9u!3ng2&Zr_cqS:U4R$'rYBQR]P-,b-dM&k=n8sk"P%M</tr"@!X'W%N,J=kF5b!f/9U+?ks,:<ElujV?7,@N]-5Ur=%LOpX3"N-$7<A/sE/$]0MY(F'cN&QU9FD^1CfJ?i:H%2'/l4GtRp%1RUR!KXf7(.#29>,?`3aHnSEpLlu>oF/RUPnKJfA`/(OZL+1qO08N!SC"D8/_LVqo4#]G"#/A42Vs&h`nRg0[15e0`4]Wm=c_(,Y%d&SEl6O_j1aa5.J7(&"AREYTG%q!PECSgSspH*m9/eDp?#D?49CcE"DT\gb!&2orm&rJY*C4CA[aO<9h(r)?$X,c21QUjaLo&2So%P`:4s=V^G*i?l\E0!?3HOG1;iVaq:qMgYYD2<;B>4-GoQHO+>rh$&sEB1dJEgd%+tYMoPEb-'O:,\Ka'+D][*n]84,Fk)-Fqg;uE%=h`A#f>)"=Ot'p"es&.cNhAQKeER'2;tSPP,fQNhIQBAP2"^mLnk;B_*WW6-1!@rVW1>#s.&:0$KeNl`0/("@aa>3B6e;Knpb<6P%[!u[#?8aHl2gOr]HH?BL>nH";;N`CqnKj(%Oe:CW7O?\>00+"Q#COj\/:_+,lom[@>h6&a<[\NnjoJ>V6C,T00!bJ33$b?a,4uT4%VB+Zm)2paX"UJi"P]5*?$'?a&3;pc@&"9?%(L[tO[ZN!VSiqH)6Q16Ddu\Y'=9V[8?5=$`6(P5859rgF05aS773D?DV0YIJUmPo?%[s0oV5)<:kpB0C):"'!>4M0l7V@W`3AV`*M&[n*LjQ!NM:@`,^E1I+bXqS)Re3)?^h=*rgjI<)@>-X\":ett`nPMeD>8AI=;k-VD%%$)Og*2=@u&6l;7#)Tooi^ZX%l[lVk!;tb1iXd@Icn[`90q?'&^D29O!0>b9O>)5.JAuP17`$OmGrUV]G]c=u&ca0X=f.Jf7R/r2%["*gLN<OkFJ;]cg!BEa`LD/8`p7uG>L$edP/h2:&)b\RqD.6AiNDUa'L;K)SOik/r@%EW5VlF4%;%XVPKle%HK+@su^Ar;?)(*I"%j(b<18acn7V_jX7HlW3F^AsAA\eD@^S&:u]!/s\T+G@71@S#c9lgPIU%%m-=;isk_+Qs&/YpiUAM+,XbBZ#_]$q[c"MALf%]`A]*%GH1S8Y9YT3)nK8h@^fZ)E<p[,MbTGo.&ZVV!_]LIj'uJe!5<)s#uKo$^OrK!paEK]+W!FdaCs`!S/X11kZn%',eePo#r'=7?b.ka%i$@HZ0c#bRmf4=@$k<9=&ICSI2NS/SnI9,AL*S,E(';=nRhu@]Uk'71</M<*7A1q:('L8_#.m,#*2KFljm,><R,7mZ"NSA-VC5/X%6fB-`)^PaZgG3LS&(j'pedBIt;Ye0o(piR_o+9iH_RtPpl&2R(O?q(m!992!a:Q)q<0ZGiNt#q;3o]u'!<!je@tk-)&[&:6W?I3u%N)r8BQ+0Fk,A`O[Lm\B2\MpcMXk,HC8W8KEXLonq#m03I@0)T@OeZ54k/hioe<1Bp(/CUBDa;H;)MnLf;IWrTILSi,%K^k]*3D?`%'?F/^$.rT3-Eq/%ho!BEr'o0t!N+o\<+(Q2[B0S%&gE1K/]1%a)Y&1B1Pup/O4oZ=!+iAdB3bq$gQhm%ZIk)jF+Bq61$l?k;J#'i%4Uu[AbUfokA0hA9#\a<*/&dL@>FUR>1TjY3;G%^W@/pPHZL/TV*9bYcB4UL7'8@kn9"W/&L`5R"h?JSq\d*i&kh@6\<0\<Lbfr(U%l!R2kDE`.tIMQROhA2%dmZ%2mc3R*_`)i/j(b6Nd1F6:m'`867k#,6>^b3&/)9_DiLdW$>R;A.4e1/l3HpUqh5R=S$ar#duP2,!^%#'r@?`_3:']O57M3XGt[+<YdQO?>AF*#[d!_(^5]^iLQSUg`c>5=n12]#Efq3oKAi0@nU=,_:JCn0ANn^CP7+HHLl#2Yp0l(3\[9%D?,D7fOME6+_ftHeP.PRbrnN<5[m!mAd8lt`tblP=o9J:"tNYQakHAso_f@%`qqH9D/CJ;/UZoCM;QP%8us=:"CT*3k!MZY<`SIr%(IG*am80HmE[3]@;KD!F%]T,;<-1dS?j=E2ffH_39ZSo[`6`idGRj:D9%a2l8=^YsR0[.6q]eNXMKMHOT^3W,rHnea]_.\g]U3&(%AsUTtq*FUZ][2RjaUCCBQGK`@/;#dFl8rKH71r`/EJm'qBEO/?pB-00R8X3DKaS.ih':bi=Y-]UJp`7X%Ol8T&IkK@IQL-+@3.R\%>?%`hGra:U!<aBjQ:G%h0P*gO[J1qGPkd_D363ZK>S@aG+s0BGd`e)L$6UN/#MELJE=%H6V'5CBLAYiH(C0BGa:+8P75%ed0'I+-%555Tfj-aZeTuqMTa0019OX,l@,tY4JhA=M2.r/0(.F^s^S:d;fC_2_`m'd6>N("BLSE,*\E0@TE?c[Mu]Z6sqPk@2rN(YqD/:_A0%#*(5FL@X3g]R0=jlZHHUJdKV[NJ,$YnN4k5!9MaoJL9dd*e[M41M#/MGC+q6E^fc]4#@,1d7_5COX<'5[YG.tOGj[F0AB%d$L]:c%F\>"7ic1AX[Nr<jDe*l3Hk&+Tr&WK#&p>0S#SS<=er$Oa&P"/nNrnDC!83C=0E@8",(fpCER>)"-R^6DdkVPt3SE)1/V[e+d\\jX%\,\Pm+?6(]"S39,mrYKPS3kt\7YhRr7GKk!7o3?ZM@bgt'FIDW:/\lX:m/Ip63(-f"TZJN!rU8*Z7O%c4HFh(gU\A0a]N.10c:+o%]`:U_:?,3QP&Lit_R7A<<Zj06(&sd#%OEf@p>^j0AHZ31<*K>+gA4JOQCYJT%%Rm$NSl[>fF&6:76F2Q)W$Q^e"KVUQ7"`<#uPk@%F7ad*_ed;cW%=8IbL:Nf7;.Xf-iL&EKBO6uWg2)@p&QJXXZ=QTP[*]V;5oACe"94[`R>Bi.)6sV4H#.sGj6%e=37YK&gB\G22jqG%=X*6u[V?ieku2u=ObQ2'+u"gR)b0pZ-S9li9;Me*U0H8-OWnn<&CI$Da`Y-0UqS$>Wb"(cR9bS!Q"V[$JocmH%l6n/ZP%GHU(.l8%!(]+7jSVC*NiYf%NN-:p=mKuMa:#_&VOfc-2kcfn!,C6$XM[Ibngk*Dd,$)P_s7CkndTH<gVE?0>'bT#*]+X0;P5+GCI_M39?ggj%WHocn00ke@#PD;cLn#q6U]s3ZSYaFJX7%#[\Z3UjWj';J,K5%IAZ.IVB"R886=(_tdUB<h+c"?8,8^6nbVnSE)69C#f6*er'X\WF%2I0ldg5'l-Gg&dI$]-Bfj\eRa$dl1kGmdLK6QHn*jNL.@MVQt%;BSUa1;<aBT??B>FM1Ak0HjDC3J,de<&Q:-$D4QXbIEJ:>#M..%UU#4E(\.]nEh7er$6@JD0hJ&S>#5lb+6s+rq7Qk[^O*SQc6/k"C9\[p@@"/FhbS>`2*F;)bX7Ko!)FA+F>&3?Q7\Wj,1UE6ak`6W%9L/:bcYp'-D/dTBD*p;u(2a;C\,ug]X5a:Ykn%8,ZJ#>QhZVk#D#hcM'!RCs!q1lN.7)NC4";LHA!!]Z`puku8:$4fAKsOCBB/%l%II*:h[p>>EP6<FLf&Lg4-*IKCW0i[[7&^D\d@6?F;QWNC9lZWD>m0+p7f4cd(L`%ibC^DRj[RHD+`F7uh<Rpp!$[](=B\<Tf%Job%<Ok*!ZHPjNr]XM^#''aHdm\l9_J.GS7m*+m(;34TSg,"$PcV'HC:N7^=F7N'.s`d+AVX$`;ohi/142uH<k8o7.Wn>4i<"\\9hb?M%=(X4(IoF]L@L4K^e?U28oQkbP5YbM*c?._^7]i64`<U%P&X.I]+,a1IS)R2).U0!_,pu2`4>ERoH`K$q6L+1SZntk,.c`TC]992N%I)a5sB'[H*Q_bZA+h?gDoNN*BMcEFL)*R3^Sm0pY+N=+X.1h"e>'mH1*>:rk$:-I=Q_sgu&HOCPak&P#3D07[l&68!7T'FECSQuD%^0-W6kcOCA[s0FLQn$'2"!d?plQaS@@!D!VMCe[bO<R:A=[!n_.jeHA^Qhu_.J1Mg["Ka5Ec-DlND(ghdsF#H2=`dsAb6IPUG2u(%GH>4&PQXlK8d5&2X$i7/9dd#*BuQBIF[CQ4YYo=?$Y.=J(gSdPq>[eoj[aIb8s1R[*@SB^_\Q?b[Z0q/kmRE$,OpU8bjD<U$"Og`%21Eh;-5(*q*n1X74?r?+"tM>M>@q$,!W]Wl[!#q-O513T,[H&<k#_##)soS`/$D.HE>Z[ECl0P)01\R$Y!1Rkam(p)pPQP+2XOdN%%j.I5edkPR$nT>5F*eP2VJt#)C("eYbdL,0UXb:lTH`Kaqn`YjLQ('(Wl?OcZD'N1+t="ERhFj\PEC4)FT7#"J`oNob+u1<gK)"@%XZlC!D=1JHItfCncdCV8LeCA">4"J-V'kdcpYH[608Xn`e$d#)jkU_"/`t0MD:A__/mW_oK+DtP*C(RK]8U+7$3JT(R6f^G_DX["%JLEJibn2-g+!Ra>pAd_qb,U>)!:1m<V6cQcGq`B\LUn7,?/(N?iPndINqek7ag7s<ZRB.\R&>:\$P>o4PiFZefArZTN`]4UlhXis%^Tsapfq),QAmJOP2n/SXW'4U9Q<jCqd@aMjC36DqA0]qLZX:Kl=u5L;XL_l=8"2?`dRuH\H_be[[,uQs%YWo)VPk=9:8DH`WD`Jc%YK5sjOrnS\MoAooG'0-6CY[mT^=pA"[dMN=,S=m=@BPGlBjr'c?[qcOH&QQ3&:gc$Jk0#K+RQV:)C#5P`R>ekc@oehfAEQ-<t;;,%diZJ2+rh5]$pko6+p!:.`p0'VGqO=<Xth/;.\\SH7OJ6q?DS]R81&<gZZf$ZTM4_kPXkn$OE8p1p0;OJIKQrm&icj)0@]j3I=[WB%YQDIN8dqn"bMR/u/_p)SUm1/h>ls1%qrhh&K*M#FN"kt@6COOEOL*`DrDo^s%YGd^cJ'2L)Q]&tk_B1h,hFU)TLMfE;pg/7WiFt'%g(LVuG6Qni(l/5t"V07&QLL@c4T%p=>0X2?^s>E_7TOfmOaC'uJE7V-1+L9T-(DuI@#3u*)=(YF7-T6"aog`1*-YP&iA$J)[)/St%:F1M'0-XJ.\5!c>JnXkr\1@0R\mAY+@bKg"k5K6S]8!IP$KC6_1$!u)Pq>lCV:'n/a5'1ZNTV[T%QW+b8of17p/S/QFG7O2E%-s5%@QG%$H"5AJ?-HcVf^=/erI]tVrZ6BcX,9HO%TOPVHdt^7N16VXbAUWD/=^a/C"#L>#grXU2'd8N?8m342XDY)3GY5-;q'9q=Q_,(%mJr@.8>mL9U[BPs\Z<6E35Z"2HKr5cd(,e&0YCe$;g8BH+m&oRSg:W79^Tpe6,B$cUtJj'g,&DG<GjS1V=,$F1P+E=4,;ZK505*l%:6e42ne9'n"l=28itll"0Mp/VkQ&F:i#4Ep_8>*3$",U$c@i2a,>0LA,#-bDIATbmE`@Lhe4@EM#cVB.?n'ULZ0D5@UA@;2:\6un%n69"a&V.eO#0Xa(+L1OF:b8T14MJCB-S\/K#Gp^UYlN8M[)0Wu1+b0d0M>>ALhS?11sS7d-N*gF+,X\CY@<i_iZ,hb_JoC<l_j9S%cYoNngI@KjicZ0Bg/%Fn\;2#rlYa:PT$6qV.U[OS)k,8&$0W>[Wr3<5'eeJAYV%_Fg+b:]p@n\uk`]7)9`??gU*@NO;"^sf2kqm*%:oragVZT(tN(JCpi@fK";Vu]'1N1n0Z>1^X^sJ5;gr7LuOP]1"_Y65%Y.1DN-X[3>&tG"npFPdq90?2)M^@\&46nL"2e1Lul`ta+%V"(P,\-;T%/o.7@e'2k-K)3Q\kdB,E)Xl%fpY%MVf2fjO_X`4GHuOV/.j<'CYq(ni<>1PlV`6>Qekl:h(5MXlO?[*n0'k,%]'<5<%O8t=m""=Hh<E^s)D(9:r"(5dd@Of]QeRFb_68]@CMMQ-!?"YmX/GY2N,rd#nC1=Z/%5OG>=&J$mg<7*UURZh:PF9/l,TLE!7;A.5%`>R"3+sB_hf4'usf_$0eFe\0N;m"Jk1^'0I6HJ&DZaha+Xcml_:X-l8Ob3?,%Fa(;;Ig!.49[a%YZtRb&b!tFDa@-9]BSmUo?lUS%s(o"QdrM?(>M]m]:["F4;id2pV';pn*(;NRp%15e`k\-UP6/3$_@IXY_.:-Y?Y_BhW[d@*"d#.*[%GRt[&'M.HL$F[I;OcGKRBQ$%,W+5>44pR0gWBu>33!?Z7$mgps/jDBZu3Qc>\%Dd@9K`I$Ku5T$_LMVXVo=$ootm+M)*nfB(*)BW6=K*@pei/(Qp_U\,u*'ZaohF%g=5KSZk$910b5dY(XgtCXD<gAEkM&+5jmd*M#fWJg*Wk]GZ<4,pe;Z.VHN+%28upTN2PsENrsWO4d+,OjI3d_(9OdEd+CrS=:(:%%rB=f6h1Xhh$Cq1ZiJUd&_TUH68VlK(#k[D>b)"`i;b*.Xp>(\/WT(e=rdYKYQRjBk@)?hMTV`FMNs]XN99b_NeqgbKj1)OAD*;aR%&B99C?OR$VN`fH[ML,%djS?7#dg(Q5)H\Xm`O"kI[V6nfLHrOrCXiNj+B@D>SGEBq6%\a.:LCN6$\YjfHHl%uWu=(c@WQGrQ*2gP%kFotD2iDDA@ReL:f#:[_>B^\G)r_c?jicJY.9JNA6jEWJmk8LukkQ/Vg=sTQ=,):BB$:VA=/[j:Q4*`gdB+'!/W7:-/Sj]rMlg>f%J!P%d?P18Ap"=2L)6-Y28E,N,KtEJ"qm'u8bJfVU%803t(pL&35LcaS\JAjVbi(M"B'Y-qc@tR!I%cC/+o%D'S#,&$Ch9Y_D6koD%[0]p%O8c60G,rY^<7MtC%'N<OhH>BccA8L^6V-&k"6ioii8]6F*4O:?+NXmmm(jgn1eMdfH3tDq.O(Q9,K/r;f*dZ^4oq-.4Oa+i%VUabQKk_BDi0quFk^Kk.CI>a/8;^;I*e9=(`Dl;//NX+mg4]HQ6(LlpGs^mJ1->UL,R@MC6]eMnI2a3*a8d(Wb]LSFEL)-iOinW(%eWPN[)"ct3W7!ujKM9_S>6A'a?Yt$4OJTam9SKB,!R%W:dbbQ)id-,FjEZW9<r=!(Xsero-:F7=i@W8.9ttC+ADUl7&>5ZY1'3GB%d'qi\>jpmuNFrP\ok^1@#>R$r^D)NAE";!eeeF4qI33c2[<sQ#!U[P7L\?B!N5*<>Ts!a^cqgfQG,8OZ/trR,&)M*7#(]YI9<TBS%T$Xp\W&aR>R0\$/EK&iuCnkZK6@*j?N6=.6_h[@$0^L<1SYlDTP#e:@^MR51^O^n/CsnDL!PXHOd/F*O07Ta)qD.Xc2V+NTm<pPF%AIlOf2r>`_np%+ug++"GCOIXm!`:WIiX8#si8<.P7X+<L:EH^\KWrV?4#ikkitZS<+\,:\Qe1Z6r37["Fs<t'p<ei$l&[#;1&QPG%2/RPsCjsbH-h7ADG@Brb"!9gI^H[Rs`,Y2m;/4e1aPkK2*\r7S7hCh#Q6qTU2GE)umk5ToEgY.pZ_t]:]:6I_"H`,e8V&F#5S7R:%H:\E8;AT1agNk3&#+3Y!D8:_89@ArDN@tP[8VhsDW:nSoQH5F#hB42jF[gRO<<-K5+>`qm*o+>;fZ=N<J/V;8jI:Ch+^h,09rC%(%"L3%KT(nV/8mMbngtVgf4q_B_qu1F71BM"BD%8,plqDEg(IC>!ck>Ws]BZ<r-mANC?3/Jp]Z4n_-g(a,oIbg2..![A7FO`AapS7o%2_@?kfa%\tk6/tU![s1.`X2%:6\o;Z2Y/c2d76e5\\YdG_grX)W%VA,4ph_o&+$?+.."PTPh==D9LuTD?IkpFZ#(Gu3Vg/7[uUM@%aMBD8Fq+LtQ3WIHYe6KAAr!oB+^'3tJ('9R,,!Smo2"^8=/I-9af)BZ1!4G"WTd+[9h*@i"#A$ZBa!bU>jkP*W]M$Tb!d-b#L8p'%K#/8u%.0fao`^HEWKN(!]N;JF#!sF4fZhH1rmCDd>X0']QnYEIgL06iVclm5\+)DR]p($FZKVcA2^Y,B*:\a,[Ea!j;^FBqVVdJN%LlDtSZf0s$H(GG_9RWQPc0#du'G6/*)"l9T!:9$1r[d2#BPC6QC3lP,$-B:Yp+ZPikAW5O'2YaXg?<,p0I>Ko\2sDLFkq3T^2>0N%)#u'k;Qt02ms.tTJtDc*E;21j-gut$C`)@6*ni=BlTL>'^^61MQ1nprF60cn9W/qM1oG53&-ChZ[=6tK:&I/Xf4Dg2O:\ni:m5DF%W`F86e65$O5RIR!Z=6UM7H'6NC3o1R(aj2l1CUgEQ@7C"mm1C2Ibr-ur;Rc2CG_2*\gdIBYcgnZ)2X+nJ6-iB'-q,l2TO;=*_55M%6hu?sliW1L7/!lOG3^O#0bgajn'QL\g(38O=cYjXRp8L.VcIMBa93,7-Q>c!;g[+lQ3%e_a?'^pF0F2=0`Jm,nS/.HK'j#UJYQTt%q>[GsX?O#%pYU09h7?qGYV>&co3<dYL"6eS+Km<JLC)U"JX$g+(I)b8:Qn.\ZHXTUG&_r]6iR%F_^q7fhknY1*(U]4X3IN!5sn<a%-lN^S#s$b"#(:ZE4N:D#i(!IibBKRO1P.j%k(VF>q3KE^5fV2*H0tKIhB[#I`=9Q06V2gLA^2l_WklSM(C4n$n3gkFp%JB>g!9ek%o1HH^"RJ7%@@qIQkAc8pQJ-NY!i4+hX:<<k#sSrD:`;R6JSYDmp['MQ+'/`I9Sf#\WYk;$c>b/2HhPGM$<-^?#c<uSqE+p#EVUh\%\ad!3"Xhe?dLYIq!]+Z&e7)PW)W)CUH[Bg.$+LAD<dU<>*F!XnH$.D@a::L=(JsbRc9I\"psbRQMWA`D1lEueKb+p)g#4MXGr\i2%,t2L+39rEub(GOt1P8RE)"*_"O(b?&@3MWe&=52lGt8HE??/ZbLnP%bf-S?jmt?_g)TrYgRM-sXk*st_HSE6ls*jGeq4"!85(e>G%MAW]O]A?mg`Ml(O18]E)?<1C5,WA7bkNh]jD!*ZQhZV:]Xb;hdcOcoOcN5.KHk+(d!&IM.U[R>oZ.&V1Zp#gEidVCp)%euG2>rgT%!40/eia"o*9re2EG-1<-Rkr&<J@g'B8b0eo5Y>9:4Xqc[_@V7EY!8lH"<\^M/7`4'qTsgcPJ@bqP7jGHBccXI7+s39p@C9m()U0g%#Js_jrnsXu/=KNI;&;_&`Ek$TcJu71q\8Q"H!FPKDE1+b3YV4F+X7#;cSWb*e=B-Mn.b8HBX6]KRg?&=0[abt-lKc<2&me+SAQp(%J1P_Z==7i%3-pGMnl[FU/9?/>ho;G*2i[h^UE_-<qneVVPhgQH((r7Gf5Fj_+E4h.>-UQBLUN;gT?o'gCn7>G(;#Qu"o:*-PoB4e%iRf0b+dgS(+T("k\[DYG],5h=ObN=o02Yoc;JGH51D/:k$brlFRifNU,PGtPeCej4-]%KuT=&LaE9KR,g6^b,>sgFm3Nm)mq:K^*%^*7]tEpWrWl(dMdo@bfr8=Lp<97)R/;M*0E;s)<qLX@aPNAW;e?7+*M>VH!F8lDS)eDCMKftZ:BHcLT/>=\3U2toasn;4=qMoPs6%A8[M"J^sS1LY>)HA%QUX4P$tkFBXhnlm&3m*mkbLGUJEk?;espAe"a8pA5O&h3PCB.&gW'eg$igqkH,#;q_;SZdjC!3F?X]cT1p?%dHot$H:6oDP!+c>M0inXIa&_c!PFXY@JORPd-3a0HZ,',6DbB@r"^\:3h0'WQeU<J]o%bE5Z/OUs$saA;eH0V>Q@G6a\X"-UO)*N%_5@mH7;e?(+"4#IcNa=P\$IF7]`XCr]6dhX1]O>0hIl&uXl&m3Y4'$5X-^q!)]QHnkXCU^19:6_Aq<`D_[-9+g2X4/c8Gs]+BABL%,_?]]'$`m-*@UG6HG"lWBlcAk=AeRc!5dCS@%%.]l^UH]&t)N&=%jcbIRA[#^Rd1qe%07C\HaR%6W,)\YK]iEA%te.JT<U2s/C9O%9;D]t/:GmZE't5_AO+*(]X8G&-2<JA*!0S$a'i+rJCt6imE_)n]+*9l*CuG\N!gVKDk:$NY^3WJeb-UC"3dK3b5Kk[DBl@mlrP-&%7">4gc2"=;:`^g,2'Kq9F\^?lS&r.ZG4'Bf&G1u"U1UY-ias*l#%aC@kh1dV\I%*%#W/hSROS(1_.1lg@%H3!rSH3FdNEUk\@dmF%B\;06l-Bpc2q<HM1+$b7YdZEt2[`V2V!u(>&(j#iPG!fo-`6=)Bln!Z"oj^ZCjnkW/-$Z$^OLVsX4nT7fUCR.1m9.hU"+'(WDs@t%U4?3+p+r_IHsr_@M?+&oR*M3fR%JMLMX%>6Y^n3Ha:;5mh'W5O@tc:]O>F6JVW;GJ7I1GU8(uu69RqMS-2lhqjG[%TEr`<-/H1#8%]"@S'a0g\039aoLml38j\=aHcgZ0geD%Zj7[*3WANBnJ<$"[!<#+s4YB(NiJae!1(:p&c!*InQZ@m3stq;h:i'/dSl#!f0T_cFWe%j>eqP-LjooKt_g!r.T[Wc+@"",G9(p.G)^mF'ge'j9]A^*e5O-fH9@J5[53Q](#d*'N0ZdYu0_;W&j!L4U=Sh@gsh"MNN">]uc3K%lqIOCp\`M`S<HDG`,FWYLc*R?TkVb0OPs%EM_DBW?6Ll*HC!$Y$4'9)N0Ph[9SlC*VF3R4+?`Y!ff(mXq?3I$F#P=n#o!CT3](U$%UhgiD4q=6/_DZG]=.sNPZ,`k'NRT]i-8k5.kHHk/:5[=umqjQWc9bRal$)=,pJ%T"kFm8CReT?>%3#-N,O"S<2lSX-5B8!bi2^lK%eph)MAdQB!7)o$ui+gU-E:QGscM<+6YUP(ge@S4H`iFqH+X(]krq[Q?^.T!I\bmK0O5E0Q8]Mp/eIIH.r=UksZc1TmBG?!0T]n&F%1SHtEM9b31j@H!K!WW:&N!$KlPsEKBl$iQ"YW8Amj)pHQBjZ*fIa_E`a!Tsj)^W0,ZtTU(Xs(jMqb=Mm!ErN=2r%hddrGH77#l`i%fCpIeJaYNDPK#?/VioQ[>uq*?$\j@"S;CVKM1(_L=P)H-jNSBbQ0*&n%]Gn#`?q]N>[MaEbXN%:UuUak<M[Cp$O])Q`Qi/G8@]OI%kcB?g;_n>W*N.Y%!=KTh;CpJRo0V3AP#7\rr$$fTi:"l:0(?$MGgF(0RGlCKa3l54#W?GK_4c[jCgc=)S.LASV(f-Ikn'5M[Fshn%[Dn]dC\Sia$lpnbHuQFj$]Z,*[9VAg\e]eUZuG*P5+dKb%m=F2b8UF1Q!\&?&C>K+TXOGtcd>S?)q$n^:/<-,E)>2JD3fA?JO,jB%c1,@[@7#h\T!,on'P(S:W7Pq4ZQ--_@;Q[j-RejNnkM!V@T@a%L;6C%GM;8,o9>Zf49_hcFE`#p)I,T9U\S/X!9j="$0>TOfq&YR%Td01N#8SXWpN$882Pn!ESdWa;nr'M8KqS#=(m,e=J\_5.UQ2Wq!1"Rdi!fZMrq?r"1(Q:;6hQN.`p&VQ-08PF`*?(3B.sF=S)#0B%$Vj7?>D)BNh()ee"7jBGhP\T*,F!p2:C;TH']V@E;nO3-p>7J4TI<Wo%Sbd6\m-W@1<Bmd(keWPI%\CN"e^Pf%>5]&R.kKogF=?Q%P`=#6Zp3i&LIF5kedB*:'jZ3hX`&_HhuKpV@"C'@aDSRP-"Z+"dp.*Y4k]_$VTju`2c^LFZ?:8FCPOcdI%\C-Q%0ci#^q*0q>T<9%b5Np^G/ip,[4m]44hh$(e^eegGI0HC5iC^d5H*>QG<>GGk*othD[Z3sLE?4I=]_-nB8A.(%)>CQ3_0@^1n2;;jXRL]#7,HXZO7[+%lb5!dH>$\M[s<k.I;8>`p+NNfME$b`J!/>DmOu54>;]r;Xq"pCj!$iLQTBWTI>g#i.!,-Y)DG^%?+ouoSFnDZs4sRI-]F*u%/&Zl%BZ.,,&BULMa^3Vs*\nbKmBrBmGOK_aQ1&pOQJAa_`odea:V?T-Zt/'tAiOA\=.d3t3IGjPDQ4*YbRtOkPnr(fG.l;6JQK$t7>]@m%hC1LI%>86Q8DaGP/Y4`o'A0?36:f,a_Y%kYLU6ZC"Zn@p^qecTTY$X6JYa/[1jkQi#Vdf]<n6qk6a4IcUl/(kKOXbM`%$OH0.ht#%Z3G8#)rB^76Xg2C'OqFD0!cnlWCFMT?!6)Vjb"RPLu]fY4d/&;niVGB2;*L1mEch2dTZKbEhGoMT]KBdUcNTWRn"Adk'S^=J+Zb:%%@l)?0Cq+<@S(j6^U[Z(!p."b0H92dMG;._49_5Sp_Pdi`#:&r%UH8YO:.FJkBmAT;D;Vi,=f^CqS5Bn('(143J%Z)O1b2llk4tF%S"Kjn.S=%hXCC*r>3L9k8227u@9i5Y5&)N'S\km#40OIh4]@4<eKda,OEX&WVdqJ]Jl\A5FE7cEI"/kEBhM&[JXpAMo:(&5p5]%(%T=DT/)3Aj*CS!V.+g%AuAPH.M@DUqK[K;'sJN:A;/qcX\J*C:9Z,"^.6i<m&[0B7%o_1u=W8Mtkc/7S)P&U_C>EP7n-ZGC#O;_bX%a[)Xj,kX1L,F)WO11^A0"LeE!/Of#[bce>e?cS:[SIe&-rp6;6%H+*P1Jiu?DOpoSY0W9;6s`::"F+b+j;Dhfr$49m2k(MN1$6k>%),gF!':0oJD\2O-)f@F0+NMbkbLk=\r+<o7GnaB0&)3uOTki^HgVA9<Wm]a</_F-Ip%^]3](pPPkP,@I;)<iYFf8jR>O#t1Rf7:F%bQ)eCYri/N;5P\a_0Iso2`2a+f1liuZt/X!3_W9Q2/*aA!Vh+tT+uj>-pIULq$9\(j0/+eKcZ5!4!Ik"V.X<O)1jOmLQM^&MRb;'%l7p=`+FjWf=70N*hC;',?8a>*(the$H)Dd/rm9Jb#&Mj$-03<E(Z"&IG.JJ!L%'c?92i`TOT%*Z2;B/OL8.\0;O,#dcr$ke%o-59%4F0pc:b],.!4Xk/W].C]onGf2/@0KO;:t$dX=H]_*:eCO<9B%AiLj%OG_<gF^pnR17N3EBU\VD5@(H"jYj8&I%Y!Ikal+6YQX.6A%8>(9j(427Qp.R`VK9JOPgB98@nYLV$:!;'V)"R:JPaZUjCYTE6l]C)tdSS?H8:BDbR!6"'Lsg_Kh5KnkfO3V-l>H$\abRr5bomq'%(GLr5O>B>)khsE-M9N!RX@j4!k10@V@9-_8dmaJ?q<2[M)!@H!Ld5Vd:HHN"\A5Kk)6.D@!3=/VHJPe&SHHEIkOD4.nMpq1,!br*%Ng8^Z*[kc2.4e9/)X_]nhi]`^9rdg[$]IE"7\1k=*81(ce-V/,1!CG!"#9e(E`]8IghlYH+Taf05"[h+kkfH!,/jH_m9pAmUTB4(%iU]/s/S$N[m=:iV6If+`mPb22OUml-'Ck'/I6+X>D7GAg-(cd4IJ%M6jkPDO`)J#_4IQfh$IU%k)DRU\n8;;NRLNbe:Ym?6HeKo6%=c^:2N/VMcfM.oLZNs.NFS<K(0taDs2k:0/&9C>eP*DGO)G%Dl.ZDHqYaCqt,7-p^2]M9*fe,o9]W`aUhJ'>^QqYF>0PV3@^'#F.%:?DTmEn\CMP".c09)\BJ-'C_?N;iE!3%&*103+9N3"=qm!Re-L0>T_)?.[W?3^q5g;1%K4bI+N@gET`Nh/i&LIEnN6(Dr9Sq;=27%Y(;9ohag06C6tn)5S32W>?cZPUP\sF```gc%i=K;^qPqnRE*kgM!ad(QP#YKM-LY>Y$f0%,V^/W7eME#2NO&_0%k'f,>-&T8$&sb%UtTT\,F^gs3/>\f0OrAX+-u(LWdQ0CMnn57%*,8\7]a519$d;Pm@%SWHg@fCdRY)?Y&fBH]2b@tG\o]6p5RCnTW_^^C&KfZ'98a3%[E7n15%`KZgF)Plq-1G>j1O3.p:ddEiboZ*>JOC()9O7f'U6CYY&<\:&45@">&Yl;[h;uG5gH3YCt,a`9A-*<Jq-ghW)WP#N4LZ]%2V_i8bsrD9:<$mdfc+YLi?ZiMUn9L!j6=TAPg8DHBj#$ShNb6VpP6PAAS5>_[,m4%9jsj6,-]C!b]W]'46<$>ir("p!S2Q\fR&Am%Up(o'mj&fE9!^OE8/JSW-1mqH=d[*08`1m_Iks5-J$2N;a-pf<2]V#[4Sa-ui*a+NhhO^>aa?"P(577gSEiVPCd)RJ&m<(IhraI'%*KTSik)ZLQeNJ4VlW5thh_eF5jW?($3MUn>0CK69k,NQtU:SfiCS19PM_!9".Y1Z$Oi<4>Kk9lJE$jfLM;c8(;VZ.rQ5:9<"(]j0%7b9;D/76q_IrUn2R!14I=IE[Y*ZsFP5UI-W0c)a.6.5cH1M<c??jG_gQKb*J+37b+o3>Jne$nq')8,TqOQQ$V?BpB7jqPX$a&)l,%l^;[%4=0?uk.&-[mrF.9i(=!d?o3a,g]^'8)0r)Xll*uGJ\B&Z#$F`gBXbRD;\/*DjT[W/A5i]KRQQ#Slp+XSJ0_A/fUop_Br56k%SIkV_8b\08jKm/(2O5<a10.,`M4uWJHFY^D(g_s^06,_e`,?AG1ZdfjgdO*ZV]loN(fGAJX8&!0A<)VgdgcmLf=5`M<6Rl=f0&7M%SJ-;]VRCh0:Y#@=aFY/]^eBO%iUOmWUuq5TU]\3\^])*S"96$Q#+3kE6_cFfY(3r5If@r[^S!UB0K+Uk8,&d#ib:NKi0%rW\(Fg[%Wb`P<nNG!+>+ebJqZbTuMNGX`5!cR!Pt4n^B05I0(o2cA<j$l?&GkW`:n,X;)j"ZP(%QYh;g*$_$j5Hs0j./kL`*Ip.E[J2#!hOK%*s@`]f&e6!3Y>G'LBrG1"L_Di))e#PLJLs*Atb$.[*'+ae7Hp4@5TY3nTgC9qiJTfb_=3"hfAF-B-16`#40:Y%g#ZHJEZFLnC[m6%iJ;@[P6UI/l#$u+&?94.P-Y^&XEg!<nnG!obI:7u[*5i<Y=Tku>W"u:"r2f*/&6ccj".LSqpE\:>SNgc"fA>OG%ULBRWOch-=oHI%V<"6jWi/,[0oS+:;ao4rdBa(2ak7L+LXk3NNi!eJ8AWPZ@d3\s!i-e9ZpLF85+=op$q"(@aIr\K'*"T?gam:/Sn!U$)sVTNT?D9*%o,/l3K0d)@B:scGjNmd&RJ_+J/O)@<DFfZZ[)7>1q72t[NI5i3;T*Y\\"^mM=inpP_UKs/09@"oqlOIo&_kX@J9!Tg2tC,Dfh43W%k2pu="M:9b-fmrCo%iJ[Tltd0fsBjaK=]e6<?DJ%f]U4-^YsaT450'fAQW4[07YSn5+P@gHs$:=]dsbp1OZ9;C_$ZhhX9^W/;$Ha%+*@]1kM!m94Wk]iQ#dYC!hXJnqVi=,\L4L2-\]jPS4`7A_to;a=Th!9*bsECF@rq9[<q,(390s$KVs,l],c89he0hMD<,qk$jq%"%f>Ho_MYG`6CtH[ilNtZ+EoLf\TGoX*qO%IoP>RQ)SNt7$OII'%3SDSJl)5=tb1=I=o4o%56a)9'%)?<a-NM:nCD=:!LV[-e3GME$%,^7(;B*&qqVbT_a0UDI_VmOEMmBp<A@tWEQhKKKlLm_A]gY`4YV1Xm510F5u#79e%lY@!ckM-2\NdDYr1T`3R5ONI:Nh3$=*+2#9%1OD+dZO&Y+21+lF@K5md=lK\_CcpJsMb)M/m1='Z21Qs*U%c5SedDCGi.M-:8s+M[MCQP*2&H,ZWd_?8Rs*Neg%8`!U3;<'3[!K+%IcR7G,Nn&_'O$<h#L]Dd+RG@S&2Dk[OCWrs=Q*TN'#"DSip59R%6sT8ggu5m.4WGXA6l"[N$N44O;tKjIN^;Q'4AUml=Nog.6FAq%N)Z[Fh&LQAfYe(,A4Do!=h9o%L"^2$iIHaI,717$Mi;um$[cn/^QI%Aqo9M+aFHK>^=n.)Ld8'q*<_0<F?l'F#HTW&+u+P(lt1Ke%g[>XW7E)SC=J?cB7c4$B+cQg0*+-K",JU^'@iJn_H6Vhp!Jt:im\;g:G>ft^LW$FmUYXYnK8RD2PgoTKV#4AKnG?B*7Dq;"Maf+O%c+dJj51^QU35ha`iEVgheJY>mkfju3A4&iQ\m*R*6Cf/V"/!J=;BV&RLbtTR[Ru(Ehs9SeW$PZccfnV*A5NT)g/qTQ,[O0'lRgP\%!3tt"_=4aU\'oc?GOJkHT5<^LRPrnr2PM1@s7jIpFSk[ilgZ3Sf2oFeLQ4<B>?k_"3#*219ajQ,Rl*a@!JG$TAKf3.8*5%uNOchJ%(YVhN2^\c$;Nm(mW:TOL&bA<l8EUL^+#GYo26Ea]FTO$MD3f.Ji:V_*:UKlAW>3csE?<#=ab!>"`'m6$d=t)MLa9bm5'"@21d94H%XXcur>60A)AkS'Ogj+&_S$QO!-.&e<H0MD8N+V#&FSg*Pf_e@#4$NKsCn0qU\'^u;-'26JV55KR9'\=*,O1QkFP8!DL,V_$fItO'%cnI$u^EeO7++%^((fp]J16Oa?!Lf<C?6H`hO?j"[dpcU?Jt%V$ic7>\@<8cmarCSsVB,["TWA?Zckt[XCMGc9mW)^im5g:/1>M)1%*N(6HFT41NnG`FWKiPYtpo*5Ef?*&fLgZIgaA.`eVobFI;.);+HF(+<ALJ6U!!ZB!.DB]U!KQdl/RCrS5M9%k&7Zn9+!!Gh9;rTn%?hl8Fa)M($63?6/kpukKLuqB$_+\D)&=]s,@\cWQRY.G>Lio7k3hM:?Du^<,;3,HEHn$9GnIUV#bd#pKC;$0c6Z=+Q(ijr>)#OT(%phKS7Y\([LMGR1D#OX/B`oh5LUm;&S%pXZRHk<K'aU1;gak(mDj"XkqFV]'*%`Du[5_]G<#oEooPBp$Q"pQZ&DJQF16(*_>(FFP#%r7_8X_OT5g&Ct9"*&X>R-&i1eoKd77";1ps&FZ<@&<)]8#_l<JM2DlMSk#sj,i<@0C)M?F)KL%gFp*1nKYe7'WVIm[R1Ne6i!9@6%`P^Of569'Xg?pRna9Wr\&hB^YV@NA-#8ol8G4dNlWim\dX(+08!PU8E'98t-A`fh>38BIQi!tA/)D;Hci!._&5n"gG7f$TsPZgQ3%\-F&Qr=oRRH1)*'\Nf?/^HjP%Qc^`EREnh.:Xq64jP4hV%><KS]fhT2jIcoQg'[1+?K[=jH!6Hh?Ot-<5\/2h`8*["`4Ru21%7ZA%7]?a.OWK3dJ4U5(?uGoeC<8WH?rJ190hF^ZTaGEUM:i6C.&P@ig^ZgsnXT.dpdM.Vk)cAp]4YqULFmAF"8Yd`-Wk;^QZj8[=*!nR%+WUS+HQkM'E<j;Ci/DG<,GaS3UBi.5<[@5b^i8m6jG.1Qf\ARDAfSd]0b'W`@<`Jqbs'SAs'o]_;kFU_]G2eQ0ne=^h19WWFFQUD%$HNU:F)r!TE,6`JJNJT(?4K3+Ct0L3(I]9pCQoEF8%2!IlsA"*CG:U`OaWIhr(R2:+p!H07a.*tb&[79piKK.)m'k-'/Q78E[*;4%1Eipbjh<utH^<e!_!ZTR<ejBJOWk,'</,1'T,<sE2ZVXc!0dQ1"[(>O$<^G6c;7'0NgHb&1'05J=NBBAXhYrR%l'"U('s1=;j!hI%MW+WRe<H%_X1;QM6aCP1-guRN25[9qe.CdP-Im]sNJ#RKUX`Mfe/CQp&ZF&+T*7rdS)s<8j$H'4aQ&b""^o1IRj#.R1`_k'67i0I%KCDaFafBk4LGc-P+r`7"(rY/_B:q1kkX-SS%#]VRN@so`mB^_Y0u(=K%_E0eSNqUbN1X,iYWUl-Ve?o.\Bu2Xm(9JVa3nt\hHctd%$V;Ob]XK8F[sUBXP8&o:k,YJY'Eq<WRV/kZ(r$GRX2o]U_)``G;+t@$:a@X4dP($XO<rWGlO0@iT7-ma\QBFlOMT^UXLa]+nZZSp%XFe!^YoH9<c]ZH6p:s3%7[eU@cY+-j3cB+gMM!o_gl&#d.._)d3Zm\$Kuq3?EXO*GMU9q4)ol"D%['3F^3LHm?op1'$?>QV'A*?r%gsSlk\3%2uU:J$Ij_Zm/^<MFS):m>l83r^Cjg=T#%coie]/BbPbem7\jE-o/!Gjh^K/*tm+*uC2ZNb4Eop^'Ol;V<4TnfBUW!G]L%;lnAAAC9s./4^&>2nlh$_e4Q0T@%K3X]&CcF(Vqn;2qXJ)5ZoXSMG1I.6ZnMK'&0Adp(uBnP3YC[ki_cmqu_!S[t<P7A\%qZaGA+%BD$-F2+n6\b\`N?l"hq7V*!YnJ/WS*ZSTFR]?sc5#>tQJ=bKhg)aT]Jp%@6t\F]Q37)FY#;l8D<]cl6\&B$A_MVGI:VbEAc=%=T<%F]m7.Xj=X+D;dDQC*[Bq6X8V>)*OhK@S'M7H_,9DjKr<9NI%2qh@2GD9]`r8Q)&(2&?aI!U&qos2g$;l6XCc>_TU4L-P07G&2-R\%336KVo31DV[g!MNNg]*%"_fF'Mc#tL+cW\7FObGF-=jG+JjHsCQHl3nbk0]f*q0&!T&cn5qq]_p@&bT\PLgD&N1<"%d15nMk">3-%F7riIDirM6a;5t7HhQnNrt;fEQXGXAk3c:25Z.jhjb177_"'lQXV9&nU@h?Fbg4"X/VaYFCO,qtjl2`H#KVk$Cg:*hE(_W;R#XLV%NpI_ioKe&XX%`*7'toho]Ic%j@6pQa;5QCBS.IR3dJD,Pj^kHVhj$"?MM.CIbfr87i&rB>0L`_4Uh)''bRHGJ`KeQagZN[$T)L:m%Hr=@C:5IIb<8%J:`nebq7d*=bANcE8BScQ6M;f0p'R8(\2p$p/2DGUd_adf7Q+htZR/OE%n`g`ogCTdXo1HJ#mrpZST7]CrbkIHG%Hd61*nD-&t2UK))qE<sK!6r[_C;Yq<1H>NH1VjBe$jP<[9Ah;aI45K8%GSU1-00-.%33ma9kduS+\<tdNOEO4_JP>5?6cQ^c"Zri%<SKGtXRl]TGYf(#ihb$Z8I[*6(=NJ@DIDQ@>]p9'pmJJu>JF<;ES+mg+U@XI%oiZiNYhcoT"K(3%"UmPl)CTC[U3?Qbr>T8>0UpU%\-3h2(1sU;)[dXBAjRnGgV,rt3@+C%"?L\pV?#E/C;`e-6[uhC*m;S/aMj<7K=s;.Ed4OtM6*/\=F.p=hga8!(+;!@BJ_Z!OI/]b%4JWOKn?@ag=NIU4VP)jcPgk^_;_JK*/'1.j2Bq6snqg2nR/W\c"Z6"Ro$q%eq'Pb=M:3eB#to(iLL'$T)8u4NE?-7cQi&GaWk8XE%f$$%Z>:4Cs[fl;BR[gA2=>0La+)V@?i/=&b&Cr`BE3)N(k"#7s<nteOjl^SURr65uBBtlZ?$p4IS&is!6#nYr5*]7;dIl/sS,>)#%7<D)p)t-)d9^N4^55b[&rI=4L@d:48(T&Gho+XhMVhqJ\DI*7TRTY@heUi+cDD\IT:n=HO;(Be#qH(B6@LT`L30Tr_rqUnB'*diD%SOguc]FSR!m*cI_o?E'?bEmPad'/C1iRhY8@LFOb>nVCSQ1r*#X_N0iZoFG1&f>lp:Xi'c2^83a^6uTa.AM(m6<=*KHU7q=*+p7;%aWm&lKdhJ:k9[2uXFZoT-V2CKhl?j\i!apd+:k[m0ZK$u8rX\@#MuLQf`iEaRe1c\:;*V5WcdH^VA<(37uto-OF`>*d"I\KUBcXk%@_O#hTSCJ#S@O%n(\)bCHh;.D!%5]^0L+4`Tnc2:Uc5V#";:s;p0k@#Mn2mB3*=-15c]/OYkTi#A##r\&,.Nc/_^GVLs0IcZS(iK%2lE$i#M$8k98[=MKpFgpR/;N1ncc8pa4H5Ok+o^P"&#58PE*sUg#4^$h3a:W\D+QE?@^<'LR\8AnV.*?FU:T#`!R>S>(8:$)eEj.%7jY//k"8j#g#aim@pC@-pe,K&UDK:_3XWs29#UGS`^A'oK^r:>H'o4\Mdjs`W;q%`S1pjJ>o#an]pj)=&@.J^E,tiL(@BtF_[jPS%ibA=h5e5r?7kksF5EA'cNq19@Z!=ZO%P%hjV^=p0XJp-:DJ]K%.[,mU5W,O;_Sj!G@AePmJ_jXRX/c[1A2/>M0m/)82,n('/)n:7%4.&L+.5tHP<N6dG)H!I^AR-o^%d5UWBA[E)8LDZ!m4Z8Y!TqROV#Bspb"[X=d77I9la&[3H2WcR28DGXV`Nl:mb4ao+?#fV3)g1J%^c=+"nsdD"=fMGB7@L/l9-%:gmm]`tC6#4#PA!_aPh[bcb?)h/&Q#0Q)#OgO"gC-T=32kY&&u>J][sqar`X7.Nqg-fgcZW.I*R+b%=PloJ7RF]BOuG,'SqLX+f0JuZAZ^l#T%n],X&+bYhje*rhf`O=XY!n.SaYaB1E@tEHiZTY8Nt'Ra:P+`[p-:Z9s&amf-pZjO,Rf<%?X(`Brm)]kh3e^ie5t8!1<#ES=LuCRG=LFnbGA/d=[VLI/n:I`]:7SX2roO_7\410,g]PLrO#DS.Sqh-P%]/:Fq0$.S]>oThcB#[%63Q4B1J]k-*ok3brIo?"X.Uu(Fa::C3E'6SjB]u5)r%((]"mW'DK&q5+j+SAG4W9dmd@B3@lMf$LBWp!^jqtqe/[h(T>:VDLk&`]%TfA-QKfk%Ec]MaoL\3V;5;srmbjH_CR@u1cKQuPGF'`e)dOFU2HU:r\*kjt]%?2TNTWr=35?Kj.$TpQ_G*isKdPq.Sil/[)`"I<,%;0UepKQuQ@P#a.)(D_R)QXG_c>rGJ7U2-@$3L('+,r&VR%:8II\oMXdS@*c&!ajMlY=9!]\Z``&eg<W\n(0i17ZQ%t9^qUb@Z):+%9Yk'^Zo$;8E5aH$@Tt)K3Q6,S0a&&)RY*kILDd>(#U71`2_6]Y!4E]-K>2kh-77Jsg-nTp0>$k-8HF<F#9-;.@?gkq6WtkDlG1r?%ZWr$We`H30Dt2hM!k!.=hb\TWZ[*Z,%B0MXrQ8%>Rf9/uTI,Vu67tXqjn(A9RFOT!;H+]IfAf?#b<_>N)O7!W,%XmUDG/M*R*'En%'J*+D+*?Fc0d<se;]nKj"I1dR^.[g<<MZQdJr+4PY1+1g05*TC1h7;8kBT_gB,<53[Y.]qKGXD@l+b2<@[W.qi3IfLN=P9#XK?,+%L2PNQnGp@t1to(l@Jfkhqc<:G`^F@Wm4@>oHCih:gmIS/),[?<MmLKU<+QdAC/Xn7[lB1%6A[@G(<<?08Hr<\P6!c,\:mSO,\WHN%N4ubQO?YC/8d0GAHhR49<mP&UMG!7%;C$U"Fe]i.q5:a0c\UA`PqoI7qoCGSb![C'5]B&fW,-9(-&]Dd,4V%R^@jYlm\TS=eL*1B%RX?`0rhDC%:?5P_A8&I-l30CQ%AYLe\=+"2+6]HUT*'#oN`T"QgX32b2B@h@o6fZ:c&ia'\0&>sXtnX@Mo?TgMU"n8+JEd'HZ/FJ%I"4OF5,\P/^(ma?Cf')n4i;;1=-9NqlfW=!^mSp>4Gna"#GO2n,*S]5]DNZDmofU)j9HE1)\H8:#?Fbh\R"Q)_3X';c"BE(HjPp#%TK7$ClpXQWVuW0"MI"\%eeF>A[T(rGF:/5S;RaZUNo$d;1DcVF"gtN15u:F9h@q9&6)2Z!@W5:;VFP2Y4>jj1\8cY6(!O"A"d?ai%[qqN"MT`fL7g^f*pH8sl8.O_KG**j^l0ubt$>3f;44p?LW3;lsab489e8/(7H,bR8ZFfO/!`BqC,?MSaPNp83of/sVpHZ57gtpCg%S5(CpD"=F30;-Ec<0$99"*#llX0^4:T=2k>7E4Yui1C1<_fCmB&h'BUlP8iQ\HNC+cRO]jOnQ:b&2cgt>ek*O('6>n\[l(<YSBlR%cF`DTo.jHP\lMnjL[pA?!LC<H>[>b>MkM$Q7lMN2qY57_U1f,$`BWi5C?K;>5KD4SJO]=fdZCoM2=:1$-AUPpOe^P/6A6/)D'[2d%<96;T."K*:>Bd1/j,,/JrHUGM7]W,dU.3%kX3p)H:f8$"#bFi,Bn3#_75SR;6;;%BfW5WJrtj.g7s@#XJ]$[._A&5oS8$Co9U0`C%Z:PEe_:c&Ke=IQ6)qI>@m4]3$R9ZS!+chI&3sP!mSK__P6'9RU`gFLmI\EN"$KQ#I?nF0J**&m^-@URLVgdi$WpkJuAU_C41$>UL%=&.]A@[/)Ab9E\Y(Hbl3,g01rKJ>9P8KWCcj54'$Rs9n`^d2>[hG<QA0RbjK_T:6p/<r^n)6(jMY'q8[q%jC5<fPO:hYMgY[cAin%a(L*DYu`;uc0X%a/k9C,hk8dn;XWjR5\>6lH$fYG3S]TENk++"r;?J+Ja"<6h#os:V]_mTYs;%_$@+:?-hRh<"?M4T`@ITC>Q$f1%3q$C<88#TT(CB3@+(?^rc"qt1=stKR./2^FoiK?0jY>Fb!V9/._G/.p,B/m$5'M0@1__>L?Xl:;"JhBS'/3-spd!^e$-c$>3o3$:%'q*>ANN?EuoU@:")R/(f?8k0]c0Y+gX/RPeI4O4?=^O-X>(2?X'e"&FA?l[`0@_a1h!3C("=XrpSj[^S*oS,5AoI*tpepfb:ubW`%Yma=gK\rkBd,^%fJ^WBRrm>&I^RrF?%J0I6W%h-'HU'i5g%HB<@ahrF'@fZ]nI.?m+=h(;)][EEZ9E8&.[g0dXe%V0e%E.\%.?"r%;nYX1S=*Sia&ENc5'\TLrM(.<T.#_RjRps7_l(]C*4Q:FCY0,/o];pEO^]&sI\++Jr<%?6TgX9<Iu(4h^Z3DN]/=fF^'6dJPInWb%Si&"QGHLB;V*E9?11_J>$TXeQoRc0#G97U2LCe)SgNjkV+6:@]=t*akQ96[:BHX4%4pM2h*n@<1R@*>n9p$(MF>AO9X'(7F>)5.+%8`6+CPP]r?_69O8Ya*Xo$./*'T]+-Ea6#adr9K^oqdXM9T7P&tRQ608XHBAJAgSTH!6ioH1Jr0W'%*!u=e:gB%]]`nM2*q`RV/%K%5UP*Lr-DU]aI=i,?KhV^-N25@<QU0=[*?O&HUV[b\bEsAI_D+@nlYhQLN;hSrkbHcj1aS"nT,T3Q<3+ho_Q!tM?<FqZV5\X]8>`N%+'mWU2^C]@1Z%LA):%an'e1!p.FJA,PWbX,>f]I?&#Jl]B9C!R4i3X\s"H*U(8(,n10J0<!C6ub#XD:B.@rVUSBhS*"X(H"52s^q%-]\r?F%??UI)F;D;ZYDS[R*\#+<acBdQU\BAMeH<Co2_j.&Zl-(it8(E!]iA>^C!iQo9\$,7BaX"?&5<3L+%HQ_!HJMotj)5fthK%_I5nO(6cjIes6@B3]9nfOPprTBfZS=@1Rp$#++^6gd2WtIn7ql;AEr@?Gg5NW6cCFGO)W%*s0,BA=WMH@F@_e>10Gl2JO9&)A;E)%Q?4fc4pT'up3n&7er@#\f"joY'$I?qLH4j_7:1n-5*5^3jq&\:)67UtOMbNh32VRi0K?U(\jRX*o)s^M%G1]W?%R<sR'FWr"Bb:X%9hiZD2tMn6:>c,4<kk,H9s_(+"$bN1g+<A0c';L4DrqfkHJ[3aLh[(<C*9.,Gi-p!KsTp4(*%gZ(#8^9Yd>%b;)2WE.oTT]Tu="C%@,kBa5fP]LcF2eR5V]b._1:%IFi_eEE.NC7MnGM1n]2=&"ho$gR^;-%`RJok>.?Pi),)qnjH:>1CDBaEQmPL0b;(&lco`h[cOJ/>%F+^P:D%U+6Q]5f+dV\u\93Sm\FJEe+je\+J=4s9Xs/G.+fn_""8'iuqO"+H9WS'f/D\<WOTnuXrX6)guWe>aZ4\P+.JdFghe'I$1%#UCjsmZVCgPP[NhoD%Pi?coe4`)KpcS!>hcK2>hZaN,lu36<=e<o^_h^0qj;YM#52RNhPEmJSp3^#sR53/B\<mu&cM+(b>;>E_S"%AdX't!BF8*;t443K/0Q6ls93b,:aBb97<pL+=kbb*R</"]").W%lU/[Ej'F(lq>dlrF?)1f(S`$4Bu[7c5:4m8q-L`07@Wdq)&@/%)tTSI)mO>=#N&!]Sf-Js$Yuo?XAg3fj=k)>_"3"(KlPiDg]R.Mj=NtER""MoFfI)1.I%F5m;dIOk]7PHCV$b;;XY]D:",PfPTA7d%@e\*[6.Iia/Z!'%hE),.eRDOHqM5PFU<O\$FuAXU`m]LLk-*hbqAc$ReGG9XocS[sbuW^H#NnsE\=8a/4?@2"Luc\&R9MMoO8#Hc%H<J#O\clk\]Iq,;Worpk?!+l$H\!aq^sm!EP3agL*6"sn6.j8<&NXSifFDsR*>[./rKiisNEGt&p,$3COf`BN)W_!<8.EWh+Ltj+%[&[*<^_!?I?5O,9a'))<6`-Jf::$_N)aGn4Or/HGc]V+0aLJYi51@Pr4,>=5Z(kY8)bUP,iDn=Kj.E8QX5@DP*j1_Icd.s:b@ccm%BM#Y1OdloeGRgI)gEYTf6>e@Mh">+Zh4b`_ZUqr5&)?J_C1X9ITd>0.aN*p"Zf5JTm&E2=hb9:7qXK'fKgnW8[VQXKqDU-p>IYN^%`<ekM/ZfmH.uD1,=%duP4U]'f0fPnG70Y^TJ^/=sXoOLaLn:ZOWcFFs@c'X9Q[LU;.Zq62P%;A).kbF`SEt/`0QL`DS+;!ae;,gt%`hj0+bX*Vk;W/#B%p3:+L<:<PQ1sQNFfk3jr3k[`C^@EkZ;lhhL.YSB0?-^U10c#.^I+.`(GUOga\SLH6'D-;W0!JR`m!ku,[nC3%OAc"jb0O>7ONNSZ;-:t9_9]GnQ<&B_11,YI&iT=4q\Zu8I1gPa#9+p`A)BXIQU*P,*-37Pa?AHFa4koaM-9X7-p.mcrpq2TZpNPT%iC]Ur?V^t5DPt%[QIp?ah.Na,Qff"A$r]uY>Uj%JqhPo6?4<BU(p\1^-kJ\9g"E8MgGmH74+FXa#E=p78%r!5%n?OF7"ko5!tPc'%X'<_-g3AC2%3@*?M%Q.#D1%%ZR`p7%c)/<^^Kn:b_sY6>1h/?4lY(TpI+nC==_O5n1u[&CB+2(`LSKeF-Pd=MC1?[(fL]J=6jW(+%O9B[:$1^Zph)1ffLF4#*f[EO1&#j:%P<CQ`(l/ObnbohE'pj1-lU6=6HX9G]#V2iT'Ec;oQ3E+bqM?]uT_NQ,o/1R4?H=kKgV?d[%__&D%$JELA%?[PFgp&!bh+p_hbP=>9PPZ>tn#^kuo_>"5LUAeuF#ln'XlNNsWtuZ;E+D3!&o)G.=7+_nQlU77.TGn`ngpM4OJ\Ds%0d+_H(AtdfO'SSC#c-sJRQWU,$jF;mnrTP"U#_;7fc*m#pfUiYZ*Ass@Pk@_r%ng[,EMe^B04iNJeC9A+D@KXC[Va`/]P\/SL=hW%p$biN3Kj$83Bc<u'eM;=5^G=!m5^[sDbM)/Jtl9Zh+o9Be=t/$G1_\@YK]Ks2Hl0S/QQ0CARH_D8p<'/l^20qF4)C$):MkV[K>J0%9+N017`!2R&GZfEo\*`HW/i==F6ZY.(7;iK'hN5*0/K_<DhQ[N-Jr>UX*.DR1F7cM`XO&;cM,[`bR.-2:p+9Wri3D[mX2Ml?q<]T%q_d?QO/asSNU:_eLF04I">p319jWr0=(C(pRF?C>!ML5>Ys\$]?HK;)nbuC(_p*K>o(hPjaHc/8DY4lP>-#cVS"0Vd],+?c-IP%N%AuSE#<3ook]2e7tOP7pRCWTm"%hjW((;Gk*!/PKX7D%i2A;:c1j2"8h]5F5pmpL:[K=TV?_STu5)Pa,;kDNDh*C]A\Wit=Dn=%nV%.kWb#B5fi7SS<G',\.%rhgZK=&._7V"0IO.38sk,eW8QY'>/HEhp4Zpg$sAmg3ku#-!Sp3S6.J0RFZ/dLDSCTnR24UB@cD<d#eWs%=2S=U,RHrc_#6u!)d>/VZYkOL[#k_.:&l-aNc.5oSF.m?_\,%2`\MOD5Mo]+R)ojs_/mjr;4l[bjNI9`gSN/J>f0W>M+LBq0-;X3%"GVom[8N2?HV<KZ7T![kK8[YKKTfFW(URRP6s6+M6FqFJ1?!(U=L8++YT34=A)n3IOeSfZZng`*.t\TaHM?9g#B/APcdLGs'\]--%-5V!OiU(71-4*Lu9ci*A[%$0.79e0b-Y9pT!_L>-f[m#([hgg.KoN)P1tn"2KVb0d';%cQmqR17_gQQFkRE<Emt7(AnZ7Oq:G"X,%=g*R,=On.QPZE%(NK>S[f#)i$^fkj"GS#_trTb<2efo992Pq\Wq:U'J"SFkd\FlLHUlqa[#E<3RP4mHoKLErBJ@"b/-92HiX8(Cm%Mm891I0YDMY3XV.KT,"$XHjWn:/;`^CK\&i?*n52m,W>l0%YV]P<57KLWe7(OSajWI_A5*VOI+f,\VmG4rlUWcpjG7I4mkMX<i7S%K%5DVQL+d[dpKAIj>XiC62Jm7W]lQs1tP=?/@'VZ4%sBIL3JkO%U7H[6:VmZ,dY.$;X+4`^M[F_9('++F[M(?%h%$iIt&Ci!<)^8%C`0U!^j_L4.)XU8/aQT8,kgCSN/k`>728?2;.X.F.er`1M&<.TlOW<g02$=RGgg')-Kh6L<km;rTrK*n,K,"$;]"nmk/'b!/efof%<o_AHRiLJp4slEY6Id""16RfYMe'&8&n;<G%l%NC0p71,lqk9c`7TT/DCtl8/Rmf9Gs=D2QW@8:9")qm]7;!qO%Wr$VXZ/U1QNmB%[S(*[Oh2dGA>Z6J)".'fK:j9I[66`MV.a9i#S0R@":@nrI5J_pW\(j(oq\#<nm8oBO$urTGMgs"YZqj:Z*k"%4G)V')/JNr/D&El%>9W(f"mD\:;quB(3?Z9:8":u56$mmGNi`AY*tj7_bIAe<F6)Ejfa0iLk%7Tu.Ehk*,j)>*RNKu4:c&`IreYa+)Ju,08O,W=2N-7f%eRG3!qqGLen@(9H(!HdLOQ^Hle[E2Y1N*04+eeE=-AU`Oo]qlqicZplb#G4dhVCklJj+lHLlm<8/pTJa=n^%R3BZ64j,0Y1[JZ,p%<Mi2VcL+J!1i(mOQ,V24faJaqJF%)A<s9ao9d?Q,Xe=@uf5i2CQ<Xucb$fdmYEfPQ'MHqXh*'ABRW[21IK(d!+?]shY2.XRSI[S>%;L^eRXN&()/WNXUPc1p])H2s_+=)T!4$FX8F<p)5FIXnuo9sLd2+;qJ+-LksYADX+j``7G%cG.%%g6:KHs%XKHk@gZ8CI'M2'`i8%LiU/?@L5O!jN8-eKso>)8'$J2Kqnsis6Cn]^QBElQd9`6$#KCk^Hrh]e@%:6,q[QT@eIYQ%]sa3C"d,hJ<HB"Srn.Z<&u]f+KOVX%5#^jocLo^VdW,GUE`iCIJIB-f99tdM]Y3W1^)FkWqXQLfghsHKI3n@^?hTa&OX3=H((0U5bu!$ba;PS8[Oo`kRnbj_[i9Zb_uH6e%h,!<nE[f]\?rEI8Q9uIO+ca]noT33`lKeX^l#NORC]bS$,DTifShqXu$Gi1dNY1$+MTVPU08&M%qE_1*0Xde>Y\[usZT`4W%.+dn%..UGu)+WfK@6<P;,L$:bg,dGK)D%ebfo5X;@tik*-'ocBT7DnN]>/=[Fc89AijEcJ..MmkZ#+H%(TrTO,'1E8ip126QFG2mG$GID%;J`XUMu3Ri#.EjM?97iH^t"[5^^+^jmRABfBI6AfkHrlrb!;TsA/,KX9>[<Vp]A'g`jd@"<R9h)l?98*V_aEIb/<`8q00G+F8[f2%qNt2XZT`N[/k2Yu(g+[gFc'g:m`+kPi8K/5VWBD8]C!*:FN(YN6dTWa)#:Rs)rq06;:[Nn@FLiLQ7b3I,-P#YI+EQ:&<a+HjF\X'%#V"3%4#._2FR'u>$C'U+YSDGfarBs#rMel_m*q6"QR=CQIeRVg@=hkr]S[o?r@pV1@r*ce+SpDD5KjSilD,S3KpQ]70'Y<Lf3loa%k`;+mG&*t9KJZL!=cAYAGFIED*)mG$Bttu'WL>7j>lTn[\p[E1/!REPon5M7`@N!rb!%5$]G;S)jO'bRBl&"KOTTPh%8T:QMFD>T%[DPRo))^.s"hln\NL+pf%a2J54UJYhfd5%F0KOrRVk6P2\8L1*[jJ4$XaY10Ls=7CTE(:q(p/-C5Tk">Cp<^@k*Xp?e%mI<8$:-6%(WorBRaG;.Vf^&=`h4[FZZD1OGok(DnC8#J7'Fk@(tJ%qerQfb58b6Qkk?XsKs;a57ii(/0dc.\(b9)[:AT_N1DZWXje\i@_:T=h%g^\N!L0YGkNb^Pg"_[dOPk3Ln%1ntX2lj!mDI]]#40R#+JoHX%^=La:=sRj4?XiM?k=T;oD7/[Wa%7a41,S@gd[de5maaMUZAcWQ%520GZMO$bW,5p$a4Y3BRlgN5Se1acCkQK&8+J\"#W72oC]g(+,(%65plY'U:3kF3!e_dg)4.7f)!@=-eZU3Su^V<JPJ[c&V+2X3]%$ANgD/p.'j2cBp%cS2*+=29U'AD_nPRL2Yg_B:4XMZR%4NL<U+A_8V08un^b#HJ7L3\kJ*\f\J7/0YQ#f[QZtfblkZ"VDR\*_X6A%0-mu52kS_'>Of;r?C9+S7X-=7O;YQ$;e5.JT(t+)`_$Gr;7"3iL\LU)(U+X\%/0bTX>l23jE%gsTsO=p_LiR7]W%A`:PK?$kP>)r%.1!_W*B6G)U0_+XMeYCJG!=/I#ilK:an2Du',#dP(&%D7PdZ^LaN.:Bh_)mepdlN+q(,hXePGbVU8UU"EKUjbA@#G<8E$$+#EbkJ%/c]0T<M;*,9:PQnRd[6PUEC-:Se9R9`>)LgQmQAtAu!uN=spgdqfo4h?f!U^gdR#1"IcCe,l.ZUe`@:>MAKh6`h.3rS"(IVZ/BhR%&NMPjHKIZe9ZZI[ZZet?Rd6\P$DSO`WJDjCS`Qt>9U^9FN:-P/+T\-=;V_uI)Qs<4,rcNG>fD\AJ'A&%g%FVj4oTIS,)`*%=UL:#%D=4"\X^%2QGorh:6LISM$T*)GYhs2>']"K2ZMZ!tJ%Q2%PK(e!@f@]*T0pio#1hiU\dEiUd(js0/4`;j0+t<@Gnuj3;32+Pq5dJ"%YJ,\nRr!8:NM2hH0fS@tGnXigL%O]2h:Bf@0S.)HEuL/b\#gtFij9*C0J<%7W4Q!:X"6bZ^MpNMC=de1_Sp]&9ueU_.S;lf*+BL<%E@t<ra1-8]$5S[Qpk=K?\k>=9)._4'AQ&Q?5:TRc])5=u[O08%<qgY-Sr2<#FG;OHKir:L4%7VS7rhUbrKGUU(_-ABHa3Jk0BY/Z%d^#Ut]W*PsMnA\EX%Ce&&=5:Mc9S0Y\]eA%N4'mD].J(;ij14![i+g6C4$tu(2.WbCi130R0GoKmlE'D<O8M*>JJ!gB+slKbQ`11%D2Zu6/X&;CZZ/Tl,SC@:<5YgKJ4B,(p`gp+Aj28?Z8HfT%j[$bc$W>\947MTHBi%/+V9CldE";^=s<-V?UVWjS]fn?AFGXFR@3'n%F7HsPDBU[o`@IJtU[=/D.K^G6Cqo:j!=bu4f_9/L=CsnEk&J0T(nD9Hl'\PLpdT#U_oTP0*\;T,QqYKUg`PKVaRngpqtQ8qg-$d(%;579orlA[obYX/Z>jQ$5ZA-TAM9umkg1sd<=FP'sS@bZ@3+pKR2At@5K>jJW_9?hMoo`S]-+(/Kb_nIi\=Sae2QJjhE0jfCD.Tg-%4LS"*5'cr[OY,0;<R#A*j)Xq]^2Zo8iT=C)QL0pNgf:2=8EQY6iVd4b53I/2NKfq#SsqU.l_J(?mW#PPWNA=A("jNN^3:*`ZLP>L%O=sp\?;fJbVR!mJmtQo"8<^&Vh]7KZ)(/4*SIJ4kAC$AJ+Z6b$[`[8$i11ADZgSXXSBR')Yt\'s:@2;Rr/KEircNT5]qK\`R3VmZ%ZfD0PAf7!*`jb->U5t<Hr6L!\FQMoMX-'DopJ0Mf+a>2n&]l5`Fj"X+YG^,0c%;U,`:;W#[=TmVrYe6e)mYYeckk$N*<%BUZec(,%HRt<-PERLs!bQ$`Z#pXD@2sH-3!o/0_.?4\0+%7r__dNmr2j?ulN6GZ-NVf<6`g_XOlEJcNj%HN^_&b`S3\<5-uN2ZU-KJp2PP+Q%W?m(f\e=1dOr;I@3Ptm9O^6V`jHQ??6F'i%$$jf-Ah^RI;>g5d:d0ITQj!Yn=rIA_`=-@5RAi,6&iM:=+j3H@4#Jd2*`:_"?%eqb%eP:<OQBCMj9ia/kW%C#E6cU[<1u'X2Os+^0VC^hmBbTc\m]dK8g3<(>)#j\FXqY(/fJoJ"kf,HR4[3INMC44-7sVdtdj5WU^GS@a%ebiT=HE;#!m+)M'@K.eZ2MnN(*nDX:$009dAs/]*4hWflWmr(nnZpS,.GHBD[&]FfX]UkC"-@Bmrlh4B9lbd>Vj#*8F/bR[V)rkq%8WR1%h:!2ETZC7a7Bpp'ouP*DB%]f"o)8iKb(s+P@K2Z^np27l"0/UuOUQqA]]Q&h+D5KS-R0otQt(o\)!2R,MK73s&8"T7gjNrJ%14TU]X$W`h9"Q*jq2QLkDBK7pH;GV6Q(TQj,:k,a9o1&o;KrkSTi%jj3E+;/[^U[eA=IN][9#FF)>\JbTOk'45NgkG.1[.*NTCjU%TMD&@m7KNud3B7'`I#oXaN;u15T;RnDD:650a:q+Jr,m[H;J*D%ZkFt2-*RW`^8,GkB+mjdm9:WHq).N'B*us(ZPSg)PE3"NZ/.\%Gl[3@fr)Lg"_,!f]iKjjo.g0RFGQoe4kmuVWYsm`,Si$de/LRYLS@kD!XD$cTo0rWJr2K\G5g2s]=pB2[p<dg;qE=*/,>SDP'$B<%cc.@t/"2:ij-$?2mRs]^qd:W"\5oesVF<m%j2[SE._3@YW#;d-8!,jH7Mh2\,r\<(Zn&9@Cbj*(&[HJ"2q,6!RS0X@YhRZr)#YB]%H?ML:-qM9lYZ@l!;G<)Uid$sTX@A&rO*uFN_7m1&3<_C%Q^;c%%O$3RgQPMjB=`$Mh]fg0S,W=@/XAJU#),6UEr)m&cf"&C`18pK%rGiGT[Jmho(:^YjCn:@F89"]0)+X(Y*2&Sj`Mul2NX0`kHcBoVTLQ-V%]j4#gA9Dd_X`,;+f(H_=B.Uq?@<o&E8,WRo4S92o<9k1%H>V7(p+B#M]d_3rIU$+`;l-0J7lS+ET'o!,&4d)UpI/5QAR*Q-(6TpPjVbB86P@N_\X86o3@f.91s86Fodoh;7/,YX8d0b3^(WIT%f+d=7j;:..cW9[g6]@Jo]+sN\`d?b^lU&0#6Nu>@AR,Z!rEJ&VBHnC4,W8%D'LHa7G@EfUKc1`Kna&7G(h>7r-?'G/Yam<',GM3o%Q>j[u$6^dr&E)ZF$"P6X8:$RBh-ft!>+AfS-1@[8_XbEn]O`oQI*S"7/(%`V+Va#r8+La2)'$G%i*QXJcr@eWqeSj+"B(DMi,$Qg%`altF0Y1`YqC_&1(EG>X&;ktfBfMtm]BW<U6S,4F0=Q"Kj-+<b!X>939ih-?f0"m3b'5t?F)Gk[]ZESN8+t@)f'D[/C0#1Y_P*t`%gZa5M=>PQp'o;Z7A<R!idf1p46Ir)NEmi]2J:n?/kk413.?4o#%2#0mc58&d*6ge&[`1DT"f[>/c0F@>@#7"7l6*7=mY0)"oU0Je%lD9N8Aj/Y6'a=!lH1j1;VDl@0%XY/mrJ2A?cC`Gq*OZmH7OHS#OT)JM*:!YVn*R_iBV0kCT8*u7?PT4C;51QrPKGo]=3>e5E5qS?%er5iuFg0qEV<$WJ_5L?V3hIOd>mdf5XCr'SKpY-b?SQ^CG/.f,C7*WB1:[CK%H$7sLp/7^,f]sc\)SVkj,^2cStSR&aP`JdR^bad%qEne!&>IC52VgeXZQ4NGNuCggHk8;JEmUhK6#Y'79a*B\h+[`Z);'4!$OJ(KcPb:/&3%!2hcdFNlg\$ZUPLkn0`#uT&8TkrDRU?A%p[fCd='*s/CY7MO_%$\ci"V:@+28Z9c$5ElP.`VoV;;`[j9m><ZSjk!ouo#*9dn*+o$<?J(sr;K?cTiN;F,*GU[N$MUb9@7M'D*X%hPl`3+FP\k*"pTO)M:ec+jT60[FE[d\)c?I@W*G!6gf5'!J^_OF1H.RHC`Bn[9[b4KQ;]#\pA^,@`q[%AGUfL^a9kIIkY2N>Vscl%=adgO2a%8^aT2:.@PH(&JddNH?PdanQAi"/RQ'ues8:7o(u0^jgBT_ZrtY`LBr#1$SbA.u&dLOu^[QGE`IbG?][%j<(3j!C$A[)o%FcO&uJg.h$Y$78b"LjkS.WI$fF"YCFK]?)LgR(Wf\q_;:+Q18867(IR?+>e]r`#Nm&PH8kh$#iA.iOJL=oT#G6cu)^b+[[`Xf@g6%'+SP'd?D(><,=*C3N]gD0e,^:;`W.*.g4EG368P/Y0r?SFA%rWhdZ=Im,]g5cIAW+Jku4T$O[!gK7ron&k4\>3G13&.DUbTblX"_%LbZ9d2,`[$.94<2,$#1G&56&H-,IG<:8B#5U.51%Qlb<(O'<g$#K]`>8A!%7ie(@DGIUU?eSjTQ=dNgl-8)B6.oPhD)FXs05`p;[%pL"<4(:hT.-;>a9f8(7CLoKRV##=IP9&dNW#>QSEYkGSank;or;4O(%eG!n$R($V:\D3/[g64DLm?T6IW9Q'ej!#&Y`5f7C*'>G?%h_`4bf6t.t%"Yc`DLDRUBGDN!;scU\KRsa;&Wi@>8"[,oNo<1aaf/_VjDH3hO"7i&A>"j%b9+0'>?c=dOE0#rn/1`h*!36uZ5O6E%`l4X!FI63*7*.3I5Y<osj.99@d\n#F"@o?0!Z@CN9WeaG2&!9n6<+poeOf$;WW4S_..:.=`(0raj2bl/NB$j=mUd*OiF(5#P:?'i%%4.7b$#DZ2D_?JG%WmJK3Ja352AF_bk"0%)g24D#gcJ#Olc7jQ$Eq[0TB-g-m_!g,$lP3]*mDh7@SIjiZHGlp91omeehj.K@kNs!%3_i-JClrT&+J>*aJb:@+EGPs!e&tY%_@B$h\AfNKX%pE\r!Y-Q&PRc<`<Nc2QitAkf]F",hZt_l;KWeugHRg!Yj*b&))]1?c*us"%7G0?[B!c@2b]4>j4+]Rh]Zp8Ea./^=G#JH1MFj@F*h:ioV*NsN48g=J+!^7t"hl+%'+$('S"?R\->R<d%74n7;a)8N;,`%1Z*]kI%qJ*^&NuC"UB<dHf=J\q#)!mZr*C:IO<_0'>,H8dF."u@V\?:^g41aR6-#V2XIM@86;f7f;4f#'Mi5lSj"J:CS+S?B<JE"9oAlDZn%3fmcQ\h^ob'e2#\H7C9Enb"`u_Z@V?@C4=WoK":6/02HfEUBe/2PoKV0o>tpVT>`VWe!]%k#8g6<,%O;o/5;q_HhK3_/j:ji/Pk\%[Ug2TE_!p2?6,K:k[bmg@BKk:R,F=<m&<G]IUdM_d>XS7.BRPn*o59&LSSBi%+;^$.W0?jhst-tHYDc,0W%CkV=Hp2W2lMe7@,jj%mR/\hp\j,s]s<W#;B<E@=ht\_qdpFWpStVo;_DE21kME.Q0P'lJ3u<f36e&%KhH="V2FBAqFM>imdma7:T:r6$&WV4GHi8[1q"HC%AI!NsIT]Q/,5%jI!.mKeb\>\=.Eq.@Ut;dq0S7)=gP'<KCtjki=LOg3,fVI)#iB_TkMgsWM%DJ6Q5SF%e2)fO^k!TIQp(h6`1[cW%U`Mlc\NIdq=*#-b.Yg8[Y(&jB7Kc%(`HHsB/k+VgP],M\,$#*((DTRJT5%<[Bd]g\$WG/D=>b&ZBUFRDS:s5<5+0%N"(jGQ>aK3,%?ArcNl,'Z7:W:Km,tL^@h8mMoe(-B)iR1Xee,u#`VMCRZ054LNM=J)Y9kQ>oh?[']/F>&o?VA*fCOO3/H1/2A0ZW!Nb,UT_!RYcK%iOR:UoWX`=aFT:`jI(>Pg6[5,VMeMCa6M*a$7.\Uah>Ej`W%@@H8lQ/cj37l^nZ.o4hHg+16QkHCa(lF#cl.-I%r^u6jE@AM/qn!%4GlW/-f<$N)?tdh'Ol)0=JP2C"[\AQaNRC$XEUuV*G/EtBk@QABK.gq0>[YZ-,tAQl.7]>_;JdlX:@1<MN7a!@Zi?4P3#Pul9pRM%2'.E]Ibldk8=[nhFML[Mmg((t5FV-;C(c>:aI.k/fFjZ<l9cdO3-cSkU\\V%j]c,`h45+GVW@G/N)XCD;N`uN+p)QUXD,PV$#,NT%Z)Et?d@"#2$8i,OJ0n/kApZ?E+Caqs)&.\H"O.\W'uAS&UMo/Y=i+8c#fn7p<Ip#e#agG`\Z(#s<:6GlQ#Sr#QM2tBW[pAj69<6/%Q'WSKI3kpF$:&%>"8,`mI\f$iJ@gf5Mmuq.aoY0<.<>;=RW&=U/OMe"H4WnB8C!+Wna!V0GDNK%48Mh*m<C:crB5ugBr4Wk5s*jp%UsHF%$RF#^,2=S"!tg#3D6MWqo4gPk/NFdP<WTWrYUnZj<TLiN0T"%n14Ch\"NGK0#"/Ml?tY&>8mjnd+CeR-DT%'Dj>S]7O_P44%%%jr$7ZF8#R4jY?.Zh6W7ZMLb2;mmf)08bFjAW:l$8!3<C?#Fl/Qb\[^Dm([.qlfKO.ufmJ0%-L^M^T4BIo(`VMH8O@d"rT+*of.%E?;_"TE=5HP]'4..4AcFG_sb=W5jFD@]`6X$?1Wk<]#`I2u[E?m"6aQORrSd6`;q,A04YnlA!OV`_d;'7T[_/`>oRs"=">Cf@:'R%Sg)PZ)ttc9#.2<;f7a;EF*Zsl%s?U1<q2)mhpBL\H4"H3/K@(,D,Bed>QJ(`i'/kG,hSTtp,TSVG>d`1_Zj*SOGS&Z&A^WoCc6%0%A3k^KcF%>k,+obe?1.IoJkD8o;-sibksX8ia@!CcDAN3#2m]mR-3:#j95u#Yac^]H&@A7X1*fl7fcM4TOpJUe0MKR3?`[_BEo`<E%#H=I4]kP9XLd8iFVZbF^R=;KK&VUJZC64Mm!2R]T!eG+)E(EM+^$!%G`8%Z`&`3_Le7Z#,EW`41^^^+-H@u>\^BW&_)h<8+ZKiVh%@Z"=Xmt'[2Ka,*pKf^QD1"6C-R&uYj++Sl#'%)>1+VIo%T>c>:57.DC&6O#c"A&$OgM/IN[HH+n$^28T?,$]A$&B^)qfP4Y+c!/S%*kCa%e<ToR_6aN3i6[rPE]D!4)gRmfa9A:WMWd$`O:X5>#S6!IIT?PQDB)On9GX1L7/`,J&L';OH;V*W'#:-3F"($^#AZchqSY*n%FKRM)EM?\T1H5D#+G,!hI6uqcGWFj?U>KA1cXg:Pi.35Je3(PL+\-UB'dtK3cC^>7Q2qt0W+IsY4WAGCEJD3.fZKY:lp<K3mNI7+%cFBtIYsi@\614g(ncK:'8jJ\N\9i%_>8&gJZI+CQ@mV77WE\o!/gm_C4>)[3_`tpn%45sk4r.S.SNgNeq1QYRo*Q#kBD"P/ZF1i#%]_Y<3G86q"9jWpB#l092PIT>?MbS*EPR%Ik==,9gQfJG5G!]FX=VO75,Q^57$M-)U;NF*RU/,mj^;U=V*;#D&-8%DQ4E=Ul*.lcJ%!Y<PDpbBVon?B^bK:mq+r-@6=;C<iM4qjCWa%d\*"?Jou+QpR4K5Xc7?9i&#JCFY4cg2"4%MWV$br&Gqk"c==M?'2<-N'reN;KK2%aiVHE85s0fN;>?Olu0FVJTVb"bqLBd/eT(T(5>,*7aXJ3L3]S.`W!LS@F]*K0md/`'P1-\;ueGP9&(a\("P?gk<u]'7oI.Z_$S2O%I;l`MWs,QO7bSAr.Ba$`q_4$q7U`ASG2*iEN[p_1'KgoM[-&'Q'`MW6`ItobfS%e@rt1k<N,+YSY_f5mHK3dhC`*Ms1$ZTu^Uhen%T+MPmg2Y5&rqY7R<E:IP2orpV-<=tb*baaH`gm\q8F6+F<X`9<8=E!>*\W8=OjaEPVW]q-0ou(8I;g^!]TH?qPE!-e'gX5YAH^W@%A10V-/>)6f2u&e9>5fql_;d[V=2\M^$kl]s15ko2ZP!t%^2ZOAkWAC98`Uq3H^n[/[IQ7DKPA`E%at3Ll<N8N!ApW4<s5\amnSI^%#aA%J.+TqPA=aeo*:Soj%Rpp\`E2*'h0'PY=HN!HWh-$'M],enC5*Uh'M+SBPmlq?fZU"h6o:r*^`aJd.QM5>#l^RDROPER3\DPC%C^RNh5.HLM#m\E3p]OE3_*6]t6#p676Si%/MQ;rg&qg^PY`"]J)BJAK+=8\V&-_50J8T-7CtDPFa0Q!e_(C4"GWHuN.7QT-?('!2%b2Mf/,Mr\81dY2Z-;&Xed!JS;jKk*PR+MK&4bQ-)>e!KO6@m3N!7fX!?n;XSUSW7@Ju'1.E/JG7HLp3/KZ"gs#RT"VSXc).GGC48%<UYPX;1oW=!,H,4,0^jUjBL5fnoG[CKGYU-5(ZnIHO@lh0h(P23YO&tD<hEEZV]T@%TGe7$IAVu.!dB'A/OR(BdSsoN5l*q>_#q6%K>urHhrk/N?LI1%b)ndV63:WG(P@;4]JH9Q+?angjk-T;)r0PlAD4.c87`dtC4mU9]piO"0JR&M;Q,VnIKMb^LYT,p>EJ^D1:tDN%LqQf&gkX+QS]-"Fg6oX])p\t4mV9)hm[t)UDcX9<'.O.oi'c!o9dn=R(+0!7jQ-'25j5Z&Yr^?h_#Ok701VUpi$Y7JQYTl$f\9`1%QEhrbZLuGa`5NYUPZ(,!LW[N0Dr4H>#eLJS]bo707gtDS<DD7@UkX>^Se;f7iE=F0l_DlJpFqAH$#q.e<79_^+l6(AA.!l4_k="D%-0(.t171\%BseDN2HUA^ABRO0aI@oe[W(_4F,AsWRSt$G?;6ChNqn4'D9DTBKaN]TYN^?@d+I<C.mo!N9KIbD,3H!S[L+G,,I3UW%WT%C.S53L"f2EHC1U@-*:'&P2B#3c'GO@t^*+H8r]XZ((7BUH+VLf_\FC3IOj3l'(?M3OmjT/DH^Er4p7+gN+\O_=->eVB$_14QB%aPk9&LECf=m$;ehG`b?PTM#urQ9lH;[U$`Tl8Bq;'p".5*UL<J[V?3GQ9g0pl-"RoM?:WO0`m%5pn5i3MEKCa/d!fgT,t3f`4i&,%XAM34ONEcjDcB5^A-h`K!#2)X,uiq4B,2-AbplN]7OE-UkYUskl`E]k/_A$M0bKL_CT,t]_"1ItV9^6Y!BIp6XVd)"=U<6:V#VqZ%';.h2>3-UD#ql-P+:U>I42l)R@)a<Sg41f[oJ`S:a^XMb9dV-BakXh3i.`tc'6I&p0`D*]a2o/+"\Bhk#s'?smL2Np/;2)3f-j.3%`X<R(A?oXp).s+:-o&CbC4qE`ORkd-^gIgH#8$14l8ZX;N]S,1I:`/G,_Qj_"Q1f7APp?KX(7q#aX.rWMl"L')P2bT3I8]";\5,,%UO8TF1Z:F`$D87jND5qD%_LD]:R8R0eVt'?S.O]mKgu+GK2>kZA">q+\PR4`/]iMaKIK]/kr)!**%T!$IlEmBF(Jl;6\S\ng\bZ"%m5Cc#%lG8e"fS[")hSjSf\%X,.:KH)"p?s"SW()X+B;X$R"&:!*9qTa^qRVZ0C8Ut*^Ric*,`(?`h#]rRfj3q*>OSFr-dKmUS6^K%>;$PU<`*FB!"FPVU/\&um4>TX(rFbXLkWj1H3k)n"3\8L64gj#2`DotNKs[%&<["g+I0N97J6mW;:qHIVqLaYOA.ak41M1sLdBRL%)2rSdL_PB)CN8tY`pd,5OM/-'+TS7q$Z>C-h_[l"/'fmL\2,7gY;+h26T?=,%/:eB^f?3o"<K0$^dIBO$*`I"d=>/TL"@0YF;4Yl%Ec"a7!q$d_0LoXr?Qe!S1-86$!*IfkKiU.$[&t1lK;d0#_&FAmE8;1X[i%S<X<.e"Ns1SLRFqj;5MLbr_[\mm!&!0/EENS>@a:_f%,VToGju>dTSXfP*^trCp/62^q/MaVt65MT)lk#;7@iN2"+-BS#+925YJ,J1G"jrIO5$$=%5I0amKto?4q3#;S*6prM=3;/iK1HC.%9@P,@YXf:jahVs.J(#mBFIj;6dIX*4YYAsQ,TJdt%!U@*g[nDepQ:E[21>Sb"*%n+DRW6=2*PuhHare]:+KZ>2h^N>IF@9]?i`aJ%_>nN\/6+hY"IBCZN=rGOL!39;;gB__3tD*]4o*c[8m-#Fh?9H94E('9@E;^=V!c/[XpJJjmd@dqf!T\85&#h&p)+*Kp=!r3)]<GO%S1@@Md_sl+>6@_^fj1R%DnmikTHMa"GkASkoaJHX<X;eCcL%2HnqfO.Kh5XXKF<PY&[*kAci,>iF't"(;I<o?#4U'T?=U1S1CD2<%I(uSVec#H1^;:849*uCZ;lJ]FU%>I#N]tK:nol2a5&Z0iEI6,!.>*8l-!1"LVFU<(#*.d!qro)'k$#GS6sIAR><QE<Se1u_#.l?r%]dB#1qHVhnC9kJEf:]42%Xp=qj](?#-NIqt.N+2#?W>l_<N6fX)O$:0mLLd9\"\_)*[%c:cr,Z1lsXl2kpZ\&MJY/TCBGssrOrTb%QGB>p^nckip3j[3"=`sqDJ5$2U??MELfqYZ^O:(+AgT'XMMco`VNp6Zq'e0;KDN>_nL<?@+b]B+HA_(f//RsYl$APh3H?03oE;`m%S_uGe+M$'([j\Rh8]u>XQTfp3WTme]M(_=&#7tjaCWmJ=&k:Pu(b(S4%H"XgosS1]O@j5q6YFJiUPHp0PSB2^\3D7%!fDatT8?IR%o,6&n3&LA0Us'CL4X7\4%^>7=2nT`s`^^[##7.<%1jVcI+.`TX8,/I4lOYT]p?sU95Dd\=i'7[UP%YfA&2QSUIWLmoLFb:CTKql[%4C?%h\+J)N5Z@I:FA.el5B>OPas=)pBdujBiFEFRpKt$hc<W;K"n_pp!I_hn@W/6]GOVY@it8"p5.i<;-9L1bj)f/pb$nRb[]8-T%OBR=L?Yo'V;s^K%hr0l31nW"@qAJ*o>,Zh&U%R2c%nJ`)M*g(q]>6_78io]N%u:0"'-Jh-L/k8V#tG;RBqFYm/.`78_5'[@&A.uc%.:Y3-qj@e2*;g!9T3\T`&TW=SZ-!<^H2\H<<X?!_NT2o52mQG+C+gH60%d(CqmdGEJIg)._fk]$6:4EC:XU1[**em=Z!&2`!<rsJ%4.J,aX\R:U.8#<_b>#+le3C._F(3?-(@"6n%nZC:p_C@p2hqO3@RJ858WpqH,E(A6#sM1r`_X=Rj*qE?Yi0J>amZHW11=hcD<f/\%@rE!nNUR%E!UH&(7oRuLZ/V3\_8Bs%@a.'Ts!m%40h,2NeL/E\D=5EZ`$DLOjM0o,R$Xrc2MkY"Gp-lNZMXQUJGaR.)VbDt<l3A$%#i]bL5aW=a!K)1g>AQV6Xe3\ubZ-qW+=s*_'.<sl$kNj+j^5dsXaf&4#-ilsJXXSs/E^pR[p/l9VhfU78sR5h_buIAP844--(@]]%H=Wj4$d4Ad.Cr:UZLVU]i10llJiM-p8_Q#*d\EA/TkG4>8K>+skSqkTjKOgEf^+5]:Qs`MQ!/]1,FGiCc8BoJ->\s3:oYAMaHr$+%M*TY.Y0a+W#\OS17Dt\HePG1/!\24N5ujHeH40PLG?)HtqU;HIYhTeXaDT'+Agl9+UCucq";"$u0((r[bI=@APfqAZ+GJb[FumEa%r^n]8TGlAE(c0."7:]JQ@@4faZuAQ2VF^9oK#Rhmq@_;T1Cf0CAjT!*U]RW8V^?S[Y%CR;?n2\>_?h-8%"8#/eh/Q#p3!5DTi=[Q%Ubu0bqUg[mc#S)2_28YZ/rN,p!csS#K13!Zmk`]hQ6Jkc_np^qCq\M`'<;NtA^N@Qm4/08L8HZU\RXpS&Rd@B<bqWY)L%KVn@@,U%r:C,N"nSu%BMh]DK-^E\1@I'^F\u6u6!G_eT`kZIV=p_-Zl6`ejB+Tj,G7DnQ7-cY!X6H^]U(&08=?;<-3jgTa`OY4<8<HXkgUk.%SJ(OMDJYmY,iXLO#3LT"i=H\:92g4GRZ3eD7PFqf4UYp7i.>0nj?4Z$#_=-k)0e$rBjaLVe3J7LYY>f5+kU@J!"],DS!<*+_DkUK%7&2#[N=Zh:;+aL!i/$+:<5KIn]fIK(?Ip=pOhVVlCPL3iK&$F3RmXt-\<gb*TL$AY^=<s+U16aJG!?iOJ'`Y?GiB<XaJj('8b1-F%?KF[?WhpH05jj"q.I@-`i4q1LYm;9pOOtol50Kj2N2Npsn(hf1]bOh?,Y5K#ct*CW3@/RL_*jmXk(hUuYk?JcQQc3cYB-B2f),u>%0O"Mq_hk&fJM;al7#qE`4ECoP(=+,!ML5k0fW5((!U43,]:0D@=H^Zg,TbDN3LC(+aN$J&<,N7[]q6]I42:(^=r&U8"LQVHER#,7%lh<<9E^7R&bQ0BtH3SkPqVX_pXdBIMaR4,R=l_\me@<P'lbTk=)A^4fqgR+K&m[%XUek]+=cn97Y$m`7`YVg=#4eQF>Fa$S'Y!:D%'ODKsCV0<ABg!XnXF?&#;G<7nKO5#a!\:_F\bB58'TM[p:!-^P)k_@$enm?P(@utePbin'#":KQ(/Jfqi']_an:J'.Xr,nOcU"gg%:I/6Jp%0H'k>b+So,14'&lgec.D/cA_M\K#g(gLZ3Iie,YKH,9(k?^Zj!trY5_B3/%QiAQl@4*a8>0.Gp,XQF07m$\i@r%@q7Imk%DXtj<ffgXQnj)fZ*Y.J/kFMe^$8S_I"d6Hq-ej),nk0#;CBc+Lb%JCPfN&M)K2P"^*E.@T^+gVWgMVgE@,I]T?j]Y[S^!1)nGOVY%faMDuY`*jjWe6A\#]O,!D,Q97cpqo]Zn,Xb.r-G=ag,MmkJ;["2Do:9]b;\ZO9/^*WQJCf.Kj`0B3]B^.W4)*a4:F!Q3CclFK&bu%=lruBkR=R#X^6AhR9QA\9\L:dVBG;=-[ID1Ue&!,f-P<tI9J-b02A*^%q;BA)P?JFnb[;(=aH#H_TBgaA6M;h2"]&0nGUg`ZV<]*%=pu7s"5lE1;htc;?\b.]>ec?G1KP]"5?B4'L]r\W9+l1T\I+H8,/7)\$iqT&,9IOMLt.Fa$!8UTJn9`H]sNU6$7jME't#+Sl3lMu%$TP_Wc:ee:80Mp^Bj^q$`=.H1=C"W5KTV=/YDk7!k0od3WQ'M+QaQ0jVshsPfm+X*'&!W!]?5lS"/(6h\*$A(q!NJ7Dacs`lM!N;%n>'60)?`1WI===*U<g6^)Nm(dBO;2TA/XnL33QQQYZ$lIO!=&Ug29Pn*jN/ZTSk^/;[$EbqG`n[lB(@]lsD'8'Fk/dcg*;od@]8`%4;eA9/L+QtM!P8oB]g;GZ56Q(?es2:=lAgOGNZ"&2<M[BW'Hr4q?Jq>k2snNCMF*]h'ko)5k.:L%FCj@f$$>@h,]s@h3?]ER?HJR%7pXL`=P[p(l*banaaDKu4e3I[_0pYM6Np#Cj`f`]@[t.1IG.s%fr"'OM-$RJkW24m$m+m;^.>Jk&V7Q#:9:p'_AAp<c)]7uqra-E%<*]_I[s)g)K82dZ,Zr:Ge.k5nSe?`pkNa[`%aFH+$*q+*buRQ(-1upQk98BnQ2gfI.IM`>;uG<Vl#>P66Bct:?jp73au2qY&S7TI%"BW&cn"c1tc'9QfWirma+CoYGd*9jZob@^gn84/<4a/qQr+Or!A%679.(p$kD<:))8<WGa/_$'g=gPkT$(Wu2:Oh4&=bZe-e!8Q8%lI$pWCDPL[=cj13,&8]ATVID4^2o/c"":U*FhBb"kbq5d&^8'"oD*#EF8Ql#@BM1iNb<Y;IFG7pq"i@8\`/ILd1r(N`Lg/&OHO;I%qP]EKntI+?2$96!qK`3V7*LudkFK\fUnb`0T2Qp=.:'l.aGc\p.<Y(naU8#qhMjq?F5QB/,a];Y,DuL\aW/__]fHqg]rV>!3&YCb%_M@+'NdLP2LrJ\'9J9qC4fO&Vf)=qK'Lp_8[hK"J(Q0SH;[I99=NF-t^@l7B[L"0`lhd.r4B4N&;&C&?$Yt6_LO<I3P^,KJeGK+N%6[E^cV_6&3SGZ,#"OsYh\$+*&jM5=%C`Z$i%*"KEZ)e0s0/]<#[?R'23Pi*U4\.=&4aiMC%\uJ[P_15PS\F!A-2kqL>g0b!bhU<Z%f@\Q_PA$QHp0nB+/(d,1(9djb4;(UU%g@[9lunY^<[=a3bG+XSaN*A:PF!Q.;*Xi_c8-PI3"rm'24r>G]J_oWmm4Sgl40hdZTF^P%>i1"5FV,..[f3]8a78cA9aY7^Dqg0+\ZNE7>V^]m[<?/K\^Wr@k[^^Ak<UpQYlpu*?F=SsD,i>eXj;%:csbe,=n:iO<$86K1Sp/q%"LL"'NcS!6fbf%b+kSlNP0!Gl+rO.B##sIEF5^WODESL;6(rn\Hu&(^0u'iRWCOZ+OiPFb6EZkWNqGM[F6`[fS&FIl'-mOi3:P/`%(bC3f'T*jsi_AA1JI(<YrV6"eEZ4e,2P>8VR1U*cSkL\Bm5Q+n\H+;7ms]gkJ=[oo]hpX<s'Z"^856U__]h<GkW7V%i=>4^e&^_I%9=^:G2G2n5egk(J"i2`8VF>pC.?!TbF;1_K]5PaCPHeAba&E8bZ?gsd4]Fq=?]FLZJD,Z@]J&(I<;'JUYUbD)chB_(_F1U)^W%LV%Il3]"'Be:Yi]N&CTa(f)@'Ik$^]'PJ%GT=SmCfmncXq:EVN<#RrPEXB)@+E<FOU`&<\k-a(sNNn/abX[/gt7`G_'X:=!BSWYB3tB%['<g#n+0'cOnUBH'2\9V%AQY=Ja&s%nH:h##eUM>U[>V!B#U0\pN(X]'IuI5'^+)20>&rSH>0guNsQe@l0i6C#S('t`<&iaG#PMT%#,cPRk;I/R:g?G'rPWl_nG;UnCSjXJScI'dC#>O+jhlAGXc.YTSrhJB&gI&(`>kjW/1';mS=@soSb6$:?uMai<@\&BP%YT\l-Uj.%iPd!M?>%BSg'1[)\;X;6=!D)!,=BF_Wlj/$BdY*&mhY0bCV.1/p4suGL0=UYo&mFBOGN3OT7J9miD/h4Q<>PJd>n*c?H;eMO/*\^%DRW.[K6i::mR2tk+K0#U)flfsm5lDImN%^7Ghu3!E)@hO\N1):oMnquRlFN^!)&;N*BqBM,6j<VI^6fQ;)bWWeLJl2lg8dj],+)u%p(Qk]r%.l*1lA^%,o$Fj]e)2*aqX_6nT:@PT)p&Ccf;,'oYmN].itUVI=<L@;dJp9'Pc4mf7cb\ZbLFfbQsHHSlupXHSe_CT"Uo&%X_`?RDIJhP;!<]Ic5\LmKoT*((>$j=n+R*N!f&/3?q>l2g)Pr(1EA)3n_<9C,/2&)\(FZYIRXmth`K0,UTW&t&-f2jC(_FS7L'Vn%\M&`;+C9\h20[!D4O_3m?f/[JDXT]F*s#f9\R,2j)4p*YF[$"O[\kYc@4E*S7$il7e?]qVHp&[Mg\A5,klFFN\O'>DqL0WP8!\u-%L"XRF2VCd^_D/1jY]_=:S-/:EEo_3g,%l;DB"rJZUk$(p'7<0de"Q4@1hqIeD0&NS>2/Z(%0-.HBs[r:?Hd/pOrD%B5U5"qgX)J)%p8Z@9=-RZbkOsdM[aX,X",oDs:+BhnA(SegeQbLmIa2`A*R^&0F_qu61AL.$aEQ52H=(6OF,\5Xa@lK#McAa:IS@\cHZg*`<i2J/%pLunX2h(kJ0/Ash1hKRi`?0Ka%(3u=\_NiA,ePNuqWuC'DI0Ja?X87R/DSQgqXXT$_.KZX`cX-,\*%_=[-'W=)]W"XaEPq?$1=C1%L`+JZNcHmZZ$jBVi[FET05Z+s)sAY>FgI^Qn"OY1-Oem.P:_BIkNb-dSC[R2</%F62G7H[WN35\3gD8+Q*aaL+MS.2VfC&!^gq:h%C!W?+Vt7%dWlTWl0JnaCAr\ELhM0UPmN+eZ2VUN%50RIg0#hSNRq%j3FX3U@BYW*d3S[8uRdZ3foH@D*^Dh3-Li/KKWDmoq1r20@%di59g9V&<lAa=LY!4X#S]_d4+G3$Y[4)_^PH;iSsY'Q,f_Jqc\B5h7"`HkQ'W^q#>p=TWb%MT?<I!n[dS!p>U?$X4u.`g3hJHQi'%O,4JLqP#TjkR0=;[4!BKoAN4_,K0[*1M$i(J7r%90c7=%HRE?U5qP"M[%D%BMf)mNTuOJ5.d,[/o`Lb9C6E.Ug3=P@+N%f;HsS'"%"k5GW>s+HB+d[PJ/rIXA%baCn4-7(g.c=ijSeX1VW",K@?=/[$hCFY?L.!^2j0eL3$5*3`p\2Q_8Ar-2!%h\\N/*I3?.FY8'g>t+%\HGfI"iBUS%DZ07Q:1S&,51cq!.nVCO8F>/`?:?d\dbDW@/_lR!_iZ.TXr1WZ?D?2okll]76N*+1Zu:ZJ.p+3799YHMEanm3e0U@%4p/oHXNhNp%>ssTK)A-Q*cP`NHH:.mkI"-Xm1E;oV8RJI!C6l.?K;H+c1`AN%4T>8Qq+t.Qn18sb[f'd=^0_NF,6L[pYg82Gu=LH%jTm\-`l1O5\k?d^1k6V`kuVI2K1agf&9J<2L6W)P6I-#MZ-8^@%Mcp(@U<&ER)n>t!0L#[7%s'dkS2$9oUG@ZB,lOt#[SUW9arWX%qjBrOTfG`RpI+d2RV9WI#]eAo!p&mb;&,V/TMC=g`u3rN&1V'_)5c'^&3-gZSLr_*M,@6)(<*Xo^jZ7fZ6,im!0TlD\P?n<OU%D9%qBBV)UJb=VgDC2.m+cD`^lDj@%H'6(X,o"G62!trUMMsVF'I(j1jChWgC[#-D#"c3Y7pmQAfaVW\K%@G."<!6_n_?ITR^!k;eH_Z%]GbEL=d8Vf^>X\^-r.-14L]@N"^W^%*f)*B%S>G.P2]SOBlIrOYd4NbF,Z?pXP6k+A!Tg,>DTq06<I\m0IcQom:qjGn5@tjkR1U>%)!2N$BLa`jL47fFJ<^7Z<Y3\KWYG$QC3)WG&P8L=&tN&JFG7tormF]PpL#HPP?/E_:/<V?,,mSil@,+&k7XO"_7'Vn;[6%[lm7I3%V-CmFXUX(;@&=*0OQGcfW\n\-JN$MYJlI8`cO^SR;A_*PRDN%$%A,398A\T]aTlAt;;-hK#6t'HA09cQ)dUW]M6*flrMCS##**X8%^m,c+6@+f'@UQ:(";FeE8/kb;rQ)Hl&d6LN/Z9!^A4UHFn/G1pC/_B,N!L_NZ7Il&KOekFI/(rOaCO`!6WC?#5C^=?"),2O1*Q=U%VVaV@-4%/3]S-TqqOA&\,M,#r9@-lmPUr!kQqiKS,@n04LJ_Sq8Un+NCshFnft]nQb>!pP3KYR5LMSMg"8N1>mM/#pI/Fk^7T`k8%Uh7X?^eL?b;Y3dY>(`Q-liQdO!9]!9UQ?1ilS7TKiYksK^b?=W?c6n;(`PY7B;In6)A\!%;K=^YHQtk-d7*Ra32?(Vcq17[+DFJK%R0J!l$k2is7@D[>:IGIG"#+TJBHOot&2@]9+9'h\rOC]+6_@3\pru'D:%E0tAWdWF9nQ4+9.+R%8glMarfi`m+DRGOS[:qEOkBTL%b$Z6B_2>H5_1u`$BWR;K#:F@7Om>o%aC\uq6=kK)mCaF=@alEO]g=nql*WsjL5ZX4,*+^/;J[']OG&mM3c`Ifk[-^sZU9e#p(_R3%D9U0U7KfO@mP'rZU7SG<W"*CU6TI&YdaE8QSLE9^;X[Ke74$(>)em**q$hOj3at/'4hq1&6aXL%ORU5#4:d.*b8SH/F/p:N$YOB4%'aG-^;,\D,H843Jgi+PI:.O.\-E<t.ePMLr,OVl)r9`EWfA!6'!YdU:)o<c"M*Z<5BlU8uSHltrSQ*]WN^,3>Dl*[]8PW9"5rJBh%;Y#`AdMQuC:3<I(RZn&]IRKB.Au;,8g18-%2SPTaUfXJWL[%D)>Gk.;'4D67SHUuOB\6)E:LD&p'?\X]ol/M+l<RCPd?2OMnX=2N%aS;n$Gm-s5V-CtTDhnC+SHmN?TurY%&DO!c-YXd4%M7Z!AI&Z.=@+t0A,+Z75"1J>`PN*Vq;f#pGd$pq3EIMm+'ht/I"2I#;m.D-%S[-a2QZQ:7=&nEeF,7W0Tba%"E8;3mkYc,6@:>Ka['kl'a&1kM,s<^?Z;l4[o-EIr?ol7AMo-ih_,<i1QCN(,Y'OVud1OJ@0acQf%A-iPu2'h%b5pu%tT*dtuHs!ua&\Y%U:kQti)O)TnYm5^,U@ckV'c`[1).h$pN@4BK<fKEHFk)mVPmH%pE13HFKRu>)hWfC(S0*I6%'i3P;-k!sAm&;WNp'eJdE:6f+_:0JX(u2/A\bC*%aU$Rsj]]_lS.q)X$*q8NeLK"*!H%,]7UhW4]E?\.YoTf&s&c>s.EUCld1.;#%/6c7M&pL!j2XAKDS!>:cbG>X/#')!1gf:!;@<d;KZc3Hr$.*B=VsGed!pmJ5G=;UkN3H0KQXM%p8qG_P_ZI7,8bVD=4DC6\:i&uQ%R'?1=Sm;jJp(iR"nl<J^A$kGT$S;2^S%@UtpHjfFJ:A[NPSaT6&_'oXVR1Ud#WO=d]WdC*/3&@5P!e$*[p",q'k\%nf4\8KA7iOQ%6:(fZZe]Lk3joC.SShfMl=4b`CV4Pt7&/a_5`UH0fPo-)2,YiW0?q7aPqr#(RHkh,fX-%7`^6(Epu[R@adQ#:**']Q.'J"4r2tWr%h.HiZ=?FUY#%Rn_mt57=jJ&-nK+5l7g21RerZ^L2hKD8s9t9J:JY36^JU#lX\L_Rc=s<s^kXnV1jU["WjM`:1*FXT/(.E4U[AVuF%,q6h9k`(sRf_6Xkm@8(.!dH4ddL<V?7W\p*_Pe9D!5]UGe!acu-+/ZQ=[*qhKuH[!49l0a`0NlaKBbE'mZnY'!ZT1+aZ7d+_Tfda%q5CB'U]M!iqn3+5V"c+)f6?4S83uL<44LlXb&-rL8<Qd\YZ=+D4r;-ADYU80728,,^(]BiTEaD7F#MpTZXi8f)L=k'0*2=<)[tgH%V,G:"1AWk-<Y3N$Yu,ejR^7KLQDB<QTn:MMW#$Z,aSF9$$nAh@8et*aY`FU_a,0[[HtfNsq3uo$(kp2g?$3K$#pf?<2E/B9871>d%&]@l.%Je.N,$XLPieD?`)@hmhmYa=E!rKTNp:KFRW-Z/J#%siP1TbFPlb$TtYZe"QBni4=]E7uR0[H-T:5:u?,)^CbC]Ks0@_<:3%J9MJM,jJ3u^gJP.$jjVlX*gK[Hb4aiP/FT"M?'5$>Bn3pK=oipYhRo6T^;aUJk]>:FMimQAuXi_BK5@"/qXKs\j-_KnU-Bb^2uU)%@N?1<AZsLCeQ:(l0X[5)WlEJeq0X5I4t>%P"5sO,+.cP`47g]8EioheE>p`,7^`qY<-3)(lf2\;hC$_^b_IK!8-6e_L;)5U"$S?g%?k;].%h=']*p*T9Po<Z6olR;2VQ"JeE4XM1Bo#q]ag%rL?X6_n[Sh/N^qQE4'SHm3M)6C;<[(UG,3+jLnm7\e(6LSa0?fuTY!@%s%<&jTf$rh_jj<(GN#5s:Jg^/Q'&.@>qAYoNMYkg/D>)>g`7H+m6I3Q5&.QJ@NAq!]L%83B9aVV6jb9p0)1W`[R.04<+L.FH^7cmgg%FbG/rXj\Akh,0Y>`L_P(<>1#>KOFWH3=ISs-%'iZeI5a3OF.h^q&.Z53I4d1`CqdD!4iCm@7_ApM1lHcjjYGF>Wt,Q/5*ZYW!fVa%a;TSg6&2*qK@)+^9F#RZ_!"Yd^aM)D%M#!rh%C]Z+9R#4@:9,pUKXaXRMd<FOo?>5W6Ih<P\pE3,7q/kQ:O[u8H2hDs2_RMiRch7%"NiAP!`1noVVa.;[I]h^W!>X@=OAM%6\l)e)s3$\@`.7F=POY]O?r?PCHQBf5Tm_"ZB@6rJ8DrF.]/t1a9su=dDhae&S3O(UdcL(%i;"H^B"0!Hc?'b6!7;JDoY_fmJto%c>,tTp7bFZTE?IS[OnDsa=rnk@;k2NgN+hNLpPmU_l5hWrEIH+!_PW3X%`R)QQ:H2Ubs$7l%N`jWC1+E3'WU]O4;4Vk$lLH8fT!_/dAj2"fd``8O<*[%*;ZG-tfZKf:5f8<78!2Z(f%6ICh:VHkK,Nc/ndqApcd@7eZC=1>`S!<o%F8"_,HeoU(=8RE@X^+Sk<1+sY="Ol#;Fq#O0@km#ObZ%Z*J9;$).n7).LC!hbf_\I2`b3G=*ODt_dN<.;shHQ77uH"h'>o@9`#?X%'Ci+563UDZYBDn,5eKmJ/Jpq+X,d;\*t_@:pimFu"FuV`meHCoQg(ibBIpGmSRL"4_)R*>=Q56/AFFS84Pb)iaYg8*=pi=&Z]RH"%b:n7g&^9>!Ao^Z%+:!6!:5d)G&9=HSNtO".Rq:W6eJpDfQC8o<F6B?Pc_%lG9:600&SC2c.8=OQ#ht&UZA.iYqfsQ"knuFg/DbDU%4KJ0_L>'k6_QCkSbK9qqaZHQn%S'S\.#.u__5`/NL6b<F[b!Nq-h'',9_co9kiO$]L&F*:](b;^<%BNf#*+7,Pi339ib3d!4b%Z"%)$[f1fUlI=M&4lV-E''l;AFAK>:`TPV;0jS3-_1Wc0;qp:.hPVHfka=K%k<S_Em6AT*p97^"^oP,\U"+)b-?nPXo'on)Te:MkL;9%#]85:OFt@Ge9^pehi$-a9]"[-)OJ#DgnW>MDrZmPqcjMYA'LZTFB=k:dm1gc^5Njm$-\"CGk318eKE,``9=caoQ+9=M4r&fpsULp%VF5)tNoP0uY'!bZ6t2r,i\i-_ViYiuZo?Skq#56$=S=dRqm@FbZBC<MjIVaRMi^TBp;qF_e1JPU@d6="[uR.).D-6@-GrYRYm)@/%M+:,U(#DC>NOWTL1BMt\T0?-rJ.f%f]N#@HC8&&c/7%A,rTG1h(X!>Dk"r9ID@EIs[b;fkO]4,%q:ifd$e)m,Q1Ir%0cd&?^mf?Q%@pjoJR>.,U$l^]>$_<??^<"iDr6TXVp)ucX,+:&BHI9ArVC3<D&.GBsUf0=acA6kucp@dM&@U[s4NXs,*CJFjW+M?;mj)jMAKf&P%E+nGf!pXrk12HSB#o9Lpi><m(<HNLL<lZ&-IU^f'b)>>mMq8rormR4uqPr')h*obR1k_1"iU0)5cE#OWD$nGn1UiF+8g51&h88nh%lf>np*-[T[*I<_AVQ01*J(e?VQ*&AR]gYW[9<25$B==\MDo8mQ+g-Gc,YZ1Q=A7;Z%1>.,I.ai;i=8J:eh[)dc;Nc+(H!A`Uf8)8%6*7AR;d*-Y'H!Mg\V(?KI]c5OJHg$%;#XGR`l_7IIWQ<N6C:E83p!Z["D6HV)]aCI:NPiG[:J`=MkZ-`CJLjnC`*TYEr*U@k&E8h%)ldQ43,%QJpZ^>Mm+:`G]KZl*Wr<qZoGM8VAD0;7')(^[n)d)r33YsB@p$dA@oN;H986OTK;_W<H1$@AU-b()hBn.d<DuAl]J7im%U'pfSZB#;TSdIJc+C,O6G9t:F7m551*-K=d<6EsT(kOD?pb+I+VBnV8$kp0Q:q(tG"X9q*".6*JI"=#:g.uQO52PfaeW!"XWd>I"%4?ZGfQ6l6TV0VV)?8t%43$>hNh)nqQ*j_[1&l\D^;?276XZFR5;=L<k^=+]`KqhN8R<_cp;7P2meT[]Mk.Nr9LQW5M><5Q[@u?Lj%J_`*k3_A4^"n.E&D2ini/>2!u49fZ-.2nC+Z[rp,b!Vm5m)qbKn"a8!n7%tc_FcV^k`["'"(6rVO@a0>X/K7c`'gt$OcUo\fI7A%%TZ/)`#'s6#Es)eHMl+Yc:`^HN50`jK'>[3FConsf>-J66m;2j79-5mT,N9Nh_,"MGjR_;pqY95<:(SX=s.=G:pJ?h>iu.ljl(Ci-%I1J3B(QSmR0l/B"U(,CR6'a,ZJj^LWN>udRL*dtiXPgS@Wp!pspK*pU&PQTJ=Wuo^XTl2%Frh'Ul(ir+#i1Rg&rR)3*uJ*K\QPrG%\2Q.lO\W/THZ)p9:^'Kt6&'n[8Bak(OObRDq+8OO+=ahn37Y5b#/Up9>!"+K5R)+)#Z+G:8I86%`D&L@2nA+V=3FlmjeerJoHd?)%7RK&]C[)hfeb(a)'Q]#K2,sjid_Uet9Vr(Njc/qP$_j4/3mMQYi`5^C.rs@`fN[CY@UV$X*)j70_;4foM$HJ_MB_(2WD4l;W-FXE%5TnKX6G2DcOEZCn9ik,Ld1g\W<eUYB(c1YQ[jbUsH7F>iZkWWGgLN?pA7Blu5<J8%eK[H/2sC>(C_A)XZ9l*Wm:paNq-GhD@^Q_d%c*)7=<pNT!7BmO2?C".:aAE!3'\#A[R\p],dR*#&Ro!<%HOBpXg`e?_[8a$'OIuu*qIP62&jo<?B/g2Kd9XYLg3fB+[J:P<dn-)F%Z='=k"IpmQV3<r\RnqmqT5J<Uh"MA>l(VPdeHG!YHle!`T!@^]_]6!c!p2.9`CsA!0OH=!0/S&'JY,0@9LI`'PdN;t</A"MNX^hM%m^DL(5ba!h7F1$1>GK(WEk<b<TD:']L<95B0k^cgiIG!:>5J?XatE=Y5,F9oDd9d_T((V:d+$t^;ZC4i9.nH8Ga%865(-!NDV"`M%<2S^:fCUL.i\'lG2<R\Mb#gg"r?2)DAFU68?n",0EZQ%FL,cU57'bt#IPuUh"sW:CEX[I`6PmkU"j2Hs"seh4Y2lr1'&s7-Erunm%WcRsqlO>e<[l8m5XI/4)q.qj0UqtqP:&$-O[H>CbYT#>+dJl^q1L:<rH1Zs(Z_p^8N88%0S;!jd1ZK0spL#cZ_mipG$BFt"Q"N!l%;mNj9XI3q(G<W@p6;SNmEKm&q7rbE9R"4F?9K^^.jE:nA+jugM"XWm;b_IgA?0:JZ?9Ec2VJ!Y,WMA`,'iqJUb?e:lpI`aHVD>I#%f-q?Urb^l%ca_.'!]1g!/C39D>h]&)h36uP'ZI,Q.V7"5GUuf`iGZG!;1dsL:kl8KL8>LT8IIISLd8e\bRMS%<Z9K:#Ri(bV\LRV%\;9%uHWJ#%BrH;PLEjJ=*)i1F#RnMA*)i!(4:RGE))4@cIX/iSC%-46cN*Hd]AuiRUF=@aF@KNdU6X5[ikp$l@po([BlpSQQjpY@%HQJJ,(@^s<AL8IM)P(3?.n[@>p<Yu2=<VP\h5QWCOT[_sZ1:.4Zofgs6Gq+k?REgZZ%=!%8%X0daJXn7\VM.KknRPL]2tr%NWUeO%e2<tIYI:GFc>.iQbE3pC6g4h^92jHhScoLuZ6$rLp`r8`WSr,Bm[@V9Q-3]Te@9'a`%qZtZ*u10(NUEq:9)/#/qM2OQ\j92=k4/i%-p)#Ym>(3Gppo_$c]feuWpdiB!PJGW2<Ce=Nd6/,,T*4?nmgg+`GRp[pPoje)Nt#j:@,Kd1=rj?h'9Cb<]q`Jf>ucs!>piql'h6b%5p"T4Nd;uX'TS7HJct9cK`]9"G<]eT/ij5Z>hbFbW=CgE,7lhhL(B[n]I:,LDmSb>HlpmY*[f?ko#!1bUJ@Ld52+7K/TA5X'o-j3%+Kif6cI_Mc<p"ZCb#=B9;>TfRVY!up?&#6D6<R[i@:$Pp;hZZ[He@3RS(O"?7V976^oP-goNW*WU(9*4e-cJI3CG#Ch)fa\+\)N0%!+)#kG8S/g:Rcgi1VIfW3AJ%D4A(dsdXZ-kHI[J9NcBIu<,;?p-<G4b\)!rL@_"Wt\!_ta7?%kQ96TDYaQh^<;Ud[1>??B#i9@H<%ifuX&kS=r<d5"!G;(R`Q,"WmZ`86t/G5JhVf;1,C`.Bqn8n>$WIhW)qY)fN>E#@XIk#$>D'Z@KlVensF#Xd&d7%?D9)2_1*OJC2W%9jYl!e>EJ2jX(g(R3M7)41R!E)*Oi)e:":!96bR10mZr<.>LG%q.uGGHcCXA,1sDC4aR*aic>)pV"T=bX%&uFXHd;!X*c5Y"nO4b%'!d1;l-:;7:qT]*q/dWp,@A'`jdI*.puf8kjZ4V5hGnX2!O^Am@(H]RUV/hnHDZEpJJ7$Eh3NJa?Ccg#/kh@F2'(*ZDZe03.:!Ll%LrncFD*uN=V+B\!.g,n=7#JGBi_5$Bi^:kfaX4<JbNC<LF@12H\5I-o*+=VgLm?69`(,QQmrH9TQl<"]jht?hWaj,[m*7;5<-($=%M;#h&+1@sN8*GKbm>+$*N>R.o"-YZ6D[OS9iS/?tb,F,.$abF<32kp8L1>X=+&edK9sk;T$LD4$W6l4,7/_e)8es[S+ZmP5dK@2q%.Om'mbH*sT+X$&.C"Va8nSmb;<6%?p7Ct;!!aa?nG*h@6`1,_sX?$=Xkq_s$fNi&*Jl0HN5;GKJ;#uI.PKS7=QF5E8it9IZLboA%%ARV=JaDdCmdY*!W\.Jb*PJEj*'M++l'FR(BS00%427j8;d+6@&[S"Z]6p9J?@j@,W#S$=A'kh1P#[kj'"fH%&(FlnW>7E0:g"nsM%3_'Rf4%/j=dr1Y9'B$Pjh/HbN@<UP'Qe^HpaM[M#3LcdR9b40>gu,Vk3P_e:>/,>LQLL%9+Oita&ZjoPLOf^b/^7FK$(dTgTHWQ:%)46;1)=.L<RL24/S,'//"SGDpX9#^tl6Aq8NS8WL\\qaks)nH3JkT>R6pZrgC"/suOe=TW</Th(WmDPVlsL[X0JLD%M<jY&<[r5:%NNS(L0Q.Id;%.hXOljFTXg6`L[O+/o!_<3M(gaJ>aLs,leC[R3%=Mo*]2-]'/BFh(-'/GiTq1Mi8Pr$LKp$B`1IV<=X^D5iK-=%q%2V_%s86sRrX%Zl.eXr;=\R2N97\$*5.`MZL<KJp1Su%?iWpa<,j/!#AA'ZYq5iZ1R+b/d2&0](ecEIt<cm5Ee[qV5rnA`<V,,hNW%c=odsQh@.fm#7-;m?M3-UCGFAFQl&tEn#:p"JfF-nY@?3it+3[4p]1R$)-K[5+3E.IA&G3@aX%e$MUsOOI`DoFUQ5kdA\*<iB3,a%[<5c/:]BcHRb&k1Qm*5N\5@uQ.+hAN/.-UX0\t-<_&"XcOe$j?76T0gZ6CU6l$V_Q#LJAH1A#enp%F]I&6jabY,.AsWb1?ge*utL%QO+Lgh\m;!U>OE*8m+K\NAN0mC!</?(e/6'-+LKh<Rd6-@TDW8*YC,)hi(215mYYIMPHIDj$+Jp<-[]5D?i.YgU?>bj,&hCTlsD!%eHVZ`bXTrp0OfE#j2EHS&>J4BGXu^Q>L';bkZ=W+\fHX\\0W!@/n;pQ[L(=*YsVgHW@U$L/2]akoBCso8MqD=h\o?1C#VA^#lkE%%-]s&dL2a/X0LB*D8_M:&\mQ72]K5$]7q$lUO;bQSa;Y&OM<r<=<EDec;6uPWSC$cXO=E=tnpUAmiU*N_=\ch(qdNH<ZBpC1ou[7A%@WR]a$$/(H;S:CXQ^nDun`aXt/;Gp+/3r$mZ(s[=NTgW+/R"s&e$c^TV>-F0N=k#WfltsS@5:!t;si;g1+#[^'D/Jj<eQGb7@%u^%G6l^74ujFBca>-a'?[:=1<B*r[NZir-OV#-TrGW4m#V+1M6`%oRJ)k-V@'TkCNSV0T%SU&J_V\O!!Du"fISZVKEg&)7h>nP&.7@+%Vp6.[CG9[)e1-)u52^)!1P!Xm)j1$-:8(@G:Z;0o*EXr\898KA<U8M-\]Nul34*"^#f("`ImrmI&MBcj*+.c_7Yha'Gon(o;8MEm%WqZ[fLOH:T"=o@F837ToS(?RrZgHG-#eKKZD@!cq>^BU_D*`o:3tH;/6s/V">sK'[&^W&<nT$0kHQ*S=a18nT,U,PCSq'XAmhusR%CP3R8-ao[A7?;(=cQmY^(cWB'VkXSMmaqn.,:[:;6>FLDBXn>[Ye4@Zmf;a;:27doko2Jd+BM-Ti]gm[>!#ffjuBP8R@)>Po*L!q%'gD`]\UPH#^V.uKOq.Y?-Uc:n'O<UqIF6D3J/`&]SA<LX(j3%,QpDU)P2_t-!@Hrt%[F!U'+N!(](N:.B-u[=S?M_e4U/(Vp.6FB%CcHOWA(2"q''3+a8leZAh\7G'@&U5TUF(48a8U,iigGTXda5qPAPh3r:3W3b"UaHjKakB3(UEHF9M=%b.VS(6as#S2'2"H'`u+Hf%[HUE)aCHS9C'Uc#DsB"?,U*s@@6]%cA@NI"?o?L$?JVC$J"?a=/t5QoX*!+`Bf'Ps@:^1C!!D2;&t2YZ4tjmBlT`]qLe[Q[3D`FX%K(%c+k9R;]%GlOCPBI@Bf9t?2m5Din9O?/V3+fK<9m"6++@JN`O`K1d"U2]81TnMH.H^3[-2KF[6?IR`hfXS)H^VeM:>p%>8()?u%`+fg'2GL)\56DV9/+A$.L9Eic(aBqdG^X<7"g8<'85]qQ-;,sD:Y_"?"4HZgM%(c&Pa=,>m$`eHZ7\L8ZH9=RX"+;OJQ*I1Nenkf%";hW"oZi*)s):u?'+;mQTRO"G8N&9]JR2eH?b#>p^kITF,mu>47So6Y=$O)c_$^HCWL:dmTkBLeH"eIVi=i*qXG'C!Fup_+^3uQX%m%bc>7^7iR4+0;LfH2?id1)$<W%OP;O#Ehiek;.alP&)N%R_&=CiAB_K^iAQ=Ffci1[%sO6g*Qu.V<fh%!kRX('I7nk9N(2@Y-[0%o"o1X;hlGm6m]0:c*/c<TQ:TalP\;%UW[]J.u,ga;"@m]>^D]n8i_V5LBq.PIcU)rh>-@W'AVGA2*ep^,e3fAJE>.9;pkCFQs``W%,JlLhD$nh"B>/ULmUsp997H-<dsl7`T;O-g^kA)I#EBGk&LmA#Kt'*Q<P/P"W$p(darYC+WY@of_:V_d>^H9&N)KO[-Um*MM_]TK%CdE>7.!1V"KmZ;ZBY=i;(ctfZSC8N\1L%mr*6ZBUgs`SR;0mjNE6H$,2ZCi*OdYejD_n>lmahaK6M0?7!7!jVLZ*6&.HF^DSLr[4%<OFRcMPNZu.,K.LY;#2$#$d;jI&(C:"^]ft'd/TVq=A/YCRU6q=<W:F)i04+I56'0Y2#>IIhBk/7%oFf-DMptd\3V+S;<P"3#-9$%]EVKl[`F;/ZN1?FT0M20NnNT^7aWXERXU/E#r("9cbtC2Hu-2G:iS1Q$gk^+=44t;8/?D>0[eiah2qb+$(^[l?ReGfA=gPkp,sXW%SX,XHB>;p=J]biphh2#='_o&cPpckWU$P8qHgEBM>'4'!?,.[=E*C)K3.>*Yg81\+>ds`'BiCPNFNA4bjbo/!X0Fe_'pX'0D@S3m%TYSN";dc;`J6p2HPL6L`mI5e>\mhd7*+YX`c'7Pk!8hb:oN@e&Je-9-Dula`4G^8oqaT3AQfEpJo--95#6"Lrj$sE_\0d5pX\J=q%^i6'"ng8;(#'0[/9MI\]9tu25JfuVGgel6kSQC?h']pDZ.TVoJoY>o`H%,3PaTphk2$I&MZGFV[LB2I(>!02s_F7^MR!5p:G<`3)%DA+Yqn$<jmkH0'1_ISE"J\,1+2@%t=],D*CoUX\lqL+rY;XK[Nfll5L'FdL]gsP3r[6YIM)!Y9^1/EjU+"PAaenK/2Sa?XMBc$ma%f?r$[']TBO[<?_uqh7,ZMB#h5'bFBmEoV,K/I%`OpgKOk7u<eEc\NYI@V"r_3)J60JQ?fXj3D%DfW6Gn"*YN'?f-'_,1$[ho4`uQ%@4XWUNS*=kBubY5NL]l(*t\s4?R"BEs.1N'fThFhVmiQRlGiAN64\hoJ!#;P%Vb_6j3%R+p0U%e8AtPGKG/2`_G/FRSle7&J7mR?%WgBFXk$Ij8'sOkjAVP99QOIosdhCq=84[8Gq]^3;&NRbYWlW9l:UGi''bo`>G?2L#&aXZpo9f(:Z9;\C'd<T(@j`s<29I0#5#>uU%F3M&t\OZhO'KGn`1'<5L8/;o#8.K`n0t/1$Xh*r3qm0ljr?7CqY3Lc!4_m)]L[N&s"XB$LV5)%cW(ef/ocoCu5EVS?C;XDb(%d7%%?047,#XR4klV*F3YN\&SFc]*1HHrOXXOE8hbmTF'Gg/dRjlB);@]7lj_^pnQW/D'R[q>@ipZWu].[XD,kHM']a[;^)Lq(=k$cNl,%AZSbdX%a6*g_G\H:N$V-OU/5,4;LV]?Db7E^A:-KHW0!2U'Z7ZQP\H@Jt"K4pq5MZDn?%LhtfQUK;/p$+&-=ciq.U68VK7-K:S&i%mWH&FVLe*Y>"Eg:Y_&b0hR3j3qm0Q<I%))DLKdaQ^tXMFY`KM>88NQtV5[;%*'8pEM6c4MH!L#u%Om;6m@us*M#ZFP7W8npn/:kT%\i!m*IG4VcZ1GfQ&DpI-kU3,r3FZ7DkD7<<e>giiegh:-1-*ej6dlHeY6$p?K69AWWr&u``uoE_MTj8oa]POcJmi[J<%0pkWC0ul%^CfI,/=9DQ5H/m:?B]b@DMAum/`ZB.&O3,%D#2O^Snh^1.)sDM#g*M]8DAs1bc>2"Bepiuf0r%\Z2d6.,-.qK%gJWtR\@g4ru/X>%2o,3ZIPs:o8$Br[DI'i8e><"*b/H-hr7i-QIbaf[+Z]nIkDb4@1$X5$d#dVh^H^R%b'ENd8)EqT70cYa4jRhHj.S6S`l;#(7k[nX%idQH?lZ$,J;Z\jaofe=p=cincE1Mruk/01VTpCj3,P]W6'P)[8I",2b$r]%k6X(`+Yef(IR/(hE\T;<nh&213BXulEmg.h@ZD='p%7ER?:*)tDg^a)ti(knYN[_q'kg%$-%Z9KkUUe.-o8)'=Q9SXVdr`8<d!eUcB<otmSEuIA]aBSaRQl2?ji%<U\RKE!m!3]D@*Q;Y[%3ce;@LcSgc7*AYd/(YA9==oGR^c6jc0_+U)=cF:`=o!m5Wqa-6$T/6DJh0aeGtQ%L]@]&snIS""KW.@JW4WkFiU]WYZ.L'rRZ:+B%fR9brNR>%hC/cIb,#>4H1rV2dAA8P@9Y?+JQ*:Le/REW.Y^A-4f+buk:sX-R7-@6'n=Z@+0"J*[=@`l@Xs0ET<%QFJ<<IA+&4\4Q%dfX'*;<CJ!HBkY.jt*g2#5_rX0t+'%1f>#?;AX`ZD@b"h#,TWiA4S$;'1>Xa/&Y#sU!2Bd06,EmA-:L4\"/9:,1cF=+`S#[.l%AX%GIW<FfoY3$#QWhm6qD#8K`sr/CWH\k6iT)43A+\1:lcj4!&bh^Do%H*jWM$Crr2`RAJkbKs/+nNJs@Z3G*AR!^F?ULNs\+'L6fYn%:2;PkSmlG7a)L@iTQCX"C"2SIJnorOj8&gB(a,;%Hl<>^K<"I`W%e$dB:f=e=!Z%a>a:T=)qC;%<FEfp.ip-hF`,_i2D/eqF7$":%*Q^IR05EPH`\=]eB2d,%KmFSk(3=/HdF#FQAfE)T/PM<mg#=g;J\V<"oXin8K4H.h6%X*`._a>;`H3cAKHc")jY^O_WiT1c9K3MD%LOmSU:(n&tifZm('h>NGh5GP*D'YL:I:FQ?`3fF>5*f7tm2^LPI/P#bMu47r(&@V]rO0h]Kt>!:__=jP)Od?.>;T)3/^(>9G;0tq%1i]f7C>thsmB:#CT?i3[A9)QPrV'I-m_^;D0Qgc:5Zf=gcchRkL+jOcK'`[(?1brb3)gPCm4tBS2Brns-/!8L?5o>^g]LuP,-%1Y%+]M`_='OF%m=5MU(Y5e/3:U5>F<"s?Ok1TkG'l6sIIgZ90kWt=ZN-sC9ESmurcHC<1u5Nd:tAQQhE^!V%Jp(UeCsEdT1c)EZOO[3%j1t*q`h:XSj'BG\]VIfU@5R"H#/A9Mp"R9+r2Hq+)7VO%qDKKd+:.bYde)sS"d.Q0hYtuOC/[N\-9pBkU(\_Id#T1_)i;pT=PK[\%Bp^nH<4L@LVWAG97/aH5EO?0;i66(HNfRhAF;!`Hoj_)7UIR]<0;"V15KO89iNIH'.L-MVN>P!FKWS])%SAXI+m,G,NP&AK2A!Me%RabhKD*pi@a<PC^#t1;'O^kKCY(u$t<_I,VY+#?JErWWVH4I9:3f*tSA<BWZ0J2T-2nMnL:@5kS:_h(VT9Q3b^[W4E_bC6QI&Jr$%@t%q"a^\"=Z(XSn__et/l]$1fQ;dGZ9Bs2E_Y5H%iIsYTmIS<VI4$6*HG&YKcB4r-a3o:gfkY!bKF.==F"+V!Q;.YP_$qk%GbWBC%Q",7-2FDR,<I+&+ef1bh&.<`-^An-TSqtNZ)9o"lFKe%AXr>BUg\0VP2c,_Q]/ls#X-dpPKgP$,m)AoYV*>#C#gpOXr^Aeo9;5U$%p??!`f_>VshOb]5kQ5Jpm4herf4h>)IP,HY<Sgu/Qf4IP2_"gR4YG/?gpSg-Ub=WR+&Vo#l`oc;=]P8:^db6<?YkTW^%PtY.-L8>%-kU:e)XMasd6`"_AaBeTM<>&9U=5`h;Klj]61Eir6OU`/k6i+oSH_g)%>[)0S82HnoI"@-CG'EdK<0:7]tL1l-jO@os$dG`:n1Od%?H6_TK,8C_$D%W82%d1]3?Dk3?UB(BfjG]X9=dB`T6WXl'krMR7uH:[!gG%[W?Ip^)Za*$[JRQJ#U4-S@t7hLlZM6STrd5:H5lkU%0`Ci+TmQ\qdRDF6X0W-T&!9p#66/ue-b(\>#V43=<*D.1MmG:6*Z+&RABZ.HJ\61NS%G@u=H9?F)YKa&bk\d\1i2K0S*oEm+AKP6%'`:6eWoAWm&VVtK;0Rm#&Rkgj2B&U[PXF(KY/,[*K:@;%2!XRA:_<1UYUCV'T$dX;KrGi9c@BgK<HAud;fWE3ZL.k6+bI**4pM4"%GTVXQOc&5;2U`E2S22I>=8Hu@W6a!OHkGV2SC\sm-20\V040ej*TZ?o)ZY<mnW15e%4%K4HLh%l/R3[%#Z>IFdM\/h\q52Z(r=t1%c<3!Or9'R/6W<"Ji%U[UYiMDu=&1-B8;AVS:3p>6qhd46.TZiHC^ki$Tn)b=)7$W5QI8jN]PaL<,2knS==;_)OA@<+9STgWU2=mI%X1s<90uu.f3*N9/JLo6&>l^>C\]/_+:gbn9S7ZAi`$ZNd$?JpQ-T2Np<;t&tT(F0&]!>8MdKDDpQ=ZsBVZEaEE^gQ/'$:OSRusH[%anhWoOP5uG+T..!KqLpIKq,%T9goIZd/YMSQoasS84'+^Sj^6q!_i^TOu%$h%)46sXl?',_ouu@%%f=f1/$rEK5fWt"@>c$\@"V)%:16b*C&q$OR\/MIDQ9_NLP$^#SKheAP0+IckTN.XDKP1YJb:b2/EUc!'S8n#4[6e0kYHe);T1r?fpP"G=WM$!9nR@*9biT1#9J3e%>N[!m9_'s-<B8kd%kN;Qn_<?HpB0BdkR;Tmp*@$^O@;GJQqSGt#m0*@,EJNk;!hQ)J?V7MRraubo9_QILCG_\Tu>5dHD:U"Fb9U8%U:*[JP3U=`emZ/$ZBUbR8qW=3=IF0"i=u.nY(UkXP6d-5V*SUI4NE[/E^Y3fS^`O\1]cNH)KZUlIUGI)+2?F+lfo<a?&SiP7oGKk%X@j't*c]>X+ju]lSC@lJHLE0+#nmA?muti?K/jX/!H5k0B+FP<nE$VGak/PB/No(h$H2Jc20]2N.s9*#rC@8ed\2H!r3us%Yn1K^%SWAK<b*(WF+PRt`$DsVgL3Y-HRVZ#>+p6=t66*d+M/NZUl0jX*J7qe53/(02CS16kW9o7@RO"tKd)93eN%g<MfO8//!!],5:pD00%-sfq%IJ/3&'=[1<$g]VdK99IW[hUT-R3@+&1)V(>'o\kQkA2`/&_=V4RQ2YTauB%2_r[24S"F7arRLed,:imiXEoGl(_mXD\3?l@%L52Ru>u@l%p*U6:oYI>;>9s)t6HU.s@!s_:96+$eJRsZeE_F5&7]C4N8JJ:Z8ZF1h7_mt+^rN0Y>i8]uSt]\JP=8&_(t>*/4q2;J%rj.W#ECU.BZ2g5+g4*WOU/JJi$%eI0J.j;&6W4S8Lql;'@H3^eHCmT6+W5ldI7Cmt[B?fLC3YF&!a#m=79I@f/+f#a^H1KglE_f/%j'*m_ke7&ZqNN/?bq"oI#G_M[<"Yt60uA.g/?tYUq&J30EW8#%)^4fh4g72(E)MUZ-]q[<mR_C[T[F:5:U,HN"/m$-1O[]%3\p>'%L74e;UI1/34tUqFPrCbS:H)9)^teNA&mRfCdih)IAD755@qgZS@@G]5'')L+\1N57/(>!.nl!SM;R:#0r..ka6fN2&a:YTP9=f?V%HmC+B?$IE+je1EY\-Ilt#!VcsKH[?u"S=l)@`5-?^hX@"C&\I"N"/sCMi<ie\KdMr@.cQAVbU+,;h1!nK1$>'+jDmhD!5qJLKZk*%"b_F4`T@ql'mRrcp1[S0q,*E9Oq/leb"_P2:!ff:OE4tf"[(S^@p!>5\],f$]ni]a2aVYlo?9=29Z\]=D3(@f+I]dB+oTE4?kJU?%4-u![=?+uI@8Q%r.QPCa1>u&#f0tR!dORdB><!]IU^&'q_7#l$3rW"Cicm>fV=/cLPdgjqoaWtkM.c);,sTFHJ:Wbg,^U^"1mT"Y%BjRSRALC,Z<FmPmI&Po#LZd'Q-".tujn'Jn2:O%Gn0U`3$<"L)HT.W28%!E.26l0CjJ$`l[:E9s_6.(K>peLH-&40Kjq`NeD&P0\%<LbVt?*j,\M=a@o3$9'-BS/BHX9^jpp2p#*+l35D67,ZO)44MU]S>(H3DTXk#,sP7UgYDF/Ia_hmB8m/\Tbi`UY;rO"udfsW[Wf!%#u(Il.rV8LMba@]Feus8N^-fYe)`#/R'T0b\`P`hjR;:_B/s6$;6-[=KoF:b2(YXgZi.qKa"s=hY-robo69n]=?65>DVTNQSE2pS%acu=nHtDYR()M`)\l#DP4PNShd;A^`(7\p@,(!ILUV9QKoQqql!fR`Yoe]km[5pXuCSfmq8?[H[;6.)qeEeIXIiCj_pCitR4`UQ2%bN#[f+3Bj,3M)7.WFCM/TsZ\Bd%K@*ZO"+KSu%TePG"NA<DGbbp-N;+,rP3`U-e"XQ&Wg'@Bau"Q[_h3p%3PVZ9bSc]Knk.Deh*?%Z/^#?ImdGjT4NB`_u7/@Vf#Z6(gAD\Ci/!>85hjY1PkRlg1J$Z=`n?:Wk<QMd\!A.Z?gS?2&s.CI:5GoWOG'`*e[Fd;U`b7$\W&n%*kr"iNTP0!b'4_?]Uc1*CR.[$Xj"Lc055lfm&Q]-7JdQZIRYTkDEf,XqTnir2dquk`36'^e3EiMQi!/G,7O"+/hKpTk`AUT[[7q]%A(_g>A@oqsW)O8MBI3EA5Z*auEOdT<%SLS$X#FCr[ZNXrZ<#J,N\eo36dR&?TLdoFXRlZ8s3(GJJEqi)L.clm-4ed7&mN0_jTC(<%F$*q#8%.E!0QXCiLg%^Lh`]1d23NCaR#&86PZ9_PeWNiQ\>O]kp3#;g)OF;HR#Qm'2C3d(Rr,64iduS!6]:ERdS)3;X;JoT+im`]%=Zl\o]G%)\9(X@@]Iih)Mo0Tod<Rn!e'Xid8e&@Sq2ZF$Rc2ajF-^oUp#4DCF/8tbH'fMr#Z#)1#RQ.uib;+:HIU_@L(J//>@c<e%U9e7n(t7$eoWM,^3W2*-g3i:%qu`#pG.)cG;@0c$idN[;J54pc]L*J,;#<,b%UAstbd^.[CM^T:aoq[A&ef(-`ThtnJ.L/<i#<&a%0`moJhjbg4_/S\NE#/WB0RPomTHSJF=[Ub.l]d9G$H*IE.BtcRHcH;V@Z[)?^M4u2,fIh@W-C)N#7XUXpQr8R:gl@%H4$[ti@5=M%h@HYn]UcS:rRgV0G#9pRd/`0B-een".c0+1J4T_[*#GEd<$`0fLK.OYbX6WRRnmIH%Z#:JCl@A9n84?6!qWjBmsPh+Xr4leQU*#F%K1R46T`W/:aYjjRd,`bmTfif2i.Z%Eokf;)0%7i$o)CE&7,]3pn.UCWlWZ7-',=9kQQ]H8\BD8nH:+[)"*E?W`WrJkI$m-V3<@3W%EqX+K8"9[BaQ;)"(C>3+eJH+F&_,_c,_;<kZZ;sQJfPWUJRWLGJm-,1=B;JHeik'[6Q)^MYsXK)Q&,]QqJrAn%>F!P)%;ERg-`o>%)6U*>BGu8k)s$/$)+--ZB(-6alP+!V=Kce+Zq_@h<(+''W?:]d986c4EM$\=^0++k#?XC8#rE@rN5<u1\l-bWeZK(OA``n*A,U0P%JQqTnBi=`i0P[e$,&Ra?N4N-T<`PMaPp6H`=GI/0Oj+&m",:f&ikHWP<:3u$b::GA:0N;XTp3,ISOAT7g*Yo$?m.Z6[irB:Z>JhX%\'gn/3?K1l?lYu=jmMtK_Nb>oCVf`10,ocLIVU=P\0R\UC9r09q9-)5qQp\&7P#-5h!;;S"rC5)5H6X.@Y92BYACtnfd38A]2bk#%Z"9G">4Cig3Oo0_oLI?L0*p,Dh6/eYbTc/0,tc;KnlfqG&75u&O1opb=5J:q<rJGK8SNW:Jm^;DYQ1.GlnX:4AG<]=5ULsF]CCCh%s8MKnDp@lUS..IPomG7ofhgK>)M:$VFK<L3=H,]^f>$@ODcljTiFepSiQ'Ai\V8PnW/$]+6G+n:Nd3je]Vqu7L@R[VGsSBa,9gAo%(Nf6QkV5bD6%i?+$tEV,&b0KH/[(sT%pu8H&u`(6#F9BdkEX[;m,jcfn1*u+AS@XL&-33o@jOHRR#X:>$C_G%Zud#22udllKe`a:%E4h]HanN)K!5<?=(9V4gFCG/>:'Y?R3=!*ZT!fkJ(E*%ld^Bm/Y,.`5g=Bc+a!RKbnq4Y-K.\K&W_n3!=uG+c*Z\rm4BFC%)UjW:%e#.o[^0`l>JorAA@1\2j4#Fll@-[H`47M!l6C;qA)+IVlK(6sn/t&hh\2EAVSo;LI7-!HIn[/3PJ(NQ:oGqro)eq5aogMHil[b6%%Qg$F3WW5ThoAcQIl#';_.&domR.*Vr"u;.98PU\V"tX2G4Ph]<^'ZG7g1h7a[LuFM1m2O^gDQj_%M`%SWhh$MdrdhZcV27+Mc#N1%0X.TiB.tG%Be:ct#&quQUlU<a3dB>qJe7L+/\P*O='`?`?#<4LBCb^OdT6mVHT,?@.QPP20LJ$!XkL%f9S-Alh4;9lQ@P<Q8i^d[%=\Y^?gc?UuP=Po!KrH^7s$"eFX@]/S"/;)G_hqNDbPtr8106?u-@sCWM!dU(FPpR"Y[9&Z9t"&r3R`Mg^i_Qi*eN$2MJMjgm:N1%%2fE^eAj)Qsn**qN%>rq>Aa63;.NYqLd]tO\<)@$)f+RG)I&<LSMYD?n6,Dp>:<n<Bn<60Rq=D+O>QPOi<$Nu;-Z85'L`I1jj'hC/%;nG]IS'1,U0ftW=Ur=HF32kYKCf?`bZp]es'@AU/KtK)Te#'t3m71s;R78)0d^BtU#h<Mdpb]0I%lEp)C9cSoicQ<23Wr%'+oRX0%"3'(9Ch.oO.i8`,8dB>9(T#Z&_qmY9TS:N0HdaI'!lJmRn?:-$",H!VoJqIgeAu@E*MuGi!^#D:TZAB;GESeC)FmBG:LV0$4Jq#i%Z&iN22SgXn&Q`,4pko/f/m9QqhDqUY,0];p^g^2N#ci8WYmMdnKWZ&U]F8:gM]M*JFcnPI>jNCU.AuB5A<4A!oBc:Q3B8^fJgEDi%!@_\'$c<p3q2m(=/[+Q/6=;Ss`n>a='okB"l16/nKlDkhT@0lCSKgSU+F4g[i%e]\kbbX16@p4of8QmER)?'u%05C7])8=/7[CZ'%?2Go;JE&D*a%U).dj]/dGtlc9=3pKZQRnWr7.&Wt^D:S9?]1OTdhYDqTC9i8JuckDcMMk%]"4?PB+O"Mm(l)3^%#DlWDr7C?A<N&%B<Y[1I>:Ei1(;gkbqZmlgB#`CCGne2Hh%e`BqF(lHCs[jm`^un/#PC`\]*"1/O4b4:A",9mUJZ1?1u[@U=g&:3fB`D[#F.]\hc,&%9i]207>N[7.?5d(%K)!qI6N[fLsMAN_fa9Fg>NTDI6q'.M3aQ7qi;2-JEatnF3^Jn?2'J>789Ao@.>rmos2Dlc584*'_s!rB#B;S%S@o.sC[S!G4rQljPe$HZogYU-#pRJScAuVt)U*[kj3HmBdg7><!,3cAT",s([-E]P]uP$6eG>4p>c[?/`dTI'Isfp1P),PdWC&8l%f!B.8H<Y--rB>Gj"H^:W)5LfoF=]]:A-h@DqoM*biaF5/E<PulGh8_L1mcfb8X#ntWBLhqRg[]$qk$O\WVD-h(tNX6pJ`6B3%A-\%<`=T*/qS"1IWY9*Iq%!2rVQ"]rDiI<4W^sD]m9@hKM`L\XD545=pGp9j9!cm'5G0c5K?,7SO"F,qmNTa=kbRnE(+P]9EQMdKYWX`%D1kqgc%se3N0b'53KiA(BVo`N[:2in/;M=`mVm1g4V*b6;?OiL;1VN'#\#QHWi4W6Y0iEnk#"^C]"k-#[&Y055laBq\G0pIodU>W%RG4kZ#H]_dBq&_hJjbrcW_qlr$UW*=oQdL/luBLG?Up*jY4UQHWUq$<6&$Y8pOO**6H`5g*UnfWG+5M5)d594YtA.=_iQ(&C%YL+%H+:1ZfddFgd+I@o-6mb0`6!!*/ep"bs28a[F^mj0c^@r5b6/(DFK-"J<[bGU/f`hl:CbI7G?N]B:n#;pXCPU''iaDEW0RL;_hZuu%a:-4GC.DGulD8'mF:&h'.`mmo0(0gfAP-lYjmV?WDa7HaA(:j5K0l,1m'k2C8W?>[@4[:]^c!;@A(EW3Wke2H)OV&Ub-O[WLF_-c%NKoJjV[UC=mNYRmN]il<.CVR0\WiQ2WZ@3WQq4?+h]#_JEkVtJ.8HJq*j\GWaTH*[a5lB!@jn:m+<T^KQ;M]HTX39D8:^5cVTjnu%/!M@MFsqqD/J.Zj!lu6KD3%mu7(ICJ;X%sO6ER5B=GSIXH?EnMrqNqHP;V3=?V4oq8R9k(DFmPL96j\>rGcE3\8+l[1"$#/Z>2']%SC>qog$:)[Wq-GVH1C0)i6FC[G9^D$c'n*V7%<6qO5e(0/",4X,Xr'g&!oOUC+g^5>5Ga7S[3E<Tq"/9e8L8Rb.tcOXN3GuX/BRV%/_`n>T]/`#]6/hmSCt;SMAB2hN$BM-,]RZB`<<?k;O/M$0,k:cIVT9f+K_G442;Zt8BLGDq/31uH/p0b+9\90bu^>(>GTf3G3U,@%p?3m1Lb&uRGLAPmK+\/WHA9=hDLK_LNiD+o-*ND(9GI*qL.%iELI;T-1:$LVEePC"Tj"](DM37MQ/Fu*3\jCggL-Ok;R*U"*lYLf%J%%[dX3Y#sf5U/HMb"iuV:\;PCGtKne?9?"&W3WZ1eg(j7.Gc[7kjXe2U*74H(r]g`qaU6%7dWi+D(=W_E;tpUX1mN[nP4VWe7(E%lm1kuntu7E8J#5uS_a^b?F7pncRa@p`?#QYm@:d<HV_24q$]lMh"S>i+MVl&GHPU4Klkej/9m3(3fQP]8KI@3a^Ec(k31+][+mIX%_5"14+k$aG,]gkkl1f.SWm92WNfU+[+P#5goS\Hl&E)Ubp[sY#d+#Y"I$hHgMsUG$!0TYa+g5Fa^O4N1G,Xb>?/LNnHoZQH1DDlO%g5->IHrMt-720sF9Ic3VI-J:=mSlC9aeYZM>!Hnd6Rcl#$'?_qY^LY2)51O"$WVDVi`\-5"%+_@[g0TeZ5=Zo_'ba&@tq>N[qR`4%'X$\tSbF`FZ\RNN/dUM\G5P%=19O@^#Lm<np9skI=*,AN?2Wte'EKe\j*k63;1d7erl-C?H>E-$S+Tm!SaM0]3gWfZjh4/[[J@ko%;o`4f*lpkFqV0Hq4YLY0cPt/@<X%9n/5DbKClI7R(L%f%6`<,UD)c[dPHs8]a/L-rTL^%JR?!?G'lY@47sELlEh`_n&/B(aB@:CA%.^t2NRbZ39U0Q($bZ0L)n<7L,Xr<N5)sLa//maimCoNg];ri20[Sg>=O/"!n"d8Rm3//ts]!$kK8R&$Rm$_HjBj0oNSSM<aQs+,'%O<7V7:.-l=@T*O!@PjHe&ZP](+kLW[X@AItD$Qb7?/h:Mj[aYk5=n)gOVj4aZ'C0ng.$_U/8eM>(7fWc#R%0ja>2gi*/,Cf^p_QF%rZ+KD6e:P$0)k>8i(FIMlu%q'pNApqBN#d"hem\!=Y3/+S6@7`$4i;!;mY#?cN(sQhsQG?96KHu<%eR&`&!p,RRRP89OHc3-D7JM%@/%<*Oj"aUC1\Jq0Cc7nJ5j3tk%StK2ci!ZOPB$;97hl575jpud\@<kE=qR%kbc7+5q-#8<Md.m=TjB?3"oUjN\HN8L%R/-'/@kY%rJe(.(JiG]+>HtUU(ul>g$3l8_E..jBs'2A7huJ@:U9OHk@#,Tj<`Zfhpd#)FAt,#Hqu2]BU8C?fBr?#>P&ouN;bEu#:t9SZm%ci%><QK.P'(2SVqt$'caCQ1e6]35=se"c#1J)mi:@[bZ9JdUfKM'lYq02<NmjKX^@#r8Zn`ba2F0S5]D,s2Do0YrRbIA/dpcUN=+4E(%,-bgW\HhJ5\%/D;4_ZM+X`gmM'+ssP.LD:IZSnA&h\i;PA'eQ20nJQhTY9V>?t7C+ZAV@$6,k[S7][P'T*!ZVn18QU89!L9[,cG3%LjY?kdXou-C]Oo!:&)/ZO%k74<)f3G=4=>/Y!T9#-.jAfTi.bD]-3O1"X4u;LNFU.EG<(^UZr)gDES.R(8Q;-+RHgYiQnr1oE'PS%J7j&Kn-094=e[\4^^gQ_!5Gf@2]YY$Eb7nH'KADnJQ?'a&BG-KL8@?5TZZed6K@SI]07-iCq-Am`8M0jg2i%JP9Pi<QjQhe_B4R8%7#,GA:!bG8B<]4(DqN,QRHCcH['[Fo!d*QgHX.NmcJ_Y+YqBcmXaQ(XaLBS5.IR*c[W#UU]@N]C(u^Y#M\a0PPU\>c#/7>Q+C*Jr%-h<$Q!2La?W)_+<2sPbuU6pHA4%h/_J?MLG3-r?h7mdlq`S#*47)n-nWKN%WF%p\j5(jj@_iN53T[!7i]slB(Na8^Kdu?%lJNcUg%bU\M(`*7BIQX#Hck`,3l()$`T[Lh-4jrE7>2eN=\JK:2m$Lq9KAF'Y+:mk.o7E-DB9(2QsV%>WAGYXR_]BFRbcfWJY6b.T$p2-h0%"8J6`L6IT2bTC8RXg]Us1>pP8nXXt?R$m=t2:eNKf$X*G9W-k1K"6W+NMF2[>ql0U*bML"m/.=[!ijBk\F\_ZjB3F/41=,eZ6r5!%cXVmm,p9W3<Y+E"X6!*AE\2Zs#CU3SpC7oQ4Nej7,MpMP3t.]j\<b(G\V0#87Gb9J=M.aiZ_2s,A3k*TBlc$8gdg04&OG:4I!,]E%"!';uVMXhg=L>lX;ESJg6daBQG'I,r&?B[clq'_r/>G5i1`3<#@+Dd&9BD$H65%!HG61n)bIokgKWWbnrO7XdQFW`(,D'fqEAsLF%A19S^ac/AMC%=57+;3MU[k>\.s5S5I4kg0tiZXju2*K^N$G(EWD_O#Ml:pkX7;rkq8SL,$fp$G))3H+S)WI($>l9!l3C78F@I7)]%2uc7o_#a\)"AtbE*SOr@=0Q<<>9Rn_U,r$;D$=)I1FgR>?hb\4/f/nb.0cT0.#S#>kA#]Vr!qWokf+gi\@?uZpbmdI5m&/7q+A%2%21AckR=R4r?hEh519'N6L#`g`7d\e"+nkjW/.=\CW62,@<I(l6:UK&E';XqQcVl6LH9IRFJcOC)"k:PWQO,W$I&5P"0=:d%k;uK(%4YHP(X"-u+Cbke0@&ST?#[#X5gsY-6<S7Y*Te0,7#uuUN2FN/0$1qAVWE5BXB=86p_BJT4WFgZn4=F/@Mp5Wpq-cP&qkV7."-h8C%TTYO<R[hUhP!)\8m)+)o;!V+RQ3:&QT[@8`V`L(\8)A0AOm!d:C4To,n;b_=KrSbg%"lP(cU>;Q"h[,%"oVqgJ\];3jHTJP1Cs\d%S"OH[>frFdl6bT*'sR1/&DKnSKTl!kBP`c&LH@F/8KbLoYlBIJ*)j)fPHa8<g,?i/F(U@XeY7FPDq-RtDJl06cJOP(%d1e!AIugg%b@,SInkY$j'D2T8[%'B:kWk:>8XR3i/<-d9R:h)%Xr,ji,>V4T%%pL@h9JA+7@hE8F/<Dq$L9sG#\\>*Ot\FGZ?]:QL>F7Z9l`1<%c!WP]"_Zb7=3+$pkJ<st6FE2Y)2k=1Ze8F_<R1J*6unmu1_YBpreUnBMbqp*@B'r(.eLYI.eH7akHc>@]V!sN'ortX0-V-`F!$^U%j1r@3]FcO\e8`l9`8Vh'RHc8jHW$@K-]pK=W%OD@A0Q2`hb(en2YO\be.E\Xh/'>YC%j.MTkBK%8A3=r$1pgI_n?MVQ[=QYH1KqM%jF&1"\hCHjVsFf_f[$n!8oM]#lX5$qf2YC:ldnKY%6PZ+d.8*U3CJ8V_lb6[@G_l4aaNW)Rk\f+o5e'M:]/tDn&t,?&,AoU$g=1G%:%2lfKcNXk1g6%=qAo$Jj-!6Yo0N^!d!<2,lq7/'3o56T97d@K@h6D*BgCc"8D),"?cXRo>0:etBP8i#KhUmQm,GATMsLh..^F[Y%">(h3%&X`FT%uU_^M0+3OiO3\&%bE4%fI,+0/Nu8h`nUJJ7*4RH/^>Aq12e:=Q1,'0/uBfKm/EM6.:&`j9s-fZPT:-XX]HObg$F4%nRhZQ_I4^*`O@2GDZAlPDWEf;>S%,iI`S(!Em^C*WIft0;&E,4"1OZ>LqeA3oZfMN^cL`pR_?$.#S+B'W0kbI/1>G0oMDq;fqe&S%-uZZLi\iUn;qg:%iF4-"1(9Y,RF-ee5Qjg8__d#On=(p2id7UXKu#S_-u7`"PFKO=nceX7F-:\16-.WIT`F">jD%=)59O)YGq:mE%7`NikAEeZih2=g8`;p;oB$s#7K!g;g:M20qkp*>l=?l()(D$p]MEGSQc5LK+RA":41dsT%_^6=5]*tr_$R)0!m;Yq=63pA]3Y]]P%*gD+X^.M?Z2;\ZYpWGNc)[hm#*tf*jLlXX$+S5&.Wq&UY_%%Lb#Tso<0Thn>ZV"o#o5P&Tr#:Nn@m31T#&SK&>"!Kgg,j,L7j"BW%X[(gF+JUX!L/mXeF*I^S:\6`m*@Q:Bl<%<s':Whmd=Kf7^3PuPJVjR7\msZl1Z9bE(G$cH^d@'9AVkV+&n%4ZG`b%PZ%ASTT:DEk%V0h)BcH7#HD6!k*)(FAM-pnebARS=8K+adn[#^;aUMEL`_'5tc:;X;-2CVtAJ?PBJQB`s@AqMO]28]@Zr;u@B_;eHV@u-=c'D.4?%^gj8#kDq80512*P;#Qi[h_]2g`@com`&OECEEU"0)/\oAKcQ89Bm5btE<EdKN?h+RJ]uN36aUFBd$+]&R:R$nVie-K;@T7tR&S@,%FK6p/#SZ9Jokg0,`1#``[j+4!L%3PZY^V]lDQD+M.`/R<dT(+66Vl<7c$aX<!e=O$8"8R)q;:;V_qGo=$Jd*(k`Or"n1$0UK3'Js%7i>Zh^B&tnW<aDYd0cmS"(;@$_FRPH4"l7G)c&L%@U]U0UM5nRRYMk2nDUi72CKpIoJ7=@(EaIpkh<t,;05@%KGFarH)Q/@G`b-h%(kg!2J_W(:%YJUNYAt?'dJN;"B*F1,nssuCl^;hVFql1NcK"p'q;Z<h[2S8]%XD9fZQ>q@a);SUELIn(h`p9o&`r\KZSaiX1=,c\%5t\S#\Uj.rN52mYX$e1&I0E*@H6+]7XCP=r:ZBl_%\8YIMJC?o7iA!qG&LtMDdWuN8k`.3FS&[<8VPi_8tFW(Va1\42D;;5SA%U2%MhWOq6=S5NR8/h=E>LL+kkb.]\d4*J$>74]io]5#<5)VBP]"B"Jlm+l#4K`J815Y`hfDADgcuqAggOZFDgQO*6g9(<k";l8^a,6n%KDe-MTqn^^5eMK-MbH^"JLCVIH[k*o4ING/5(SE\")N^';O\UnIcj#m^c1BAgl7"Vh!K-2Ot1@Q8$ktXR845<JtfHS_:sL]!4eLf%_JW4rKT8KL=FbP?I$+1:E4"mfkik!,[[JLeU`85`!n!oV93#e.aUM+:K0J/FNDBf;A?lkc]7BJ6:o]?m8WsDCA*DBD:P)t$EblPa%8+b"NP2Fpmp^J<4%B'39aO5$;hkcB[9u:,u&>A?[hk900WDbe8g[sgd<)h3C3j2(J:BH49CPSquP6bOtV-oP*mTa$?k^J0NS<bOU%!$ZLNM^OXC21]c]l'RoRJCBr\gGkg[*<Zg[i"*U71mGpHEHgn9l%!7fa4&r+lVS>C=aVTrM:AMmZ><IU(PE7E'NXuWQkSs@*D(tl%BF&^2B'k[87FJ//,$6Te?9uo+%e=4nDfb\3U>@4I-@^56YGpKNV$pbN1p$TtEfT%tK7LZlI$oFT750%O85m%qeo_G<m]jLc/gUa'%_^Z=iWAT>Z\/Fh4jTmeHLV0OUoJ4MO-Iq?;PV;)m%=uD+^Io)'-P`c3/ES>.DmIR*=j7..r$_0RqKtt8aVc]Mo6+_S#S3iJP7(Nb%KPm2*+mFeXfnrS"5I4<Cjcb)9kQs$*dsqn^Jk:85A0^:/7X/]p+DU:qe.`>9g#.K^_$hUMYMKsQP[OnD\9n$rZBM[I_O2DiH"#ne%;/Mf0[ObZ\G@*]RhIl$tQH?sN=\Y'4q3^Y2Rc'*V5o>lR!GhO-:J5[,D#3gA_M>BF:].D1/XK2:CotShX!K07nsI6I%f+-`IeS0S%9g5%"5'3o]Xp2FiOk61.c):t(V[1VU#U1+X(.mO#TH#<XmHSS+X*n1HHVP,X9l*;r/ajQ<M>ILC!$2&NR>/5%0Nk%LpG9%_qS:V-%mncqM^S*TT@X70?O`D0(T:>uU]@PS=[Y3X8K?ccGE\]5>@]6_Xe]eGp^SeN1mhU=j<)TgXq2X"]F.4\<'kieThkfRW%R&^GiYC5h%Sci]i==tpRW:#*Uk@HW^pqC5Sp,q;'?q:YtG:i1B;H=EnL.&Nm\'QWqM;j[K>U:SMXb,>/)Y!,9;ZfUHMU6N[f?adm`3%u)_4YA&%PP_oq^LOdU"SZ0ld'N9Ae!b+4_;I)DecE(l:D8d4j;'5E8LHD%>\0(OH2k]i&LK:`QR5t6.!<@B`b.8jKC:'opSj_F7*+I<Dh?>"%IW$N1##gMF+K;m(R@cTS&RbcQS'@dYU)os`gg:ZVP,Vj.7DN92rrf23Gn7"HQnr_*@P&/;a8Gm]5j#i'r%?BcJLUe.H,Hc^V<5T@%_K_L+ZijVV,$3-8#%lmi_a\>r%"[nE)K=dL%lD'RL^O*,h9;=M10%E*&=fW0ocfhYb#49LM%\f]YSlUaiqk3\Zjc^l"5a&$;NYOM%K=*d?I\2]nJtW^a4]Ms2&1.Q&RJhV3416ZSJM>gYX5fl4Hl5,EFKn3*-*!X>i9;G:nH+Tg/VrU.;KmpNrVg`-qt9"LI#M8;(-isD%!<2Jo:/P5X9Fd\[qC/L<=R7aaT8l>H%(sn54okY$YQ=R!';j(Mpodp4-7Pl!32rnrQsDcr5gthOeVt(1Ar+/s?(4ar=[qo6-dp0"%b<+I,Po*mA@TE0GKRb.t+a(!)13,WANqt6BXAem)k$Vm`-4h..M1C;i\h$VPl-k[XIngg?fgM_naSdYACi_WtQmd%3Ejn[m!#KV&%SN$,#CebYZhh7.f;%63Lpm.T"F?P(oUdo2,_8J6X*-#eQhuRo\+Fg!`iit?1%9/+PSnPt?rl%VdLJ*C=>^Y3?aT);qm>[4o!U*%>%%hjgZO?#%EZk?&k!RAbCOJklQEp-B'i@%N-pr-;a-jN#P"#Nhu*-GeOetF`NYVPi_O:]t\=K7c2`@<lK;GZ5_Z^-kH#qB6rYl(?N%!(fWM2:cKj`gtBe3J$U#`;0VY6+lR)dao&#WM>dL5D+\h3^k6KK/t,cA!J1uD-11tBZSP.,08nV6B(+!6L]+H<EciHJ_1KrNMU$B%Rqb6BW6p$u?;G\jWb17>FSPid+fHFcK16A.%ge%taXi*o)(M%D@FETZ*bOEJ@r=k=_D<@n]fH3)M^$Ub,L/6Dek?85JsI\X"&#Pk%GN%iBI9/['bH[$^\ZcebJ^`Ro\t]?!PGPs`(.F=)*dSAK']ma^%J=`ui4QB*-gD%BI80[4Yr5/L=OAMinq\Q:?EHKGiG25HX4$KO%Sj``]0rfNkFiV`j?GYj7H]E:S67Z*s:aa:o_jT_E=A?5bUTeG/I%9J9DsjX.ZQY50bGN%rNl,b_i<\_]"p1crDFMhuE&DG(GH7`X%!aq5D@Vr")"YrlY=^?UIG`]?K"t*-)`uF)/:W6<,qu>*d\VMA8_I.e_Jen@u(5(.4'o`r#^l_<derXfCN!DND9'),uE-Z"?WJ3+p%^DQ-G[#2m53?O(@A$gVW'+:@?k_K&XMGS0uLZc,tSXFO+eY4e`<[IZ>4[/P0)\@^Uc,^SD&sNjB<6%R#!jPobAIo#%dF8WnNg=-Z%Mr%[U(L14++EN5.+g/SA,*M=L!![;63s+K#-)r]"5C(;h1+sW"O?G.Y,Hb$$^Ah_2O6OYe>X`)[Z;ims$oW3ADU\l@%A+;VcM0N"%)`L%pd\5".9g"ZmTM#X8@NZRl3fZa!kX*OL%3t:aro[f]%*PY.OI]fg6r&q70+E'2b`NF8n%]PQ0=k&#m;)2U%qcE-F1X%H;^30"%<Rr;D,LRpoZV*n12?f3EAQi1?E@+8fOPuqR;e>m<3GI;07aX%kF!$)S],IEKC5#PdQt._q&P!rC]?^ijLPu=".n0/6JI3@(ZPoR!%TcUle^2$,k2qof4<#Wr*S$@tS&LuFbDXO5EmF"j*'*FXf%CJ)^@f)AB!*3$nUQEgdQYaU$d5Ek>>^D'E:NL[dpgW(ncAC[^fZ;+^%Lm;U36V[n=d86A!SDYMg9!eLUdtZ(6[4VLET?Qf?eYlT(4`6%3UA7rZ9H)WJ^p5p.M3TVQ-4iu$Pq")V/&dPA6Bk"\\lP55@d-8a%_2W@>j?U4&%"gNr.'H.XMTdl=que%?l%Vr@i<9V-L=LmF"\,l$j-H9bWon5P,@k#[VW<XW[45hqo\oMjJj`Ed7OgST;73Lrkir5=%54F%_=k5cT`X!MA:V447Os#+!Ekk$V>q%fP9GGI]HSSqdbP_uqbsVae*[e/m3n<.(Bc(H@KnK58".F3Zf['Ya=AV^B9W8/@QqQBt%GDp7Rn_f$0IGS1uMAH>*Q(C/fnC93rFWLWBNFK2N%<[sh_U>f^h86Y:[&U*a]9jjO$Tj.\OoDVFl70^^r1Vi5!XMfq.G^X+;[Ii\%]]e[c2>#6aU?E+^<>S$io3mEnk'8W9Pg\j*E?*oHXZ9B\c*e@e3EiSE?"I44/F(XUbHMa0Z5,le>M$k&)aGU(E?[)s^L'BFNBu8N%r\i%]%9mC:6->s1j3'0j*-,kfY!`;Fn^3b?36m;!k-"h14Ae_6R?FJFAp@!.G*5O:-M/6"97-JpQ.:clIp;*AUIgVJi?tRJaA#;]%d\(Oi^P"6`)'l#B@)3+lW!&q$.C0t9c[^7erpMoi=kQgAW\!1kMdO`r*'710,rc3jOmnLc7]&=/46B@>i[?eg6[>b[nSCha.]o7B%SW]b^mC)X5LSgZ.VGa_h/R#kd+]slZVPE6gWj'[t:_u+Ma<GM+U/e9?4mU=W`EKQ)1Qa:>0$KX<;@Mub,-NHW@_&"U,,K,,a@%f@%e8'lsg(K0R'5U9-(?l%JgQNJ*%ps$2>nX3Ne/gR1`7)sU:I2rl/ZScfRH]-rE"h6aD?In9gA[bNLYOl]JLlPo?Hh!IO1ClA/V-sK%`)9qohp`-DUWTt-h>0k%'T*6Qm#!*3_K!NjR85*BeDc@n4L"7"]50W#G!Mc-'&M:.Ae(QX43t"m7P\?BrZ9([eE^jl*`X0JmE_4o%/dE,nZB^Q/GBPY:.hX<W*Jm_)Y?9'NaC`A"k2Tb9'12r5I#cjbE&ndqCK'$4SW/a#DEq99pV67TZ(X?GD#M#pM0Qig^@HE+FBTn,%*K(dSh[OOZrU9a`q!GJ!mSsa@Z$[JYZtGk"%^4UYB8WF6O+G09nD(aDEZ/32N<AbjAZ!`X$E1%T\Ep117hf@CWY^?CLD_3X:4+Pr%IAk;.RGZ*!R^g3.YNjg%l#/.0FB&B(`DlEOO2(k%nTqia/KPFBXH"-paY.3.-[ktt/qaH?fOV?L8$99r-Z/9q.E[G]Ts^&e:lg.i%9oI:kX"A9uCt(%]p1K^RC,%ZHHZs7jBY*+*gip5EcQ%DHkhPTR,6ES\<*t\F(q\Q9YZf:U[EBagKO=SiL_>$*mJ"[]6X@_jNP0:C%,'&9Hlll9d9m`?f[r:l*Faa[L,\8WD*<14M.7o'q9)A"W[\PpfU0K4n@U^#V"-2GElLspQ="p;9R(L+N&;B.>UjTUqmAjFj"X+b3%qfg5oOYF@gaj-tZXH2a.p[S\=FCiB=aRo?/N$?9nn,E+H@#1*==*InY'SVQ%.3N<nJso@:.`mrSI^QH.H`aQC8]o(sNKX(`i.UuH%)"&Y'2B#$p03*2.^k/rkY29S0.rfMZ2,Xs$PU2'1-7E>[dep28%.neTle7D@+p5Y[SYu+Nf$A\::Q!eN%ehP_H_iljZG6OS?gX7+%G?UoWc!!+#e32q;Y%+GgSMT8V8,V2.nLiYUd6fGgqVAl]!H*?7h6t+T/_`&R*f@U!\r93aHj9_Ze;tkZ0\rHf>"h3SB.9:hi:dL`%[Zp'4pH4Y!PF(!?E3,@#JB`K&QjC7W`q)l*XE<?:hIc\`W,.op[/_Z2r.6e)q8_8Di)r5Z+3+@AnsZ(]CEcs5A)g>%@%^B//&,9p%0.Qn.J(AAXn2XT.(j*)'$V-/:C1frHar[W/C]qcHAK]+&*WMm"O=hGJGP"t2dp/?*M1[pqLCtnd(KZjbl*@[HS\B>mEK*Yc1]:rU%j;tQG!M!d/%t1g4S9YnK/0%$##3#e6n4hY<`9Jf5rF1Q,CPsqr<#XN^Njh".l_b0R"MWD+nqUe7a9kU$Ath7Ql<XZINnW1ffFr,O%a0"j@SFa[;+1iYMIc_QlRoBJTIK/S3#S>`g/b]5^DRLAij?!#j;"V)B@K`\G3%mI8f/bZP8fgs^WB:i8D?,&dMA\DWSJ1.-KIa/p%K96>.L8a4bCHsk[)F3R0jGCThI(Q0uepJuW!!0fJlZ8Br.4I%4Rp9al(nX:XWhH8&Z;8mQ0JL-F_!;XL$'SSk:#7J!CFclF\\*0R%aU&t0]R+tF[%Iu+*92Lt0J*Zu:A%1[M,<"/a4M0aKj@GOcCb&oFk3[r`fZP4TRFtR(4Fh[*%<d`ckk0dPO6r1Zl1.o2p/Ga?Et#)%qkJbP[/:t0KEG.ZW>-R0/17L+$BQdO%\.h3atY1Q>KDVghi6)mm-+e[d1265I#802PUJ%C1\BJ)iB2L)_4F==\@EO'ED,5cKH%A*%V6a8Sr;Z\`Uo^8.9k*EfjRL:G2(1Kk,2^E"Zti77h/>\_n(1M_JCc&5IR^rmd^k]bH/I<(BK:K*"uA$."]3(97Y$\R3?rKs8SHP1%+=>kmMHho[-<`c`#K+Ag\*f`Z;$R+`]qmRp1=.U'=SF<0V]"SYc_`7,e`'cpk8!FJP7SEN"d,%EB7G#ceVX[!f8D!I;$":k:l:)M%'FX*<rNJ(C2Q8`DTaHEi!$B&Q]Zg,'_Xr\l<XP'FC3T9%mB)qsP%AL0)1q8b[J"?,[LVCig0Wr?9DAoQ1ojgC=@bX6(!hg8Lks4o%fFKM!I$SKh.TGZ3+fV/uSW0>'4+WW5[`W$fG=LI#,87Sa:BO5\q$eos@L?pGl0"gsL7tm^L5NL.q5c^`PHZV4G3.;TU(g=YDL=CA%F;Fm-$EmVY&QM<i>6kMQPRT;*1;ds:(FCJCko:g@k012k:P]'&'cAD=.Q.8G"8@aiK)<n1LLj;CXUGUnN`-JMhnp<r![jOM=8ln6%4CkH4a:$(k!_Xi=KZ%1Ac`JSlN,,M:oBeIS1O45aJY]:0\^B9<$S$pTmcI)E5`Cam=i!%c-.Q6n^9j5;B2;ZXJX@Bir1&Ua"VZ>Y%;_"To0_HNkUguAJ3`ali(WnH/^/@#WIdBTS7XbG$c<"fY^;PQC4_AGXpH>+2Erl?7)bK9SL^1\/=_Opig6c!icfBG7d,kq<>H#`p%-CqO%o91"4).&udJbflWK_LEGY^'K.@IPas[)I@s60qE%)EV+[S'9.b3N.K_NSj5ZL<OG^aQ@r?#hFNICJ0coEdH!,/pV)>md!#5%/I;AE'PfCekJfNoXQ_MGi4tj!,bUi+HOm`@f7a;[bQ;_DfED/eYuZbV>k6sr&_*CqQ$eJ7fK6]5f#3*?Yeh\HebS4!'??sp20>59%Us+\!"/CV>RY`TtfYSp>'Ik%XL,hIVKH6SlR+12*.Nibm>_h.OZ+0Nr/09PeM#fCW2a)<b^@4Z/Y-$r<U[;8=-qsfG\ao`*W,[q7%7aUAl]5\Sd[NlNs)e>%*7KO=qRP5)4#&XI=0M&>&0hPtWTi#^8%21tW;a2Muql3(fEOs<VLeIpWH8Q)2/-&fMh#l3<8H>;"!OQf?%6RF\VI"ED[L8$NW>9S8*9R+>;Jk,lYm)n8LLBOfRq'`m2oO\>_AjHc%92G_TNYY(aq*^8ua/HX/Z\TGKm+A=V:e^/"9Fo3;b)r,f%7%+l'aFN8*Uu;TfBY!LHAH-3"NmLctAqP6jO9K0**F%oHMiG<9co"SHZbNbrH]>W$MtgieWi#0Eo@bP1qa+n.qdIB)+JP@fcb^WI%Hk<(-B_4!^UjJ`%E%ESqF9R;BH._\#B/m>Z%%fY!6'gh")IgO&S+fgX9$DHtE9o/fFG4joR_t?#2?8an#?.uuU?P*+ojBoV?!95T%fP@boAdu<7gG+(oQmT@,[XVsM]Zf,Wl5o9aV@d&Y]#a7pVqr%S)QkTqfqCr8Iqg4)df],A!ZPu%5`DBJZ&gAU`R+/N+-5ig^2LA!%WZ=/M1%#il#<3.JPH"(^p;)o#**M`ETuZuY4Fe`apbs;f^15HZn]p8kDZ3iS.`a;e[G62,1[5,/S%:`?aY$)OjiQ&ei-YT9/d_(f%Z"=5IfkeZag3Fq*<njJpS;]g[:r]QXcj&$;ZBpbr51i%?=-OpD*0Ysrl[ImXS<XJ]%FjtmDU+n"1_dh4@Oq+eBpJk+6i70Jgf[!m%i]aF"8YfD6aVM@L8D,frZ#qG.D6f4l1-'a/b1dXXkF3f.&'\j`;`OGXU,M8M?&8GGD1bjiU4*SY:U$bU[ti1_:(+A'm>MU)oNrZ[%P6Qk``*dJ01[W^=AT!M-L5O7\McjICS0SulE0AW"A-H8.#4OT!T9t?o`UX'O",UZq)u._*6lQOu6O"kUZH+_GkE\lSBI^ag<-]9P%!0hpr>t.YJY;]ZICH3.up:0/jZQDmg]Top')=$nlG'6rmJ?-*\cg,FP-?"!k9Z"DRRjM'.[MTUjf<NL(0>^#7%"TpRDMk1AY1Gbr%aM@[dg6Fc=Fd`@FP#fL&fOfq+0r\Jo?cR-t1r&DVZ*(mmM@2="[\G-NHPVLQZCP>SduKGo@;)\*_[@1Nhu[r^`i>1Jc)Gc9cqlXC%Y,BrF8uVqjDf#'5mS#/EqGqK5gRU0@_9p-l/ujkkfgsN%AWNMp[Mi9Hq.oO)1V!]6]+bZX^G1RMq>;3,?W=c-hjWJ'bG^qZj1?%2%_pq]Y4piRhY#jFZ]+/K#9HN-`f=FM3R<#tWebUtWmVMt[1.S#bl,7E>6,+r1ibW&@h'HX%!j+8D:#RHX"Xps:#/:\?24AO2_XrcM%/a",/TpO\WCgh-%/WPZ6nK)b6m:04]D<)OTGUlfd^S37&nZG>g<e\f=(l%-XK+E0>7IAm3M/U/oAeJ2QQ-"a[*%&LU\:-7%FmVti%GmPeKikHp)iQQGJq>/+l/F5Ds_InmZWe1'#Gphs0o'?'k,.)24Z$Wqj=pSsj3<&dQ/)JWWT%RqV;5-1VK]8GG`(!>#AF?<nE8O)q%;9s/:V,qJ=f$J#HjB\.^g*[/Q=QPoml-WiXC<!Cn]C<IHP0K;F,2r)Nc?G_m!;Bm?CH8:0GZcmsSs</W`7XNoh?tQ$1S/_Jb!9(;%)3\F>;(bpePNTRH1EeJ1:EET[.?dNUbWg"B4su4<XT%2tOpD=g158k.<JVGtfoCf@QDII--(lnlKjN.mpR%EW0NOV0B>uV2"HDbs%9VRf;dD"kH%m-cC+Ym]#:Kq47epL40*+FQ9Z#,\!#t8G/]!XA2<u!kHBHq&I.luR-6?4lnU>'I9DiH.uPh0s4GapXOq\c"X%oZDi%X(Z_de`9I\%I2B7)B,c(9mlK`[DJB?=uVc4L4#ig]\"^S)"n60?37T_ocGWjjc*Q0i(+ME:OrA%4%Fs'`T-+YXQO`DN+9gKo-En,%W?O=G3J@__Ra:IjES75MM@E;>eCA@&gJ!FRS;YugL`o[S%AK_a+M)UH5&.7FX0B#c:+@\edOLXZ[kfF>!d(#MTVRhQT.90LqE,Ej%<])mTT!5Q:\8)11>.Spgk8m\4k"PQO`sXnT18A_IP=tEDa-r\Td1T,7%#-i8lZLd<(HE/>$C!7lj03,<e=]7Wd(=L.+tM*pB5UI8%m+XgRP8qBZLiAG=#Yj_=(`@D'DZum9<!GhQfr(6h\X9I*';0ogKG.ea1F0Jonp723MUB8N4Q_"5=9--[,p1[t:_;K)B5X%.o\D%S%#6qA"_Edhm#+dd!bM>^f&0'ITiMWsH_Cg>OlT,.^["QIO!lB/K32r.`lJcXG8G]WtT?h6@jJ38k"Ul.4).NH(DeR`g,NDFQQXGp3%/ENBs!CXjJ+:aMR7,G+FD5X.&2?GuijQs-tYuPHs&r:LMgPE'HQl/g-a6ti6;/M"+h(("VeqL8.9EtS(O0%m\Be^:R#e&Xq@5q=h%RmAs)O,!nqXeZcGlqCQlDXNd6<j5KF`2h%)9Un87#VcLTNdK&/D#F?j$iUI#)R(#9QDMC=8>2Xl9tT.Mnn.h@-#j><m5pZ*!+/.Z%^)8CBQhP7Or^iodE]/8;OBmF;6)=/.f\GP\#/U2l30s^7-`5poG6n3kH(O4b$d5<2aFanZGQ\Bs%)i0Sg\H4lI#08]dT*^INL?>Y%CkUtN$]%O4:qSQM"uM1Vn.VKI_BbHj']=&^K*8boWj:0K1kAo!bm98%fHe%_!kH?cR.<40Y[2;/+jW/RJ::."?,ta8=XZE^>'8r@%0]39(NZ$@9:_Eonc$=2G\>Y-=K!;.O4,E3AYA)ae0&`2f6!eUInHf76CZT!6Tl;^V7l1LYot!-fe6D6a)MO'E9?_'_298L@G<$o)%Q$j.*5DfT]asZ.1$k>D<YGa\-?+l`E(G!b>U(E)L!Rj:VBLY-MEWEf8Q9[)lG0c``qaM\3-Q9lH@Dh"Sq\.%YETG[::)30_Brnb-%&0r-u6qW\?'Vd1'W^DcO[0OckL3`:'&S5fi@!gcuIrS:Q8Ee'I.O7V\ejOkW*ZY'Rf2O\CAH6MV8+8eRALpu!a=uRXUBGG;gGGR4%@KKKLCmdD/W\ebY=a\9Vd1$a&,pJ&1=#5:n"#XNinCD#"]\'6T*<o*HRc+CYJB6-&Pqi$^S?>dZlh6PlN<!<c$HEMgp*7utY>%&k%/J7\\pHh]%Lr`H7Lt+!0>)q8o'qqttPL0Khmu>E`"G!L(jG/cQ7=J#qg5Vidr6=73\I3::hc;j7$rWs"P%Coh$<.\d?qXP#+?=7C%9ZP/87:TtejCSf6M%iY>K,(9"S+%;.mX,6;HL+[$(k&Vi9\M33P,mF:W"sDO[<T,HNE>TCUO#^kh6b"u@&+X))`RQQ:d.bI/Uq@n%X0jk3%0ZE8$S%`2XY*Z4i$m>05dLL_0TC7NcGiNqF_q7lmNlQ*C+V%6EE4?%IDF*@C*"1dBj)3:2Y--App'7daj-<5W!sF.2?Zf<%5d.n._h-X;0l#Fh#K%YgR317^e3*:S>?]]B>FuTYjYEQ[_:pXDDj,)IAe=L"Vf0?5?4C03<(.h$WI-S*_\k5(:Lj(/)CgHWo9?T1%nRYgADR`CNj)s]a_"%A2(e9Bp<EAC&MDNjHcKmIYdE_]`ii=JnrGTDU,rb!Fj`O?F>#dZ`mZ[Fk5CQd3J+8k$s74JXrq5h@T76S$%^[M4!LS+SEjn&M$q;q@cs7F2>s7lE10E:[fkPor.o#mpQJ,T<&?_0I]o[D-9qY[6Es7Q01duV7kq=RNJs75:9fDkXAJ$;%aEaSg`%%tFA0^\dYQCYUhr~>%AI9_PrivateDataEnd