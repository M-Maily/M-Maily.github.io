%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: UoE_Horizontal Logo_CMYK.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: Marc Wright
%%CreationDate: 02/12/2014
%%BoundingBox: 0 0 530 86
%%HiResBoundingBox: 0 0 529.5005 85.1235
%%CropBox: 0 0 529.5005 85.1235
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2ColUncoated</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-12-02T15:14:13Z</xmp:MetadataDate>
         <xmp:ModifyDate>2014-12-02T15:14:13Z</xmp:ModifyDate>
         <xmp:CreateDate>2014-12-02T15:14:13Z</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>44</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgALAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9QXep6fZz20F1cJDNeP6&#xA;VqjmhdwK0H6vmQOpGGleSfmV5z1LSNR1DS9W1Epb3ASSwi01il1GIpklgdVjkSQFx6iTetKiNxUx&#xA;ndlEuKMRZb9No8ueXDjiZH8fJ5+/5g6e9i9idKneP6nY2MV4bmGK5RdMuZLm3lUJbsgkHqcTRqbZ&#xA;V+chfX8fF3g9lNURdw91m/ur7WRaV+ZtyLjU5PLRkGp3bWlvoWg3TmO1ggijRJFjgDSJI3GBUX03&#xA;9RuRbgoFBdCcJ8i6jWdnZ9Mf3ka8+nze36L5l0bWnuU025W6NmVS4kiDtCHcVAjmKrHJ0/YJp3pX&#xA;IGJDhpngV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV4d&#xA;+aOuahPDdX+qafbXWgFl/wAM3LH1OU+6H054WhkQME9SWGRCHVWAfplhkIRtyNHpZajLHHH+I/2/&#xA;Y+d9e8za/Za4t3cs13HcObidrlATcsZD6nKUrzNenwnbtlmLFDLAGQ3cjWavNos88WGcowjJ6Vb3&#xA;v5XahBba1Abi20JYjLq8csitcW0w+1ClAvMk0EZ6NyG2xGQ/KxG1C0DtvVEX4kvm8v1DzNc61rly&#xA;NNtzZ6SRI8Noo9R44UUkPJIBy5CgJYUFelMuGlhAWBu0S7X1OY8EpyMDzD6C/LXzB5g1DTZJ7SIX&#xA;usaAAztcXEdpaR25BYzMqqvq3F1Gjws8teJXnyXlmNjyCcbcntbs86XOYc484+78bPeba4gubeK5&#xA;t5BLBOiyQyqaqyOOSsD4EHIuuSXXPPnlDQb02WsapDY3QhS4McxI/dSO0aPWlKF42HXJCBPJFoWP&#xA;8z/IMjpGut2/OWf6rGp5KWn4q3prUCrUdTth8OXcthGX3njylY6hd6dd6pBDfWMP1m8t2J5xQ8Q3&#xA;qMKbLRhvgECtrtE86+VdcuBb6RqUN7MYjcBIiTWIFQXFQKrV1+/ExI5ratD5o8vza1c6JFfRPq1m&#xA;nq3VkpJkjQgEMwp0PIYOE1abQEP5j+RZobSePW7Uw31w1laSl6JJcLxrErGg5fGu2HgPciwjdR82&#xA;eXNNvmsL6/it7xLd7xoXJ5C3jBLy9PsrxNTiIkptCWf5g+S725sLa11i3mn1VS+nRqxJnVWZWMe3&#xA;xAFDXEwKLC26/MbyPaSXEVzrNvFJaXH1O4VifguDWkR2+3t0x4Ctho/mR5GECznWbcRNMtqrVO87&#xA;gMsdKV5MDsO+PAVtMYfNHlubSZNYh1O2k0uE0lvElRo0bYcGYHZqsBxO9TTBwm6TaAP5h+Sls4rx&#xA;9WgS3muPqUbvyUm5ADeiVYBhJRh8JFcPAUWh3/NT8vUkaN9ct1kRpUMZ58uUDFZAF41PEjemHw5d&#xA;y2ERYfmJ5Jv2lWz1iCZoLT9ITKpPJLUoJPWYEAheDA4DAhbCc6Zqen6pYQ6hp863NlcrzgnTdXWt&#xA;KqfDARSUDqvmzQdK1C2069uGW9uzGIoY4ZpiPWlEMbSGJHEavKeIZ6CvfCIkotB335i+SLC9ubG8&#xA;1i3hvLIgXcDE8oqio50G1RviIFbVLnz95Ntb26sbnV7eG5sWVb1HYqIS+6+qxHFAfFjTHgK2iL3z&#xA;f5ZspdOiudSgR9XIGl/HyFwTSnpFahvtDpiIlba0/wA4+V9R0271Ow1OC5sbAut7PG3IRNGOThwN&#xA;1IHtiYkLaC/5WV5CDRB9ctI/WiW4jaSTgphY8VkLNRQhO3ImmHgPcthMI/NflyXWl0OLUIX1Z4hc&#xA;JZq1XaEryEgpsVI75HhNWm0v/wCVleRPq8lx+mrb0YrgWUknI0W5atITt9v4T8OS4D3IsJpZeY/L&#xA;99pkuqWmpW0+nQcvrF2kqGKLgoZxI1aIVBqwalO+RMSm0ttvzH8j3LypBrNu7QwPdOKkf6PGKvMt&#xA;QOUYH7S1GHgKLCpL598nRaNba1Jq0C6TeyejaXpY+nJJuAqGm5PE0x4DdLYeO/nn5f0zRLPQINM0&#xA;6DTYJXuVnWDcym2CpbPI1AXf05XJZqtvQk9cp1MiYfEPR+y0R+b3/mn9CHj0HyJefkBc3Hm2UW0U&#xA;Nzcy6feqAbiK6NERIB1cycPiToR1pTkLtMTUa7nWdtgfmsl/zizXRk8of4a0o3EFpNcWuk3VujmF&#xA;JHUuYuCoeP7QJpTbr75Ybt17AfL+i/l5b/kf5w1Ly3Kl1rE6PHrEzKqywn1gUgRQTxg2qhH2+p3H&#xA;FZzMuIWjEBe3eh/yW0uw1TzTfWl/ZQ6jbnTJpEsrmhhkmSWIRq3IMv2WfqD3NNs1+jJAPw/S9p7Y&#xA;AXi7/V/vX0pZ2lvZWcFnbLwt7aNIYUJLUSNQqjkxLGgHUnLy8awH8+vqkX5Ya5KwRLicWcQegDyC&#xA;O7R1QH7TcQXYD5nxyzF9QYy5IX837izWbyTJY3Nrb3l35itLmO6kUSRtHHbTJ6zhHiMiL6qCvMdR&#xA;vhx9fciXRI9cvprf8wvNqazqVncXEfk1oS9vE1qgYzTSCIpJNclpOMgbZujDbxkB6RXevUp3+Uus&#xA;k6T5UsLjXbC8Y6FDFBpFpAVuYGjhgJ+sSercUKKpRqiMFv2a7COQbnbqsOQXTarpflz85tXvdcuo&#xA;tOs9V0a0FldXDiOKR7eWUSRh2ovqAEHj1pjVw2709WN+XR5L1z8vtC0fWWi+p6h5g1aC4hlHpSCS&#xA;Zr9ojRgGVws8JVuxK5OViRI7kDkm+l3HmHTL/UdD80EzPoOi6gtp5jlAVb2xmeD0Gkf/AH9H6TLK&#xA;PGjb8q5E0dx3pHmk1tbzxfkh5L82aYpl1PycsF+yRVLtbKDFf2549Kwsxb/VyR+sjvY/whH+eLef&#xA;TPJXlSW9mhsdZ1DzNp+q3z3AqkU81z68hkXnGzR2ysqH4h8CjcYIbk+5MuSH8+a9HLYaeJfMGm6h&#xA;fxea9ImW8tYPTtoYV4ECRRK/qCIo7v8AvyQp3K1ADAeXQrJBW36Os9O83+WvOeoyaL5lv9at79tW&#xA;tuMUFZJYjY31qGICRJJCvq1YlT9pvAnoRypFc7VZ/Md1deX9EfzBLYyXdr5zsYm1q0CJb6gluErf&#xA;Cm3wpRHb7I40rTYPDua7k33su80Sada/m75AtY2ig4W+s/uV4rxM6QcKqOnqMj8f5iDkI/Sfgk8w&#xA;lv5taNotvr/k2aCX9Hz6jeJoN9DbsIVn0eVC00EgA/u1dY1FKU57dRhxk0US5hPPzJ823/l8afpe&#xA;lSx2M19b3klvOYfWYvaRp6NpbRbK007yqFWh+ENQdxGEb3SShvyzi1y980eaNc1a7Es/Kz0qW2RF&#xA;EccttapcTIjU5cYpryRBvvuTXDOqACjmx281c235kfmE1vr+m6PG1ppSTPfxCcyGKGfmkVZY15IG&#xA;ow9OT7Q+HsZAekbI6lNPLnmryzbfmh57vLvUra2tbi00ZomuHWIuI4JzIAsnFiyB15LSoqAd8Eon&#xA;hHxUcyw3R0/R935LEyNYabd+bNSvtCs7j928WlzROID6b0aNWd/hVv5h45M9fcgdPemc+n3Npp+s&#xA;ed/Jsi39z9c1a180aRAwcXlo19cNFMgWv+kQxSK8Z/aTb5i+hT5hA+YpVfULGwh1y20OV/Iggmlu&#xA;Y1kVg7R/6OAzLxd16Uq1Nwpwj3fxKU08navaaP5k8o6xrsf+H9MvPJ8em2z38nCNZ7a4RhE80nEB&#xA;mio68qV+eRkLBA33UHkxzUdY0648keYpLe6jU3Pnxbm2MgIPpNcQyLKY2KPw4IzVNNgd8mBuP6qD&#xA;y+K/VJNV0+TX7LWoGvNWbzBp2ua5b2qUtr/Q4SP31pbjkWVPTUzIWc7VYkVoijVd32qzLzD+Y2h6&#xA;l5visLB9M1KyTRL+9/S8c5kmtomQLLGVSqgyFU2Y126dMrjAgfFlxbsdN7PD+VH5fz32qac+iR3u&#xA;grJapZyRzJ9XmiM6yStcyKTEEf1D6Irv0rk/4j8WP8I+CL/MjyTf3L3+l6RYalqN3LctqyX0sai1&#xA;V4o2eWBZFA5yTLcFVJArxjTfgeNM4icaLsOztWdNnjkHQ7+7q+edQtfOHmzX9O8raeJr1AzfoqxG&#xA;0aeof38hBoFo6HmzdOO/TMjTAQxi9i0dr5Bl1UzA3EysM4m8k+XdDMv5a38Wm3esXtxAZ/Ma3Miv&#xA;BcOP3MSkx+lEQPWAikcGSoJptSXGT6nD4QNmE6r5W85/l95qvfL96z231mCRJZYifq93aULBxXZk&#xA;qgO+6sOxGSlISjacAMcgHm9Z8n+V7T0LOz1sz2F95nkgk0OQRQTfBEX9Nmhk/flGZi8jRFCi+meQ&#xA;DGmDp8ZhH73e9vdoDU6i4/RHYefn+OlPpaxtI7Oyt7SIkxW8aRIWJZuKKFFSxJJ274C6hWxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KpfrNrrVxDANIv4tPnjmWSV57f61HJEAwaIoJIGWpIPIPUUwi&#xA;uqqPlny/HoenPbeqbm5ubia8vroqE9W5uZDJI4QE8VqeKrU0UAVPXGRtATbAl2KuxV2KuxV2KuxV&#xA;2KuxV2KoXVU1J9Nuk0uSKLUWicWck6l4llp8BdVIJWvWmEK8G1r8vrlfM+k6QLq8h8yX8YbUdbgS&#xA;QwvNKkju7RhYUlWP0VEsolRquteX2Vtl6h3NuDN4cr4Yy8iPwfkWPDyP5k1GfTLVr/T5bvzEbfVL&#xA;QzxXH1mULG4hnaUW8qgxpyNBKWUUrQZGpAEcX2OUdTpjMSOHatxxmieh5X8L/aYeWfI739nb+YhF&#xA;ceap7W8MFzpVypVYLq2aOT0ZYpHl5eohKiVmCoxUuhWpWURw7EtGo1Ecn0wjCPl+s2fue4+TvKU3&#xA;l1b5W1W91GC7nM1tBev6ht42APp8yWLtyJq5O4p3qzVylbjAMjyKXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqsn9D0JPrHH0OLer6lOHCnxcq7Up1riqT&#xA;w/4P/SVj6P1T676MH6M4cf7n0rj0Pq9Php6Xr8eH7HLtkt1R2k/oX6vJ+iPq31b1ZPV+qenw9av7&#xA;zl6e3Pl9rv44DfVUbgV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:122b725b-2951-4e92-9ee6-59c6ebd99085</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:122b725b-2951-4e92-9ee6-59c6ebd99085</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:d8389546-5e54-42ff-b69b-d2e8eff724d7</stRef:instanceID>
            <stRef:documentID>xmp.did:d8389546-5e54-42ff-b69b-d2e8eff724d7</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:07+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:18:29-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T12:59:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:02:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:47-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:30:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FEE440664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:22:44+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F85BBCD703EDD11A8D1DFE8FDCD79D1</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:30:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:676AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:43:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:81784906200A11689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T06:08:19-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:07:10+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:11+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8661C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8761C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39:19+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811AFA6A99C165E9A27</stEvt:instanceID>
                  <stEvt:when>2009-11-12T11:05:09Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0f67131-f09a-4a71-ba1b-8cda4a15bda1</stEvt:instanceID>
                  <stEvt:when>2014-10-06T09:15:35+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d8389546-5e54-42ff-b69b-d2e8eff724d7</stEvt:instanceID>
                  <stEvt:when>2014-11-05T15:54:52Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:122b725b-2951-4e92-9ee6-59c6ebd99085</stEvt:instanceID>
                  <stEvt:when>2014-12-02T15:14:13Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>296.999935</stDim:w>
            <stDim:h>60.000478</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>87.112230</xmpG:magenta>
                           <xmpG:yellow>42.169830</xmpG:yellow>
                           <xmpG:black>51.827264</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 199 C</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>6.832989</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>85.232317</xmpG:yellow>
                           <xmpG:black>0.955215</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -85.1235 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 85.1235 li
529.5 85.1235 li
529.5 0 li
cp
clp
6.3358 34.0047 mo
7.07686 34.1691 7.31205 34.0759 7.43005 33.5495 cv
7.61299 33.59 li
7.12561 35.7717 li
6.94217 35.7302 li
7.04129 35.2892 6.97005 35.0038 6.12019 34.814 cv
1.42556 33.7627 li
1.22553 34.655 li
1.0401 35.4829 1.19276 35.9112 1.82511 36.1093 cv
1.78455 36.2922 li
.377069 35.9766 li
.417638 35.7936 li
.512252 35.7249 .587387 35.6405 .66402 35.5 cv
.726866 35.3668 .791809 35.1775 .850359 34.9209 cv
1.57093 31.6971 li
1.69093 31.1595 1.68214 30.899 1.56404 30.6687 cv
1.607 30.4756 li
3.01498 30.7897 li
2.9886 30.9083 li
2.44657 30.9117 2.03533 31.0336 1.81632 32.0127 cv
1.607 32.9465 li
6.3358 34.0047 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
1 .871122 .421698 .518273 cmyk
f
6.66751 27.0015 mo
8.31019 27.803 li
8.9932 28.1358 9.29373 28.0737 9.53033 27.5889 cv
9.69808 27.6703 li
8.69855 29.7203 li
8.5302 29.6374 li
8.74341 29.2018 8.69555 28.9222 7.94331 28.5548 cv
4.41027 26.8312 li
3.73795 26.5029 3.44281 26.5307 3.19642 27.0361 cv
3.02817 26.9532 li
4.0278 24.9047 li
4.19556 24.9876 li
3.97844 25.432 4.05458 25.7272 4.77715 26.0795 cv
6.39046 26.8668 li
7.89645 23.7787 li
6.28365 22.9923 li
5.59135 22.6537 5.31079 22.701 5.07419 23.186 cv
4.90594 23.104 li
5.89578 21.0754 li
6.06404 21.1569 li
5.82744 21.6418 5.97771 21.9112 6.65093 22.2395 cv
10.1841 23.9631 li
10.8568 24.2914 11.1617 24.2441 11.3983 23.7592 cv
11.5667 23.8411 li
10.5762 25.8697 li
10.408 25.7881 li
10.6256 25.3437 10.5694 25.0822 9.81618 24.7159 cv
8.1745 23.9134 li
6.66751 27.0015 li
cp
f
14.1264 16.6287 mo
14.0068 16.7726 li
13.5078 16.5287 13.3932 16.5618 12.9775 17.0614 cv
11.9769 18.2625 li
13.7108 19.7075 li
13.9488 19.9056 14.1118 19.8987 14.3372 19.627 cv
15.0426 18.7816 li
15.6339 18.0702 15.7475 17.8654 15.3534 17.0487 cv
15.4734 16.9047 li
16.195 17.879 li
13.2849 21.3726 li
13.1409 21.2526 li
13.4575 20.8725 13.48 20.6042 12.837 20.069 cv
9.80889 17.5463 li
9.20731 17.0453 8.92585 17.0394 8.58095 17.4541 cv
8.43648 17.3346 li
11.3471 13.8401 li
12.1593 14.5167 li
12.0813 14.6103 li
11.4579 14.2762 11.2739 14.4099 10.83 14.9431 cv
9.66641 16.3383 li
11.7403 18.0654 li
12.8677 16.7116 li
13.1419 16.3823 13.1888 16.2061 12.8302 15.7925 cv
12.9507 15.6485 li
14.1264 16.6287 li
cp
f
25.9458 9.52004 mo
25.7637 10.4305 25.3506 11.0431 24.6212 11.454 cv
23.2879 12.2047 22.2214 11.5671 21.6868 10.6173 cv
20.1617 7.91254 li
19.7515 7.18367 19.4782 7.1466 19.047 7.39109 cv
18.9558 7.22713 li
20.9408 6.108 li
21.0325 6.27186 li
20.5817 6.52604 20.491 6.79101 20.8857 7.492 cv
22.4532 10.2738 li
22.9293 11.1178 23.7397 11.4579 24.67 10.9339 cv
25.3032 10.5767 25.6808 9.94697 25.7301 9.13658 cv
23.8655 5.82605 li
23.5089 5.1928 23.2401 5.05372 22.7888 5.28252 cv
22.6966 5.12006 li
24.6339 4.02771 li
24.7256 4.19117 li
24.265 4.45024 24.2217 4.75318 24.5944 5.41521 cv
26.5234 8.84043 li
26.9292 9.56011 27.2161 9.59908 27.6391 9.36198 cv
27.7303 9.52544 li
26.3785 10.2865 li
25.9458 9.52004 li
cp
f
35.9498 7.02471 mo
35.7678 7.07197 li
30.0984 2.86372 li
30.0769 2.86811 li
31.1756 7.1559 li
31.3336 7.77546 31.6362 7.93652 32.1909 7.79404 cv
32.2371 7.97598 li
30.3823 8.45117 li
30.335 8.26923 li
30.8472 8.13794 31.0517 7.91604 30.8249 7.0305 cv
29.9095 3.4565 li
29.7345 2.774 29.4554 2.43639 28.7134 2.55828 cv
28.667 2.37784 li
30.2355 1.97579 li
35.2721 5.75481 li
35.2931 5.74892 li
34.3779 2.17632 li
34.1735 1.37581 33.9076 1.22844 33.3753 1.36452 cv
33.328 1.18358 li
35.1736 .711786 li
35.2199 .892329 li
34.6223 1.0455 34.493 1.34014 34.6764 2.05392 cv
35.9498 7.02471 li
cp
f
41.0937 5.34257 mo
41.1318 6.1129 41.3303 6.33391 41.8582 6.30753 cv
41.867 6.49487 li
39.6018 6.60807 li
39.5921 6.42023 li
40.1092 6.39486 40.297 6.18654 40.2576 5.38403 cv
40.0624 1.45774 li
40.0234 .666422 39.8365 .466399 39.2979 .492776 cv
39.2882 .306337 li
41.5542 .193236 li
41.563 .380073 li
41.0347 .406351 40.8601 .657633 40.8981 1.41627 cv
41.0937 5.34257 li
cp
f
47.4671 6.9247 mo
47.2935 6.90172 li
46.0363 1.56944 li
45.8425 .765439 45.7293 .451312 45.1424 .3498 cv
45.1673 .164857 li
47.4378 .466399 li
47.4125 .652737 li
46.9656 .592789 46.7154 .803506 46.8359 1.32066 cv
47.8272 5.56108 li
49.7966 1.85829 li
50.0635 1.34943 50.0108 .998134 49.4429 .922103 cv
49.4683 .736664 li
51.2905 .979653 li
51.2641 1.17578 li
50.7948 1.11334 50.3977 1.42796 49.9673 2.23586 cv
47.4671 6.9247 li
cp
f
57.4185 7.04659 mo
57.2428 6.98225 li
57.3043 6.43042 57.2335 6.33391 56.6238 6.1104 cv
55.1557 5.57377 li
54.3805 7.69353 li
54.2737 7.98278 54.3352 8.13455 54.6665 8.25554 cv
55.7012 8.63461 li
56.5691 8.95223 56.8018 8.9902 57.4375 8.34286 cv
57.6131 8.40771 li
56.9394 9.41514 li
52.6687 7.85259 li
52.733 7.67744 li
53.1984 7.8467 53.4575 7.77796 53.7449 6.99244 cv
55.1001 3.29065 li
55.369 2.55589 55.2791 2.28901 54.7713 2.10368 cv
54.8357 1.92753 li
59.1069 3.49018 li
58.7439 4.48241 li
58.6298 4.44095 li
58.7332 3.74086 58.5454 3.61307 57.8946 3.37498 cv
56.188 2.75052 li
55.2612 5.28402 li
56.9164 5.88939 li
57.319 6.03676 57.5004 6.02068 57.7683 5.54499 cv
57.9443 5.60944 li
57.4185 7.04659 li
cp
f
62.8537 9.25178 mo
63.2762 9.53034 li
64.2417 10.166 63.7006 11.589 63.8958 13.4321 cv
64.9724 14.1415 li
65.0744 13.985 li
64.2441 13.3448 65.0569 11.3895 64.4919 10.1069 cv
65.4163 10.3855 66.0482 10.1045 66.4292 9.52544 cv
66.8898 8.82685 66.7688 7.76966 65.5827 6.98904 cv
63.4225 5.56448 li
63.3211 5.72114 li
63.743 6.0002 63.8333 6.24409 63.3776 6.93389 cv
61.2047 10.2338 li
60.7373 10.9431 60.4597 10.9441 60.0548 10.6767 cv
59.9524 10.8334 li
61.8467 12.0818 li
61.9497 11.9252 li
61.5174 11.6408 61.4794 11.3379 61.9038 10.6943 cv
62.8537 9.25178 li
cp
64.5856 6.62166 mo
65.1373 6.98414 li
65.9457 7.51888 66.1418 8.36045 65.6823 9.05904 cv
65.2837 9.66492 64.5353 10.0426 63.6435 9.4542 cv
62.9985 9.03027 li
64.5856 6.62166 li
cp
f
72.9031 14.9694 mo
72.7704 14.8357 li
73.368 14.1094 73.1636 13.3829 72.7157 12.9278 cv
72.2522 12.457 71.6609 12.3755 71.2448 12.7838 cv
70.4135 13.6025 71.3219 14.966 71.3121 16.2418 cv
71.3072 16.8648 71.1024 17.2214 70.8038 17.5151 cv
70.0969 18.2108 68.9607 18.2015 68.265 17.4955 cv
67.7942 17.0164 67.6356 16.3847 67.4893 16.2359 cv
67.4117 16.1579 67.3024 16.1564 67.1458 16.2335 cv
67.0147 16.0988 li
68.2313 14.9026 li
68.3616 15.0363 li
67.5391 15.8627 67.9357 16.815 68.322 17.2078 cv
68.8558 17.7488 69.5242 17.801 70.0111 17.3229 cv
70.7872 16.5574 69.9593 14.9938 69.9666 13.9967 cv
69.971 13.4517 70.1764 13.0326 70.5291 12.6848 cv
71.2204 12.0057 72.1776 12.037 72.8953 12.7658 cv
73.3671 13.2444 73.4187 13.642 73.589 13.8147 cv
73.6583 13.885 73.6895 13.8859 73.8304 13.8088 cv
73.9534 13.9342 li
72.9031 14.9694 li
cp
f
73.4373 21.719 mo
72.804 22.1576 72.7211 22.4434 73.0211 22.8786 cv
72.868 22.9845 li
71.5756 21.1204 li
71.7298 21.0145 li
72.0239 21.4394 72.2996 21.4887 72.9601 21.0316 cv
76.1917 18.7923 li
76.843 18.3405 76.9147 18.0771 76.6073 17.6326 cv
76.7605 17.5268 li
78.0534 19.3909 li
77.9002 19.4977 li
77.5992 19.0641 77.2928 19.048 76.6679 19.4807 cv
73.4373 21.719 li
cp
f
76.5781 27.444 mo
75.8878 27.7606 75.7575 27.9767 75.982 28.4675 cv
75.8121 28.5455 li
74.8813 26.5146 li
75.0516 26.4361 li
75.2394 26.8473 75.4697 27.0317 76.2605 26.6688 cv
80.6341 24.6656 li
80.2536 23.8343 li
79.9004 23.0625 79.5194 22.8137 78.896 23.0386 cv
78.8178 22.8694 li
80.1297 22.2683 li
80.2073 22.4375 li
80.1736 22.5502 80.1648 22.6629 80.1892 22.821 cv
80.2195 22.9659 80.2824 23.1547 80.3917 23.3952 cv
81.7685 26.3985 li
81.9973 26.8991 82.1631 27.1005 82.3958 27.2122 cv
82.4787 27.3917 li
81.1664 27.9943 li
81.1161 27.8835 li
81.546 27.5532 81.7991 27.2064 81.382 26.296 cv
80.9829 25.4252 li
76.5781 27.444 li
cp
f
79.0657 35.1131 mo
78.3232 35.2731 78.1177 35.4746 78.2309 36.001 cv
78.0485 36.0415 li
77.5665 33.7915 li
77.7494 33.751 li
77.851 34.2257 78.007 34.4847 78.8901 34.2959 cv
80.8288 33.8803 li
82.5933 32.1288 li
83.1798 31.5532 83.2798 31.34 83.1983 30.8506 cv
83.3808 30.8117 li
83.8969 33.2236 li
83.714 33.2631 li
83.5686 32.5835 83.3149 32.5597 82.992 32.8875 cv
81.3791 34.5053 li
83.1398 35.1536 li
83.6881 35.3516 84.1453 35.2756 84.0345 34.7584 cv
84.2179 34.7194 li
84.5794 36.4098 li
84.3965 36.4498 li
84.2628 35.9825 84.0994 35.8488 83.4867 35.6185 cv
81.0034 34.6989 li
79.0657 35.1131 li
cp
f
3.97455 50.1821 mo
2.17491 50.7001 1.17618 52.5228 1.69722 54.3328 cv
2.21687 56.1417 4.0351 57.1652 5.83473 56.6472 cv
7.6018 56.1388 8.57945 54.323 8.0628 52.5237 cv
7.52906 50.6718 5.77329 49.6639 3.97455 50.1821 cv
cp
4.23212 51.1168 mo
5.9885 50.6123 7.42426 51.1831 7.836 52.6126 cv
8.19459 53.8595 7.41836 55.1835 5.51331 55.7328 cv
4.04339 56.1554 2.36415 55.7797 1.92702 54.2547 cv
1.53387 52.8896 2.46466 51.6241 4.23212 51.1168 cv
cp
f
6.48807 62.4302 mo
5.81815 62.8117 5.71084 63.0889 5.97282 63.5484 cv
5.81036 63.643 li
4.68494 61.6711 li
4.84829 61.5784 li
5.11026 62.038 5.39422 62.0916 6.07383 61.7024 cv
9.48687 59.7558 li
10.1763 59.3626 10.2655 59.0971 10.0035 58.6376 cv
10.165 58.5429 li
12.3101 62.3034 li
11.3344 62.8586 li
11.2641 62.7356 li
11.8564 62.2194 11.8033 62.0351 11.4632 61.4408 cv
10.6665 60.0446 li
8.37163 61.355 li
9.18493 62.7805 li
9.41952 63.1913 9.71767 63.2235 10.1846 63.0215 cv
10.2724 63.1727 li
8.73212 64.0528 li
8.6453 63.9007 li
9.02637 63.6567 9.14686 63.3357 8.92775 62.9522 cv
8.10377 61.5081 li
6.48807 62.4302 li
cp
f
18.5874 74.5955 mo
18.442 74.4774 li
18.6825 73.9758 18.6474 73.8617 18.1449 73.4519 cv
16.9365 72.4576 li
15.5046 74.2032 li
15.309 74.4422 15.3178 74.6062 15.5905 74.8296 cv
16.4413 75.5273 li
17.1565 76.1137 17.3638 76.2278 18.1761 75.8248 cv
18.3215 75.9429 li
17.3536 76.6737 li
13.8371 73.7885 li
13.9552 73.6451 li
14.3387 73.9592 14.606 73.9788 15.1368 73.3319 cv
17.6366 70.2837 li
18.1322 69.6797 18.1366 69.3988 17.719 69.0563 cv
17.837 68.9119 li
21.3541 71.7951 li
20.6838 72.6118 li
20.59 72.5367 li
20.9193 71.9083 20.7833 71.7269 20.2475 71.2868 cv
18.8426 70.1335 li
17.1321 72.2196 li
18.4938 73.3378 li
18.8265 73.609 19.0021 73.6539 19.4129 73.2928 cv
19.5577 73.4129 li
18.5874 74.5955 li
cp
f
22.9742 78.8779 mo
22.6474 79.5902 22.3649 79.7014 21.9043 79.4906 cv
21.8268 79.6604 li
24.5471 80.9142 li
26.797 81.9504 28.3201 81.0391 28.9832 79.5998 cv
29.6701 78.1099 29.3071 76.1605 27.1181 75.1496 cv
24.4681 73.931 li
24.3885 74.0998 li
24.87 74.3212 24.9379 74.6199 24.6192 75.3087 cv
22.9742 78.8779 li
cp
25.7759 74.8003 mo
26.8659 75.3029 li
28.6758 76.1352 28.73 77.8339 28.0982 79.2047 cv
27.38 80.7649 26.0775 81.3513 24.6583 80.6986 cv
24.068 80.4273 li
23.5382 80.1824 23.4167 79.92 23.8265 79.0291 cv
25.7759 74.8003 li
cp
f
34.0749 82.8588 mo
33.9091 83.6121 34.0418 83.8803 34.5579 83.9925 cv
34.518 84.175 li
32.3026 83.6872 li
32.343 83.5047 li
32.848 83.615 33.0846 83.4657 33.2577 82.6793 cv
34.1037 78.8418 li
34.2735 78.068 34.1462 77.8251 33.6192 77.7099 cv
33.6598 77.5255 li
35.8742 78.0143 li
35.8346 78.1968 li
35.318 78.0827 35.0839 78.2788 34.9204 79.0212 cv
34.0749 82.8588 li
cp
f
45.4844 84.8941 mo
45.2981 84.897 li
40.7898 79.4604 li
40.7673 79.4633 li
40.8162 83.8891 li
40.823 84.5273 41.0787 84.7546 41.6514 84.7488 cv
41.6538 84.937 li
39.738 84.9566 li
39.7355 84.7712 li
40.2634 84.7654 40.5156 84.5975 40.5054 83.6823 cv
40.4649 79.9951 li
40.4576 79.2896 40.2659 78.8964 39.5155 78.8378 cv
39.514 78.6505 li
41.1328 78.632 li
45.1283 83.4999 li
45.1507 83.4989 li
45.1093 79.8107 li
45.1005 78.9842 44.8776 78.7794 44.3272 78.7852 cv
44.3258 78.5968 li
46.2309 78.5754 li
46.2324 78.7628 li
45.6157 78.7715 45.4201 79.0251 45.4284 79.7628 cv
45.4844 84.8941 li
cp
f
52.1506 80.6049 mo
52.7248 80.4468 li
53.7961 80.1532 54.6421 80.5697 54.8875 81.4635 cv
55.1334 82.3544 54.663 82.9291 54.0469 83.0968 cv
53.5482 83.2364 li
53.0707 83.3672 52.8662 83.2051 52.6413 82.3875 cv
52.1506 80.6049 li
cp
51.8632 82.7153 mo
52.0681 83.4598 51.949 83.7321 51.4393 83.8715 cv
51.4885 84.0541 li
54.2913 83.2813 li
55.4377 82.9671 56.087 82.1709 55.8359 81.2586 cv
55.611 80.4409 54.7821 79.9141 53.7946 79.9814 cv
53.7892 79.9589 li
54.5513 79.4526 54.8142 78.9139 54.6308 78.2426 cv
54.4172 77.4689 53.5736 76.9343 52.1086 77.3401 cv
49.8152 77.9695 li
49.8649 78.149 li
50.3748 78.0104 50.6084 78.1519 50.8211 78.9276 cv
51.8632 82.7153 li
cp
52.0861 80.3727 mo
51.3763 77.7909 li
51.9813 77.6251 li
52.9686 77.3538 53.5858 77.7655 53.7961 78.5305 cv
54.0058 79.2955 53.6044 79.954 52.7126 80.198 cv
52.0861 80.3727 li
cp
f
64.9164 77.5528 mo
64.748 78.4661 64.3436 79.0857 63.622 79.5052 cv
62.3004 80.2781 61.2233 79.6565 60.674 78.7159 cv
59.1074 76.0346 li
58.6864 75.3126 58.4127 75.2814 57.9849 75.5302 cv
57.8902 75.3692 li
59.8583 74.2198 li
59.9529 74.3818 li
59.5065 74.6423 59.4196 74.9096 59.8255 75.6033 cv
61.435 78.3597 li
61.9238 79.1969 62.7386 79.5238 63.6611 78.9862 cv
64.2889 78.6203 64.6583 77.9831 64.6934 77.1714 cv
62.7775 73.891 li
62.4122 73.2635 62.1419 73.128 61.6936 73.3651 cv
61.5985 73.2031 li
63.5186 72.083 li
63.6137 72.243 li
63.1571 72.5113 63.1176 72.8138 63.5006 73.4685 cv
65.4832 76.864 li
65.8979 77.5782 66.1863 77.6143 66.6043 77.3684 cv
66.6989 77.5294 li
65.3603 78.3139 li
64.9164 77.5528 li
cp
f
69.7032 71.2146 mo
70.0588 70.8526 li
70.8711 70.03 72.162 70.8389 74.0086 71.0048 cv
74.9125 70.0886 li
74.7798 69.9559 li
73.99 70.6477 72.2298 69.467 70.8614 69.7745 cv
71.3151 68.9207 71.1624 68.2445 70.6692 67.7576 cv
70.073 67.1692 69.0129 67.0834 68.0157 68.0942 cv
66.1989 69.9373 li
66.3321 70.0691 li
66.6877 69.709 66.9443 69.6681 67.5322 70.2477 cv
70.3462 73.0236 li
70.9506 73.6197 70.898 73.891 70.5575 74.2364 cv
70.6907 74.3681 li
72.2835 72.7523 li
72.1498 72.6225 li
71.7873 72.9894 71.4834 72.9679 70.9346 72.4265 cv
69.7032 71.2146 li
cp
67.4615 69.0016 mo
67.925 68.5313 li
68.6055 67.8415 69.4695 67.8133 70.0657 68.4016 cv
70.5828 68.9119 70.8068 69.7188 70.0574 70.4799 cv
69.5154 71.0292 li
67.4615 69.0016 li
cp
f
80.0682 62.4302 mo
79.9692 62.7834 79.4316 63.7718 79.2828 64.0158 cv
77.8392 66.3858 75.9292 66.3048 74.6876 65.5486 cv
72.7787 64.3875 72.5884 62.2849 73.3963 60.9598 cv
73.8597 60.1978 74.2915 60.0612 74.5442 59.6465 cv
74.6466 59.4777 74.6456 59.3743 74.5476 59.2377 cv
74.6515 59.067 li
76.241 60.0358 li
76.1492 60.1861 li
75.0374 59.7031 74.0491 60.3519 73.6026 61.0857 cv
72.9269 62.195 73.3855 63.6206 74.8627 64.5202 cv
76.4425 65.4842 78.1817 65.2539 78.9603 63.9748 cv
79.195 63.5874 79.416 63.0156 78.9359 62.722 cv
78.3529 62.3678 li
77.6958 61.9677 77.368 61.9735 77.0991 62.4146 cv
76.9732 62.6215 li
76.8128 62.5239 li
78.1426 60.3432 li
78.3012 60.4398 li
77.9811 60.9676 78.1495 61.2633 78.6193 61.5482 cv
80.0682 62.4302 li
cp
f
79.8907 55.1504 mo
81.647 55.6568 li
82.3767 55.8675 82.6617 55.7534 82.811 55.2353 cv
82.991 55.287 li
82.3592 57.4755 li
82.1792 57.4248 li
82.3134 56.9604 82.2183 56.692 81.4148 56.4588 cv
77.6382 55.3709 li
76.9187 55.164 76.6327 55.2402 76.4762 55.7797 cv
76.2966 55.7281 li
76.9289 53.5395 li
77.1089 53.5902 li
76.9713 54.0664 77.0977 54.3425 77.8694 54.565 cv
79.595 55.0635 li
80.5473 51.7637 li
78.8222 51.2651 li
78.0812 51.0524 77.8138 51.1451 77.664 51.6632 cv
77.4846 51.6124 li
78.1099 49.4425 li
78.29 49.4952 li
78.1402 50.0132 78.3348 50.2543 79.0544 50.4611 cv
82.8314 51.551 li
83.551 51.7578 83.8433 51.6603 83.9925 51.1421 cv
84.1731 51.1929 li
83.5462 53.3609 li
83.3662 53.3102 li
83.5038 52.8331 83.4032 52.5872 82.5987 52.356 cv
80.8435 51.8476 li
79.8907 55.1504 li
cp
f
3.66921 43.1325 mo
3.66771 43.4398 3.41743 43.6877 3.1096 43.6848 cv
2.80376 43.6848 2.55588 43.433 2.55828 43.1286 cv
2.56028 42.8193 2.81056 42.5735 3.11639 42.5744 cv
3.42333 42.5778 3.67061 42.8261 3.66921 43.1325 cv
cp
f
82.55 43.1442 mo
82.5471 43.4506 82.2968 43.6984 81.9899 43.6955 cv
81.683 43.6945 81.4366 43.4447 81.4376 43.1374 cv
81.4396 42.831 81.6898 42.5837 81.9958 42.5847 cv
82.3026 42.5881 82.551 42.8368 82.55 43.1442 cv
cp
f
58.7283 71.7736 mo
59.1723 71.5424 59.5787 71.2341 60.006 70.9677 cv
60.37 70.7491 60.7329 70.5257 61.0959 70.3033 cv
61.4223 70.0603 61.7199 69.7832 62.0561 69.553 cv
62.4063 69.2983 62.7542 69.0436 63.104 68.7909 cv
63.1781 68.7216 63.2508 68.6494 63.3225 68.5792 cv
63.405 68.5362 63.4874 68.4894 63.5674 68.4416 cv
63.866 68.2152 64.1694 67.946 64.447 67.6874 cv
64.6714 67.4806 64.8378 67.2444 65.0729 67.0346 cv
65.3056 66.8229 65.5632 66.6317 65.8018 66.4209 cv
65.9013 66.3292 65.9555 66.2286 66.0443 66.1389 cv
66.2369 65.9516 66.4375 65.772 66.6121 65.5701 cv
66.7326 65.4198 66.8556 65.2705 66.9795 65.1222 cv
67.4146 64.7046 67.8099 64.2451 68.1738 63.7777 cv
68.4694 63.4255 68.766 63.0693 69.0602 62.7181 cv
69.2553 62.4438 69.4509 62.1668 69.6432 61.8926 cv
69.7452 61.7833 69.8471 61.674 69.9515 61.5648 cv
70.2671 61.1228 70.5858 60.6798 70.9024 60.2348 cv
70.996 60.0827 71.0522 59.9265 71.14 59.7713 cv
71.2116 59.6689 71.282 59.5655 71.3517 59.4689 cv
71.4136 59.3401 71.4717 59.2103 71.5331 59.0805 cv
71.7483 58.7137 71.9498 58.3459 72.1488 57.9741 cv
72.3162 57.6893 72.485 57.4043 72.6509 57.1165 cv
72.7903 56.8277 72.8772 56.5223 73.0065 56.2315 cv
73.1528 55.9261 73.2958 55.6206 73.4402 55.3163 cv
73.9276 54.002 74.409 52.6848 74.7998 51.3276 cv
74.8291 51.1675 74.858 51.0027 74.8862 50.8426 cv
74.9925 50.3459 75.1286 49.8338 75.2272 49.3263 cv
75.2575 49.0658 75.2858 48.8034 75.3165 48.5419 cv
75.3877 48.1175 75.4736 47.6599 75.5322 47.2285 cv
75.5599 46.8822 75.5867 46.5309 75.6136 46.1826 cv
75.64 46.047 75.6654 45.9114 75.6936 45.7738 cv
75.7082 45.483 75.7248 45.1913 75.7419 44.9005 cv
75.7575 44.7532 75.8024 44.6166 75.8097 44.4634 cv
75.8092 44.2604 75.8038 44.0555 75.8009 43.8526 cv
75.8922 42.5354 75.9155 41.1039 75.8444 39.8005 cv
75.8038 39.1204 75.6458 38.45 75.577 37.787 cv
75.499 37.0835 75.4462 36.3878 75.3053 35.719 cv
74.9174 33.8778 74.4051 32.0703 73.7563 30.3511 cv
73.6636 30.1033 73.5207 29.8764 73.4187 29.634 cv
73.2075 29.1226 72.9699 28.648 72.7225 28.1611 cv
72.6416 28.0206 72.5615 27.8825 72.4806 27.742 cv
72.2791 27.3161 72.1386 26.8541 71.9147 26.44 cv
71.7746 26.1843 71.6108 25.9668 71.4483 25.7214 cv
71.3248 25.4554 71.1975 25.1905 71.074 24.9232 cv
70.6081 24.1992 70.1247 23.4889 69.6403 22.7795 cv
69.4558 22.5654 69.2719 22.3532 69.0895 22.1405 cv
68.885 21.878 68.6821 21.6141 68.4782 21.3506 cv
68.2831 21.1536 68.0674 20.9891 67.8947 20.7701 cv
67.7957 20.6447 67.7381 20.5125 67.6337 20.3856 cv
67.4811 20.2188 67.3283 20.0505 67.1751 19.8861 cv
67.0844 19.8016 66.9922 19.7187 66.9015 19.6339 cv
66.6683 19.3699 66.4511 19.0981 66.2107 18.8392 cv
65.9993 18.6425 65.7901 18.4444 65.5813 18.2464 cv
65.3774 18.0424 65.1764 17.8375 64.9724 17.6317 cv
64.6934 17.4151 64.4119 17.1985 64.1304 16.9833 cv
63.843 16.7287 63.5518 16.4779 63.2625 16.2232 cv
63.0708 16.0784 62.8635 15.9778 62.6683 15.8491 cv
62.4219 15.6685 62.1712 15.4876 61.9219 15.308 cv
61.7345 15.1753 61.575 15.0305 61.3954 14.8831 cv
61.2603 14.8026 61.1262 14.7182 60.992 14.6357 cv
60.8115 14.5079 60.632 14.3811 60.4491 14.2522 cv
59.8548 13.8884 59.2172 13.6117 58.5996 13.2932 cv
58.3747 13.1527 58.1493 13.0097 57.9263 12.8682 cv
57.5355 12.6726 57.1486 12.4765 56.7609 12.2808 cv
56.4432 12.1291 56.1124 12.0184 55.7866 11.8906 cv
55.628 11.8018 55.467 11.7144 55.3089 11.6256 cv
55.1855 11.5818 55.0606 11.5393 54.9381 11.4954 cv
54.743 11.409 54.5484 11.3208 54.3527 11.2344 cv
53.742 11.0119 53.1004 10.8534 52.4672 10.6588 cv
52.17 10.5689 51.8583 10.4465 51.5569 10.3592 cv
50.8962 10.166 50.2391 10.0645 49.5551 9.9113 cv
49.1185 9.81129 48.6595 9.6854 48.2131 9.60987 cv
47.9237 9.5693 47.6316 9.53133 47.3451 9.49077 cv
46.8626 9.39076 46.326 9.30443 45.823 9.24348 cv
45.6323 9.23909 45.4367 9.23419 45.242 9.2274 cv
45.1093 9.20881 44.9727 9.19173 44.8356 9.17325 cv
44.5736 9.16975 44.3117 9.16535 44.0477 9.16056 cv
43.4579 9.11909 42.8334 9.07173 42.2129 9.06734 cv
41.9724 9.13758 41.6343 9.09511 41.3669 9.09371 cv
41.0464 9.09371 40.7264 9.09511 40.4058 9.09511 cv
40.3175 9.1098 40.2307 9.12389 40.1424 9.13758 cv
39.92 9.14347 39.697 9.14927 39.4736 9.15466 cv
39.3555 9.18244 39.2375 9.21121 39.1189 9.23998 cv
39.0038 9.25517 38.8882 9.26786 38.7721 9.28245 cv
38.6608 9.28245 38.5472 9.27226 38.451 9.31033 cv
38.3852 9.32052 38.3164 9.32881 38.249 9.3381 cv
38.1051 9.3381 37.9525 9.33321 37.8393 9.39325 cv
37.5265 9.39225 37.0616 9.43222 36.8192 9.56351 cv
36.7518 9.5718 36.683 9.58109 36.6157 9.59128 cv
36.4171 9.58888 36.1551 9.61426 36.0015 9.70398 cv
35.4873 9.70058 35.0619 9.9191 34.5955 10.0299 cv
34.3476 10.0885 34.0525 10.1162 33.8402 10.245 cv
33.6373 10.244 33.4173 10.2948 33.2567 10.387 cv
32.9318 10.3855 32.6504 10.5743 32.3728 10.6816 cv
32.2089 10.7451 32.0035 10.7485 31.8572 10.8461 cv
31.5322 10.8451 31.2454 11.0329 30.9775 11.1534 cv
30.7926 11.233 30.6067 11.309 30.4218 11.3876 cv
29.4208 11.8077 28.4431 12.2867 27.4811 12.7877 cv
27.3196 12.8921 27.1561 12.996 26.9937 13.0985 cv
25.8409 13.6819 24.7022 14.3226 23.6826 15.1524 cv
23.3816 15.368 23.0806 15.5832 22.7805 15.7983 cv
22.6235 15.9388 22.4644 16.0818 22.3082 16.2222 cv
22.0151 16.4383 21.7092 16.6218 21.4252 16.8599 cv
20.8462 17.3507 20.3003 17.8995 19.7627 18.4318 cv
19.4333 18.7309 19.1011 19.0314 18.7698 19.3309 cv
18.6562 19.4611 18.543 19.5914 18.4318 19.7226 cv
18.281 19.8627 18.1293 20.0021 17.98 20.1417 cv
17.7419 20.3846 17.576 20.6759 17.3462 20.9121 cv
17.1467 21.1145 16.9477 21.3033 16.7677 21.5277 cv
16.6867 21.6394 16.6013 21.7521 16.5204 21.8628 cv
16.1715 22.2541 15.8325 22.6391 15.5319 23.0615 cv
15.3256 23.3816 15.1202 23.703 14.9143 24.0251 cv
14.6172 24.4065 14.2825 24.8993 14.0542 25.3183 cv
13.9855 25.4554 13.9181 25.5911 13.8508 25.7282 cv
13.6513 26.0619 13.4507 26.3936 13.2502 26.7239 cv
13.0766 27.0707 12.959 27.4415 12.7853 27.7894 cv
12.7038 27.924 12.6238 28.0577 12.5438 28.1923 cv
12.3746 28.5056 12.2321 28.8187 12.0515 29.128 cv
11.9701 29.3286 11.8872 29.5301 11.8047 29.7325 cv
11.7042 29.9388 11.6061 30.1462 11.5066 30.3536 cv
11.4266 30.5917 11.3442 30.8288 11.2641 31.0672 cv
11.1661 31.3229 11.068 31.5786 10.969 31.8352 cv
10.4753 33.431 10.0611 35.0336 9.72206 36.724 cv
9.69329 37.0431 9.66491 37.3607 9.63664 37.6807 cv
9.59227 38.0495 9.46588 38.451 9.43521 38.8174 cv
9.41033 39.1018 9.42152 39.4253 9.34149 39.6912 cv
9.32051 39.9156 9.30053 40.139 9.27955 40.36 cv
9.22929 41.7294 9.26586 43.0301 9.30103 44.3541 cv
9.31901 44.9903 9.4439 45.6264 9.49955 46.2509 cv
9.51424 46.5221 9.52693 46.7924 9.54052 47.0656 cv
9.62734 47.9184 9.77282 48.7829 9.9055 49.6298 cv
9.96795 49.8455 10.0265 50.0611 10.0864 50.2777 cv
10.2289 50.946 10.3787 51.5929 10.5723 52.235 cv
10.6285 52.3794 10.6855 52.5257 10.7417 52.6721 cv
10.7772 52.8253 10.8158 52.9774 10.851 53.1307 cv
11.1032 53.84 11.3553 54.5504 11.6061 55.2568 cv
11.7315 55.5231 11.8564 55.7924 11.9798 56.0588 cv
12.0515 56.2344 12.0891 56.4324 12.1647 56.6062 cv
12.357 57.0599 12.6384 57.4667 12.8677 57.9039 cv
13.0488 58.26 13.2644 58.6006 13.4439 58.9577 cv
13.4956 59.0854 13.5487 59.2142 13.6005 59.343 cv
13.6629 59.4221 13.7254 59.4953 13.7878 59.5733 cv
13.8567 59.7226 13.9249 59.871 13.9942 60.0211 cv
14.1635 60.3188 14.3693 60.6066 14.585 60.8808 cv
14.7128 61.0437 14.8186 61.2281 14.9489 61.392 cv
15.1236 61.6125 15.3207 61.8146 15.4851 62.0409 cv
15.6115 62.2292 15.7373 62.4146 15.8651 62.601 cv
16.1032 62.8858 16.3413 63.1718 16.5818 63.4528 cv
16.7793 63.7025 16.977 63.9533 17.1731 64.2031 cv
17.4209 64.4617 17.6673 64.7193 17.9142 64.9768 cv
18.1166 65.212 18.2917 65.4901 18.5254 65.7047 cv
18.8586 66.0101 19.186 66.3214 19.4938 66.6317 cv
19.6587 66.7976 19.8226 66.9644 19.9856 67.1283 cv
20.2553 67.3635 20.5706 67.5312 20.8296 67.7771 cv
21.0794 68.0201 21.3311 68.2621 21.5848 68.5051 cv
21.7677 68.6455 21.9502 68.786 22.1322 68.9256 cv
22.3576 69.1187 22.5492 69.3412 22.7932 69.5139 cv
23.0864 69.7129 23.3601 69.9452 23.666 70.1218 cv
23.8685 70.2389 24.0846 70.2994 24.2792 70.4291 cv
24.506 70.5892 24.7329 70.7491 24.9597 70.9092 cv
25.1822 71.0546 25.4364 71.1697 25.6642 71.3092 cv
26.5234 71.8361 27.3912 72.2898 28.2948 72.7221 cv
28.6919 72.9142 29.0671 73.1582 29.492 73.3026 cv
29.8823 73.4549 30.2706 73.606 30.6604 73.7553 cv
30.8024 73.7944 30.9459 73.8382 31.0868 73.8773 cv
31.4698 74.0237 31.8503 74.1701 32.2323 74.3183 cv
32.3347 74.3486 32.4372 74.3798 32.5411 74.41 cv
32.8704 74.5388 33.1978 74.6901 33.5422 74.7847 cv
33.9578 74.8667 34.373 74.9448 34.7886 75.0267 cv
35.4073 75.1555 36.0546 75.3477 36.686 75.4444 cv
36.9172 75.4638 37.1475 75.4843 37.3822 75.4999 cv
37.688 75.539 37.9958 75.6121 38.3149 75.6405 cv
38.5568 75.6541 38.7974 75.6717 39.0393 75.6872 cv
39.1974 75.7107 39.3541 75.7351 39.5092 75.7605 cv
39.6741 75.7663 39.8389 75.7722 40.0039 75.7771 cv
40.3839 75.8326 40.7605 75.8912 41.1396 75.9478 cv
41.3332 75.9575 41.5289 75.9653 41.7221 75.9732 cv
41.8392 75.9595 41.9568 75.9458 42.0739 75.9341 cv
42.4202 75.9361 42.8329 75.9732 43.1798 75.9898 cv
43.4018 75.9946 43.6092 75.979 43.8209 75.9898 cv
44.257 76.0122 44.6721 75.9263 45.0771 75.8668 cv
45.26 75.859 45.445 75.8531 45.6274 75.8473 cv
45.8762 75.817 46.1426 75.7741 46.3875 75.7546 cv
47.2901 75.6717 48.1638 75.5701 49.0386 75.3985 cv
49.3312 75.3204 49.6254 75.2443 49.9186 75.1662 cv
50.2865 75.0931 50.6539 75.015 51.0206 74.9409 cv
51.2124 74.8862 51.3817 74.7906 51.5622 74.7184 cv
51.8622 74.6296 52.1603 74.5417 52.4604 74.452 cv
52.5887 74.4052 52.7155 74.3623 52.8438 74.3154 cv
53.0614 74.2569 53.257 74.2335 53.4731 74.1671 cv
53.9141 74.0149 54.3537 73.8578 54.7977 73.7037 cv
55.0591 73.5758 55.3226 73.4549 55.5846 73.33 cv
55.8408 73.2314 56.0958 73.1153 56.3407 73.0012 cv
56.412 72.9592 56.4798 72.9142 56.5505 72.8723 cv
56.8154 72.7474 57.0911 72.6225 57.3491 72.4889 cv
57.6492 72.3172 57.9492 72.1493 58.2498 71.9767 cv
58.4039 71.8985 58.5747 71.8537 58.7283 71.7736 cv
cp
f
42.2056 73.13 mo
42.1953 73.13 42.1856 73.13 42.1758 73.13 cv
42.1758 73.1192 42.1758 73.1104 42.1758 73.0997 cv
42.1309 73.0997 42.109 73.044 42.0841 73.0129 cv
41.9714 72.8333 41.8582 72.6538 41.7455 72.4742 cv
41.5099 72.2001 41.2728 71.923 41.0367 71.6448 cv
40.3293 70.9726 39.5013 70.3969 38.633 70.0213 cv
38.4539 69.9569 38.273 69.8896 38.094 69.8251 cv
37.8939 69.7383 37.7105 69.6232 37.5027 69.5471 cv
37.3084 69.4749 37.1006 69.4514 36.8933 69.4134 cv
36.684 69.3734 36.4689 69.3149 36.2532 69.267 cv
35.8083 69.1773 35.3604 69.0436 34.9096 68.9627 cv
34.4725 68.908 34.0379 68.8553 33.6007 68.7977 cv
33.2524 68.7801 32.9187 68.786 32.5825 68.7549 cv
31.0044 68.5948 29.4428 68.4416 27.9177 68.1957 cv
27.3981 68.1079 26.8898 68.1059 26.3799 68.0162 cv
25.8746 67.9265 25.3662 67.7801 24.8851 67.6268 cv
24.6182 67.543 24.3451 67.4806 24.0875 67.3829 cv
23.8333 67.2697 23.5801 67.1556 23.327 67.0404 cv
23.1518 66.9605 22.9767 66.8815 22.802 66.8053 cv
22.6815 66.7273 22.559 66.6483 22.4351 66.5693 cv
22.3771 66.537 22.318 66.5068 22.2595 66.4726 cv
21.8428 66.1389 21.5145 65.6774 21.194 65.2705 cv
20.9476 64.9564 20.8183 64.5905 20.7012 64.2119 cv
20.6452 64.0236 20.5871 63.8362 20.5291 63.6489 cv
20.3441 62.7766 20.3632 61.8652 20.3534 60.912 cv
20.3398 60.7276 20.3218 60.5432 20.3061 60.3558 cv
20.3315 59.6485 20.3759 58.9294 20.39 58.2288 cv
20.3846 58.0746 20.3798 57.9205 20.3729 57.7634 cv
20.3768 57.056 20.3802 56.3466 20.3846 55.6372 cv
20.3876 55.1708 20.4237 54.7113 20.4198 54.2683 cv
20.4003 52.3579 20.4344 50.425 20.4773 48.497 cv
20.4617 48.2258 20.4471 47.9535 20.4305 47.6793 cv
20.4276 47.3788 20.4613 47.0939 20.4617 46.808 cv
20.4569 46.6714 20.453 46.5338 20.4501 46.3973 cv
20.4861 45.963 20.5232 45.524 20.5584 45.0879 cv
20.5667 44.7483 20.5369 44.4156 20.5369 44.0984 cv
20.5388 43.8595 20.5749 43.6165 20.5647 43.3686 cv
20.5564 43.1677 20.5095 42.9783 20.5144 42.7564 cv
20.5257 42.572 20.5369 42.3865 20.5452 42.2027 cv
20.5413 41.8319 20.5164 41.4275 20.5242 41.0372 cv
20.5291 40.8118 20.5608 40.5742 20.555 40.3371 cv
20.5486 40.078 20.4978 39.8215 20.5047 39.5497 cv
20.5354 39.2306 20.5647 38.9096 20.5944 38.5895 cv
20.6027 38.2764 20.5763 37.9759 20.5773 37.6841 cv
20.5807 37.0314 20.6095 36.3245 20.613 35.6454 cv
20.6183 35.5083 20.6252 35.3736 20.6291 35.2375 cv
20.6154 34.9463 20.5988 34.654 20.5837 34.3628 cv
20.6071 34.1115 20.6291 33.8583 20.6545 33.6051 cv
20.6774 32.3923 20.674 31.1444 20.7012 29.9608 cv
20.7032 29.553 20.7032 29.1456 20.7051 28.7378 cv
20.6934 28.4499 20.6506 28.169 20.6574 27.864 cv
20.6676 27.6694 20.6774 27.4738 20.6895 27.2815 cv
20.6954 26.2589 20.6716 25.233 20.6774 24.1924 cv
20.6799 23.8143 20.713 23.4747 20.711 23.1123 cv
20.7051 22.7034 20.6885 22.2615 20.6905 21.8307 cv
20.6924 21.5506 20.7232 21.2779 20.7247 20.9857 cv
20.7257 20.753 20.6799 20.4271 20.7569 20.2281 cv
20.7584 20.1705 20.8266 20.1798 20.875 20.1739 cv
21.2945 20.1149 21.8224 20.0607 22.2722 20.13 cv
22.8264 20.2154 23.3855 20.1256 23.9641 20.129 cv
24.4783 20.1324 24.9925 20.1334 25.5087 20.1344 cv
25.8199 20.1173 26.1292 20.1013 26.4424 20.0842 cv
27.023 20.0876 27.5615 20.1231 28.1304 20.1182 cv
28.8129 20.113 29.5511 20.1022 30.2608 20.1056 cv
30.4629 20.1149 30.6668 20.1256 30.8716 20.1334 cv
31.161 20.1173 31.4541 20.1047 31.7464 20.0886 cv
31.9888 20.0944 32.2166 20.1451 32.4747 20.1461 cv
32.8011 20.1485 33.0973 20.1173 33.4051 20.1256 cv
33.8842 20.1344 34.3984 20.1368 34.894 20.1646 cv
35.1258 20.1832 35.3585 20.2003 35.5912 20.2188 cv
36.2771 20.212 36.9913 20.1832 37.6626 20.1759 cv
38.1202 20.1886 38.5769 20.2003 39.032 20.2139 cv
39.4189 20.2086 39.8024 20.1344 40.197 20.1368 cv
40.4737 20.1383 40.78 20.1646 41.0723 20.1656 cv
41.3347 20.1622 41.5962 20.1563 41.8587 20.1544 cv
42.1592 20.1773 42.4617 20.2012 42.7627 20.2266 cv
42.9959 20.2154 43.2296 20.2047 43.4623 20.1934 cv
43.9199 20.2105 44.3741 20.2266 44.8317 20.2441 cv
45.0468 20.2266 45.26 20.2105 45.4732 20.1934 cv
46.7173 20.1612 47.8891 20.1925 49.1449 20.1807 cv
49.4195 20.1646 49.6913 20.1461 49.9616 20.13 cv
50.5221 20.1149 51.1144 20.1544 51.652 20.1149 cv
51.771 20.1047 51.8857 20.092 52.0032 20.0827 cv
52.4701 20.129 53.016 20.0793 53.5181 20.091 cv
53.7263 20.0944 53.8985 20.1451 54.1001 20.1495 cv
54.3235 20.1417 54.5484 20.1368 54.7699 20.129 cv
55.1294 20.1417 55.5446 20.1851 55.9066 20.1807 cv
56.1588 20.1798 56.4018 20.1309 56.6671 20.1383 cv
56.8521 20.1544 57.0345 20.1715 57.2204 20.1886 cv
57.477 20.1934 57.7697 20.1563 58.0355 20.1773 cv
58.22 20.2061 58.4039 20.2324 58.5903 20.2588 cv
58.7439 20.2534 58.9001 20.2461 59.0567 20.2392 cv
59.2206 20.25 59.3855 20.2578 59.5523 20.2671 cv
59.7168 20.2612 59.8816 20.251 60.0456 20.2427 cv
60.3587 20.2383 60.6578 20.2749 60.9491 20.2544 cv
61.4247 20.2188 61.8911 20.289 62.3785 20.2842 cv
62.6112 20.2695 62.8439 20.2534 63.0762 20.2373 cv
63.2327 20.2461 63.3874 20.2544 63.544 20.2622 cv
63.6903 20.2636 63.8743 20.2451 63.9972 20.2949 cv
64.007 20.3027 64.0187 20.313 64.0308 20.3213 cv
64.1343 20.4744 64.0953 20.7589 64.0928 20.9662 cv
64.0889 21.6316 64.0596 22.2761 64.0875 22.9176 cv
64.1026 23.324 64.0972 23.7895 64.1011 24.2002 cv
64.0928 24.3363 64.0875 24.4729 64.0792 24.6066 cv
64.0889 24.8993 64.1026 25.1891 64.1124 25.4808 cv
64.0972 25.773 64.0816 26.0643 64.0635 26.358 cv
64.0875 26.7356 64.1124 27.1166 64.1363 27.4942 cv
64.1182 27.6371 64.1026 27.786 64.0855 27.9309 cv
64.0757 28.185 64.1265 28.4144 64.1246 28.6606 cv
64.1085 28.9129 64.0928 29.1651 64.0772 29.4174 cv
64.0757 29.7281 64.0699 30.0388 64.066 30.3487 cv
64.0504 30.5824 64.0308 30.8161 64.0148 31.0478 cv
64.0421 31.4278 64.0699 31.8064 64.0928 32.184 cv
64.0831 32.3211 64.0718 32.4581 64.0577 32.5938 cv
64.0465 32.9085 64.0226 33.2251 64.0269 33.5266 cv
64.0323 34.0656 64.0772 34.6677 64.0831 35.1868 cv
64.0699 35.3044 64.0562 35.4205 64.044 35.538 cv
64.0538 35.78 64.0635 36.0205 64.0733 36.2634 cv
64.0596 36.5445 64.0323 36.8611 64.0308 37.1699 cv
64.0308 37.3953 64.0792 37.5909 64.0733 37.8109 cv
64.0596 37.9271 64.044 38.0446 64.0269 38.1612 cv
64.0342 38.3154 64.0406 38.472 64.044 38.6252 cv
64.0308 39.2101 63.9777 39.7765 63.9855 40.3761 cv
63.9953 40.6664 64.0031 40.9577 64.0148 41.2503 cv
64.0285 41.3679 64.0421 41.483 64.0596 41.6001 cv
64.0523 41.7948 64.0406 41.9885 64.0323 42.1831 cv
64.0382 42.3085 64.0465 42.4349 64.0523 42.5608 cv
64.0342 42.7744 64.0187 42.9881 64.0016 43.2018 cv
64.0031 43.4916 64.0733 43.797 64.0621 44.1053 cv
64.0308 44.9581 63.9836 45.763 63.9777 46.6119 cv
63.9758 46.9564 64.0308 47.2617 64.0285 47.6032 cv
64.0114 47.7886 63.9919 47.973 63.9738 48.1564 cv
63.9699 48.5556 63.9665 48.9546 63.9601 49.3517 cv
63.9406 49.5654 63.9206 49.7791 63.9036 49.9927 cv
63.9133 50.7996 63.925 51.6046 63.9372 52.4106 cv
63.9328 52.9716 63.8758 53.5678 63.8816 54.1307 cv
63.8958 54.4323 63.9109 54.7328 63.923 55.0363 cv
63.9172 55.1534 63.9094 55.2685 63.9036 55.3866 cv
63.9011 55.5993 63.8997 55.812 63.8977 56.0276 cv
63.8938 56.5476 63.9191 57.0716 63.9172 57.5702 cv
63.9133 58.1751 63.9191 58.8279 63.9055 59.464 cv
63.8977 59.6407 63.8899 59.8124 63.8841 59.988 cv
63.8958 60.0963 63.9094 60.2017 63.923 60.309 cv
63.9055 60.6798 63.886 61.0486 63.8704 61.4164 cv
63.8626 61.7276 63.9075 62.0575 63.886 62.3775 cv
63.8509 62.5727 63.8137 62.7687 63.7806 62.9649 cv
63.7528 63.1757 63.7255 63.3864 63.7006 63.5991 cv
63.626 63.9601 63.362 64.4812 63.1703 64.7895 cv
63.0044 65.0559 62.7264 65.2002 62.5132 65.414 cv
62.3844 65.5388 62.2399 65.6228 62.1053 65.735 cv
61.8565 65.9477 61.6096 66.1721 61.3277 66.3214 cv
61.1476 66.3887 60.9681 66.456 60.7881 66.5224 cv
60.4247 66.6707 60.0607 66.8346 59.6884 66.9761 cv
59.3464 67.1049 58.9835 67.2005 58.6425 67.3283 cv
58.5596 67.3596 58.4703 67.3907 58.3844 67.419 cv
58.1966 67.4181 57.9443 67.5039 57.799 67.5918 cv
57.6365 67.5898 57.4652 67.6093 57.3341 67.6767 cv
57.0862 67.6737 56.9101 67.7459 56.7091 67.8201 cv
56.6462 67.8395 56.5818 67.8581 56.5184 67.8757 cv
56.4164 67.8757 56.3023 67.8864 56.2237 67.9313 cv
56.0305 67.9304 55.5807 68.0201 55.4363 68.102 cv
55.2651 68.102 55.0557 68.0708 54.9124 68.1294 cv
54.8113 68.1294 54.6971 68.1411 54.6186 68.186 cv
54.4625 68.1841 54.2766 68.1665 54.1522 68.2416 cv
54.0761 68.2504 53.9962 68.2601 53.919 68.2699 cv
53.7966 68.2699 53.6663 68.2738 53.5697 68.3255 cv
53.4614 68.3255 53.3365 68.3382 53.2492 68.3821 cv
53.0458 68.3802 52.7418 68.3489 52.5779 68.4386 cv
52.5009 68.4465 52.4223 68.4543 52.3452 68.464 cv
52.1467 68.4611 51.9013 68.3909 51.732 68.4914 cv
51.6158 68.4894 51.4768 68.4738 51.3817 68.5168 cv
51.3227 68.5285 51.2656 68.5362 51.208 68.544 cv
51.0206 68.544 50.7826 68.509 50.6246 68.5704 cv
50.5464 68.5811 50.4689 68.5899 50.3914 68.5987 cv
50.3323 68.6085 50.2738 68.6182 50.2167 68.626 cv
50.1577 68.6378 50.0986 68.6474 50.043 68.6552 cv
49.9543 68.665 49.8664 68.6728 49.7781 68.6845 cv
49.6566 68.6826 49.5234 68.6884 49.4283 68.7392 cv
49.3498 68.747 49.2727 68.7588 49.1946 68.7665 cv
49.0638 68.7665 48.9141 68.7626 48.815 68.8241 cv
48.6912 68.8241 48.56 68.8251 48.4663 68.8806 cv
48.3667 68.8806 48.2491 68.8923 48.175 68.9343 cv
48.0823 68.9343 47.9833 68.9509 47.911 68.9929 cv
47.854 69.0016 47.7954 69.0104 47.7369 69.0231 cv
47.5876 69.0212 47.3891 69.0661 47.2686 69.1334 cv
47.1735 69.1334 47.0793 69.15 47.0056 69.1929 cv
46.7012 69.191 46.4377 69.3295 46.1801 69.43 cv
45.9801 69.5032 45.7782 69.5763 45.5777 69.6505 cv
45.1864 69.6486 44.7722 70.0096 44.4839 70.2487 cv
44.2316 70.4555 43.9057 70.5579 43.6579 70.7921 cv
42.9656 71.4331 42.549 72.2957 42.2056 73.13 cv
cp
0 0 0 0 cmyk
f
45.4552 68.99 mo
45.6342 68.9148 45.8133 68.8387 45.9943 68.7626 cv
46.3485 68.6572 46.7212 68.5899 47.0958 68.509 cv
47.7954 68.3577 48.474 68.1743 49.1746 68.0269 cv
49.3483 68.0162 49.519 68.0045 49.6913 67.9928 cv
49.963 67.9431 50.2279 67.8757 50.5124 67.8503 cv
50.8807 67.8366 51.2504 67.825 51.6198 67.8133 cv
52.0637 67.7801 52.5149 67.6845 52.9628 67.6522 cv
53.3639 67.6229 53.7615 67.6093 54.1547 67.5586 cv
54.5079 67.5039 54.8577 67.4444 55.208 67.3868 cv
55.3241 67.3791 55.4402 67.3684 55.5534 67.3605 cv
56.0968 67.2727 56.6198 67.1439 57.1379 67.023 cv
57.316 66.98 57.4853 66.9605 57.6551 66.9117 cv
58.1536 66.7644 58.6376 66.5693 59.1225 66.4141 cv
59.5299 66.2814 59.9231 66.1584 60.3051 65.9848 cv
60.6364 65.8335 60.914 65.6208 61.2233 65.4276 cv
61.7735 65.0812 62.3746 64.7134 62.7171 64.1329 cv
62.8693 63.8753 63.0102 63.4918 63.0566 63.1864 cv
63.0688 63.042 63.0786 62.8956 63.0884 62.7493 cv
63.1937 62.1199 63.1781 61.4301 63.1703 60.7725 cv
63.182 60.5393 63.1898 60.3051 63.202 60.0709 cv
63.1937 59.946 63.1879 59.8192 63.1781 59.6933 cv
63.1781 59.4416 63.1781 59.1889 63.1766 58.9372 cv
63.1625 58.8396 63.1508 58.741 63.1371 58.6434 cv
63.1469 58.5566 63.1571 58.4698 63.1669 58.382 cv
63.1571 58.2961 63.1469 58.2073 63.1351 58.1195 cv
63.139 57.9477 63.1864 57.8063 63.1864 57.6248 cv
63.1879 57.4297 63.1371 57.2872 63.1351 57.0989 cv
63.1332 56.8765 63.1898 56.7115 63.1962 56.4891 cv
63.2094 55.7222 63.202 54.9679 63.2312 54.2128 cv
63.2229 54.0293 63.2172 53.8459 63.2118 53.6624 cv
63.2152 52.9901 63.2191 52.3208 63.2215 51.6525 cv
63.2605 49.8259 63.2371 47.8794 63.2776 46.0537 cv
63.2664 45.8616 63.2581 45.6655 63.2444 45.4723 cv
63.2371 45.4127 63.2288 45.3572 63.2215 45.2986 cv
63.2312 45.1532 63.2625 44.9903 63.2566 44.8312 cv
63.2444 44.7239 63.2327 44.6166 63.2215 44.5112 cv
63.2273 44.3599 63.2664 44.2077 63.2639 44.0438 cv
63.2605 43.7062 63.1801 43.4203 63.182 43.0817 cv
63.184 42.8495 63.2172 42.6505 63.2327 42.4407 cv
63.2312 42.3339 63.2273 42.2256 63.2229 42.1197 cv
63.2386 42.0149 63.2542 41.904 63.2703 41.7996 cv
63.2566 41.6728 63.2425 41.5475 63.2249 41.4197 cv
63.2425 41.2757 63.2566 41.1293 63.2722 40.9844 cv
63.2679 40.8518 63.2273 40.7435 63.2273 40.603 cv
63.2312 39.8078 63.2371 39.0106 63.241 38.2153 cv
63.2425 38.0334 63.2898 37.8914 63.2957 37.7168 cv
63.3015 37.545 63.2469 37.4162 63.2522 37.2538 cv
63.2664 37.166 63.282 37.0762 63.2957 36.9899 cv
63.3089 36.7274 63.3211 36.466 63.3367 36.2035 cv
63.3308 35.8039 63.3269 35.3668 63.3113 34.9497 cv
63.2957 34.815 63.2776 34.6794 63.2605 34.5423 cv
63.2581 34.214 63.3172 33.9252 63.3128 33.6095 cv
63.2996 33.3666 63.2835 33.1246 63.2703 32.8807 cv
63.2801 31.0039 63.2074 29.2018 63.2776 27.3401 cv
63.2835 26.3234 63.2898 25.3033 63.2957 24.2831 cv
63.3152 23.7304 63.2737 23.1283 63.2679 22.5917 cv
63.2625 22.0449 63.2737 21.5487 63.2776 20.9891 cv
63.2679 20.9891 63.2581 20.9891 63.2469 20.9891 cv
63.2469 20.9281 62.9727 20.9662 62.9259 20.9877 cv
62.3844 20.9808 61.8389 20.973 61.2974 20.9662 cv
60.9447 20.9349 60.5934 20.9106 60.2173 20.9155 cv
60.1124 20.9155 59.9836 20.9038 59.8967 20.9427 cv
59.7635 20.9554 59.6255 20.9696 59.4899 20.9833 cv
59.2953 20.9603 59.1001 20.9349 58.904 20.9096 cv
58.2244 20.9048 57.5453 20.9004 56.8653 20.896 cv
56.6744 20.8945 56.1798 20.8335 56.05 20.8911 cv
55.6997 20.8877 55.3504 20.8833 55.0011 20.8794 cv
54.7362 20.8598 54.3566 20.7481 54.0962 20.8496 cv
54.0205 20.8598 53.9405 20.8691 53.8649 20.8794 cv
53.6117 20.8759 53.359 20.8725 53.1058 20.8691 cv
52.7302 20.8427 52.3623 20.7818 51.97 20.7794 cv
51.6783 20.8647 51.2602 20.7232 50.9783 20.8335 cv
50.9011 20.8427 50.8231 20.852 50.747 20.8613 cv
50.4459 20.8598 50.145 20.8579 49.8425 20.8564 cv
49.6957 20.8564 49.4957 20.8291 49.3752 20.8842 cv
49.2843 20.8833 49.1566 20.874 49.0819 20.9106 cv
48.8316 20.9096 48.6214 20.8579 48.3833 20.8496 cv
47.7827 20.8471 47.1808 20.8418 46.5783 20.8383 cv
46.3597 20.8369 46.0363 20.7896 45.8513 20.8647 cv
45.7821 20.8725 45.7137 20.8818 45.645 20.8921 cv
45.5572 20.9004 45.4688 20.9096 45.383 20.9189 cv
45.0429 20.9174 44.48 20.7393 44.1873 20.8554 cv
44.1287 20.8632 44.0722 20.8725 44.0136 20.8818 cv
43.8848 20.8818 43.7341 20.8842 43.633 20.9383 cv
42.7642 20.9349 41.8977 20.9281 41.0684 20.9106 cv
40.8484 20.9048 40.6157 20.9165 40.3985 20.9155 cv
40.2951 20.9155 40.1405 20.8725 40.0488 20.9189 cv
39.8336 20.9155 39.6223 20.9121 39.4072 20.9096 cv
39.1106 20.8886 38.4534 20.7701 38.1837 20.8794 cv
37.9885 20.8759 37.7953 20.8725 37.6007 20.8715 cv
37.4719 20.8598 37.3148 20.8242 37.1904 20.8725 cv
37.0182 20.8725 36.7874 20.8403 36.6391 20.8994 cv
36.2913 20.8969 35.9849 20.8369 35.6185 20.8344 cv
35.5029 20.8344 35.3668 20.8217 35.2692 20.8632 cv
35.0536 20.8613 34.7511 20.8149 34.5696 20.8877 cv
34.2384 20.8867 33.9091 20.8852 33.5773 20.8833 cv
33.4231 20.8818 33.21 20.852 33.0841 20.9087 cv
32.6665 20.9121 32.2479 20.9131 31.8308 20.9155 cv
31.5659 20.896 31.0537 20.7979 30.8092 20.896 cv
30.5467 20.8945 30.0935 20.8048 29.8764 20.8886 cv
29.3252 20.8877 28.8178 20.8554 28.2734 20.8183 cv
28.0816 20.8038 27.7864 20.7393 27.6026 20.8208 cv
27.4951 20.8183 27.3741 20.8057 27.282 20.8486 cv
27.0737 20.8462 26.7893 20.8023 26.6136 20.8725 cv
26.4292 20.8715 26.1462 20.8256 25.9994 20.8969 cv
25.31 20.8945 24.5793 20.8598 23.845 20.8564 cv
23.6304 20.8564 23.325 20.809 23.1445 20.8818 cv
22.879 20.8808 22.2986 20.8256 22.0941 20.9048 cv
21.9405 20.9048 21.6702 20.8613 21.5692 20.9589 cv
21.4052 21.1145 21.495 21.8789 21.5008 22.1263 cv
21.494 22.32 21.4863 22.5147 21.477 22.7093 cv
21.4834 22.8863 21.5091 23.0708 21.4892 23.262 cv
21.4892 23.5348 21.4897 23.8056 21.4912 24.0782 cv
21.4638 24.8222 21.456 25.5336 21.4516 26.296 cv
21.4502 26.5009 21.3999 26.6551 21.393 26.8473 cv
21.3842 27.0497 21.4287 27.2459 21.4267 27.4288 cv
21.4023 27.6142 21.3803 27.7996 21.3575 27.9835 cv
21.3677 28.3719 21.3746 28.7598 21.3867 29.1466 cv
21.3594 29.8086 21.3287 30.5179 21.3365 31.219 cv
21.3467 31.4908 21.3565 31.7624 21.3663 32.0323 cv
21.377 32.122 21.3886 32.2084 21.3994 32.2957 cv
21.377 32.4615 21.358 32.6275 21.3355 32.7909 cv
21.3482 33.9793 21.3155 35.1131 21.3086 36.3186 cv
21.3057 36.8415 21.334 37.324 21.3228 37.8339 cv
21.3043 38.0852 21.2862 38.3383 21.2671 38.593 cv
21.274 38.9716 21.2818 39.3507 21.2896 39.7292 cv
21.2847 40.481 21.2526 41.264 21.2599 42.0319 cv
21.2735 42.3036 21.2837 42.5744 21.296 42.8476 cv
21.2789 43.1969 21.2599 43.5462 21.2399 43.8965 cv
21.2331 45.2752 21.2565 46.7066 21.2681 48.094 cv
21.2735 48.4385 21.2106 48.7272 21.2096 49.0834 cv
21.2067 49.4532 21.2047 49.822 21.2047 50.1899 cv
21.2126 50.3577 21.2194 50.5226 21.2262 50.6865 cv
21.1999 51.9412 21.1574 53.1453 21.1505 54.4167 cv
21.1467 54.9933 21.0847 55.4958 21.0823 56.0491 cv
21.0823 56.291 21.0833 56.534 21.0847 56.7759 cv
21.096 56.8726 21.1111 56.9701 21.1238 57.0667 cv
21.1082 57.1652 21.0921 57.2628 21.0789 57.3584 cv
21.0637 57.6385 21.0471 57.9351 21.0452 58.2034 cv
21.0437 58.5459 21.051 58.9235 21.0662 59.2826 cv
21.0725 59.4445 21.1179 59.5792 21.117 59.75 cv
21.1155 59.9226 21.0637 60.0514 21.0628 60.2154 cv
21.0608 60.4144 21.1145 60.5618 21.114 60.7696 cv
21.1043 62.2761 21.1213 63.7269 21.8048 64.8734 cv
22.2761 65.6569 23.1415 66.1506 23.9289 66.4892 cv
24.4749 66.7253 25.0345 66.9956 25.6282 67.1361 cv
26.0677 67.2376 26.5009 67.2932 26.9615 67.3732 cv
27.3113 67.4337 27.6752 67.5234 28.0426 67.5625 cv
28.3914 67.5898 28.7402 67.6171 29.0895 67.6425 cv
29.8393 67.7351 30.5726 67.8669 31.3351 67.9596 cv
31.6922 67.9771 32.0518 67.9967 32.4104 68.0123 cv
32.5659 68.0455 32.7211 68.0796 32.8773 68.1138 cv
33.1587 68.1196 33.4427 68.1216 33.7217 68.1294 cv
34.0227 68.1567 34.3237 68.1841 34.6253 68.2152 cv
34.7803 68.222 34.9341 68.2279 35.0907 68.2308 cv
35.2267 68.267 35.3629 68.2981 35.5 68.3294 cv
35.8864 68.388 36.2463 68.4299 36.6332 68.5051 cv
36.7523 68.544 36.8713 68.5831 36.9913 68.626 cv
37.2548 68.7021 37.4953 68.7655 37.7475 68.8641 cv
38.1134 68.9977 38.4817 69.1304 38.8486 69.2612 cv
39.116 69.3968 39.3799 69.5286 39.6497 69.6642 cv
39.7907 69.7598 39.9356 69.8554 40.0756 69.951 cv
40.3693 70.1199 40.6581 70.2642 40.9254 70.4838 cv
41.2547 70.7511 41.4801 71.077 41.769 71.3873 cv
41.8626 71.4917 41.9118 71.6293 42.0377 71.6995 cv
42.0377 71.7483 42.0543 71.7308 42.0978 71.7308 cv
42.0978 71.68 42.2446 71.5873 42.2836 71.5395 cv
42.3456 71.4448 42.4046 71.3512 42.4652 71.2566 cv
43.1022 70.3257 44.0497 69.6593 45.0107 69.1461 cv
45.159 69.0963 45.3049 69.0407 45.4552 68.99 cv
cp
1 .871122 .421698 .518273 cmyk
f
45.6245 24.5939 mo
45.6245 24.6022 45.6245 24.6125 45.6245 24.6217 cv
45.5952 24.6217 45.565 24.6217 45.5362 24.6217 cv
45.5357 24.5261 45.5333 24.4295 45.5308 24.3339 cv
45.5728 24.0426 45.8124 23.91 45.9772 23.6923 cv
46.2869 23.9621 45.8094 24.3948 45.6245 24.5939 cv
cp
0 0 0 0 cmyk
f
47.1368 22.1644 mo
47.2598 22.0331 47.3276 21.8731 47.4349 21.7291 cv
47.5262 21.6384 47.6189 21.5487 47.7125 21.4555 cv
47.9213 21.4785 48.1175 21.5091 48.3512 21.5199 cv
48.3512 21.5487 48.3512 21.5775 48.3512 21.6073 cv
48.0418 21.6039 47.2129 22.6332 47.0207 22.8932 cv
46.931 23.0156 46.8232 23.2571 46.6831 23.3323 cv
46.5973 23.3747 46.4973 23.3392 46.428 23.2962 cv
46.2294 23.1733 46.3773 22.9557 46.4348 22.8127 cv
46.4714 22.723 46.4802 22.6161 46.5573 22.5492 cv
46.6382 22.5098 46.7144 22.4707 46.7953 22.4292 cv
46.91 22.3429 47.0222 22.2541 47.1368 22.1644 cv
cp
f
45.1581 22.8669 mo
45.2069 22.7171 45.2059 22.5536 45.28 22.4166 cv
45.3712 22.238 45.5971 22.1931 45.7347 22.0654 cv
45.8591 21.9517 45.886 21.7951 45.984 21.6697 cv
46.087 21.536 46.2294 21.5116 46.3704 21.4497 cv
46.4856 21.4497 46.6032 21.4506 46.7193 21.4506 cv
46.7193 21.5956 46.5289 21.7443 46.4582 21.8604 cv
46.3626 22.0185 46.267 22.1854 46.1689 22.3395 cv
46.0572 22.4917 45.942 22.6459 45.8274 22.799 cv
45.7503 22.9186 45.7235 23.0547 45.6274 23.163 cv
45.5572 23.2182 45.4869 23.2747 45.4142 23.3284 cv
45.3508 23.4011 45.2864 23.4713 45.2225 23.5406 cv
45.1576 23.6025 45.0927 23.6636 45.0273 23.7245 cv
44.9083 23.8685 44.9083 24.0792 44.7493 24.2051 cv
44.6102 24.3129 44.358 24.3865 44.1678 24.3222 cv
44.1497 24.3222 44.1282 24.3222 44.1092 24.3222 cv
44.1101 24.2349 44.4927 23.6416 44.5795 23.566 cv
44.6595 23.4967 44.7771 23.4923 44.8405 23.4001 cv
44.8985 23.3138 44.8893 23.2123 44.9395 23.1235 cv
44.9986 23.0191 45.1162 22.9855 45.1581 22.8669 cv
cp
f
42.949 22.4561 mo
42.9842 22.3117 43.1218 22.2165 43.1637 22.0727 cv
43.214 21.9034 43.1525 21.7604 43.2726 21.6233 cv
43.396 21.4819 44.1453 21.5956 44.3892 21.4668 cv
44.5454 21.4677 44.6975 21.4677 44.8532 21.4702 cv
44.8532 21.4897 44.8532 21.5091 44.8532 21.5292 cv
44.8083 21.5292 44.8083 21.5521 44.7882 21.5809 cv
44.5609 21.9019 44.4438 22.2742 44.2844 22.6274 cv
44.2111 22.7552 44.1355 22.883 44.0643 23.0132 cv
44.0057 23.1523 43.9463 23.2943 43.8887 23.4333 cv
43.738 23.7143 43.3608 24.1958 43.032 24.2578 cv
43.032 24.2485 43.032 24.2383 43.032 24.229 cv
42.9813 24.228 42.9979 23.9621 42.991 23.91 cv
42.9676 23.7812 42.9174 23.6729 42.9344 23.5279 cv
42.9481 23.3713 43.032 23.2664 43.0291 23.0928 cv
43.0223 22.8786 42.8974 22.6712 42.949 22.4561 cv
cp
f
40.6332 21.4794 mo
40.7406 21.3643 41.1621 21.4404 41.3288 21.392 cv
41.5128 21.4541 41.9802 21.4472 42.2027 21.4555 cv
42.2071 21.5834 42.2129 21.7087 42.2183 21.8375 cv
42.2407 21.9331 42.2631 22.0297 42.2836 22.1263 cv
42.2655 22.2327 42.2475 22.3395 42.2305 22.4453 cv
42.2197 22.9093 42.1607 23.3664 42.1367 23.8157 cv
42.1524 24.0978 42.168 24.3798 42.1836 24.6607 cv
42.1758 24.6607 42.1641 24.6607 42.1553 24.6607 cv
42.1553 24.6515 42.1553 24.6422 42.1553 24.6319 cv
41.7845 24.6295 41.3586 23.4967 41.2098 23.2376 cv
41.1259 23.0928 40.9986 23.0005 40.8991 22.8635 cv
40.6903 22.5712 40.3127 21.819 40.6332 21.4794 cv
cp
f
38.2744 21.7019 mo
38.2754 21.6946 38.2773 21.6892 38.2798 21.6824 cv
38.3402 21.5047 38.7998 21.5013 38.9652 21.4067 cv
39.1374 21.4082 39.3603 21.378 39.5013 21.4462 cv
39.9156 21.6497 40.0546 22.2541 40.221 22.6357 cv
40.3278 22.8821 40.4732 23.1215 40.5913 23.3679 cv
40.6708 23.4991 40.7463 23.6289 40.8235 23.7592 cv
40.8766 23.8904 40.8952 24.0344 40.9 24.1875 cv
40.902 24.2958 40.9206 24.5007 40.8191 24.5539 cv
40.7367 24.5988 40.6118 24.5778 40.5317 24.5446 cv
40.38 24.4871 38.2842 21.8848 38.273 21.7487 cv
38.273 21.7409 38.273 21.734 38.273 21.7249 cv
38.273 21.718 38.2744 21.7087 38.2744 21.7019 cv
cp
f
37.1319 21.4267 mo
37.3489 21.4624 37.4778 21.5252 37.6358 21.6824 cv
37.867 21.9053 38.0642 22.1717 38.25 22.4326 cv
38.3446 22.5654 38.3988 22.7137 38.512 22.844 cv
38.6569 22.999 38.8037 23.1547 38.9481 23.3079 cv
39.0779 23.4723 39.2057 23.6338 39.3346 23.7982 cv
39.3818 23.8685 39.4258 23.9377 39.4736 24.008 cv
39.5658 24.0899 39.6609 24.1714 39.7536 24.2519 cv
39.9492 24.4397 40.1273 24.6734 40.2283 24.912 cv
40.1819 24.912 40.1834 24.9622 40.1721 24.9983 cv
40.0127 24.9983 39.818 24.9408 39.7043 24.851 cv
39.517 24.6607 39.3302 24.4685 39.1413 24.2772 cv
39.0213 24.1577 38.8809 24.1095 38.7774 23.9724 cv
38.5769 23.704 38.4257 23.384 38.1793 23.143 cv
38.0378 23.0039 37.8344 22.9777 37.6909 22.8415 cv
37.687 22.8371 37.6821 22.8313 37.6782 22.8279 cv
37.5265 22.6698 37.4719 22.4571 37.3431 22.2869 cv
37.1962 22.0931 36.9816 21.9609 36.8425 21.7697 cv
36.8376 21.757 36.8293 21.7433 36.8231 21.7316 cv
36.8206 21.7234 36.8192 21.7166 36.8167 21.7097 cv
36.7913 21.5438 37.0241 21.4785 37.1319 21.4267 cv
cp
f
43.655 27.4956 mo
43.739 27.5069 43.8219 27.5161 43.9043 27.5264 cv
44.1551 27.6176 44.3736 27.9874 44.2795 28.2533 cv
44.2277 28.3958 44.0682 28.5217 43.9468 28.6148 cv
43.8628 28.6802 43.7393 28.7792 43.6189 28.7699 cv
43.4496 28.7529 43.5208 28.3939 43.5628 28.2968 cv
43.6228 28.1636 43.773 28.1275 43.7828 27.962 cv
43.7979 27.7674 43.654 27.6796 43.655 27.4956 cv
cp
f
44.0643 26.2995 mo
43.9663 26.3589 43.8512 26.518 43.7224 26.5029 cv
43.5433 26.4809 43.4701 26.2487 43.3525 26.1404 cv
43.2237 26.016 42.9539 25.955 42.991 25.7189 cv
43.0037 25.6233 43.0891 25.5725 43.1705 25.5418 cv
43.1705 25.5336 43.1705 25.5218 43.1705 25.514 cv
43.3667 25.551 43.5014 25.6497 43.6774 25.7248 cv
43.8794 25.8087 44.0848 25.856 44.2951 25.9355 cv
44.3389 25.9516 44.3585 26.0023 44.3419 26.0506 cv
44.3 26.1751 44.1648 26.237 44.0643 26.2995 cv
cp
f
43.6848 29.9077 mo
43.6457 30.1209 43.1608 30.2096 42.994 30.1057 cv
42.7466 29.9525 43.2198 29.6452 43.3223 29.5647 cv
43.4467 29.5978 43.7165 29.7384 43.6848 29.9077 cv
cp
f
42.4153 29.7222 mo
42.3334 29.7398 42.2895 29.6638 42.2349 29.6281 cv
42.168 29.5851 42.0895 29.5724 42.0309 29.5071 cv
41.8812 29.3422 41.9255 29.1676 41.9167 28.9441 cv
41.9099 28.829 41.8895 28.686 41.9324 28.5802 cv
41.969 28.4856 42.0602 28.4431 42.1343 28.3914 cv
42.2295 28.3958 42.3066 28.4017 42.3792 28.4465 cv
42.4632 28.4997 43.0515 29.0685 43.0632 29.1305 cv
43.1018 29.3505 42.5924 29.6856 42.4153 29.7222 cv
cp
f
45.8396 27.8571 mo
45.8386 28.068 45.7303 28.2968 45.5445 28.3812 cv
45.5435 28.426 45.442 28.3626 45.3976 28.3499 cv
45.3986 28.1382 45.6733 27.985 45.8124 27.8571 cv
45.8201 27.8571 45.8298 27.8571 45.8396 27.8571 cv
cp
f
45.2913 27.4816 mo
45.2191 27.5337 45.1512 27.5957 45.0537 27.5948 cv
44.9522 27.5923 44.9097 27.5279 44.8791 27.444 cv
44.8551 27.3699 44.8639 26.4283 44.8893 26.3462 cv
44.921 26.2453 45.0771 26.1589 45.1483 26.077 cv
45.3693 26.1448 45.3567 26.2785 45.4323 26.4765 cv
45.5699 26.8414 45.6665 27.203 45.2913 27.4816 cv
cp
f
44.9298 29.1651 mo
44.9566 29.1651 44.9468 29.1729 44.9283 29.1939 cv
44.9283 29.3276 44.5502 29.5647 44.4326 29.4496 cv
44.2668 29.2895 44.4717 29.1212 44.5785 29.0163 cv
44.7337 29.028 44.8473 29.0363 44.9298 29.1651 cv
cp
f
42.2631 26.0897 mo
42.3675 26.1 42.4681 26.1126 42.571 26.1228 cv
42.7529 26.1829 43.333 26.6517 43.2706 26.882 cv
43.2169 27.0869 43.0232 27.2064 42.8749 27.3552 cv
42.7212 27.5049 42.5359 27.6821 42.3149 27.7084 cv
42.0963 27.7352 41.7845 26.762 41.825 26.5892 cv
41.8455 26.5122 42.1875 26.1624 42.2616 26.1194 cv
42.2616 26.1092 42.2616 26.1 42.2631 26.0897 cv
cp
f
41.5855 28.4533 mo
41.4718 28.5504 41.3235 28.7207 41.1669 28.731 cv
41.0459 28.7402 40.9873 28.6538 40.9088 28.587 cv
40.7171 28.4201 40.5786 28.0781 40.6439 27.8065 cv
40.6888 27.7235 40.7298 27.642 40.7747 27.5591 cv
40.8542 27.324 40.821 27.2825 41.0044 27.102 cv
41.2547 27.2191 41.9753 27.7513 41.9021 28.0908 cv
41.8709 28.2323 41.6879 28.3626 41.5855 28.4533 cv
cp
f
41.7167 30.0506 mo
41.707 30.0506 41.6987 30.0506 41.6879 30.0506 cv
41.6879 30.1013 41.5811 30.0701 41.5446 30.0608 cv
41.1044 29.9677 40.6293 29.855 40.9927 29.3169 cv
41.063 29.3276 41.124 29.3286 41.1762 29.3724 cv
41.2787 29.4496 41.3094 29.5638 41.384 29.6579 cv
41.4957 29.8008 41.6646 29.872 41.7167 30.0506 cv
cp
f
39.699 26.3385 mo
39.7 26.3385 39.9102 26.0838 39.9902 26.0472 cv
39.9902 26.0379 39.9902 26.0277 39.9902 26.0184 cv
40.3566 26.2565 40.6551 26.683 40.2756 27.0698 cv
40.2 27.1454 40.078 27.2493 39.9751 27.2654 cv
39.6341 27.3161 39.7775 26.8981 39.7731 26.7185 cv
39.7702 26.5824 39.7297 26.458 39.699 26.3385 cv
cp
f
40.3713 25.7881 mo
40.3713 25.7594 40.3713 25.7292 40.3713 25.7018 cv
40.4297 25.6857 40.4888 25.6681 40.5478 25.6545 cv
40.9127 25.6013 41.1464 25.5462 41.4503 25.3852 cv
41.5451 25.4116 41.6948 25.4116 41.7534 25.5057 cv
41.9177 25.7614 41.1494 26.2843 40.9245 26.2614 cv
40.6751 26.2326 40.5449 25.9355 40.3713 25.7881 cv
cp
f
39.92 28.205 mo
39.9746 28.2196 40.0293 28.2382 40.0839 28.2519 cv
40.2239 28.3362 40.7328 28.8222 40.7478 28.9729 cv
40.7644 29.1363 40.3341 29.4379 40.197 29.4681 cv
40.0799 29.491 40.0488 29.3734 40.0136 29.2895 cv
39.8785 28.9554 39.7809 28.5895 39.92 28.205 cv
cp
f
39.3253 27.8972 mo
39.0418 27.9674 39.1023 27.4186 39.1106 27.2376 cv
39.3184 27.3088 39.7438 27.7913 39.3253 27.8972 cv
cp
f
42.9306 58.2093 mo
42.9306 58.1273 43.5628 57.2063 43.6564 57.095 cv
43.7043 57.0364 43.7755 56.9897 43.8404 56.9623 cv
43.8404 56.9545 43.8404 56.9428 43.8404 56.9311 cv
43.9857 56.932 44.1326 56.935 44.2795 56.935 cv
44.2765 57.1146 43.5862 58.1312 43.4076 58.2073 cv
43.2803 58.2649 43.1076 58.2366 42.9578 58.2405 cv
42.9578 58.2307 42.9578 58.221 42.9578 58.2093 cv
42.949 58.2093 42.9383 58.2093 42.9306 58.2093 cv
cp
f
38.4861 58.1234 mo
38.3246 58.1917 38.0783 58.1478 37.888 58.1527 cv
37.8904 57.8902 38.9579 57.1223 39.176 56.9067 cv
39.3219 56.9067 39.4678 56.9067 39.6145 56.9067 cv
39.6135 57.1223 38.6969 58.0327 38.4861 58.1234 cv
cp
f
46.4377 63.8753 mo
46.2514 63.9572 45.9967 63.7953 45.8933 63.6596 cv
45.7811 63.5084 45.742 63.3318 45.6831 63.1561 cv
45.5903 62.8781 45.4996 62.5893 45.3908 62.315 cv
45.3191 62.1307 45.1791 61.8838 45.2054 61.6662 cv
45.2225 61.5286 45.3518 61.475 45.4464 61.4047 cv
45.5308 61.4252 45.5903 61.4506 45.6401 61.5257 cv
45.6958 61.6115 45.7152 61.7072 45.7494 61.8068 cv
45.8415 62.0779 45.9309 62.3424 46.0084 62.6234 cv
46.0987 62.9405 46.2353 63.2654 46.3704 63.5621 cv
46.3918 63.6128 46.5358 63.8313 46.4377 63.8753 cv
cp
f
45.4586 56.8959 mo
45.5981 57.0911 46.4309 58.0132 46.3831 58.1878 cv
46.3695 58.2307 46.3177 58.2366 46.2782 58.2454 cv
46.0265 58.2483 45.7752 58.2522 45.523 58.2542 cv
45.0771 58.2522 44.6298 58.2483 44.1834 58.2464 cv
44.1834 58.2366 44.1834 58.2288 44.1848 58.2171 cv
44.1736 58.2171 44.1624 58.2171 44.1541 58.2171 cv
44.1541 58.1195 44.2326 58.0317 44.2726 57.9546 cv
44.4127 57.6931 44.9605 56.9506 44.9244 56.6803 cv
44.9141 56.5905 44.8473 56.5223 44.7659 56.4949 cv
44.4141 56.374 43.9921 56.4774 43.6101 56.4637 cv
43.4076 56.453 42.9441 56.3525 42.7656 56.4324 cv
42.3831 56.4305 41.0498 56.2422 40.8932 56.5788 cv
40.8542 56.6598 40.9079 56.7526 40.9411 56.8218 cv
41.0966 57.1281 41.3362 57.4111 41.5431 57.6912 cv
41.6558 57.8639 41.7685 58.0356 41.8807 58.2034 cv
41.8797 58.2151 41.8797 58.2229 41.8797 58.2327 cv
41.8514 58.2454 41.8206 58.2522 41.7923 58.2649 cv
40.9723 58.2591 40.1581 58.2259 39.3448 58.221 cv
39.3448 58.2015 39.3448 58.1819 39.3448 58.1624 cv
39.3721 58.1624 40.5376 56.7555 40.6654 56.5954 cv
40.6654 56.5573 40.6566 56.5573 40.6356 56.536 cv
40.4913 56.5203 40.3429 56.4979 40.199 56.4813 cv
39.956 56.4696 39.714 56.4578 39.4702 56.4442 cv
38.774 56.4276 38.0388 56.4696 37.3729 56.4032 cv
37.3739 56.3212 38.3671 55.3631 38.5003 55.2255 cv
39.3448 54.3386 40.2244 53.4858 41.1064 52.6185 cv
41.4104 52.3052 41.7123 51.9959 42.0153 51.6876 cv
42.1134 51.5929 42.2027 51.4895 42.3261 51.4476 cv
42.3261 51.43 42.3261 51.4075 42.3276 51.388 cv
42.5236 51.4885 42.6949 51.6876 42.8554 51.8515 cv
43.1189 52.1218 43.3823 52.3949 43.6428 52.6652 cv
43.8106 52.8194 43.9755 52.9716 44.1424 53.1277 cv
44.8918 53.9093 45.6899 54.6469 46.4548 55.4216 cv
46.769 55.7387 47.1808 56.0627 47.4267 56.4305 cv
47.3695 56.4383 47.3106 56.4481 47.252 56.4578 cv
47.0119 56.4578 46.767 56.453 46.5236 56.452 cv
46.4328 56.45 46.3177 56.4228 46.2348 56.452 cv
45.9016 56.45 45.5084 56.4072 45.2415 56.5321 cv
45.239 56.6598 45.3903 56.7974 45.4586 56.8959 cv
cp
f
37.207 60.2017 mo
37.325 59.9987 39.5717 60.1724 39.9453 60.1744 cv
40.5253 60.1783 41.0406 60.0963 41.6079 60.0973 cv
42.3655 60.1022 43.169 60.1587 43.9394 60.1617 cv
44.3302 60.1646 44.7605 60.1509 45.1639 60.1392 cv
46.0826 60.1138 47.0359 60.1568 47.9311 60.1617 cv
47.9325 60.1529 47.9325 60.1421 47.9325 60.1333 cv
47.9799 60.1333 47.9843 59.8758 47.9843 59.8124 cv
47.9872 59.2298 47.9984 58.621 48.0028 58.0063 cv
48.0047 57.5848 47.9911 57.1584 48.0652 56.7827 cv
48.5414 57.0325 48.4838 57.6297 48.4994 58.1556 cv
48.5062 58.4786 48.5287 58.8542 48.518 59.2025 cv
48.4994 59.3909 48.4818 59.5733 48.4643 59.7578 cv
48.4487 60.0358 48.5302 60.349 48.4253 60.6017 cv
48.4253 60.6212 48.4253 60.6408 48.4253 60.6603 cv
48.4165 60.6603 48.4058 60.6603 48.396 60.6603 cv
48.396 60.6066 48.2155 60.63 48.1633 60.63 cv
47.7018 60.6271 47.2676 60.6535 46.7924 60.6495 cv
46.5866 60.6495 46.2982 60.6066 46.1221 60.6769 cv
45.9479 60.6769 45.7181 60.6408 45.5679 60.7022 cv
45.0332 60.7002 44.5249 60.6963 43.994 60.6603 cv
43.7594 60.6437 43.4369 60.5364 43.2081 60.63 cv
42.8174 60.63 42.4329 60.5988 42.0431 60.6095 cv
41.9568 60.6144 41.8499 60.587 41.7797 60.6212 cv
41.5601 60.6212 41.0699 60.5364 40.9049 60.6183 cv
40.7756 60.6183 40.6312 60.6017 40.5253 60.6456 cv
40.1571 60.6408 39.7868 60.6378 39.4189 60.6339 cv
39.1989 60.6212 38.9525 60.6144 38.7193 60.6017 cv
38.6413 60.6017 38.5627 60.6046 38.4847 60.6046 cv
38.3988 60.6144 38.312 60.6212 38.2227 60.6339 cv
37.7914 60.63 37.4465 60.7334 37.2382 60.3636 cv
37.2197 60.3295 37.1806 60.2465 37.207 60.2017 cv
cp
f
48.3199 67.4806 mo
48.2336 67.6016 47.9716 67.6347 47.8306 67.6522 cv
47.8345 66.9253 47.7935 66.1467 47.8218 65.4042 cv
47.8301 65.1924 47.792 64.9447 47.8359 64.7436 cv
47.8501 64.6734 47.8877 64.6412 47.9355 64.5924 cv
48.0853 64.5954 48.2253 64.5924 48.3429 64.6539 cv
48.3862 64.6539 48.3945 64.9661 48.3848 65.0305 cv
48.3623 65.1895 48.3975 65.3495 48.3975 65.5282 cv
48.396 65.7886 48.3541 66.0218 48.3677 66.2843 cv
48.3848 66.5536 48.4643 67.2756 48.3199 67.4806 cv
cp
f
57.0765 66.537 mo
56.9794 66.537 56.8604 66.5517 56.7852 66.5965 cv
56.6404 66.5945 56.3461 66.6707 56.2305 66.738 cv
55.9651 66.738 55.7382 66.8473 55.4977 66.8932 cv
55.3343 66.9253 55.1586 66.9565 55.0041 66.9839 cv
54.8889 66.9995 54.7538 66.9956 54.6538 67.0502 cv
54.5874 67.058 54.5191 67.0678 54.4504 67.0775 cv
54.383 67.0854 54.3142 67.0971 54.2454 67.1049 cv
54.0713 67.1029 53.8552 67.0775 53.722 67.1604 cv
53.6531 67.1692 53.5858 67.18 53.5161 67.1868 cv
53.2336 67.1868 52.8906 67.1439 52.6716 67.2727 cv
52.5662 67.2727 52.4408 67.2619 52.3511 67.298 cv
52.2169 67.298 52.1159 67.2678 52.0023 67.2376 cv
52.0008 67.298 51.652 67.3478 51.5934 67.3829 cv
51.3978 67.38 51.1494 67.3459 50.9812 67.4054 cv
50.9138 67.4181 50.8455 67.4249 50.7782 67.4356 cv
50.5826 67.4337 50.3494 67.4132 50.1928 67.4912 cv
50.0635 67.4883 49.9181 67.4961 49.8142 67.5469 cv
49.6244 67.5469 49.141 67.5957 49.0273 67.5039 cv
48.8385 67.3547 48.9433 65.5008 48.9507 65.1535 cv
48.9453 64.9758 48.935 64.8022 48.9297 64.6265 cv
48.9224 64.4421 48.9844 63.8225 48.6678 63.9259 cv
48.4882 63.9259 48.1048 63.8831 47.9706 63.9513 cv
47.7783 63.9494 47.2676 63.9884 47.1554 63.885 cv
46.9559 63.6957 46.8456 63.0029 46.7431 62.7249 cv
46.5846 62.3189 46.3285 61.9102 46.2739 61.4623 cv
46.267 61.4164 46.2548 61.3374 46.2865 61.3023 cv
46.3695 61.2028 46.7563 61.2203 46.9046 61.2203 cv
47.2481 61.2233 48.8102 61.2281 48.9375 61.0096 cv
49.0166 60.8642 48.9853 60.4085 48.9717 60.2271 cv
48.9824 59.946 48.9951 59.663 49.0063 59.3801 cv
49.0215 58.946 48.9224 58.4395 49.0526 58.0414 cv
50.046 59.1128 51.1719 60.0944 52.1944 61.1617 cv
52.291 61.2827 52.3843 61.3998 52.4799 61.5198 cv
52.735 61.7755 53.0204 62.0048 53.2834 62.2624 cv
53.9893 62.9561 54.644 63.7074 55.3343 64.4031 cv
55.8631 64.9378 56.4164 65.4627 56.9462 65.9984 cv
57.0452 66.096 57.215 66.2092 57.2613 66.3428 cv
57.3004 66.4444 57.1291 66.497 57.0765 66.537 cv
cp
f
55.1519 38.8574 mo
55.3119 38.6686 55.4724 38.4788 55.6348 38.2891 cv
55.8232 38.092 56.0412 37.9388 56.2334 37.7558 cv
56.4891 37.4944 56.7418 37.2328 56.9974 36.9728 cv
57.2853 36.6987 57.5735 36.4225 57.8604 36.1449 cv
58.4244 35.561 58.9849 34.9785 59.5479 34.3935 cv
60.4124 33.5671 61.2935 32.7519 62.0892 31.864 cv
62.2927 31.6337 62.5956 31.4439 62.7542 31.1882 cv
62.8966 31.3849 62.7946 31.9044 62.8107 32.1782 cv
62.8478 32.8221 62.8166 33.5207 62.8239 34.19 cv
62.8395 34.5296 62.8537 34.8692 62.8693 35.2078 cv
62.8493 35.559 62.8342 35.9087 62.8142 36.2576 cv
62.8298 36.4616 62.8439 36.6679 62.8615 36.8703 cv
62.8557 36.9694 62.8493 37.0635 62.8459 37.1616 cv
62.8576 37.2792 62.8693 37.3953 62.879 37.5139 cv
62.8674 37.6105 62.8537 37.7051 62.8381 37.8031 cv
62.7932 38.3407 62.7888 38.8809 62.7971 39.437 cv
62.8225 39.7165 62.8478 40 62.8731 40.282 cv
62.8576 40.4376 62.8395 40.5903 62.8205 40.7469 cv
62.8185 41.0961 62.8142 41.4469 62.8107 41.7972 cv
62.8029 41.9148 62.7971 42.0284 62.7912 42.146 cv
62.7971 42.3704 62.8518 42.6007 62.8478 42.8164 cv
62.8395 43.1247 62.7653 43.4506 62.7692 43.7784 cv
62.7971 44.1775 62.8225 44.5756 62.8493 44.9737 cv
62.8322 45.2176 62.8127 45.4586 62.7932 45.7016 cv
62.8068 45.7914 62.8142 45.8782 62.8264 45.9679 cv
62.8322 46.2285 62.8068 46.4949 62.7971 46.7494 cv
62.8088 46.9349 62.8239 47.1212 62.8361 47.3067 cv
62.8361 47.449 62.799 47.5817 62.7888 47.7135 cv
62.7692 47.9926 62.7873 48.2735 62.8205 48.5321 cv
62.8713 48.935 62.8557 49.462 62.8142 49.8698 cv
62.801 49.9665 62.7849 50.064 62.7692 50.1626 cv
62.7557 50.4075 62.8185 50.6241 62.8142 50.8621 cv
62.7971 50.9988 62.779 51.1314 62.7619 51.269 cv
62.7678 51.4134 62.7751 51.5588 62.7814 51.7051 cv
62.7736 51.9003 62.7619 52.0944 62.7522 52.2896 cv
62.7498 52.4731 62.8654 53.521 62.6912 53.521 cv
62.5775 53.52 61.6486 52.5043 61.4921 52.3491 cv
60.3315 51.1734 59.1533 49.9791 58.0005 48.8112 cv
57.816 48.6258 57.66 48.4072 57.4799 48.2316 cv
57.316 48.0745 57.1516 47.9145 56.9853 47.7584 cv
56.9037 47.6599 56.8159 47.5583 56.733 47.4608 cv
55.6158 46.3621 54.4849 45.2478 53.3663 44.1521 cv
53.1663 43.956 51.7134 42.5007 51.7085 42.4041 cv
51.7149 42.3773 51.7183 42.351 51.7212 42.3246 cv
51.8339 42.0494 52.2905 41.7431 52.5179 41.5265 cv
52.7652 41.2894 52.9473 41.0259 53.18 40.7908 cv
53.3883 40.5756 53.6171 40.3683 53.8283 40.1566 cv
53.9068 40.0907 53.9854 40.0239 54.0654 39.956 cv
54.2473 39.7697 54.4279 39.5809 54.6098 39.394 cv
54.7909 39.2145 54.9699 39.0374 55.1519 38.8574 cv
cp
f
48.4507 22.6205 mo
48.5458 22.5502 48.6482 22.5284 48.7331 22.4361 cv
48.7927 22.3463 48.8512 22.258 48.9102 22.1693 cv
49.0668 21.94 49.2293 21.7467 49.4205 21.5462 cv
49.4884 21.4843 49.5581 21.4209 49.6268 21.3585 cv
49.7532 21.2906 49.9727 21.3228 50.1298 21.3243 cv
50.463 21.3262 50.7918 21.3101 51.0919 21.2789 cv
51.2402 21.2628 51.3753 21.272 51.5007 21.216 cv
51.7246 21.2204 51.9461 21.2238 52.17 21.2287 cv
52.4213 21.2575 52.6887 21.3184 52.957 21.3194 cv
53.1945 21.3218 53.399 21.2331 53.6278 21.2389 cv
53.7054 21.2541 53.7839 21.2643 53.862 21.2779 cv
54.141 21.3101 54.4937 21.3101 54.7362 21.2355 cv
54.7362 21.2433 54.7362 21.2541 54.7362 21.2628 cv
54.746 21.2628 54.7538 21.2628 54.7665 21.2628 cv
54.7665 21.3023 54.7743 21.293 54.7362 21.293 cv
54.7318 21.3091 54.725 21.3228 54.7215 21.3404 cv
54.4382 21.7156 54.0244 22.0024 53.6951 22.32 cv
53.0712 22.9303 52.4486 23.5441 51.8271 24.1553 cv
51.6862 24.2992 51.5217 24.41 51.3831 24.5539 cv
50.8221 25.1261 50.3171 25.7467 49.7429 26.296 cv
49.5356 26.4975 49.3263 26.699 49.1215 26.8981 cv
49.0039 26.9971 48.8902 27.0947 48.7765 27.1951 cv
48.6463 27.3484 48.518 27.5015 48.3901 27.6532 cv
48.0428 28.0206 47.6749 28.3763 47.3032 28.7241 cv
47.1285 28.928 46.9549 29.1329 46.7822 29.3388 cv
46.3958 29.712 46.0109 30.0838 45.6274 30.458 cv
44.9703 31.1019 44.3233 31.7659 43.6638 32.4016 cv
43.4447 32.6089 43.253 32.867 43.0125 33.0294 cv
43.0125 33.0406 43.0125 33.0489 43.0125 33.0602 cv
43.0023 33.0602 42.9925 33.0602 42.9827 33.0602 cv
42.9827 33.0509 42.9827 33.0406 42.9827 33.0294 cv
42.9734 33.0294 42.9637 33.0294 42.952 33.0294 cv
42.9617 32.9431 42.9705 32.8553 42.9793 32.768 cv
42.9832 32.5664 42.9451 32.3625 42.9656 32.1552 cv
42.99 32.0484 43.0164 31.9425 43.0389 31.8342 cv
43.0529 31.6337 42.9813 31.4678 43.0754 31.2952 cv
43.134 31.1868 43.2687 31.1434 43.3545 31.0605 cv
43.5232 30.8931 43.6204 30.6804 43.8248 30.5458 cv
44.037 30.4038 44.3039 30.3624 44.5337 30.2521 cv
44.679 30.1769 44.7956 30.053 44.9337 29.9677 cv
45.2444 29.7652 45.6035 29.591 45.8367 29.27 cv
45.8992 29.1422 45.9635 29.0163 46.0275 28.889 cv
46.1045 28.7782 46.1835 28.6665 46.2602 28.5558 cv
46.3206 28.4041 46.3128 28.2323 46.3568 28.0713 cv
46.4167 27.8523 46.5265 27.6532 46.5328 27.3951 cv
46.5051 27.1722 46.4778 26.9497 46.4504 26.7253 cv
46.4201 26.4375 46.2587 26.1785 46.087 25.9609 cv
46.0138 25.8697 45.9246 25.7798 45.8796 25.6715 cv
45.823 25.6715 45.8796 25.5969 45.8953 25.5647 cv
45.9435 25.4989 45.9889 25.4335 46.0348 25.3691 cv
46.2353 25.0672 46.4407 24.7412 46.7402 24.5202 cv
46.8914 24.4075 46.9119 24.2461 47.028 24.108 cv
47.1661 23.947 47.371 23.8606 47.514 23.6914 cv
47.5876 23.5933 47.6622 23.4933 47.7359 23.3977 cv
47.7964 23.285 47.8247 23.1674 47.9169 23.0708 cv
48.0105 22.9718 48.1155 22.9254 48.2155 22.8425 cv
48.294 22.7689 48.3721 22.6942 48.4507 22.6205 cv
cp
f
31.5644 21.3379 mo
31.8513 21.3404 32.2089 21.3819 32.4679 21.3116 cv
32.6762 21.3541 32.9118 21.3414 33.1373 21.3458 cv
33.3144 21.3575 33.4875 21.3677 33.6637 21.377 cv
33.9061 21.377 34.1472 21.377 34.3896 21.376 cv
34.4984 21.3964 34.6048 21.414 34.7101 21.4335 cv
34.9326 21.4345 35.1946 21.2847 35.4117 21.3585 cv
35.6693 21.4472 35.8913 21.736 36.0878 21.9356 cv
36.402 22.2453 36.7132 22.5536 37.0241 22.8635 cv
37.2309 23.0869 37.427 23.3426 37.6372 23.5626 cv
37.8978 23.8318 38.1837 24.0251 38.4456 24.2992 cv
38.6022 24.4617 38.6959 24.6422 38.8486 24.8013 cv
38.934 24.869 39.0232 24.9384 39.1111 25.0052 cv
39.2789 25.1457 39.4341 25.333 39.5277 25.5209 cv
39.4346 25.5209 39.2979 25.7214 39.2355 25.7847 cv
38.9945 26.0379 38.8052 26.2936 38.7252 26.6273 cv
38.7047 26.762 38.6847 26.8956 38.6643 27.0303 cv
38.6203 27.2459 38.5646 27.4567 38.59 27.6996 cv
38.6286 27.8557 38.6652 28.0104 38.7047 28.1655 cv
38.7721 28.3255 38.8374 28.4856 38.9047 28.646 cv
38.9872 28.8231 39.0262 29.0095 39.1467 29.1754 cv
39.2375 29.2954 39.3921 29.3402 39.5053 29.4252 cv
39.6189 29.5071 39.6648 29.6452 39.779 29.7305 cv
39.8878 29.7833 39.9956 29.833 40.1034 29.8823 cv
40.2551 29.9838 40.4034 30.0838 40.5532 30.1828 cv
40.7522 30.3096 40.9957 30.396 41.1708 30.5629 cv
41.286 30.7204 41.3992 30.877 41.5138 31.0351 cv
41.6177 31.1629 41.7869 31.2527 41.8621 31.4035 cv
41.9118 31.5069 41.9509 31.6488 41.9568 31.7717 cv
41.9626 31.8859 41.9328 32.0137 41.9597 32.123 cv
42.0206 32.3811 42.1245 32.7485 42.0792 33.0246 cv
41.8446 33.0236 41.3567 32.4338 41.1806 32.2611 cv
40.8191 31.9225 40.4551 31.5854 40.0956 31.2468 cv
39.8316 30.9672 39.5697 30.6863 39.3057 30.4052 cv
38.7856 29.8628 38.2236 29.3573 37.7105 28.8231 cv
37.4367 28.5362 37.1553 28.2543 36.8782 27.9654 cv
36.7645 27.8309 36.6445 27.6947 36.5284 27.5601 cv
35.5755 26.6273 34.6316 25.7018 33.6852 24.7749 cv
33.4344 24.5016 33.1821 24.229 32.9289 23.9572 cv
32.3855 23.4069 31.8825 22.8625 31.3141 22.3385 cv
31.0351 22.078 30.4399 21.7234 30.3394 21.3585 cv
30.7423 21.3609 31.1512 21.3355 31.5644 21.3379 cv
cp
f
25.417 50.0582 mo
24.9905 50.4562 24.6446 50.9177 24.2285 51.3159 cv
23.6138 51.9179 22.999 52.5169 22.3869 53.1189 cv
22.1829 53.3277 21.8882 53.5453 21.736 53.7795 cv
21.7277 53.7795 21.718 53.7795 21.7063 53.7795 cv
21.7053 53.8371 21.6394 53.6741 21.6326 53.6303 cv
21.6306 53.4195 21.6262 53.2038 21.6238 52.9911 cv
21.6355 52.3501 21.6492 51.708 21.6643 51.069 cv
21.6672 50.5373 21.6741 50.0298 21.6687 49.5254 cv
21.6633 49.3488 21.6545 49.1731 21.6477 48.9995 cv
21.6584 48.5204 21.6868 47.9906 21.6814 47.4842 cv
21.6746 47.2695 21.6672 47.0569 21.6589 46.8422 cv
21.6648 46.5328 21.6897 46.2089 21.6907 45.8811 cv
21.6829 45.685 21.677 45.4927 21.6672 45.2976 cv
21.6711 44.7434 21.6716 44.1912 21.6746 43.6369 cv
21.6682 43.4711 21.6604 43.3061 21.6516 43.1423 cv
21.6711 42.9374 21.6907 42.731 21.7083 42.5295 cv
21.7234 42.069 21.677 41.6348 21.6941 41.1879 cv
21.7107 40.8494 21.7287 40.5088 21.7443 40.1693 cv
21.736 39.438 21.7024 38.7135 21.7209 37.9827 cv
21.7433 37.6339 21.7638 37.2826 21.7873 36.9338 cv
21.775 36.7484 21.7609 36.564 21.7453 36.3795 cv
21.7389 35.6371 21.7648 34.8794 21.757 34.1657 cv
21.7487 34.0091 21.7414 33.8534 21.7335 33.6983 cv
21.7453 33.5148 21.757 33.3295 21.7697 33.1455 cv
21.7721 32.9289 21.7291 32.724 21.7433 32.5021 cv
21.7584 32.3762 21.7755 32.2518 21.7902 32.1254 cv
21.7853 31.7786 21.7736 31.4229 21.7755 31.0751 cv
22.0736 31.1848 22.3117 31.5142 22.54 31.7371 cv
23.0454 32.2269 23.547 32.7172 24.0484 33.2056 cv
24.2222 33.3919 24.3953 33.5764 24.5685 33.7603 cv
24.9472 34.1183 25.3257 34.4833 25.6672 34.8759 cv
25.7823 35.0096 25.8901 35.1467 26.0253 35.2756 cv
26.2731 35.5107 26.5395 35.7268 26.7805 35.9805 cv
26.8854 36.0908 26.9375 36.2118 27.0512 36.3186 cv
27.6332 36.8713 28.2484 37.3885 28.8363 37.9471 cv
29.3964 38.5237 29.9554 39.1018 30.5126 39.68 cv
30.8672 40.0161 33.1051 42.1163 32.9724 42.4398 cv
32.9318 42.5007 32.8924 42.5617 32.8489 42.6236 cv
32.5869 43.073 31.9733 43.5784 31.5717 43.9424 cv
31.4317 44.0663 31.3458 44.235 31.2117 44.3717 cv
30.8814 44.7083 30.5536 45.0273 30.2228 45.361 cv
29.7652 45.8148 29.2998 46.2665 28.8383 46.7183 cv
28.5353 47.0266 28.2328 47.3359 27.9314 47.6452 cv
27.8537 47.735 27.7777 47.8228 27.7006 47.9096 cv
26.9375 48.618 26.1794 49.3517 25.417 50.0582 cv
cp
f
37.7968 63.9533 mo
37.545 63.9533 36.7055 63.8958 36.5572 63.9963 cv
36.5 64.0352 36.4942 64.1104 36.4903 64.1777 cv
36.4844 64.9564 36.4776 65.735 36.4718 66.5107 cv
36.4762 66.8473 36.5157 67.3381 36.4455 67.6718 cv
36.4284 67.7547 36.382 67.8269 36.3181 67.8786 cv
36.3181 67.8893 36.3181 67.8981 36.3181 67.9108 cv
36.0786 67.9069 35.8668 67.8055 35.6449 67.7693 cv
35.4327 67.7381 35.2116 67.7889 35.0072 67.7889 cv
34.8521 67.7664 34.696 67.7459 34.5393 67.7264 cv
34.2393 67.6991 33.9369 67.6708 33.6358 67.6405 cv
33.5188 67.6288 33.3334 67.6132 33.2295 67.6591 cv
32.5333 67.6542 31.8869 67.5156 31.2185 67.4513 cv
30.9087 67.4181 30.6077 67.422 30.3204 67.3713 cv
30.076 67.3293 29.8315 67.2902 29.5886 67.2503 cv
29.4837 67.2259 29.3739 67.2005 29.2666 67.178 cv
29.1134 67.1692 28.9598 67.1634 28.8041 67.1536 cv
28.4543 67.0912 28.1026 67.0288 27.7513 66.9653 cv
27.4825 66.9292 27.1415 66.9253 26.9107 66.8082 cv
26.901 66.8082 26.8913 66.8082 26.8795 66.8082 cv
26.8795 66.7888 26.8795 66.7692 26.8795 66.7497 cv
26.9244 66.7497 26.901 66.7605 26.9219 66.7273 cv
27.0786 66.4784 27.3785 66.2141 27.6016 66.0101 cv
27.806 65.8062 28.0084 65.6033 28.2118 65.3964 cv
28.5236 65.088 28.8607 64.809 29.1783 64.4967 cv
29.3349 64.3436 29.4915 64.1894 29.6476 64.0381 cv
29.7764 63.8948 29.9062 63.7494 30.0349 63.6069 cv
30.8365 62.8391 31.6556 62.0916 32.4397 61.2905 cv
32.9231 60.7979 33.3699 60.2788 33.8656 59.8026 cv
34.555 59.1401 35.2355 58.4923 35.8903 57.8024 cv
36.08 57.6072 36.2732 57.4102 36.465 57.2121 cv
36.5894 57.3887 36.5137 58.0609 36.4942 58.2912 cv
36.4621 58.661 36.4552 59.0347 36.4523 59.4279 cv
36.4513 59.6757 36.4201 59.9343 36.4986 60.148 cv
36.5704 60.3558 36.7171 60.5364 36.8425 60.7198 cv
36.9104 60.8281 36.9469 60.9657 37.0713 61.0359 cv
37.249 61.1335 37.811 61.1578 38.0446 61.1482 cv
38.4563 61.1325 38.8838 61.1032 39.3292 61.1052 cv
39.3272 61.3881 39.1467 61.7364 39.0506 61.9872 cv
38.8755 62.4302 38.6998 62.8703 38.5345 63.3181 cv
38.4705 63.484 38.4145 63.7084 38.2954 63.8479 cv
38.2071 63.9425 38.0857 63.8792 37.9725 63.924 cv
37.9129 63.9347 37.8554 63.9425 37.7968 63.9533 cv
cp
f
39.78 69.1421 mo
39.4774 69.1109 39.1984 68.8953 38.9271 68.7831 cv
38.7115 68.6924 38.4637 68.6533 38.2666 68.5313 cv
38.2578 68.5313 38.2466 68.5313 38.2383 68.5313 cv
38.2383 68.5197 38.2383 68.5129 38.2383 68.5031 cv
38.2481 68.5031 38.2578 68.5031 38.2676 68.5031 cv
38.2676 68.4611 38.2578 68.4738 38.2959 68.4738 cv
38.7227 68.4748 40.7367 68.5509 40.9196 68.3714 cv
41.0108 68.2816 41.0083 67.9108 41.0098 67.7605 cv
41.0142 66.8199 40.9044 65.5564 41.769 65.0753 cv
41.8944 65.0041 42.0275 64.9895 42.1631 64.9378 cv
42.4027 64.9378 42.993 65.0266 42.9637 65.3466 cv
42.9578 65.4237 42.8681 65.4237 42.7993 65.4334 cv
42.2285 65.5008 42.1173 65.812 41.8812 66.256 cv
41.6889 66.616 41.7201 67.2337 41.7099 67.7069 cv
41.6987 68.1694 41.6762 68.6085 41.6733 69.0758 cv
41.6636 69.0758 41.6538 69.0758 41.6451 69.0758 cv
41.6451 69.1285 41.3596 69.0758 41.2943 69.1031 cv
41.1357 69.1012 40.9981 69.1461 40.8572 69.1539 cv
40.4962 69.15 40.1376 69.1461 39.78 69.1421 cv
cp
f
43.0554 69.7403 mo
42.9559 69.8642 42.8524 69.9823 42.7505 70.1081 cv
42.4968 70.3658 42.2349 70.6038 42.0699 70.9141 cv
42.0616 70.9141 42.0529 70.9141 42.0431 70.9141 cv
41.8641 70.7141 41.683 70.5169 41.5031 70.3179 cv
41.3274 70.1608 40.9718 69.9569 40.7659 69.8554 cv
40.7659 69.8466 40.7659 69.8388 40.7659 69.8271 cv
40.7561 69.8271 40.7463 69.8271 40.7381 69.8271 cv
40.7381 69.8193 40.7381 69.8085 40.7381 69.7999 cv
40.7463 69.7999 40.7561 69.7999 40.7659 69.7999 cv
40.7673 69.7491 40.8132 69.7657 40.8523 69.7598 cv
40.9596 69.7364 41.0684 69.7129 41.1747 69.6934 cv
41.5167 69.6817 41.8558 69.6701 42.1953 69.6623 cv
42.211 69.6037 42.2266 69.5452 42.2421 69.4866 cv
42.2572 69.3402 42.2685 69.1949 42.2812 69.0485 cv
42.2675 68.9148 42.2519 68.7782 42.2383 68.6426 cv
42.246 68.5051 42.2519 68.3704 42.2572 68.2338 cv
42.2543 67.9421 42.2188 67.6259 42.2421 67.3293 cv
42.2773 67.1634 42.3124 66.9976 42.3481 66.8336 cv
42.3851 66.6317 42.4398 66.3858 42.5778 66.2364 cv
42.7173 66.0804 42.9115 66.096 43.0905 66.0218 cv
43.1481 66.0491 43.214 66.0804 43.2364 66.1496 cv
43.2978 66.3428 43.2516 66.6004 43.2491 66.8111 cv
43.2574 67.3146 43.2618 67.8191 43.2647 68.3255 cv
43.2842 68.4445 43.3623 68.5479 43.4115 68.6533 cv
43.4838 68.8173 43.554 68.9793 43.6257 69.1441 cv
43.654 69.1441 43.6555 69.1421 43.6452 69.1666 cv
43.5169 69.4076 43.255 69.5724 43.0554 69.7403 cv
cp
f
44.2014 68.9461 mo
44.0643 68.8309 43.9663 68.5675 43.9512 68.388 cv
44.0965 68.3899 44.2619 68.4016 44.3902 68.3626 cv
44.7263 68.3636 45.0586 68.385 45.3791 68.3968 cv
45.3791 68.4152 45.3791 68.4357 45.3791 68.4552 cv
45.2703 68.4543 45.1366 68.5401 45.0478 68.5811 cv
44.7799 68.7021 44.5093 68.8221 44.2404 68.9431 cv
44.2404 68.9793 44.2248 68.9656 44.2014 68.9461 cv
cp
f
34.1169 45.0175 mo
34.1218 44.7532 34.1735 44.478 34.1754 44.2029 cv
34.1569 43.9004 34.1403 43.6018 34.1247 43.2983 cv
34.1179 42.7988 34.1778 42.3222 34.1876 41.8421 cv
34.1716 41.5485 34.1569 41.2572 34.1428 40.966 cv
34.1501 40.7435 34.1599 40.5191 34.1667 40.298 cv
34.1501 40.0736 34.133 39.8477 34.1169 39.6258 cv
34.1188 39.2618 34.2242 38.9452 34.233 38.5778 cv
34.2188 38.3739 34.2032 38.169 34.1851 37.9632 cv
34.1934 37.8481 34.1988 37.7315 34.2071 37.6144 cv
34.2227 37.1811 34.275 36.7713 34.2774 36.3328 cv
34.2789 36.0356 34.2301 35.5809 34.3086 35.3205 cv
34.3857 35.0487 35.1834 34.1437 35.458 34.0379 cv
35.458 34.0286 35.458 34.0184 35.458 34.0091 cv
35.5171 34.2335 35.4834 34.534 35.4594 34.7657 cv
35.4312 35.0463 35.4122 35.3399 35.4219 35.6395 cv
35.4381 35.8327 35.4541 36.0273 35.4721 36.2235 cv
35.4736 36.5918 35.476 36.9625 35.4775 37.3299 cv
35.4648 37.4968 35.4506 37.6611 35.4385 37.8261 cv
35.4467 38.0217 35.4536 38.2153 35.4604 38.4086 cv
35.4497 38.9257 35.4214 39.514 35.4356 40.0424 cv
35.4506 40.6171 35.3721 41.2249 35.3878 41.7889 cv
35.4053 42.0022 35.4219 42.2173 35.4381 42.4315 cv
35.4409 42.869 35.4443 43.3061 35.4467 43.7433 cv
35.4327 43.9482 35.4151 44.1502 35.3995 44.356 cv
35.399 44.6956 35.3956 45.0351 35.3946 45.3737 cv
35.3922 45.7835 35.4482 46.5085 35.3306 46.851 cv
35.2931 46.9603 35.159 47.0305 35.0966 47.1251 cv
35.0028 47.2539 34.9067 47.3847 34.8126 47.5164 cv
34.7189 47.6062 34.6233 47.6959 34.5305 47.7856 cv
34.434 47.9691 34.3359 48.1564 34.2413 48.3409 cv
34.2301 48.3409 34.2227 48.3409 34.213 48.3409 cv
34.213 48.3497 34.213 48.3603 34.213 48.3691 cv
34.2032 48.3691 34.191 48.3691 34.1822 48.3691 cv
34.1851 47.8198 34.1013 47.2285 34.0944 46.6792 cv
34.0895 46.3543 34.1457 46.0021 34.1628 45.6899 cv
34.1754 45.4499 34.1135 45.2449 34.1169 45.0175 cv
cp
f
34.6667 48.6316 mo
34.8092 48.2852 34.9262 48.1809 35.2078 47.9408 cv
35.3604 47.8052 35.4917 47.6374 35.6615 47.5291 cv
36.4074 47.0442 37.5782 47.049 38.5003 47.2402 cv
38.6778 47.291 38.854 47.3398 39.0306 47.3905 cv
39.6175 47.5027 40.1483 47.57 40.6468 47.8638 cv
40.9733 48.055 41.2411 48.3224 41.5416 48.5673 cv
41.6187 48.618 41.6987 48.6687 41.7758 48.7155 cv
41.9138 48.8209 42.0587 49.0444 42.2504 49.0405 cv
42.5236 49.0386 42.6959 48.6863 42.8993 48.5419 cv
43.1247 48.3769 43.3486 48.2004 43.6009 48.0784 cv
44.2873 47.7467 44.9727 47.4023 45.7308 47.2149 cv
46.005 47.1525 46.2767 47.0881 46.5499 47.0237 cv
46.7066 46.9953 46.8758 47.0129 47.0163 46.9564 cv
47.2481 46.9603 47.4788 46.9652 47.7125 46.97 cv
48.0989 47.0305 48.5023 47.2207 48.8034 47.449 cv
48.9375 47.5983 49.0692 47.7438 49.2034 47.895 cv
49.4171 48.1253 49.6493 48.3691 49.6874 48.6883 cv
49.6776 48.6883 49.6678 48.6883 49.6561 48.6883 cv
49.6551 48.7438 49.4254 48.7184 49.3654 48.7184 cv
48.7541 48.7136 48.1428 48.7116 47.5296 48.7077 cv
47.3067 48.7057 47.0056 48.6648 46.83 48.7604 cv
46.6266 48.7585 46.3441 48.6355 46.1592 48.7272 cv
46.0938 48.737 46.0246 48.7468 45.9562 48.7556 cv
45.7264 48.7556 45.445 48.7194 45.2546 48.8093 cv
45.1551 48.8093 45.0429 48.8287 44.9649 48.8678 cv
44.7674 48.8668 44.3541 48.8171 44.2053 48.8922 cv
44.1184 48.901 44.0311 48.9097 43.9433 48.9185 cv
43.857 48.9312 43.7691 48.938 43.6813 48.9458 cv
43.5423 48.9458 43.3584 48.9653 43.274 49.0609 cv
43.2237 49.0609 43.2628 49.2161 43.2647 49.2678 cv
43.277 49.783 42.8949 50.2523 42.3611 50.2484 cv
41.9299 50.2455 41.5933 49.9352 41.5094 49.5429 cv
41.4816 49.4083 41.5167 49.218 41.4309 49.1107 cv
41.3938 49.0658 41.3235 49.0356 41.2606 49.0502 cv
41.0562 49.0405 40.8542 49.0278 40.6488 49.0161 cv
40.602 49.0278 40.5517 49.0356 40.5025 49.0464 cv
40.0254 49.0444 39.5999 48.9829 39.1048 48.9819 cv
38.9789 48.98 38.7974 48.9565 38.6969 49.0073 cv
38.3456 49.0054 38.0114 48.9741 37.648 48.9741 cv
37.4758 48.9712 37.2577 48.9546 37.1236 49.0278 cv
36.6118 49.0249 36.0878 48.9829 35.577 48.9897 cv
35.3965 48.9897 35.1453 48.9458 34.9945 49.0161 cv
34.838 49.0151 34.6838 49.0132 34.5589 48.9546 cv
34.5589 48.8336 34.6253 48.7311 34.6667 48.6316 cv
cp
f
50.0206 40.8805 mo
50.001 40.8805 49.9835 40.8805 49.9645 40.8805 cv
49.8708 40.6493 49.9054 40.4268 49.9069 40.1517 cv
49.9098 39.8029 49.8328 39.4516 50.001 39.1594 cv
50.0932 39.1789 50.1645 39.2053 50.204 39.2916 cv
50.2904 39.4896 50.2777 40.883 50.0206 40.8805 cv
cp
49.5757 37.2938 mo
49.5757 37.303 49.5757 37.3138 49.5752 37.3216 cv
49.3483 37.2768 49.3088 37.0996 49.4332 36.9143 cv
49.5532 36.9718 49.6888 37.2938 49.5757 37.2938 cv
cp
49.5006 41.5519 mo
49.4884 41.5806 49.3171 41.8236 49.3176 41.6626 cv
49.278 41.5762 49.2883 41.4435 49.2878 41.3411 cv
49.2795 41.0752 49.2843 40.7737 49.278 40.4971 cv
49.2765 40.1298 49.2737 39.758 49.2718 39.3906 cv
49.2737 39.0926 49.2459 38.7804 49.3635 38.5447 cv
49.4517 38.5881 49.519 38.6618 49.5454 38.755 cv
49.6312 39.0774 49.563 39.4448 49.561 39.8005 cv
49.5595 40.282 49.683 41.1293 49.5006 41.5519 cv
cp
50.5358 37.0635 mo
50.5329 36.7899 50.4816 36.5113 50.4601 36.2474 cv
50.4528 36.1025 50.445 35.9561 50.4367 35.8087 cv
50.4308 35.7537 50.4528 35.4907 50.4026 35.4887 cv
50.4026 35.4804 50.4026 35.4712 50.4026 35.4609 cv
50.3723 35.4609 50.343 35.4609 50.3137 35.4609 cv
50.2543 36.0332 50.2855 36.662 50.2713 37.2675 cv
50.2669 37.5027 50.1635 37.6763 50.145 37.8802 cv
50.1464 37.9963 50.1479 38.1139 50.1523 38.229 cv
50.1411 38.3349 50.1323 38.4432 50.1225 38.5501 cv
49.9815 38.5695 49.8815 38.533 49.8508 38.3959 cv
49.8054 38.2003 49.9025 38.0354 49.8971 37.85 cv
49.8815 37.7222 49.8708 37.5958 49.8551 37.468 cv
49.8484 36.7782 49.9113 36.0468 49.9054 35.3712 cv
49.8918 35.2536 49.8815 35.1375 49.8693 35.0233 cv
49.8522 34.9638 49.8367 34.9062 49.824 34.8463 cv
49.7927 34.8463 49.7644 34.8463 49.7332 34.8448 cv
49.7332 34.8555 49.7332 34.8658 49.7332 34.875 cv
49.7235 34.875 49.7147 34.875 49.704 34.875 cv
49.6874 35.3687 49.6312 35.8131 49.6059 36.3015 cv
49.5864 36.3888 49.5693 36.4767 49.5503 36.564 cv
49.521 36.564 49.4927 36.564 49.4625 36.564 cv
49.3088 36.1805 49.3566 35.6761 49.3522 35.2228 cv
49.3493 34.9785 49.3752 34.7277 49.3005 34.5228 cv
49.2112 34.6803 49.2171 34.8438 49.2014 35.0453 cv
49.1829 35.278 49.1673 35.5576 49.18 35.8039 cv
49.1936 36.0629 49.242 36.3508 49.2219 36.6215 cv
49.0765 38.2925 49.1537 39.9307 49.1439 41.6324 cv
49.1342 41.9724 49.1259 42.3119 49.12 42.6515 cv
49.0966 42.9403 49.0497 43.2535 49.0468 43.5579 cv
49.0448 43.9764 49.0741 44.4244 49.0653 44.8693 cv
49.058 45.2839 49.0107 45.7484 49.0361 46.1786 cv
49.04 46.2372 49.0497 46.3856 49.1171 46.3856 cv
49.1171 46.3934 49.1171 46.4031 49.1171 46.4128 cv
49.1259 46.4128 49.1356 46.4128 49.1454 46.4128 cv
49.1454 46.4031 49.1454 46.3934 49.1454 46.3856 cv
49.1547 46.3856 49.1673 46.3856 49.1746 46.3856 cv
49.2532 46.1387 49.2278 45.8498 49.2386 45.5679 cv
49.2556 45.1093 49.3132 44.6459 49.3005 44.1687 cv
49.2931 43.8721 49.2307 43.4994 49.3327 43.2154 cv
49.3498 43.1677 49.3859 43.1521 49.441 43.1677 cv
49.5542 43.1988 49.5796 43.3696 49.5947 43.4721 cv
49.6522 43.8272 49.5864 44.1775 49.5669 44.5512 cv
49.5639 44.8429 49.5625 45.1337 49.5595 45.4254 cv
49.5581 45.7445 49.5376 46.085 49.5722 46.3875 cv
49.5893 46.5563 49.5532 46.7183 49.6015 46.8753 cv
49.6298 46.9661 49.6493 47.1759 49.782 47.1759 cv
49.8132 46.6939 49.8318 46.1504 49.8342 45.6586 cv
49.824 45.4264 49.8103 45.1922 49.7991 44.959 cv
49.8215 44.7278 49.8425 44.4936 49.8649 44.2614 cv
49.8888 44.1053 49.9123 43.9492 49.9367 43.794 cv
49.9377 43.5774 49.8708 43.3686 49.8445 43.1803 cv
49.8006 42.8671 49.8089 42.5305 49.8103 42.19 cv
49.8118 42.0115 49.8123 41.8294 49.8605 41.6703 cv
49.8761 41.6177 49.9601 41.5703 49.9601 41.5221 cv
49.9698 41.5221 49.98 41.5221 49.9883 41.5221 cv
50.0918 41.6118 50.1552 41.704 50.1772 41.8455 cv
50.2279 42.2012 50.2025 42.6446 50.1787 43.0076 cv
50.1689 43.1364 50.1269 43.2447 50.1294 43.3872 cv
50.1323 43.7082 50.2152 44.0468 50.2235 44.3785 cv
50.2162 44.5132 50.2098 44.6488 50.2035 44.7863 cv
50.2001 45.3766 50.1966 45.9065 50.1943 46.5066 cv
50.1914 46.9339 50.2308 47.3905 50.2738 47.7935 cv
50.265 47.8696 50.2543 47.9457 50.2435 48.0237 cv
50.2826 48.0237 50.3215 48.0237 50.3606 48.0237 cv
50.4772 47.7721 50.443 47.4588 50.4547 47.1476 cv
50.466 46.8198 50.5153 46.4411 50.4757 46.1026 cv
50.4459 45.8782 50.4138 45.6547 50.3801 45.4274 cv
50.385 45.1922 50.4586 44.9786 50.466 44.7298 cv
50.4743 44.3638 50.4114 44.037 50.4138 43.6799 cv
50.4352 43.3032 50.4577 42.9237 50.4782 42.5432 cv
50.4782 42.2529 50.4811 41.9616 50.4787 41.6703 cv
50.4655 41.5534 50.4494 41.4377 50.4337 41.3206 cv
50.4308 41.1352 50.4826 40.9854 50.4884 40.7966 cv
50.4811 40.4937 50.4728 40.1946 50.4655 39.8917 cv
50.466 39.4297 50.4977 38.9716 50.5006 38.4925 cv
50.5045 37.9997 50.5402 37.5367 50.5358 37.0635 cv
cp
f
47.4184 36.5166 mo
47.3076 36.5938 47.1412 36.6264 47.0134 36.664 cv
46.6831 36.763 46.3548 36.8645 46.0246 36.9659 cv
45.5728 37.1065 45.1088 37.2768 44.6858 37.4851 cv
44.3892 37.6577 44.0921 37.8305 43.7916 38.0046 cv
43.7428 38.0285 43.333 38.2441 43.3345 38.131 cv
43.3223 38.131 43.3149 38.131 43.3037 38.131 cv
43.3428 37.8246 43.697 37.6153 43.937 37.4748 cv
44.0526 37.3929 44.1702 37.3099 44.2853 37.225 cv
44.5814 37.0363 44.9 36.8528 45.2142 36.707 cv
45.5459 36.5513 45.8987 36.4674 46.248 36.3498 cv
46.3685 36.2947 46.487 36.243 46.6041 36.1908 cv
46.7616 36.1357 46.9188 36.0791 47.0764 36.0263 cv
47.1973 36.0263 47.3383 36.0162 47.4466 36.0517 cv
47.6734 36.1323 47.5622 36.4108 47.4184 36.5166 cv
cp
47.371 43.6447 mo
47.1339 43.7872 46.8178 43.7852 46.5392 43.8468 cv
46.2865 43.8984 46.0363 43.9764 45.7782 44.035 cv
44.9112 44.235 44.1917 44.5834 43.4506 45.0273 cv
43.3584 45.08 43.1149 45.3132 43.0232 45.1424 cv
42.9559 45.0244 43.1359 44.9014 43.2081 44.8371 cv
43.4984 44.5843 43.795 44.4156 44.1087 44.2194 cv
44.4565 44.0018 44.8034 43.8087 45.1864 43.6603 cv
45.3088 43.5931 45.4308 43.5286 45.5543 43.4613 cv
46.0309 43.273 46.5236 43.156 47.0085 42.991 cv
47.1442 42.991 47.2871 42.9939 47.3998 43.0496 cv
47.6345 43.1734 47.5725 43.5227 47.371 43.6447 cv
cp
43.3022 41.2664 mo
44.0028 40.6147 44.9127 40.2936 45.7684 39.9458 cv
46.0402 39.8341 46.3568 39.637 46.6773 39.6385 cv
46.7851 39.5541 47.029 39.4355 47.173 39.437 cv
47.173 39.4253 47.173 39.4184 47.173 39.4067 cv
47.3417 39.4355 47.47 39.5072 47.4749 39.6995 cv
47.4798 39.8653 47.3969 40 47.27 40.0848 cv
47.0149 40.2542 46.7085 40.283 46.4153 40.3835 cv
46.086 40.4937 45.743 40.6181 45.4103 40.7196 cv
45.183 40.7883 44.9551 40.8372 44.739 40.9245 cv
44.3458 41.0835 43.9536 41.287 43.5906 41.506 cv
43.4613 41.584 43.3271 41.706 43.1637 41.7118 cv
43.1242 41.7133 43.0808 41.7099 43.0544 41.6821 cv
42.9145 41.5416 43.2198 41.3391 43.3022 41.2664 cv
cp
48.7087 40.1726 mo
48.6932 40 48.6775 39.8249 48.6595 39.6487 cv
48.6521 38.9174 48.6941 38.1666 48.6979 37.4646 cv
48.6912 37.2397 48.6834 37.0167 48.6756 36.7909 cv
48.6687 36.2347 48.679 35.6946 48.6482 35.1594 cv
48.617 34.9925 48.5887 34.8277 48.557 34.6594 cv
48.5272 34.4686 48.5658 34.2511 48.578 34.053 cv
48.579 33.9861 48.5974 33.7905 48.515 33.7891 cv
48.3745 33.7222 48.2131 33.7534 48.0506 33.7456 cv
47.8608 33.7339 47.6744 33.6969 47.4671 33.6959 cv
47.2481 33.7729 46.9773 33.7476 46.7431 33.7925 cv
45.6635 33.9939 44.6551 34.1506 43.7214 34.6467 cv
43.4926 34.7691 43.2462 34.9004 43.071 35.1096 cv
42.9383 35.2697 42.9344 35.4692 42.9032 35.6799 cv
42.8271 36.1761 42.829 36.707 42.811 37.2548 cv
42.7915 37.5279 42.7725 37.7997 42.7529 38.0725 cv
42.7476 38.4671 42.7466 38.8667 42.7417 39.2652 cv
42.7236 39.4209 42.7075 39.5761 42.6891 39.7301 cv
42.6525 40.1 42.6622 40.5088 42.649 40.8693 cv
42.6295 41.4265 42.6617 41.9953 42.6734 42.5305 cv
42.6861 43.0428 42.6525 43.597 42.6588 44.1326 cv
42.6715 44.278 42.6842 44.4224 42.6959 44.5707 cv
42.6842 44.6576 42.6744 44.7464 42.6622 44.8322 cv
42.6608 45.0791 42.7095 45.322 42.7075 45.5904 cv
42.7036 46.3075 42.6852 47.2305 42.9705 47.8003 cv
42.9856 47.8286 43.0754 47.9574 43.0754 47.895 cv
43.3974 47.7691 43.6843 47.5193 43.9857 47.3554 cv
44.2541 47.209 44.5454 47.1212 44.8146 46.9787 cv
45.1395 46.8051 45.3088 46.6822 45.7337 46.687 cv
45.8542 46.609 46.2128 46.5416 46.3763 46.5446 cv
46.4455 46.5338 46.5123 46.526 46.5783 46.5172 cv
46.6382 46.5066 46.6968 46.4997 46.7533 46.487 cv
47.0637 46.3348 47.7837 46.4753 48.096 46.5533 cv
48.2491 46.5924 48.4058 46.6324 48.5624 46.6714 cv
48.6365 46.2216 48.5629 45.7103 48.5526 45.2722 cv
48.5683 45.0214 48.5849 44.7688 48.6014 44.5171 cv
48.6043 44.199 48.5809 43.8789 48.5862 43.5823 cv
48.6018 43.4252 48.6199 43.2701 48.6355 43.1159 cv
48.6536 42.7481 48.6326 42.3958 48.6521 42.0377 cv
48.6629 41.8294 48.696 41.607 48.7009 41.3967 cv
48.7087 40.9937 48.7209 40.5883 48.7087 40.1726 cv
cp
f
41.7631 38.2993 mo
41.7299 38.3627 41.6245 38.3661 41.5611 38.3544 cv
41.3879 38.3179 41.2577 38.1588 41.1108 38.0725 cv
40.942 37.9759 40.7717 37.8812 40.602 37.7856 cv
39.697 37.3275 38.6749 37.0616 37.687 36.7874 cv
37.4021 36.7079 37.0324 36.7264 36.7874 36.5733 cv
36.5865 36.4464 36.5826 36.1761 36.7577 36.0263 cv
37.1825 36.0288 37.525 36.1644 37.8978 36.2761 cv
38.0114 36.2981 38.1246 36.321 38.2354 36.344 cv
38.4808 36.4108 38.7159 36.5122 38.9481 36.6054 cv
39.1555 36.6767 39.3603 36.7503 39.5697 36.8221 cv
39.6677 36.8762 39.7677 36.9314 39.8653 36.983 cv
40.1503 37.1157 40.4337 37.2504 40.7171 37.3836 cv
40.8932 37.4665 41.8709 38.0749 41.7631 38.2993 cv
cp
41.6499 41.9402 mo
41.6289 41.948 41.6094 41.9563 41.5894 41.9616 cv
41.5772 41.9631 41.5684 41.9675 41.5577 41.969 cv
41.3542 41.9988 40.5322 41.325 40.2829 41.2089 cv
39.9912 41.0694 39.6892 40.9591 39.3862 40.8416 cv
38.9804 40.6849 38.5852 40.5054 38.129 40.4444 cv
37.9549 40.4224 37.7826 40.4005 37.6061 40.3761 cv
37.3685 40.3634 36.9972 40.4175 36.8206 40.2776 cv
36.6039 40.1024 36.745 39.6394 37.0304 39.6404 cv
37.0304 39.6326 37.0304 39.6233 37.0304 39.6131 cv
38.3179 39.7039 39.4311 40.2921 40.4766 40.8805 cv
40.7585 41.0396 41.4874 41.4791 41.6358 41.7743 cv
41.6529 41.8074 41.707 41.9411 41.6499 41.9402 cv
cp
40.9528 45.1317 mo
40.4542 44.8966 39.9215 44.7083 39.3862 44.5395 cv
39.2004 44.4819 39.0067 44.4585 38.811 44.4185 cv
38.5276 44.3599 38.2314 44.278 37.9329 44.2321 cv
37.6027 44.1804 37.2646 44.1668 36.9454 44.0974 cv
36.9099 44.0829 36.8738 44.0682 36.8376 44.0555 cv
36.5743 43.9101 36.5704 43.3988 36.9498 43.4018 cv
36.9498 43.3931 36.9498 43.3823 36.9498 43.3716 cv
37.1874 43.3726 37.3612 43.433 37.5646 43.4769 cv
37.7758 43.5227 37.9919 43.5423 38.1988 43.5931 cv
38.3754 43.6594 38.5516 43.7238 38.7257 43.7852 cv
39.2463 43.9531 39.7199 44.1258 40.2073 44.356 cv
40.3224 44.398 40.4366 44.4419 40.5532 44.4809 cv
40.8308 44.6039 41.2323 44.9005 41.4328 45.1395 cv
41.5094 45.2245 41.6314 45.2781 41.6314 45.4079 cv
41.3879 45.4391 41.1498 45.2245 40.9528 45.1317 cv
cp
42.011 36.2864 mo
41.9704 35.8571 42.0275 35.4034 41.7845 35.0775 cv
41.3288 34.4618 40.7069 34.2384 40.0405 33.9871 cv
39.8619 33.9271 39.6873 33.8642 39.5082 33.8032 cv
39.3067 33.7651 39.1062 33.728 38.9033 33.69 cv
38.5939 33.6119 38.2383 33.5476 37.9075 33.5314 cv
37.4406 33.5266 36.9762 33.5231 36.5098 33.5188 cv
36.3712 33.5808 36.1429 33.5603 36.0527 33.6959 cv
35.9625 33.833 36.0098 34.3628 36.0098 34.5652 cv
36.0054 35.3541 35.9703 36.1415 35.9654 36.9542 cv
35.9625 37.4309 35.959 37.9075 35.9551 38.3822 cv
35.9273 38.7804 35.901 39.1789 35.8742 39.5785 cv
35.8629 39.8629 35.9781 40.1219 35.9703 40.4224 cv
35.9581 41.0074 35.9459 41.6509 35.9341 42.2587 cv
35.9126 42.5119 35.8952 42.7656 35.8737 43.0154 cv
35.8654 43.5345 35.903 44.0194 35.8922 44.5317 cv
35.8737 44.7853 35.8532 45.0371 35.8336 45.2878 cv
35.8317 45.5337 35.9073 45.7357 35.9049 45.9591 cv
35.9039 46.2216 35.8551 46.4714 35.8532 46.7455 cv
35.959 46.7475 36.0659 46.7494 36.1737 46.7494 cv
36.2537 46.7105 36.3655 46.6909 36.464 46.6909 cv
36.5464 46.6519 36.6586 46.6363 36.7562 46.6363 cv
36.8259 46.6237 36.8933 46.6168 36.9596 46.609 cv
37.2372 46.4861 37.9919 46.6421 38.2744 46.687 cv
38.633 46.7494 38.9677 46.7359 39.3175 46.81 cv
39.7292 46.8958 40.3527 47.1339 40.7084 47.3437 cv
40.8347 47.4179 41.5518 47.973 41.6162 47.973 cv
41.6162 47.9652 41.6162 47.9545 41.6162 47.9457 cv
41.8026 47.6374 41.784 47.3378 41.8372 46.9564 cv
41.8962 46.526 41.905 46.0889 41.9236 45.6157 cv
41.946 44.9464 41.9861 44.2575 41.99 43.5745 cv
41.9841 43.2838 41.9787 42.991 41.9704 42.7013 cv
42.0017 41.8616 41.9939 41.0464 42.0114 40.2234 cv
42.0377 38.9369 42.1241 37.568 42.011 36.2864 cv
cp
f
40.1922 10.6539 mo
39.7492 10.707 39.3062 10.7612 38.8633 10.8138 cv
38.4812 10.8739 38.1046 10.9417 37.689 10.9558 cv
36.784 11.1304 35.8791 11.3032 34.9736 11.4773 cv
33.7003 11.7364 32.4943 12.2731 31.3273 12.755 cv
29.1407 13.6567 27.08 14.7045 25.0949 16.0139 cv
24.6246 16.3222 21.3443 18.6215 21.3448 18.9796 cv
21.8785 19.0211 22.4156 19.065 22.9503 19.1064 cv
24.2378 19.1826 25.5823 19.1328 26.862 19.1328 cv
27.6528 19.1719 28.4455 19.2133 29.2358 19.2514 cv
29.5476 19.1064 30.0447 19.1826 30.4238 19.1812 cv
31.5049 19.1802 32.5333 19.2494 33.5656 19.2479 cv
34.0974 19.0245 34.9555 19.2206 35.521 19.2411 cv
37.2665 19.2411 39.0121 19.2421 40.7581 19.2421 cv
42.7139 19.286 44.6687 19.3309 46.6231 19.3733 cv
50.2323 19.3265 53.8415 19.2758 57.4482 19.2274 cv
57.7165 19.1304 58.1171 19.225 58.4273 19.225 cv
59.0538 19.2421 59.684 19.2606 60.3095 19.2782 cv
60.6349 19.2616 60.9613 19.2455 61.2876 19.2284 cv
61.9024 19.2455 62.5819 19.308 63.242 19.2885 cv
63.3849 19.2816 63.7967 19.3104 63.944 19.3104 cv
64.3865 19.3104 63.5898 18.6781 63.4517 18.5239 cv
62.9966 18.0103 62.4912 17.6566 61.9525 17.2985 cv
61.6301 17.0443 61.3096 16.7886 60.9862 16.534 cv
60.3281 16.0929 59.6674 15.6558 59.0084 15.2148 cv
54.8836 12.7229 50.9021 11.2524 45.7752 10.7461 cv
45.0307 10.7324 44.2883 10.7173 43.5442 10.7011 cv
42.4617 10.6841 41.2923 10.6529 40.1922 10.6539 cv
cp
.0683299 1 .852323 .00955215 cmyk
f
19.6075 20.5905 mo
19.1587 21.0476 18.4947 21.7122 18.0453 22.1693 cv
17.1145 23.4221 16.1852 24.6744 15.2549 25.9287 cv
13.2981 29.227 12.1038 32.6597 11.2607 36.5074 cv
11.1231 37.1211 11.126 37.7315 11.0656 38.3832 cv
10.7651 41.5543 10.6777 45.1191 11.1846 48.2452 cv
11.3227 48.7634 11.4613 49.2804 11.5988 49.7927 cv
11.754 50.6465 11.8813 51.4349 12.1492 52.2281 cv
12.4174 52.8867 12.6863 53.5415 12.9541 54.1981 cv
13.2751 55.163 13.7645 56.0305 14.224 56.9223 cv
15.3114 59.0416 16.5735 61.0554 18.1069 62.9718 cv
18.3308 63.2478 18.8913 64.0256 19.2885 64.0256 cv
19.289 64.0011 19.289 63.9806 19.289 63.9552 cv
19.5968 63.3698 19.3826 61.598 19.3602 60.8808 cv
19.3558 59.6718 19.3528 58.463 19.3504 57.2501 cv
19.3489 56.17 19.3069 55.0285 19.3602 53.8995 cv
19.4704 51.4934 19.3758 49.0005 19.4119 46.5651 cv
19.4416 44.5063 19.5475 42.3865 19.5455 40.281 cv
19.544 38.3027 19.4274 36.1313 19.5968 34.214 cv
19.5807 34.0008 19.565 33.7881 19.5479 33.5725 cv
19.545 32.9704 19.5445 32.365 19.5421 31.7605 cv
19.5758 30.9258 19.61 30.0906 19.6441 29.2539 cv
19.5885 27.4552 19.5997 25.6267 19.5416 23.7982 cv
19.4977 22.5147 19.6567 21.2789 19.6075 20.5905 cv
cp
f
65.6657 20.7862 mo
65.5671 22.017 65.7715 23.9274 65.754 25.2227 cv
65.7101 28.0138 65.6998 30.7873 65.7013 33.6764 cv
65.7062 38.3915 65.7072 42.671 65.7111 47.2256 cv
65.7135 49.7732 65.5842 52.313 65.7101 54.9036 cv
65.7008 55.9525 65.6945 57.0014 65.6837 58.0482 cv
65.6862 59.9744 65.9052 61.9872 65.5018 63.8401 cv
65.4745 63.9494 65.2261 64.7778 65.4232 64.7778 cv
66.0828 64.7778 69.1109 60.4066 69.5349 59.708 cv
69.8403 59.1499 70.1452 58.5947 70.4506 58.0376 cv
70.6174 57.659 70.7863 57.2814 70.9535 56.8988 cv
71.5414 55.8568 72.2156 54.5883 72.6099 53.4409 cv
73.4348 51.0162 73.9339 48.5253 74.2818 45.8538 cv
74.3959 44.9786 74.3618 44.1306 74.3769 43.2057 cv
74.3979 42.7158 74.4193 42.228 74.4408 41.7397 cv
74.3969 39.1248 74.0905 36.3581 73.4173 34.0335 cv
72.7494 31.7352 71.7083 29.5003 70.5638 27.4298 cv
70.1637 26.7058 69.6671 26.0438 69.2207 25.3388 cv
68.6236 24.3992 66.0604 20.4915 65.6657 20.7862 cv
cp
f
61.4657 68.1059 mo
59.6753 69.4514 55.9549 69.5929 53.5868 69.8828 cv
52.9804 69.9608 52.3735 70.0378 51.7642 70.113 cv
48.8111 70.2545 44.921 70.5296 43.859 73.5632 cv
43.7491 73.891 43.7603 73.9592 43.6491 74.2862 cv
43.6009 74.5749 44.9664 74.3017 45.5947 74.2998 cv
45.7752 74.209 46.0694 74.2325 46.2938 74.2315 cv
46.4328 74.2061 46.5729 74.1836 46.7124 74.1613 cv
47.0613 73.967 47.6008 73.9504 48.0389 73.9485 cv
48.3307 73.8012 48.7272 73.809 49.0873 73.809 cv
49.4708 73.5993 50.408 73.4578 50.9006 73.4578 cv
51.7354 73.1719 52.5711 72.8841 53.4044 72.5952 cv
55.7704 71.6352 58.2844 70.6701 60.3071 69.0495 cv
60.6061 68.8104 60.9832 68.7334 61.4657 68.1059 cv
cp
f
24.67 68.7002 mo
25.1944 69.3315 25.9399 69.4768 26.5926 69.9217 cv
26.9654 70.195 27.5103 70.4809 27.8796 70.7531 cv
29.31 71.438 30.3911 72 31.8523 72.484 cv
33.4598 73.0178 35.0326 73.526 36.762 73.8412 cv
37.3465 73.9485 41.3313 74.6725 41.4801 74.2998 cv
41.7197 73.6959 40.4205 72.2157 39.9687 71.8342 cv
39.5477 71.4771 39.0364 71.2497 38.5739 70.996 cv
38.1275 70.7511 37.6031 70.6096 37.1109 70.475 cv
36.4611 70.2954 35.8317 70.0886 35.1389 69.9725 cv
34.4764 69.8603 33.8213 69.8554 33.1217 69.7891 cv
32.5133 69.6924 31.9078 69.5929 31.298 69.4944 cv
30.5106 69.3871 29.7218 69.3968 28.9349 69.2983 cv
27.4898 69.1197 26.1409 68.788 24.67 68.7002 cv
cp
f
117.877 31.6823 mo
115.098 31.6823 li
115.098 45.7619 li
115.098 46.8656 115.232 47.611 115.504 47.9961 cv
115.775 48.3812 116.3 48.5743 117.081 48.5743 cv
117.081 49.105 li
110.602 49.105 li
110.602 48.5743 li
111.407 48.5743 111.954 48.3534 112.245 47.9104 cv
112.534 47.4675 112.678 46.72 112.678 45.6679 cv
112.678 31.6823 li
110.024 31.6823 li
108.754 31.6823 107.831 31.8856 107.253 32.2914 cv
106.675 32.6972 106.35 33.3683 106.277 34.3057 cv
105.731 34.3057 li
105.731 30.1057 li
106.277 30.1057 li
106.766 30.5641 107.682 30.7923 109.025 30.7923 cv
118.626 30.7923 li
120.01 30.7923 120.978 30.5641 121.529 30.1057 cv
122.108 30.1057 li
122.108 34.3057 li
121.748 34.3057 li
121.519 33.296 121.11 32.6063 120.523 32.2367 cv
119.934 31.8671 119.053 31.6823 117.877 31.6823 cv
cp
1 .871122 .421698 .518273 cmyk
f
138.818 45.6648 mo
138.818 40.3466 li
128.842 40.3466 li
128.842 45.6648 li
128.842 46.7489 128.995 47.5057 129.303 47.9332 cv
129.609 48.3606 130.164 48.5743 130.965 48.5743 cv
130.965 49.105 li
124.346 49.105 li
124.346 48.5743 li
125.147 48.5743 125.693 48.3585 125.986 47.9259 cv
126.277 47.4933 126.422 46.7407 126.422 45.6679 cv
126.422 34.2458 li
126.422 33.1205 126.274 32.3523 125.977 31.9414 cv
125.681 31.5295 125.137 31.324 124.346 31.324 cv
124.346 30.7923 li
130.965 30.7923 li
130.965 31.324 li
130.164 31.324 129.609 31.5449 129.303 31.9868 cv
128.995 32.4298 128.842 33.1814 128.842 34.2428 cv
128.842 39.4567 li
138.818 39.4567 li
138.818 34.2428 li
138.818 33.1184 138.674 32.3513 138.388 31.9404 cv
138.102 31.5295 137.564 31.324 136.773 31.324 cv
136.773 30.7923 li
143.33 30.7923 li
143.33 31.324 li
142.549 31.324 142.007 31.5377 141.706 31.9641 cv
141.404 32.3916 141.254 33.1514 141.254 34.2458 cv
141.254 45.6679 li
141.254 46.7613 141.404 47.5191 141.706 47.9414 cv
142.007 48.3637 142.549 48.5743 143.33 48.5743 cv
143.33 49.105 li
136.773 49.105 li
136.773 48.5743 li
137.584 48.5743 138.128 48.3637 138.404 47.9404 cv
138.68 47.5181 138.818 46.7603 138.818 45.6648 cv
cp
f
157.623 37.7242 mo
158.169 37.7242 li
158.169 42.1731 li
157.623 42.1731 li
157.425 41.3925 157.186 40.9042 156.906 40.7059 cv
156.624 40.5087 156.009 40.4096 155.063 40.4096 cv
150.52 40.4096 li
150.52 46.9657 li
150.52 47.4242 150.621 47.7473 150.824 47.9342 cv
151.028 48.1211 151.374 48.215 151.863 48.215 cv
155.063 48.215 li
156.208 48.215 156.999 48.1531 157.436 48.0281 cv
157.873 47.9032 158.243 47.6709 158.544 47.3333 cv
158.846 46.9947 159.169 46.4464 159.513 45.6865 cv
160.059 45.6865 li
159.215 49.105 li
146.024 49.105 li
146.024 48.5743 li
146.846 48.5743 147.398 48.3637 147.679 47.9414 cv
147.959 47.5191 148.1 46.7716 148.1 45.6989 cv
148.1 34.2458 li
148.1 33.1308 147.954 32.3657 147.663 31.9486 cv
147.372 31.5325 146.826 31.324 146.024 31.324 cv
146.024 30.7923 li
159.215 30.7923 li
159.215 33.8525 li
158.872 33.8525 li
158.685 32.978 158.417 32.3988 158.068 32.1118 cv
157.719 31.8258 156.962 31.6823 155.797 31.6823 cv
150.52 31.6823 li
150.52 39.5196 li
155.641 39.5196 li
156.338 39.5196 156.814 39.3947 157.069 39.1449 cv
157.324 38.895 157.509 38.4221 157.623 37.7242 cv
cp
f
183.703 45.2643 mo
183.703 34.2428 li
183.703 33.1711 183.56 32.4246 183.274 32.0023 cv
182.987 31.5811 182.48 31.355 181.751 31.324 cv
181.751 30.7923 li
188.214 30.7923 li
188.214 31.324 li
187.433 31.324 186.892 31.5377 186.591 31.9641 cv
186.288 32.3916 186.138 33.1514 186.138 34.2458 cv
186.138 45.6679 li
186.138 46.7407 186.286 47.4933 186.583 47.9259 cv
186.88 48.3585 187.423 48.5743 188.214 48.5743 cv
188.214 49.105 li
183.703 49.105 li
183.703 46.5445 li
181.985 48.5537 179.95 49.5572 177.598 49.5572 cv
175.662 49.5572 174.14 48.9801 173.033 47.8247 cv
171.924 46.6694 171.369 45.1455 171.369 43.251 cv
171.369 34.2428 li
171.369 33.1504 171.227 32.3905 170.94 31.9641 cv
170.654 31.5367 170.105 31.324 169.293 31.324 cv
169.293 30.7923 li
175.912 30.7923 li
175.912 31.324 li
175.09 31.324 174.534 31.5315 174.242 31.9476 cv
173.95 32.3647 173.805 33.1184 173.805 34.2118 cv
173.805 43.4853 li
173.805 44.9834 174.216 46.1625 175.039 47.0205 cv
175.861 47.8795 177.006 48.309 178.473 48.309 cv
180.648 48.309 182.391 47.2941 183.703 45.2643 cv
cp
f
204.659 31.324 mo
204.659 30.7923 li
210.185 30.7923 li
210.185 31.324 li
209.3 31.324 208.687 31.5315 208.343 31.9476 cv
208 32.3647 207.828 33.1184 207.828 34.2118 cv
207.828 49.105 li
207.267 49.105 li
194.293 33.1814 li
194.293 46.0427 li
194.293 46.9492 194.477 47.5976 194.846 47.9879 cv
195.216 48.3792 195.832 48.5743 196.697 48.5743 cv
196.697 49.105 li
191.139 49.105 li
191.139 48.5743 li
192.024 48.5743 192.623 48.342 192.934 47.8795 cv
193.246 47.4159 193.403 46.6003 193.403 45.4336 cv
193.403 34.7146 li
193.403 33.5582 193.192 32.7271 192.77 32.2222 cv
192.349 31.7174 191.654 31.4179 190.687 31.324 cv
190.687 30.7923 li
195.386 30.7923 li
206.891 45.0464 li
206.891 34.3367 li
206.891 33.2124 206.732 32.4298 206.415 31.9868 cv
206.097 31.5449 205.512 31.324 204.659 31.324 cv
cp
f
219.381 30.7923 mo
219.381 31.324 li
218.6 31.324 218.058 31.5377 217.757 31.9641 cv
217.455 32.3916 217.304 33.1514 217.304 34.2458 cv
217.304 45.6679 li
217.304 46.7613 217.455 47.5191 217.757 47.9414 cv
218.058 48.3637 218.6 48.5743 219.381 48.5743 cv
219.381 49.105 li
212.793 49.105 li
212.793 48.5743 li
213.594 48.5743 214.14 48.3658 214.431 47.9497 cv
214.722 47.5326 214.869 46.7716 214.869 45.6679 cv
214.869 34.2458 li
214.869 33.1205 214.725 32.3523 214.439 31.9414 cv
214.152 31.5295 213.604 31.324 212.793 31.324 cv
212.793 30.7923 li
219.381 30.7923 li
cp
f
239.568 30.7923 mo
239.568 31.355 li
238.225 31.355 237.115 32.5413 236.241 34.9139 cv
230.837 49.3549 li
230.318 49.3549 li
224.646 34.4926 li
224.116 33.1184 223.657 32.2522 223.272 31.8929 cv
222.886 31.5346 222.335 31.3446 221.616 31.324 cv
221.616 30.7923 li
228.266 30.7923 li
228.266 31.324 li
227.197 31.324 226.664 31.7349 226.664 32.5567 cv
226.664 32.8273 226.731 33.1339 226.866 33.4777 cv
231.349 45.2963 li
235.603 33.8845 li
235.779 33.3951 235.868 32.9739 235.868 32.6197 cv
235.868 31.7556 235.322 31.324 234.23 31.324 cv
234.23 30.7923 li
239.568 30.7923 li
cp
f
252.985 37.7242 mo
253.531 37.7242 li
253.531 42.1731 li
252.985 42.1731 li
252.787 41.3925 252.548 40.9042 252.268 40.7059 cv
251.986 40.5087 251.371 40.4096 250.425 40.4096 cv
245.882 40.4096 li
245.882 46.9657 li
245.882 47.4242 245.983 47.7473 246.186 47.9342 cv
246.39 48.1211 246.736 48.215 247.225 48.215 cv
250.425 48.215 li
251.57 48.215 252.361 48.1531 252.798 48.0281 cv
253.235 47.9032 253.605 47.6709 253.906 47.3333 cv
254.208 46.9947 254.531 46.4464 254.875 45.6865 cv
255.421 45.6865 li
254.577 49.105 li
241.386 49.105 li
241.386 48.5743 li
242.208 48.5743 242.76 48.3637 243.041 47.9414 cv
243.321 47.5191 243.462 46.7716 243.462 45.6989 cv
243.462 34.2458 li
243.462 33.1308 243.316 32.3657 243.025 31.9486 cv
242.734 31.5325 242.188 31.324 241.386 31.324 cv
241.386 30.7923 li
254.577 30.7923 li
254.577 33.8525 li
254.234 33.8525 li
254.047 32.978 253.779 32.3988 253.43 32.1118 cv
253.081 31.8258 252.324 31.6823 251.159 31.6823 cv
245.882 31.6823 li
245.882 39.5196 li
251.003 39.5196 li
251.7 39.5196 252.176 39.3947 252.431 39.1449 cv
252.686 38.895 252.871 38.4221 252.985 37.7242 cv
cp
f
264.223 31.4954 mo
262.302 31.4954 li
262.302 39.8635 li
264.551 39.8635 li
265.893 39.8635 266.947 39.4784 267.712 38.7081 cv
268.476 37.9379 268.859 36.9179 268.859 35.6479 cv
268.859 34.409 268.435 33.4075 267.587 32.6424 cv
266.739 31.8774 265.617 31.4954 264.223 31.4954 cv
cp
263.786 40.6275 mo
262.302 40.6275 li
262.302 45.6648 li
262.302 46.7489 262.456 47.5057 262.763 47.9332 cv
263.069 48.3606 263.613 48.5743 264.394 48.5743 cv
264.394 49.105 li
257.806 49.105 li
257.806 48.5743 li
258.618 48.5743 259.167 48.3606 259.454 47.9332 cv
259.74 47.5068 259.882 46.751 259.882 45.6679 cv
259.882 34.1829 li
259.882 33.0998 259.742 32.3523 259.461 31.9414 cv
259.18 31.5295 258.629 31.324 257.806 31.324 cv
257.806 30.7923 li
265.315 30.7923 li
267.168 30.7923 268.649 31.2435 269.756 32.1427 cv
270.865 33.043 271.42 34.1911 271.42 35.586 cv
271.42 37.8336 270.16 39.3317 267.641 40.0813 cv
268.194 40.4354 268.734 40.9217 269.262 41.5412 cv
269.788 42.1596 270.479 43.189 271.333 44.6272 cv
272.292 46.2234 273.041 47.2693 273.58 47.7659 cv
274.119 48.2635 274.679 48.532 275.259 48.5743 cv
275.259 49.105 li
271.513 49.105 li
270.742 48.1778 269.811 46.8171 268.719 45.0237 cv
267.553 43.1364 266.639 41.9315 265.979 41.4101 cv
265.318 40.8887 264.587 40.6275 263.786 40.6275 cv
cp
f
286.098 30.5269 mo
286.613 30.5269 li
286.613 34.8209 li
286.067 34.8209 li
285.942 33.6336 285.513 32.7075 284.779 32.0415 cv
284.046 31.3756 283.122 31.0421 282.008 31.0421 cv
281.02 31.0421 280.223 31.292 279.62 31.7917 cv
279.016 32.2914 278.714 32.9573 278.714 33.7905 cv
278.714 34.5607 278.964 35.2628 279.464 35.8978 cv
279.963 36.5327 281.045 37.3494 282.711 38.3488 cv
284.647 39.5042 285.948 40.5139 286.613 41.377 cv
287.279 42.2412 287.613 43.2303 287.613 44.3433 cv
287.613 45.7794 287.103 47.0081 286.085 48.0281 cv
285.067 49.0482 283.84 49.5572 282.406 49.5572 cv
281.575 49.5572 280.515 49.329 279.226 48.8706 cv
278.697 48.6838 278.359 48.5898 278.213 48.5898 cv
277.912 48.5898 277.679 48.8242 277.512 49.2919 cv
276.965 49.2919 li
276.965 44.3433 li
277.512 44.3433 li
277.523 45.7072 277.967 46.7995 278.844 47.6224 cv
279.722 48.4442 280.748 48.8551 281.921 48.8551 cv
283.033 48.8551 283.924 48.5588 284.594 47.9641 cv
285.263 47.3705 285.599 46.5796 285.599 45.5895 cv
285.599 44.8502 285.323 44.142 284.773 43.4647 cv
284.222 42.7884 283.071 41.915 281.321 40.8464 cv
279.893 39.9657 278.94 39.2698 278.462 38.7587 cv
277.984 38.2487 277.631 37.6891 277.402 37.0799 cv
277.174 36.4708 277.059 35.8018 277.059 35.0728 cv
277.059 33.6677 277.52 32.5268 278.44 31.6523 cv
279.361 30.7778 280.561 30.3401 282.04 30.3401 cv
282.851 30.3401 283.736 30.5011 284.693 30.8243 cv
285.14 30.9699 285.453 31.0421 285.629 31.0421 cv
285.775 31.0421 285.874 31.0112 285.927 30.9492 cv
285.978 30.8862 286.035 30.7458 286.098 30.5269 cv
cp
f
297.259 30.7923 mo
297.259 31.324 li
296.479 31.324 295.937 31.5377 295.635 31.9641 cv
295.334 32.3916 295.183 33.1514 295.183 34.2458 cv
295.183 45.6679 li
295.183 46.7613 295.334 47.5191 295.635 47.9414 cv
295.937 48.3637 296.479 48.5743 297.259 48.5743 cv
297.259 49.105 li
290.671 49.105 li
290.671 48.5743 li
291.472 48.5743 292.018 48.3658 292.31 47.9497 cv
292.601 47.5326 292.747 46.7716 292.747 45.6679 cv
292.747 34.2458 li
292.747 33.1205 292.604 32.3523 292.318 31.9414 cv
292.031 31.5295 291.483 31.324 290.671 31.324 cv
290.671 30.7923 li
297.259 30.7923 li
cp
f
311.807 31.6823 mo
309.029 31.6823 li
309.029 45.7619 li
309.029 46.8656 309.163 47.611 309.435 47.9961 cv
309.705 48.3812 310.231 48.5743 311.011 48.5743 cv
311.011 49.105 li
304.533 49.105 li
304.533 48.5743 li
305.338 48.5743 305.885 48.3534 306.175 47.9104 cv
306.465 47.4675 306.609 46.72 306.609 45.6679 cv
306.609 31.6823 li
303.955 31.6823 li
302.685 31.6823 301.762 31.8856 301.184 32.2914 cv
300.606 32.6972 300.281 33.3683 300.208 34.3057 cv
299.662 34.3057 li
299.662 30.1057 li
300.208 30.1057 li
300.697 30.5641 301.613 30.7923 302.956 30.7923 cv
312.557 30.7923 li
313.941 30.7923 314.909 30.5641 315.46 30.1057 cv
316.039 30.1057 li
316.039 34.3057 li
315.679 34.3057 li
315.45 33.296 315.041 32.6063 314.454 32.2367 cv
313.865 31.8671 312.983 31.6823 311.807 31.6823 cv
cp
f
331.47 33.4003 mo
327.349 39.8944 li
327.349 45.6648 li
327.349 46.7809 327.492 47.545 327.778 47.9569 cv
328.065 48.3678 328.592 48.5743 329.362 48.5743 cv
329.362 49.105 li
322.68 49.105 li
322.68 48.5743 li
323.586 48.5743 324.188 48.3554 324.484 47.9177 cv
324.78 47.4799 324.929 46.7293 324.929 45.6648 cv
324.929 39.8944 li
321.026 33.8215 li
320.381 32.8118 319.855 32.151 319.449 31.8392 cv
319.043 31.5264 318.481 31.355 317.763 31.324 cv
317.763 30.7923 li
324.929 30.7923 li
324.929 31.324 li
323.67 31.324 323.041 31.61 323.041 32.182 cv
323.041 32.4421 323.166 32.7643 323.415 33.1494 cv
327.036 38.6968 li
329.935 34.0992 li
330.362 33.4137 330.576 32.8262 330.576 32.3368 cv
330.576 31.6616 330.171 31.324 329.362 31.324 cv
329.362 30.7923 li
334.389 30.7923 li
334.389 31.324 li
333.713 31.3653 333.19 31.514 332.82 31.769 cv
332.45 32.024 332.001 32.5671 331.47 33.4003 cv
cp
f
343.187 48.5279 mo
344.217 48.5279 345.125 47.8857 345.911 46.6023 cv
346.696 45.319 347.09 43.7899 347.09 42.013 cv
347.09 41.2129 346.881 40.5397 346.465 39.9946 cv
346.049 39.4494 345.529 39.1758 344.904 39.1758 cv
343.905 39.1758 343.009 39.8149 342.219 41.0931 cv
341.428 42.3713 341.032 43.8725 341.032 45.5977 cv
341.032 46.4908 341.227 47.2032 341.618 47.7329 cv
342.008 48.2625 342.531 48.5279 343.187 48.5279 cv
cp
345.746 38.2394 mo
346.6 38.2394 347.35 38.5987 347.995 39.3163 cv
348.64 40.0348 348.963 40.8773 348.963 41.8458 cv
348.963 43.5421 348.322 45.2364 347.042 46.9275 cv
345.762 48.6187 344.243 49.4643 342.484 49.4643 cv
341.506 49.4643 340.707 49.1153 340.088 48.4184 cv
339.468 47.7205 339.158 46.8315 339.158 45.7485 cv
339.158 43.8539 339.843 42.1297 341.212 40.5738 cv
342.58 39.0179 344.092 38.2394 345.746 38.2394 cv
cp
f
356.844 38.5832 mo
356.735 39.4567 li
354.513 39.4567 li
352.73 48.7942 li
352.261 51.3124 351.744 53.144 351.176 54.289 cv
350.608 55.4329 349.811 56.3198 348.786 56.9496 cv
347.76 57.5794 346.658 57.8943 345.481 57.8943 cv
343.909 57.8943 342.67 57.6083 341.763 57.0353 cv
342.247 54.8031 li
342.794 54.8031 li
343.136 56.4375 344.067 57.2542 345.583 57.2542 cv
346.725 57.2542 347.731 56.8402 348.597 56.0132 cv
349.465 55.1852 350.179 53.2679 350.74 50.2603 cv
352.768 39.4567 li
350.522 39.4567 li
350.616 38.5832 li
352.868 38.5832 li
353.659 34.7115 li
354.076 32.6507 354.757 31.23 355.7 30.4495 cv
356.644 29.669 357.768 29.2787 359.071 29.2787 cv
359.676 29.2787 360.401 29.4191 361.247 29.6999 cv
361.34 29.3097 li
361.98 29.3097 li
361.372 32.1975 li
360.732 32.1975 li
360.595 30.6787 359.924 29.9188 358.715 29.9188 cv
357.173 29.9188 356.13 31.2197 355.589 33.8236 cv
354.584 38.5832 li
356.844 38.5832 li
cp
f
378.893 37.7242 mo
379.439 37.7242 li
379.439 42.1731 li
378.893 42.1731 li
378.694 41.3925 378.456 40.9042 378.175 40.7059 cv
377.893 40.5087 377.279 40.4096 376.332 40.4096 cv
371.789 40.4096 li
371.789 46.9657 li
371.789 47.4242 371.89 47.7473 372.094 47.9342 cv
372.297 48.1211 372.643 48.215 373.132 48.215 cv
376.332 48.215 li
377.477 48.215 378.268 48.1531 378.706 48.0281 cv
379.142 47.9032 379.512 47.6709 379.814 47.3333 cv
380.115 46.9947 380.438 46.4464 380.782 45.6865 cv
381.328 45.6865 li
380.485 49.105 li
367.293 49.105 li
367.293 48.5743 li
368.116 48.5743 368.667 48.3637 368.948 47.9414 cv
369.229 47.5191 369.369 46.7716 369.369 45.6989 cv
369.369 34.2458 li
369.369 33.1308 369.224 32.3657 368.932 31.9486 cv
368.641 31.5325 368.095 31.324 367.293 31.324 cv
367.293 30.7923 li
380.485 30.7923 li
380.485 33.8525 li
380.142 33.8525 li
379.954 32.978 379.686 32.3988 379.338 32.1118 cv
378.989 31.8258 378.232 31.6823 377.066 31.6823 cv
371.789 31.6823 li
371.789 39.5196 li
376.91 39.5196 li
377.607 39.5196 378.083 39.3947 378.338 39.1449 cv
378.593 38.895 378.778 38.4221 378.893 37.7242 cv
cp
f
391.858 31.4954 mo
388.377 31.4954 li
388.377 45.0144 li
388.377 46.3163 388.534 47.2053 388.845 47.6843 cv
389.158 48.1634 389.782 48.4029 390.719 48.4029 cv
392.608 48.4029 li
394.856 48.4029 396.625 47.6761 397.916 46.2244 cv
399.206 44.7728 399.851 42.7925 399.851 40.2847 cv
399.851 37.6199 399.146 35.4889 397.736 33.8917 cv
396.326 32.2945 394.367 31.4954 391.858 31.4954 cv
cp
383.881 49.105 mo
383.881 48.5743 li
384.666 48.5743 385.208 48.3585 385.509 47.9259 cv
385.808 47.4933 385.958 46.7407 385.958 45.6679 cv
385.958 34.2458 li
385.958 33.1514 385.808 32.3916 385.509 31.9641 cv
385.208 31.5377 384.666 31.324 383.881 31.324 cv
383.881 30.7923 li
392.351 30.7923 li
395.481 30.7923 397.985 31.6823 399.862 33.4622 cv
401.739 35.2422 402.677 37.5053 402.677 40.2537 cv
402.677 42.9484 401.788 45.098 400.009 46.7004 cv
398.232 48.3038 395.757 49.105 392.585 49.105 cv
383.881 49.105 li
cp
f
411.687 30.7923 mo
411.687 31.324 li
410.906 31.324 410.364 31.5377 410.062 31.9641 cv
409.761 32.3916 409.61 33.1514 409.61 34.2458 cv
409.61 45.6679 li
409.61 46.7613 409.761 47.5191 410.062 47.9414 cv
410.364 48.3637 410.906 48.5743 411.687 48.5743 cv
411.687 49.105 li
405.098 49.105 li
405.098 48.5743 li
405.9 48.5743 406.446 48.3658 406.737 47.9497 cv
407.028 47.5326 407.175 46.7716 407.175 45.6679 cv
407.175 34.2458 li
407.175 33.1205 407.031 32.3523 406.745 31.9414 cv
406.458 31.5295 405.91 31.324 405.098 31.324 cv
405.098 30.7923 li
411.687 30.7923 li
cp
f
427.957 31.324 mo
427.957 30.7923 li
433.483 30.7923 li
433.483 31.324 li
432.598 31.324 431.985 31.5315 431.641 31.9476 cv
431.298 32.3647 431.126 33.1184 431.126 34.2118 cv
431.126 49.105 li
430.565 49.105 li
417.591 33.1814 li
417.591 46.0427 li
417.591 46.9492 417.775 47.5976 418.145 47.9879 cv
418.514 48.3792 419.131 48.5743 419.995 48.5743 cv
419.995 49.105 li
414.437 49.105 li
414.437 48.5743 li
415.322 48.5743 415.921 48.342 416.232 47.8795 cv
416.544 47.4159 416.701 46.6003 416.701 45.4336 cv
416.701 34.7146 li
416.701 33.5582 416.491 32.7271 416.068 32.2222 cv
415.647 31.7174 414.952 31.4179 413.985 31.324 cv
413.985 30.7923 li
418.685 30.7923 li
430.189 45.0464 li
430.189 34.3367 li
430.189 33.2124 430.03 32.4298 429.713 31.9868 cv
429.395 31.5449 428.81 31.324 427.957 31.324 cv
cp
f
441.739 39.9564 mo
440.002 39.9564 li
440.002 45.3272 li
440.002 46.5135 440.133 47.323 440.393 47.7545 cv
440.654 48.1861 441.155 48.4029 441.895 48.4029 cv
443.413 48.4029 li
444.477 48.4029 445.346 48.0457 446.018 47.3333 cv
446.691 46.6199 447.028 45.6648 447.028 44.4682 cv
447.028 43.1054 446.544 42.012 445.58 41.1902 cv
444.615 40.3683 443.335 39.9564 441.739 39.9564 cv
cp
440.002 31.4954 mo
440.002 39.2543 li
441.896 39.2543 li
443.221 39.2543 444.275 38.9084 445.058 38.2157 cv
445.84 37.5239 446.232 36.5895 446.232 35.4136 cv
446.232 34.1756 445.848 33.2124 445.08 32.5258 cv
444.314 31.8392 443.231 31.4954 441.833 31.4954 cv
440.002 31.4954 li
cp
443.946 49.105 mo
435.506 49.105 li
435.506 48.5743 li
436.287 48.5743 436.828 48.3637 437.129 47.9414 cv
437.431 47.5191 437.583 46.7613 437.583 45.6679 cv
437.583 34.2458 li
437.583 33.1308 437.439 32.3657 437.153 31.9486 cv
436.867 31.5325 436.318 31.324 435.506 31.324 cv
435.506 30.7923 li
442.415 30.7923 li
444.394 30.7923 445.952 31.2011 447.087 32.0168 cv
448.223 32.8334 448.791 33.9124 448.791 35.2535 cv
448.791 37.2193 447.563 38.6018 445.107 39.403 cv
445.107 39.4804 li
446.502 39.7623 447.639 40.3787 448.518 41.3316 cv
449.397 42.2856 449.837 43.381 449.837 44.621 cv
449.837 45.9756 449.298 47.0607 448.22 47.8784 cv
447.141 48.6961 445.716 49.105 443.946 49.105 cv
cp
f
466.146 45.2643 mo
466.146 34.2428 li
466.146 33.1711 466.002 32.4246 465.716 32.0023 cv
465.429 31.5811 464.922 31.355 464.193 31.324 cv
464.193 30.7923 li
470.656 30.7923 li
470.656 31.324 li
469.876 31.324 469.335 31.5377 469.033 31.9641 cv
468.731 32.3916 468.58 33.1514 468.58 34.2458 cv
468.58 45.6679 li
468.58 46.7407 468.729 47.4933 469.025 47.9259 cv
469.323 48.3585 469.866 48.5743 470.656 48.5743 cv
470.656 49.105 li
466.146 49.105 li
466.146 46.5445 li
464.428 48.5537 462.393 49.5572 460.041 49.5572 cv
458.105 49.5572 456.583 48.9801 455.475 47.8247 cv
454.366 46.6694 453.812 45.1455 453.812 43.251 cv
453.812 34.2428 li
453.812 33.1504 453.669 32.3905 453.382 31.9641 cv
453.096 31.5367 452.547 31.324 451.736 31.324 cv
451.736 30.7923 li
458.355 30.7923 li
458.355 31.324 li
457.533 31.324 456.976 31.5315 456.684 31.9476 cv
456.393 32.3647 456.247 33.1184 456.247 34.2118 cv
456.247 43.4853 li
456.247 44.9834 456.658 46.1625 457.481 47.0205 cv
458.303 47.8795 459.448 48.309 460.915 48.309 cv
463.091 48.309 464.833 47.2941 466.146 45.2643 cv
cp
f
479.782 31.4954 mo
477.862 31.4954 li
477.862 39.8635 li
480.111 39.8635 li
481.453 39.8635 482.507 39.4784 483.272 38.7081 cv
484.036 37.9379 484.419 36.9179 484.419 35.6479 cv
484.419 34.409 483.995 33.4075 483.147 32.6424 cv
482.298 31.8774 481.177 31.4954 479.782 31.4954 cv
cp
479.346 40.6275 mo
477.862 40.6275 li
477.862 45.6648 li
477.862 46.7489 478.016 47.5057 478.322 47.9332 cv
478.629 48.3606 479.173 48.5743 479.954 48.5743 cv
479.954 49.105 li
473.366 49.105 li
473.366 48.5743 li
474.178 48.5743 474.726 48.3606 475.013 47.9332 cv
475.299 47.5068 475.442 46.751 475.442 45.6679 cv
475.442 34.1829 li
475.442 33.0998 475.301 32.3523 475.021 31.9414 cv
474.74 31.5295 474.189 31.324 473.366 31.324 cv
473.366 30.7923 li
480.875 30.7923 li
482.728 30.7923 484.208 31.2435 485.316 32.1427 cv
486.425 33.043 486.98 34.1911 486.98 35.586 cv
486.98 37.8336 485.72 39.3317 483.201 40.0813 cv
483.754 40.4354 484.294 40.9217 484.822 41.5412 cv
485.348 42.1596 486.039 43.189 486.893 44.6272 cv
487.852 46.2234 488.601 47.2693 489.14 47.7659 cv
489.678 48.2635 490.239 48.532 490.819 48.5743 cv
490.819 49.105 li
487.073 49.105 li
486.302 48.1778 485.371 46.8171 484.279 45.0237 cv
483.113 43.1364 482.199 41.9315 481.539 41.4101 cv
480.878 40.8887 480.147 40.6275 479.346 40.6275 cv
cp
f
509.017 41.1747 mo
509.017 41.7054 li
508.205 41.7054 507.625 41.8902 507.277 42.2608 cv
506.928 42.6304 506.753 43.2695 506.753 44.1771 cv
506.753 49.104 li
506.327 49.2186 505.528 49.3228 504.357 49.4168 cv
503.186 49.5108 502.279 49.5572 501.633 49.5572 cv
498.25 49.5572 495.615 48.7251 493.726 47.0597 cv
491.836 45.3943 490.893 43.1983 490.893 40.4716 cv
490.893 38.5677 491.306 36.8497 492.134 35.3196 cv
492.961 33.7905 494.116 32.5774 495.599 31.6823 cv
497.082 30.7881 498.657 30.3401 500.321 30.3401 cv
501.32 30.3401 502.408 30.5166 503.585 30.8707 cv
504.333 31.0896 504.906 31.1991 505.302 31.1991 cv
505.822 31.1991 506.166 30.9957 506.332 30.5899 cv
506.909 30.5899 li
506.909 35.9917 li
506.394 35.9917 li
506.186 34.4926 505.507 33.2929 504.357 32.3926 cv
503.207 31.4933 501.861 31.0421 500.321 31.0421 cv
498.386 31.0421 496.798 31.8154 495.56 33.361 cv
494.321 34.9066 493.702 36.9024 493.702 39.3483 cv
493.702 42.0327 494.417 44.2607 495.848 46.0293 cv
497.279 47.7989 499.078 48.6838 501.243 48.6838 cv
503.292 48.6838 504.318 48.0312 504.318 46.7272 cv
504.318 44.7408 li
504.318 43.6144 504.17 42.8266 503.873 42.3775 cv
503.576 41.9294 503.054 41.7054 502.304 41.7054 cv
501.601 41.7054 li
501.601 41.1747 li
509.017 41.1747 li
cp
f
524.989 45.6648 mo
524.989 40.3466 li
515.013 40.3466 li
515.013 45.6648 li
515.013 46.7489 515.166 47.5057 515.473 47.9332 cv
515.78 48.3606 516.334 48.5743 517.136 48.5743 cv
517.136 49.105 li
510.517 49.105 li
510.517 48.5743 li
511.318 48.5743 511.864 48.3585 512.156 47.9259 cv
512.447 47.4933 512.593 46.7407 512.593 45.6679 cv
512.593 34.2458 li
512.593 33.1205 512.444 32.3523 512.148 31.9414 cv
511.852 31.5295 511.307 31.324 510.517 31.324 cv
510.517 30.7923 li
517.136 30.7923 li
517.136 31.324 li
516.334 31.324 515.78 31.5449 515.473 31.9868 cv
515.166 32.4298 515.013 33.1814 515.013 34.2428 cv
515.013 39.4567 li
524.989 39.4567 li
524.989 34.2428 li
524.989 33.1184 524.845 32.3513 524.559 31.9404 cv
524.273 31.5295 523.734 31.324 522.943 31.324 cv
522.943 30.7923 li
529.5 30.7923 li
529.5 31.324 li
528.72 31.324 528.178 31.5377 527.876 31.9641 cv
527.575 32.3916 527.424 33.1514 527.424 34.2458 cv
527.424 45.6679 li
527.424 46.7613 527.575 47.5191 527.876 47.9414 cv
528.178 48.3637 528.72 48.5743 529.5 48.5743 cv
529.5 49.105 li
522.943 49.105 li
522.943 48.5743 li
523.755 48.5743 524.299 48.3637 524.575 47.9404 cv
524.85 47.5181 524.989 46.7603 524.989 45.6648 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 18.0.0%%For: (Marc Wright) ()%%Title: (UoE_Horizontal Logo_CMYK.eps)%%CreationDate: 02/12/2014 15:14%%Canvassize: 16383%AI9_DataStream%Gb",Kk@3F5Zg`/@g]K"$6ej@TSXNk.]r_=!YQ7EG]?e2UcF&-H\Jl>&fS!cqce5sf/<)J29pJ2*7+-+Z=fF8cddhm'@@C]D*$+/T%>aT+9Th&^tFs2"p<FQ"UTR&>a@8USo`_f&(>4Ad"a7IY//!kSlWS'FMb@R[%aiJV8h,t+ureShgZ1nB-`:0m.YKO\ul+0uG$Umtj%n`P;%0'22<6gOlU(ki<2juM7ueLN#\7S.>^mn$L$5%BD8*<67>dI4"nn\!b0P(M3N_J#W-!"m<mh]A5A!MqN.:U4f(L>S/6L1OId%6j`BC'4*XkSJ4jqEa`,__O3i+^T>pXcnrYU0-!@N65"a(dn(n&)@`&Z@l.$]>I_G0?>?$K>O9r%k2W0soX<OiM![,X527mj*u@ZR%3Km$c&(:h592`,p\L9==Fg3H*dR2os37No+iOeb9[5JRmRA<5Ei4*;W8dem_MZYS'MGf=6*a3Md$Y,p,?T%*B>'NgU.oKT>O&W_q%W;TLYF3[XInl,@)dAoq-b@[ja874u?1*ah[7B3PF)81I40"r`i_LJr_;lNS-gFlG@<g[.\+VLoN@4ImW_N2W";VUEnZm@SfneE3W%P`PA(Iu,im(XSTQ[)*6h#dA3"GaRH0-])B$Af8:#gA%XhJH-m5>!H]6T>C@aD:`*/br'X.M<E]<X^\B2";=N[5;4:dV!4MErDQ/o%aEP6o;oJa&Eou#]2Q>>K!IDsI.iGmKk+Dg+V.%1s@CatN(Zh.c48o<+HS&h$q![AZ)/@cl#\N9'In;hreU-e"[k7>Xqou,\>"DZS%OqbWnb$DOeo2uBlQ@?[mMr=i`0B$AE/->nI>H\\RCTU$$E.D1t$7d3l-2pj??iS\[W="T%1fm:jc!O@SDOJ9ip&*d>e]"E<%c_RM%gemGTHkCol#!c-blJ<(;KJh-YEaT`oM@I-e"k+k!NXB@)9%r6G]@V<;(M1.[G@CHGj.I1J;H/-.qD]/#Y9;)dAu27)=8k%LU)?hN%Lu?)LR\rj`E<"#0$MKU7e5=p&)uGE`V71I0#<mU%4u-T\?@-CEXk-b0W>gW]H@P'q6'h&57S0c73XoTlRS(lDG.1MT98,U$Y!aHi%e2bcRC*<.RR,##CiO@Gk^E1otT$&#![9@?t=q)9o[B=%:88berBb`85MCf-ET[bUW!9;Cu"jD!N)YI#/p^8FL3rI@AA[<gD5k<Cr%@YbAhi8;fJ:_3QSZn`?nJNjY&Q_.+H43WD>_tT3k\:X!PKVC"7-S_i_QnXm.@%ASH3o!!><'1p4.+V@FA1;*o$JL&RFCYF3;JZE_%<!RXddT#u\W_0TPMIR;*!Z+MXPWB4$AiYlKMA$%EKU"lq95'"cYZd;YJJ1u_$(anF1Fdp.OPj-K/ASXq&6M-!(30Hn)c.B4d8X@h%&&njLPVR>cl\cNl[48#jZltM;<C;o3<T(`1Xc*Z3Z2H&_#"8o-B*u``cS(#S$XK._Qgd=&SLT9>Fs2(7=h,AUJVrd_%hA^q8npmB%BJ:tVC2oDH=LFMgK[hhDV[^VnC8&Ehog29G%291XALYSl;B\E_KL[5X@(!j^>Uor`f`7,`!GHUa"A'`8;TR9QfF``J;MU<aq5]ZE%M"B?KiUnqCk\3XV,Y9B6&IXGKL,--a!9bp\%R\gI-94gE0*%!<N)n$(@E/D-&37*5'ABH#oVmVb89%393A)JRGVF,l;[4Zq3Gn$a%I?=foE_%^V[)/V(l][k"*"!]u*kL>FAjL7PBQRbc3OLOa#bJtG"e+$)JOsP8B9O63]T/59!$=L3$JZi%Qt;F!&&G9+.tq55>rd_k%3H^>#=eJMm@n]0biGpcoBM9g"=]LUjlj"XLVrF**P2K'O'PYYY]WuR@0g7%"1WM;/e4>*8cjL"PO`JP5A<Z<.JX;[!O@t0nA<g/\%Lp=<Bb5dgf'EC]9NllZ9KtJa1P>ITI!@2rULYu7&eOH2<H6GbY_ZEZA^3BcoQ:Rr!J7b`4ps"XTO%1>2iX%Z&$Rt;+eI$"%CLqVk%ci^$W_lV68$H[r&'tU5US[B-RX@!qm1R:6Gf8'^I,W-$qUp\SWWk`&)%+Oe+(e+\E`8Cm&'_=j$.tpr-=a*\$To9?*@cD.A,T@Ql%p=]M>I8\U'$nMuCXq\lY6.\bCno5iN1\@+:(C6X4QY;n`<,>^/9nj\?dHK.0KucpY.]8t*8OG(i,IUPG8&3#mZD;4AJ7(jimM8k-%9Y#g[Q!tFn7%n0(k:Nc)$1O?_=Y7oT.NP1^5k?I0-Q"n<[KjStct$$WThl".L"?qc!KK&<0F81@BLAmSUJ_m;2Q6dD`e#rI&@Etf%ZnA;1$<NlXC^!;UfO.(_1/nW1+YK]NPFU>J.WCgbJ[$tF<ESW<[Gi*-qPZQoR03hj8hq5&`<j*n#n'nTK49,=,b\%Biu04DMRh]C%.5,#j8IAOTX+e@M>%'`p?;S_DOok;EF*`1!lTPoYeFo+V.85IJ'JbN@%NoWtM[=0d1:14Q/#oWlr=KBW!GjY[<AGZu<%S7Tca64V%/=p;TfGZ_M>7?At@H&U6$'nSJ$cSdl[?\p3Jm)5@`j8:m"NHHf,c,T4`&.P-0(]`(`SQ,3Nb>br+(k_a&8V>h=F?:.FTA(b;ujQT%";qb@$&p,(\2pVmW*G=UGpKMVp;$U+22:C:XBLsO1UP`"@MV=>68a`60oYg_33*XG;Uca?eFYRU<RjF-d_l:5W-/jh"2jEbVR6FM%FZ'=bUCTU)'C&3@7\FI**gA+K@2nAiFUhO(\3_H3#V%3AEFSugQIVu^P1j=>6rI=K$tl6p49,CU/PUUAZB@fEM?qQ1#>$LX:i'BB%L.PAY5r"_Uj<#50Jm-bK\%o!DO9?=U@O2YW%KPRm-J6..:]VCHDCT`G!QAhD=H]DcAL(*oKP_U<Xo^)HXggcNd:gU:<DCYuV_oET%B4tHj!2H_7*5ttd2+J(CL5M>u'#[pZ1COlK'EA1c<6hQ_Pen\UfTqCT!JLS*BMag,_omS,@c1^rQ8:0BUP6R\5o3^Ub0jZW;!J<O%#ch,;MA]`i72F*O[4[rq3b+<>TbMO!@2uT[*<;GQfH.q1$TUrNY\;&,6<1Fm`j#P0mjq%ESUp@[$9<[h$KIT5@qeYuZ=#i3g/aJf%6EqH%0Wo2>E%WgV=VggcER!d/CB.JPLU3$WKaP20`)Bj-T]:oP\'gj(70PZ*<pF^5J-_UoO!O%V>*ia,73AGk\6>5s2%98i+ui]c%B2YfuB5q57@==sdZCIf1=OgtO_kIgELktA?$]>'2Zt^D/5)ZJ/!F'9U8gp8A+rA4t?#`G1p:8^rJEelkQdIkRj[b$6M7*K1-mQM?%b?PhuROoWN.,m8fYkYWa&?g%:JuTS1Ip2=]J]j!4cE1q(Gc[=IolV3o?]'kZen'7;EK(oORaD[&1`3&]),*EBOV^idGfD`j`_`c%%['QjnUN+@2dqB#I*sN:3=]?[kF=LsQ=$-fWXtgHj:2!)To<dpm!&Bc_H?`2op;)=>5f[@7#ujug#AB_JA"*H5Qr$I5#&mFuZm6'A%;S4%^NCd5A\:"tuN[2%<P9=mGdh..'n7kW1lm+[n5R-!FF.a2q&33c`mmpKQ!lMf2ef^D'>.7=j2lniJFhJ9u"+etY"^Wq`OWICO%j<XZ'.TJ2%GX2E3mOXQ$4m0=9dNl,=1flA+.2k=jkeRJM(pp:i'%jIc;*:/p'ib<p.Y.ti\#^us5,k9q;*]/h%KuinB[*bRZ"EIo%?tA30:n`UZRQuf^.`AS\N'SGb(h=-7LbLf`GQ`#jLp:B=l>hiXX'r9L$DCH")T-Q.LiKOMeSf%ceM8gHMugAD;.2faHVpJ.9-=m6%:pHisP7_dcNfRW^0QBf&Eem<:6BqVFHpBe#C+6879'?;H4huc1)N[GN%]>+Ld,ZnNl2W5$"QI"WC)6kL*kQ2)J3`A9=<B$5`mru[%)D&e*ST0Ip<'@/5JHC];dONb")S8JT$dIrpC"fBNSAML`,bqKO,cfnCo=TrI*!PC[F%&W5iKH7RY:@,blA!/*A)j"$ajZ-jRoIsk%DD2Bu)ScC6MGriH/>Xt%?M3uaOA739(j)VL<JhqhlN:X[Wggol0h#Wf`Ym%qiK@q`$C68%q_5Yul/5NLb.sHW[*aK?UD4\D'6.>7%)Ndc.e>NYS-slS\?nlH\`YDpt+T>hME[PQq(beL/`moVd5lI[))2ciKUH15&SF\5[GXAaHTU=lLkaH,P+98baf$Sn,<]BH._^&o-%X!&]##/M1!r^TuH8Ochf:roZ.@R@?Tb9;qX%T$G#i%eJ+]GtX9KE/+]6nQF)!+YVT5ZGZ.%7K><FT`D7G<H_@`<)^"B=,1FjoHfN%(.Ep<$5B>)mbjTS0fQ2hPS%jKVrC.m.UeEqc)YgdNY+)^.,A21-^iEaBP'F=IS<'1TPZJM+i7'NJS'1[G#S&]3^oi6rHLIHMl;mT%"O3%Wh0;QL3TKca/gpl&7al.C)@Aku<%W.-,9GHM5U.XR`Ji5S\!61CTJ-DIfY&]W953G7X9DPh(S*E^".q4<:7@n1>.>"K3ED'(%$#sh!);X0b:_[&NYOX8cUXd_=?\INaAC2>AlSr3l>%r,#$HY/+[o0V&%SWP-<d4ctKh7<V$B^k*7&Zi#'T\=+ghu$oc"U0X3='4l%2u@iWdq(M0ck[:[TJUAP0MOU)!OX+J*Xus=6UH$+0mn$O^YpD=EV#JRr(eWWlP5AYGV;22XB9Y_rAM_7C5<=>D";"m$-=YRI=.2X%2gFuS,>59S-%`Zg1)l5OAZ"V7r]P8'*E%Zcc1&RNbE0W8D.GoZPbNMg'\WXs'mNtgZ)WllLNSI1M.2+tJ99RU""'+<.1#(IJ"SFh%8H>+>X`\?t?M>89$cWI"i[eTtOnDMVf$TqcUgf'ZUeqq$;?fW&%&aN*E.VX(3_@M\d@++NJXKj=O+dpQ:=1MffDQF>;qEi1@ie==%[8.VH!L#(j^kY3h9)2Grg<J77!%,(QrsG:+H?4IU,$-&^X+`uJ5HKVVrbL#Qn0n^^C=c(kY1,bM$=)F'D)KJ>[<eZ$@:!Q_X8C/E%nI>H\r^"S2<^I0N77BHU>W-A/.+TYq\`tiQhG`^R9!t#;Y'4a$bG[1T7B=-Xc8bd*<P#BP.&jU=*$]KOrZfGE^Tkf=%l#,T4ol03%+6,5Lc6l&]MYS?dh^1h>dcSGE:$k0ClE+.XR3onX<\`8C/i]Oc.g.(<(GXV1[7e3Ee1=7g<)B"r:9iBr8$aGMi2$.4`/^(#9CG"d%!]b>U>(&Ab$n6MI?K8EJ'n8g9HtdKhiJ=028W$_VlLaB&H<[HLiA`^V6FYMtql"!,Y7@^p;K'W(c-h>7!kBF?HQ_<!rCfgK.[n>5%pP:tEiIe$5SKB5K(qCs#`NIuCSe\$:=>NjWkp'!J)@k<rE,5l%Y?dH;Q1Ot8BEc3:'=e=>g@*s@r4Ykr2[4g"0]0TGZViZn54S?d%&Z:Jp2kG7f]Y/=Vp:,V*gT.bO0^S*QEinrXr&nL:rbK)l`2e(@mS2KMM7Y]dpEo=b`81=1mN2*3h7WeJI1:BRb'Y"\0*iobmIGfM%Pa6biotmb3OamDcHXF]\Ff/Hc9##-++X1A'c.qNH1ar'Cs-irb@$F:VSrY<Y!ajoMCk>rtfBLf'Am3%@X4Yk=/6!c/Mj:PjYUee'%Wq%%-.L;5s42]7lC.IQd^G4K8@LU!__q1#nN(s\Fn]dE8?PPMS:lYIRPD9e$g)k6g';O$>b.YC=cH+7*=)=&'])IGVYdY;\bM7S!%\L@u<V:"eMYp;L8eEOBA@Tb1F`?5Q<dV'igLVO(qQ.)>NgA2@05;$t7)Q+um*Z]=bRAL&D1>_G?PR2rbs+k[jh^@,#B6(--4]6oC%T+R-K$EC*c;N6SfA.O+7c%LY"#NNOr&5^JBFQTKI7R8q(`^L^U.u$!TE._jK:t>+/J_jLL7+eb6KNri:I>758?WoWARh;>Y!>2SB%lb59Q0);sD=&PQ>Fj.?Gc&^P6s6q.3(Veo_d@EXeIU(B?n1aB63@Su"[9k1IaY.0-"_Fk*3#@'_!0\WpK3Elan]2:?m>_UoM%LZt%TP&f:2VoV'Ik+)9,Kob%>E\tU]W:iK:I`_dir&AU=K1u7-WmGKiH&5&TgoX.UX/`F:O8-J;B\Q+1<t]'2&GjdDRWs"4-G*-OD?T`%CL9W6I2cTaSsD1p_X-_=l:lq7&.dg5S@oAn[l3B=*\<jkS6;C"PHW!l?gbl"pW_A=2TEICc@,b-0^`t@Gc&JdXq@93rbD0UOAF9b%(59j^$DWEB&kBDeY@=geeI,8\.L5K,q\t"Z)S@3LN#38Nre;MTUsBW*'8H`aO8,fh#]aK6p8;iCOU4=db/W7j+NNQD\OP7UVc=PV%;F>2BO2]Zd;FV*-5S7p.IL5HkXSit'qj"Vf8r>M*NSHA=WfJlaNP3ODG1YY3b<06-^7*9hTJYe@9mh='Gt4I$quq!k$,AIZ/c^^F%%:_$kLb\]1Ec\:4c3I?bom2_k:\@MN?EsK6r8V9+=JiSY[KFdZ;La)3I9i8r+I#(kOa=,YM8[Hh_=K9$b8#%Bf4ZkP)-YS!g`Yc)%>l!E^G%)LBTdS@2[ka3%+.phHCd&]'l.quinIoAFC\?YR[O(;:&gLPYe@N%p!V"PWI(U"9?Bc2>$l\_/J_k%X.[tIBI#cS.T0<57%;<D":2>JMa6u:Emihp&kqc3*YM^Bg,@E-Oe.=[i)0]\UK[HPZl0[.%[Hb]N3K`T-.\-o``EuKf2(;R+s*/8j$-HBOAa'g=8@4'$'%F<l]+M6Cn=-@iNCqr9BfaG0IJa'm%Dq.e4&j>`+9XGk>B)#@T"%MM**N4[=22TK7I1&5Q>DfQi;aXd5;j"LMdB&!R*[lFpcNlb?9%!2J9Jq)YF!!j'P;r:NX&p_@]V$uf0`1(/SK(B30])dctcrn[W=WUm<CBk(oX3K#Q#Gn(TC+gN!"Nf#"kYtT$e6K@n6bLjPn_ps>+%adG[VDi)L6b7]dOq2%M/8@44A)fpk%CI>qV7/L!d9gWn^O_5>Qp<UmfM1IRIB+oPKO_8$.Ss_N[SqHFIIl"?!N;Q4iMSI.PhLo`:%fI$,AZOJY['=R_Wfd9IJj2>U"'RVP8*5aS?pi&Udhg,RmXS/8c5HB]lSqH-EIP]*tQ5[&9RfD!Nl_W168C^nM7NS[L9.`a%Acl9J%?u#5jpjLc+CcX.i#n/7h?g.obmriIRTj!pjRGrkVk?XKBP:t&"SLKjd;a,N%_XolVL$:SpUr)V>*I`eD?&&sL^Rbf'.?4c2"Yo%H%6[c'1paP1RDtWs9.EG0I@t%<?#VQ/B=oAkT5UP5>?RFkqO=V5i\Q5"8/\(tDmqL+'bJ12RaCmP^+b;lu07<BE^+i=bWqu8:-nuo0%a+_`nY[`Xu\bpdN%.Qd#[!Y\.,=6k],%A18I;MM\Eo$<ZP\36+HJDN`+R8)>WR,R1/)j*Akh"MI(hc[ZbQ4G0!oRTNfl_"([Z`q)%4#ts\R?R%!a`d5c48CPfomL0]R;=6H[Zd9ORqsHJ[Za;,9sgV<;!W[+ccHsnA.*[gKfn$TrbA.00=liW0_AHQFAoZFc%iL25>o0I%s!G^g?@-tb_Y7^]?//#1U:o7TDD5(*eS;94A`P0t8kj?Ol>-.a[KNkXlF![#p]arueja.$'?=B[WCu?bW2kI4qucE\:4dAIT\CaU%2@6quRjiBqC(be2hoOR5n_:5ZGuNLiop<*42:o[UPh&.@eR%>0?T#AHFk>AGAR023bnjgr9L<cLGK+mei2BV156;#L9J&G7A0d!D%'E;-LoX[4^nsML3X8co(SnnkJ_ad80IFa7BXQ#lmW>bI</U?p]1-7(e%&1*L3,[.$n.TnU:b6\f[6QSYJ>LZ_'9!tS5Q2T)fd7l@%0+rlbpgH8t;oV8]:?"0q\BQ::1Psj[i\m"1bp70_SoG],8u'=Ae0#52hb<#fnp!4#PISjkELY9NB7Fc2qB$26'i^7[$V$i(oDKQa%/-U7u^O?fqq"-q9P<1V<T6H%p3?hs^LB]a_@t'1;q.1\44#B,uJHe9W3;1Md@idQ(E.blO-J&+'asO]@4=0Zfld!WN;ra`:-hgDb%$/IV'T/Q-61T7>L.]RQ1n'l<`*uD=(GWmL!:'DNN-[#F]n!s6`/nQTGMA>s]^\u4anWd(;gBGU6&t!4jO.?eUr30ep&,Bq!5G,0g%a:[si$YDg+)fm>DGD;HbeW/-J/CBb5JOJ0mA,fJdl+c0W$pL`Ld1[@`=o$qCM,.B_YO%_*//9=6P-:&KfdYCUe>e"GXICHTl$'6B%i7OK%qnk.GdW&`TaGm.EYb?YV6>kD(L0=CL"uZDEX/>\a:h)HuAW6SqYNFA_d@`u"]*("4&X`bZ^4?+Xe_#?aeG**nk]*#U8Pin0%e/6f1`]rUSFi=?9aM+EZ<c*cVY#moNCZMD$Q,\JuXS)55B,tL#pW\r@Ng+HTmldXQ-9%K4XZd`@o%uO.o[0$/Mi7e\.37.n\XL4O%.Ic/s!4h4R-=]/."1nXWILec=>O.T'!ncYN'WPH?eH8L5V9N)i$BrYn-C5a4a(7b?N;0fOY"W_taIe"*2nlbXgt8X8jT`8s^m.,J%Y"*@@:2Xq>_=-u5D44_`6p=809:J*kE(#.td9d1u'mo=GY7CL0Q/[U`]2u^?qHEqApPZt8KB.e^6ESP\Jo>m_/-&FPj89`S53%';%N#[o#fs1)#TJ5_qB:iB@^@sNSf5.(-UJ2*\S*s5dTCr"p!HGIh-R&!j#`2@4]nsAqjkRNldUD/)9cUlrF=.RU`8R1FI/gRk8*h.A%7u-R1SkC<Be)>(gI)P5C4MHZm2t?Yi*oForRs9><f&M[<6]Wl#:1(p!MpgM%k6lm``9S?aYO>Y\.kbb%>i1$$Q]Kd?pptZ;I'`Pl%![YXCH1&u=`f%*CIjWclH6G&SnR>#s6b<T_>DTK)r>fAu`i=0cmZ]*7f1L1jr3dYIMWC(*Y''cG"c*J/\ps#+0lFDma.IMbo%a&N%F&jDo^)Afhd6dat]_"?3U;L6b1[]hA@'X1aD2&P7at`LY`7r%:3./]s!!>D<<@Eb+bQCM-%psRr?NVS6f@?58UBKSpKV?*4`s9eE%4[8&Ee;W2$cd@rgJbF7/T4^f5]CsrYYq-&_UXhmJLNa#/K"f>gk)(Z33e("2NJk+#M6A"alL7<:n@>O;`sYb1=N60sX#52([N+u:%+-%%99n2WoX&$%+Z8J_<Nmt2tcT!c^A&*]T8Cd[rdG!'@L^e/QoJc]$'B;B`bl-.VS'h:=)@\(FmDSYoLJ>MaSs5i!9+uYdm-LR*%\MX.;'NEcT"mr/T\Jt#icUSM=JL4!3&i(P:>)8I?S'S7LBd-C(O&$K87`=J)(c*B&=<g-b`SNdGL_9OIDa$&'LsVcELtJkQ?Q2mn%[h$39!Y$(3*dd#E/IrBDCY^eOjqlR9kg&^_e75XCaX-VIlV;Ig`a!_N0<L*!r']@$OInH!qD5(MRAeDLTK9h_*.%0Jj#GaZIpH`8%J[tQ&"8G1jiO`Dbo^+<(rJ'dHJ);()MLf\jSm8QX\R]CWe'ej/'_1i/?U:pF@7pLEkr6;/'P71]q,5_BIfTj2ma?P#RWeVT9RUJB%Y:d;F2$Wt.'&t(DW8q/#:&dP#gD@Q_,>.<SN;FV;d;O*Ja+jel4rC3HIjWA3b?^2!4V.&l^>R"\4!h+63ptDsm5L];.Xo;NcX1rn%jeEi!nopqFU8^;sZMR7q7%E*.eTg>:)Va.IDVnEiG.uNKLChS;b]?i:OjEQ!#\Yu%ib]3bqc0kVV5;H"?,b?0Q7ot62#2<q/=$Q?%iI>@.m7u6c-a#9%?P-r8cT5NeSK3sj?YkYF:6j`PM=Fa;h_Q</?jaf]LI)3M5ehnNX\@?6f[Z11LcR?ejBS]k++lQk(Qo38==7`=%K+-\%3Y1l\;^AbH;pW!d7=PLK'ua%lo826b!tb7-S>]>UQ<n<#o7t[a$cCne:PD#mP$AML>Y(,6bcq"l0gp^onF,L`W#%4Le(jkP%57ZV<T2>/Ab_;+qpQ&:`JneVFU'quNj"qdRfbbamfPi(R0W9ZV99/Y-W)9A"F"/u'RWp6Yn;iG5n1PZ7J\2jXTjiThT[P;(j&hW!%$BF`[LJ^l&MP<gFbX9a7&0*$2)/+M^hH:QtGS-YM$6gE1.31ST[f/F56g]Q6dntn)G/nTMQ_DJVaIKD%ZppW'E+eD79FR+[Von+-%j$N2!&am^rYf\cAntm&Z_[DC]RqjG:7hj,4W#A)/,*D%PFH($4F1m$e:#.iGRQ>>H"Dp34OD:L&^tFF'<-U8PbB9bn:U=[Vl_Sb\%f0g\1DQd)<A:ET"Y0&V#V$dhRSSfBj=]@g0&?!8e\s0;P26,Ss$//):@S@A!K?19mo&Zt0K:f(:*Nd[TWZme*E4Xlk]S;KdVYD@C%_l)l/#[$P6@HCugXOh5@MY4.'/-;5?__`*GF^sB/OP?gN>p/EH'9IVOKDu_k/&\Al'YskPOU>#5^I\nE9Qel<0aR";cg"t!VP"1d%YTPl6,.ZXCLe_=CaJ-E\o'l[93;WY'"+S[TB#"oU`sgOUFtbfVLHg\FI_$H3Ca,EQJMF<^[K"TE=2XN[eqU;u'fDNtog0r!\?$(R%2Dg.,h9Z5P=AZ`I\-qNNN)"'ZYUTTii]f[`W.JOP"@e9n5*-\t,jjnIp*P+1MZ*\=6KV:L28`%?]P>T^;6R!"Y]4bbldS2,+FsD%%$=0q7('$[)m*s2?k(pt:m2>hqIbIgAY#t(85[Eea87`YA6Nqm;Wi6[<@hl35:/V1N<qMJ__hCJ:"VX_W]RqqhI2?3Q'AM@55gsVm%3+C)/'l5[HZdPms8J(QFJd;oq@<p6jf9_gE.JHJMSlV)fTMZL0dJ@ZYf*)3ge3Yrjd6]W0YRAE4cq`2hAn=ATY@:lDL4nb-GSogR%&IGT%rfbJf1^<kDIH]63QO<LZMMYm7?s2Kcp0$`Br#C\"KB*"2-?%Yd<(r9f>Af-P2PAmR>X0$hH82\U!gZ]B#,j,Qbd1].[9BYS%r<]:=36Ie8fpOTM-I*dfa!>pGM*R(ig4M_A%7@6m\_]4L=\A?6Sf0f4-,Zc"P#r6qQe8HoifmJA&_h6&,g+'@Bi>CHjnA^R:s*=X%`#<M``PAi\/"u.KE'2Fqn<_Ymq?u;49d\abWS"7q+&-4T:i!H'\lcC^N+P2_RM1_$PHl<MQF^cafU)j.f.^camGTk+/qJ)$#B<cO%dAl$9E,YGb+48<fF@,]Lcro%TbJH-Nq&1!B<Lun21rI*^*(0<a&q5\d8LD9.(X>o+`RC#UQq9'lN&'WVd+hf`@E0c[ag0R[9#_a7%5tj[D69NO1:hW.6Jt`r(-td7b$lZQ?r.-(XfK?FMip@sLXuT>FOYXru&X`T2#sd3R"%iakN`6.eEk0e`Rbb't'iE%>q\r$e<c-4p%,?uCF]4gN;-+6\AG5.n>X+WRBs/@^\g/JSBUEkcb8m&i^g_*$f_Caj?6/tG<D@4IP""eW)U5c2(OeJ'T/g48sU"a6D._dk&nseG#%_XQVm9;uYr8IO(akg[GR](B`oMD?u1ck&9W3fZg0V^6P([D[AcN<COaP#Y\nQl==;_[NGh>rd9UG!LlJA;`5`PB8)k\-sZ@pe=TX%V(G85_ReZF.lI-IS;k/4Us2_alPbEKXf;ms=$n*FV94p"m9YW1(eOso!@=7N9;5n;Wme!8Zh2R_,*AP88X`PToh5QBJE$(87B\>O%:YW:D>1;1k[ao0C`BVDC.Z?JCUpL^qCcJ&cHOY3k.&0"">pq!jNfGEL![":5SR4q\U3rYVN!FBX2B$#Bpa`,!Kh`a8J>.m)d^Fk?%hpI1\MBuc.lhX4QCLH_4m<LV3lEd>/K8eI\-$BW-(,rMR=^1/^m9`c$./ha,k:3mB=K9ne>n&&l`&[(d/n,/c\(:s/M9VBYp`bF<%jHe)f`\(^"KXu'0=dQs3"u-2S0"YSIS9<O%K@Ms5lob:\gRWJRh61/icf"AScRtVLP)eY-01qe4giV;61_Z_r\j>n6gD#]8X#Zo.%3@J41)V0-i!H,,$J@?59pW(TbHUQ=I,UL+sKgG'fi*Siu1*d7bG?-qrdEB3u=)Rpf<rYciD!`#nEi:J`;Z;%/E31?/[gj;-^ga+_%nZVOQ_)DJg,DYh1\?o354iZ4NPM)U-YEcl6/68l^`P-O`oMm)[W<EeuX80:]QjB\K[0h?`a;653i[:Lsq'BqBPiOI\;rh+sY+Ipj%rG=_7aXHjsIHJfCarI8P:IbS6jtQl?idC7k6\<XVZ-`AMi$l]AdqIe(dhP*GVp?DN6gBODY_.ZNLG7dKB!h%Ma`9.:[KesoE4(^$%Cc/&4\>=mDjBkfsKu0o3mfqm"XVEJ3a>WrLgm28sgU)L)l0OeJ72q!hUVEUF=)Ndd@U6ngR@ts!Nhp1da!JVpQKDZkB+K*T8SrQf%2i<pg[VM/k$`&-p!.pGtlLiq^>oc3_!p8>@n$V*#:8'1]ouLAp:/Sa]8gqLP9?Pjt\U>b^CRnP"5-D(56457e$%\iR+]=P/Ne!9t%5X9$7lHQR.KEd>MLg`<;QOr/mjp<IVa(YlS-lnJ9:9N&_6q6p?($WJb<0j#=!GSV/h+(Ysmdmi0a/95M;sk#MOe@>$U(Ve?T0p*e%FX/!>?ar=d.^`S-Hm*XnH;E?KZNlYaJtmTs!8nE(2f+@0)k48aW.$:??M+a2]TH[g9khFAQ56C3DQDC^Bk*.D.oU,=ag:hf4%7Mb%28[<?1`)ork$to>WVq4J?J"\[K'(E/Hr[;'\1?W')+H,8pWOtkh+t7'q1;T''>)W?O^&[fLk6XG]\B889XE7*c^JX<58TIRML&8d%RC>-q"i>s/6$1-Tf/mi+ANar!.?;mR,]H=VQrc002iq6h8@#=TCM0appU^$$;[R`Fs&?@--G_(B#-hr[#eB1\%;H+iQg"o,71.1O%D$!`@Y#9%SEAt0GG0PqV.FigFl]))73sP)O@5#up/2l-oFa+0%I;R?6:_>Wt^m%eQM^O3(m/\qYhDB;.LaApA)jo;R[oYDHU3j!H%%$"_X@jfF3`YkAq[tgJ'RoYnps!F%f-PLAoEE*ZSpVA=9164?]c>%U`c!&hr/jdcoGF>8.C-hL<+oVfuh"jb.3o7et@^B8HMtNO;%17YTO-YQ*UM;e&tLicYl8GXX_eR<7,mFGjQ1G>P)YMLuH-.#`l8<$@7g/$N!IU;6iJuaXD[e`oT`O*nL[b,u4D$8UoQK<GKA<T&U%C'1@#N[3Wf#)d,(YM"3%[7[+@hn6!uHXEl+m1)Zo4d7p7+Q3Q#_qTtKW]R?H1s^_Xg2C$RYb?T+,8X0*G?,!Ag0>5rA"hCK'`[H`%i_lSs/qrs`"U:ksnY30*B\,9KZ_[&nQ9iel7Wj/4bg)8l0r)</[#@ps)=*&@>`:+i'nr*&R8*r8QuHftP?,0p+fQ/`Ss6N[E?u=%%77nqLRUcsbiD.%bA=V(^b(asVXu3KUWocebn@92gQ5_R'DjJ#=?Hd)_=`4._Z`5N[72VVlRg9CgYsL!h/X:jF+;cTeLP<V<l.Ns`%pm8laNkR.-C9?p?X\bo==8Dt/jshL^3\b1NDimHGiVI#i.2sd-Oi;a61eHTh\;NGF@]rr.W?U:([Rq*<`=1eA<m1i<3)'c[kk&%l%$9Q#Mks)`?4s6dS[jjP5$69X#O"6H+pN_Au83;\EG&aL;!]AgLj<cqKWYi4:K2QJ'`\hqtS8,dFSK'SdRVdCG?#nUJ=oq0RX/`"t%.IRuTPs@f@l^>CXHdu10PcWpTY>-<>,'H+"!U[Jn=GLO[#$tbNf@?j,;gK%8K4?O!8i7m:<!6J2DO=*m5cW']XSS)CE+,qJWOLS]%fc2\fWFgr)hN?SHNON"WCqk,RC,OR#>[rB>?&^!6lINdl[99>SPtT1l[1.b]G1RuUr9@I?d6B^k/j<NB'&-a9&(PHb:+Q3@74)7K%ln6&EgKkN<5X_^fA)aWs=/7=O'MM_H4rOR5!^!]GEYHMu-p#MtGHM&:BZK!nl<*\8j(+J1Po)8(l=):;Mm2'=H`sAO[oW5;k,;%Q%>]+jBUf+*j05K_dSOK#G9rq"AfR<)!qVg(UnYZK=H.?1Wa0E,'j.P6G_MW)B)',BS'5mL(Fq#Ej+20/TgG.M<"E1:;k$;';QS#c6%_3h0u+n,cM7)K"EoD96:W`,p?)kmR]l;^QuT9E!Ef.3g>HsQe';Q'6:oV3[6825LlhJ4:-9!>NLCu\jh2d&$0;$7D;-4,p%WZ[KT%iR4?;[LJ\TiJ'(F9Ru9Fr9,Msq^^28+CAX$B"PY$'++-M-4N<i]rUG``NQ#0>ETud<n0mO\DSpRX^lJc8uP?N3LoI[;k[(h+/75d%X4:FVML3sRRbG/UNrUrb7>tA.-Bt;<@MGftluTtu#,Kc#*"l2]PaBQ?fBX&m6;Mu_JKb9a`\W2%@:#H,ermSTj8<,3pGu2Q0&n(H%A(2m&2)N:#1tcsrG.QC9rr$Y_Qlp;5/=k>jPNldY].3']US-fA/UL8c+CV`2<fk$$Mp7-j)<J:)Ubk,!;%OR&DM3'9m#A)0.?U0o%>q)oRqsk+qhXB(^4_uUjmI1[Fd`(-3,<a64T8W)?"6H+ZRm`4!&#.V#@/m3<8\"8g^5J^K@TP%np)9d)=K?Y%p_Z^CC7^\Oh3t(]%q?(KX_ZMt_/,sK:B42<dg.jC:kP^jC(CQ3s7'Gn>o(%au!?/X2M#\!ObDq69X6=%TRQGN+KTL;uL+>jt2d'kO<'WTMM;WuHpHBYW%!7f$45J@eH?O:@c]qu[lNabl'8(hk(\)dg5ibuC+<n+Ksn@4Yde(DrB6C>dVK+6qZA4q/@ag'WcbHK8dE`rgd\ieD8NF;/%5'fY5%W9%Te^a1Rhh';HNeFjC,&0D>=Le-UJOsZT7n!`/K"6ULZ1O!][b<@]F;C,J(p,Ii_>U5TJ@to!o]3H9/HhJ1scBJ[_9&7W76.@C)%K&LE\CI^1B,Xb-RRb]bGcL,PV)%.?eL.FHGqpJd[<8gY1ALj6tG1U>[?3tVAh!A@?<Tl(Ee_*45D9!t7?(-nH#96FFlrS_A[;*s%%=,#_&L7^5C?%*iZ;WiDA=U&BY7Og'&%9(nol+7YK=-.6,R*]gH<=5dU6Q"qoA[ls$^L*gL\0Lu>";@85Zf-X"%uVH-XBZ;<_"F5f%=;YiU";6/eJc1^XiDps;JOkq8PlWZ*=onALmUN5!3a)hWB6r#R)"ljjN'NW(E"290M;c&@#N_ic@R(#agi[r)=#@SgAemlG$nt:l%9b<fP."p]^d=&,1mPWnK*>:/:,Hfh)[<u4$D5L#t^IZ;+Z6W=bDdA7@;<WTd%NZ#B+HF+0c^)/RA`5LMIHQq^oRNalf7Ugj5WMMD%eVWmQ#mM1YAH^ecTO2J\K\%c4+mg0B[_!F\<V)lJYGDjm:e!JJKEd]RUmQBSV_D4BCajYj29B[B">\6gg<FVmN;Toff4oKVC1[JO%%R&<@m*q!^)li==\u*$0WBt3H58hd>Llp(TDYnPDIX0t"F+.E-=ZKmQ:8@'Ep28o5mA2gcOIo]ZR*X:#=D*r7gro4DCHIlp>K>Om%g<mh9nP6\t:?6K?EABk%g^HVoZ9PZK/(Eq2qGV3EB4Idgg$'J3X.dV[qU&8HX)u]_^[.L5m;-`>+]I.N.VE7rq3SguN[hNb?Qtu#%X<m:X]@ig;C$mUbP%r'.S^`+^qmsGZch-d2DY?-iZT`jZMI`d;6-0_kCdP'IY0QJX;T2>rb.U_p]sYnONOSiGc<;UH=O+';HMN9N%8i7=!`6/+18]b!TY7p0s:Ane,RXXX9?5%OiKcE>>Z=WmrI:m&:r`XjT6geKV?Ck^&D=0R!?eM&D8!?/M;haF/;]3K4=QtM`_U!qt%EipBH?c]m#cg)OL#WoMc5$@]d]T\bub\*a.dalsbbj0Sc/A@h8C<O0QdAt\O9s';0G&?rn>4(RIP-.<`kG.G+LL08E0_^UI^UUV!%nB-J0r;+t(:9%HgD_,fJYHK8k&"Bsp@^T-G;sj->^&5<.lO_7mK?b3n/MSn)Y$%d1<m.S%0Yd8Mk!F/Y9%O_h%0_C=UW?2BIq.V%%[j&aP0JE=tr6/1c,<mbu>ZL4DR*s2'#.rEE!('ofdL;S-HiBHuD^%5ZV;E'aW4Fgh.Rt3O3-1Tq'fY:G;p0B%e-h=$4CKYJ8gm#k%VY<+Kqsmd:6iCl^3d7N%c`H2V.);3SAfm?,%CNjVQ!7\&gFo$GSEnFZoubUE-TmUhJ-"M@3j//XQ-op6!$7+#cjQ<ZW05*XZM7B[%qi")U.WLs<n+`O:<&+8k3EocPI*[Z/r+qfT?(Q!$AY6G0`Rf,hFZ*Gf:)+W^Aj;Q*]UaU3Q+PhrO6rN6,%];.QKckf!A%B7[J.$7%]9T_Q6EYq)$"1`kjfOsDCLr53jA7,r9J9bL\XS6L::pINafQRjDrV^-`bTE4-?!U03@tV7G#DKU2q)'-P;9BK<%,&d]\-N1BBsZ.%3f'uUO'Sc_^tI^?o$2Qd4.RiBFF3t^[*>D'mb5V:[&6`'&`hSkXHp0@WHTLVq1ZB1@cirj\BC/9NMW`+DQcmbg#fk0&;;)b0ogEU%cNc:5D&^kEH,Q\;Z0_J9KW+CS182h,HfHf&qNO1hB;u2.MEWRknsN,1((3on3S7'Xq9<[W2W$[O]M%].B/XU:#Xr,8dV3n!/L!J^%k8Qt/YZ,c4>4*K7]j;S*>NtRaVFuNF][!)#.'gSEOfOmRVoBrq)8/7E(2*@8%'8$V[CHK\o#2eV?H:6Y#BpDVV_8Q'a&r*T3Ek/(%5$&Z%_N0?9C2J#8Y5kNHn+!C:Z2CnK<SSD^\`EQ\.'g*OjW8MaZuR\f$'V"Af5>!AHU=n5p-,BsJ/P.8.Y;s6If9Vkj5taSU>B'/%f/jfC5lAlJM2Tu^=R,CacjW?:,$b$E]MhMJSS!o=MmPoa/Bqb,WVIp"%_0UCT,4D30cD0URhDr)]O^o>c9D+(B$iH4ek;Z(GNIUP%Z+LBB4MM*?^6r9`g>lE72-!c3BkD+fo*Rg$$<8Ne%hJE/q2JX,&V!6Z]IYq*lG_eS8@j78`R%lG)uQ*pDV(2aSZC1Rib\)YJhB2l%VV&GYfc7=Xqimdu1IjOj[k1_AoHklLf!ah.L!6u3[M=[%gF+q!)>Z.KKOP-E`..?3,N]toh8HGg%Pjt6Xaj#\7.Z7[1jd&$hmIL'%ap,pt<#l]aorc`AdYRupklp`m"gOg5IS4UaNiSi#SDbXM0`Wg+-`%4TTrB/n#)0!S6tP[$R*c9G@4)X*Z;[[r:R,Ap@_kZ1gh%RT%`Fs',Uf8h=_'r?"^9!sm,Ud&HlFh#$E%r\XbB%ET-c.bNTnmP0PW">"#&K5&VN[8bRi![9:CKkaH.Nm#-t8aj/Z0oX3@2h0nS^Hh%8uK\$ar5>+(^/"`<Bej917!fGbpp65&o1F^'Q]:(N_KUg<;G%#W&@B[7<B/[g<e>`Z=X9FD&l?jBT'XZ3`Y@^i&fDFZ-;L!Z"e8i%7#@-1X/tV34O]">Z:G^8nsGFS/1IPmA+3_VR,fsuLlOO_/LLRT;:AZ(fJ:AYU/5Ynmf8F=JksgQVt`3)r&U\]r[LqP!WJ9_oq%7[%VCnl%LL=.([VQ9q<P1A/k'(M8/JQltlokMGiX<E@2X-c&2Y,2MimQ+5FZ-Xt]=Q\E<*==oA58Mn!kXe0Xp6Hp3<kB:!\/HJjI4Ht%3%Ti!IND1t`Ht[).^=GHPY\Q&ZNo+nYTgH5*J@67.3DBC>]cgbAIl9-3HHk<B.7uN/6o%Zh>Kf\q.OoeqR)pP&L&gOWOQ%eS1g^k%rVPT$l84\g6T0m<>r=0d!=olI@9-&r`^XFNI!LiH4<.U:&)'Z@S,fAEH]S''_s;BJPLYe$7c&;MVc$_VrJpY0W9oA-mQ8A"I0X]:%!Eg5-msop7&sn[-@CCL=.BM+Gm_N_b]k8%+Rq8Jc]q$<J=""b;4%%!p7AqXVp.ag/TDa'6S>lJJ=4aL4a:$Y09/P"+lUN.=;3B8a%U5")lR^%SCUB(^&Z3oq[Go$=@*Y6oG^-idHPn)*mXWLrLS^(kSQZ"[\[B7\2FfqffZM5V^Yj>kF_\!)5AtFX]4\U=gPat+VK-OsP%X,GF`&3$LrDG+-q"p:C_e\SRGm!l)/D]5SD-66[uTuqETa7GUYh7ZN^_&^iV'XPt'gVKIW/O%gW'P39cZu1A`B<.BB]-+$C=_=q%%;`G>8W^m@#MVrg7R!Wo7X$lsOEG6blC\E32&YY=dB7FE&G4e%e-m'J*cd-b7QeTN:lJVDS,H:9u_Gre3=OB;LMd;pL&oYJ3)0L%'%C)K4@4m'Q8]tq?l?6?&qQFD%0T='sW(kW]b*N%_SQbg$nWu=+4L*A3Fkr33qb4qV7!iWM!UJ;sYEe:6<B1+hsj)aF2e3,=JdYXB7%>I!e]m47^4l_'Wt=[0Qi#5@Y1apS#&<S4GOKR)6e1HUq%!hKKV".KZ]7RBbNMEcV2gOAP^n0AD)+B5&$-P8TX41XMi?.rGrS<'(i%A5'X"]jC)srCdqZ`EVP6X\Rt"G$#U+?<!9:p&IQ1,1Q4)eSW:PHHi2(]k1Z*grl-2MVe8(0mm^g>N2H10DCn>K"1OY<cWZZXM1:P%`p];VXkUmmIY\,5^'X.gM0m]Ac``_-0J?Z.5qa1hW'kj\:4BqA.]UQckF3>H1^K!mg3T*$g!uSb*K?Z^dd!n*oE3LIUCM0#];\EL%lchCeo1Z`8\cl9]@X+D^l-g]##Gf)tjHc/-W_$\<lOGKmIWjj:\[-JX?<aW$Q!SXbDXqC9MSrPCGG,_.@#_k)Em*o[fI#FVeta(s%:[aTXrpJ@D;X<r\RhP_D&N>?bR-\8OGhV@FEE,4QJth"kbro"Ma)&/NXbJ%1(&>A+MXRA/F60b)U<Qq@,EjdC2\;q)FJ?*fEg8*q%m3";$UA]`%=P.=XKjO'2@eF`Cp6;YqN*e6S]U6n^73-6J_MU?W!X%QC1B5#d\n^\ufm7SP,em%?]Pj,_irbaN?7K)m]u9-JWti#N%VAS[)ip;"K^E<oB[SM#0BV."EkkZ#'q';E32lJ4-Qa]&*C[Lb;B>#V<rMZ^gd(DWg7.OShEik"qXApaHp\lXdd4?U!c0$kqs->-H%764^Mc6OiNjh8+/G'[K8'5!C]IB*YB:Mc>8mX])Xa/P!Vc?oTFR-A-rS&_(j[<tC'\+uNLbXpr3>IP)f<PKe;C?>?ZIehtSc!<-]%^57?.R0)J9S`^e![Z?*TLO</\K%3GO_*U6Ef+2Lmea1K',F;MJ`A1g2eWpV?f]ki>Wfi;Vh>P@QCucJ9mYtIcor_l6]TnU*MfZ4Y%r:A-;!Us<Ba?BLgQ>m>=T:W[N>Ud@n&;mP00=1DP@W?;.Z<4R0Fg+ANPY,3s7u@l/rd8Zf+F>p?9^33``1?iGOCQt/@U+s3.\da8%;Rp6d+^DYcglHOZOA&TU<KJC9OfPi+D6=Rqo*i:9immbWcGioN)K]Q(8^08GOOA(=h1IP.4+4ZKq7t5g@B,cA(+9Qq#LprOrX$(V%3SDW#r/Q`Ci;ngY!kNAp#$cgC_#U`0-`9`1Mmm?TeDVub0m1'QGZ)Xa)T%AWcN6SE!)iggmDY1%M@c)']Z*[9Wpa7B!dFH.rgBkq%#PDnIW>6)+I^D')WHrV(LI5qE"_JinjfP(a<ZeW&LE!:OWQ(GEUA5d7?-'4G/uH#_]j:]\?X2\Oo;SiK+)/^#qdM_:-\(DoMa3cP%$RAATfu*dQ$qO#A")Y.3c>N58<;.9m]NNBQ/ZmCX_Hrrp!X"t1rW"k3:7Au(9+-Z8F."F'T!Z23SVVF_9dRZ&IUU!R&mcYTB(FW]%j$GrXi]t"Y9.rACqMm@V;)O!a2oEGJH[)MX@4%1iIsX6rdFb1'0<!=S/d`@Y5c#ITcXSbL.;g;WR9Sm>*g%S=mDP_[.sH4BJ8q?n%Y.YO0d`c1.kQld35H#]kq(O,0Sh?Eo-SJ66b?jf84;Y^QI)!_6!,/O&XB=,'fT#5]-=OU#oh:X_8,5ZBrLI)-MVpWiA1-t1a4],0%l\9-(DXf5tIVEeU#;_0oJ1Im'a.&(SP#/kj\)@%69/EI-&B$Jj?XK3Z*;I6*AldZg8i=A&\1<po)6_T^LDf`XSgot.<Q/0Qq!",e%@ljG7A1?p4[GEdD2"V1DjdP!:'C4hZB;n5dP3H$rnTK)j;<rbd8iL.2F[#ic3$Pk:!2jTO(I57cb0c1>FDEd';NOu'\WXTAor2#_%]7.t\5PD#(NTE0aK%AM?anjXR\Ug0ORJ-#b^eB.-LFH+LeRt8f]qop,\bAlVNJtj>ch@92I]h:cdTeF7Sdp#!-D)8ZBe1MqK#Vj(%oZs.B45'STGrL)SY`MB0T_lmG;5u6,Y\B?fcL"DA4Wj=3)XfUkO.7b'eVn@k<7&3\8Y%LtK8(p9BX9Z^k]Nm'qqV]#5H))BJPn,'%SNN0`q&`C+"0F:Yhb:d@0;VAlD%cl)cP8K/W4.+M%Q=dKl<J+ZmiHX2o?[*^Whl'9e&i'B7V=0Tp9\'iqa&F!H!qMY//SM[R,[8k%AV%QZ>YQMg4'crE!"?GenRe]*GVbmR4Eu8"8fLRT`e7cirs&cY]%R5UnZ^0>PtpL5>GJV.3*1HRq<.0U1qth"'s3sF4D#9r_J"tG%)5u\gk\Ch->M7iG9,8UiV./^Nq\#O%fqare\29VMCM?44WDettEtO;f/]c0%rPj1JFgfb&47;`OCM8gmheD$n>L&%CfqmD;3O-E_%Utf6u5Gs8aEKpTEHm+PmPF+s3A()hAZAZ[;VV'R-UA/5:24s94n@%C<=<-q[Cqc;u#5q\09Y[]J6ra?.#4Vj">bP6#(^Du6BrD(r%T2*ECo;a"S.Vm]RPI+<((M?\sX0fK4?-#N#poX;02m^\dBUk[O36J?cVSV0QR>)<D`P_i6qbRBPD7qSCA4nl0"`W5IhX9cPlN``<%3r?E`?Cr2p::LT34IVo$gZNq<@/=\lLd$2^iur-a;<E8"Mq6>]IsG't"\ua9a[bOun=.`W<jDs/<Q^8O;Ro6f=7=ZR<XJTC;.@cS%>H\HN/3e@Qd`bbRa(65OEf=A+U->,9dGa)&0@kGA*Sr@pNS-fl!9S@ahXjb;FH8!\m)m.jrd!U?c%_,dVjNZbC>0*Y8*8nj5EC!$%PEmBX!*];<8q-61U=1-\fuMh6N-Vnd&--JNimk;b^Vu0r#Q+6T5JJ/Zmko3r#TTZ+fi[rUGp[Fs\_`n%PtNVBFGf"FfiC`bdrT3^%T96gq@>T(j-?dt4U:jM\PB[;8ZN;3AC/dmK.4K0D:4^87Ut0b@+"u*"k'iH<5/'-7i9qKI40'8RO;DOEi4mtM+D`c$F8<B&UR#m>%.5j%2>k._Xm=d2_Dss(K<&D;bg8p+:_TR'@`k$rnUe9+(g=6'`nB:B#q)qBq7[mMna/:[c2#%35Be]979=lTm)PPjagX7n4(j(s=%p_4f<m=_h@H<=D6>!`'4*V\jT>,s9PXEPj7&qY9FYRadNnM)LtC0O>IC0*CYQeh:>qURL"$bKA`Q%/8QoPA+!<3^Jh&#J=0b-:4K%n<c^^*.T-h17_V?Xkr<^b/P09>3b$po.>pX!]/pHY4ogjSqXL7#_kSm%u$^93UL#VT=?_E3$)7.hMV>(JF?iKV,iqDUS*@Q/Gb@b%2U9oVrPQ2F)ud(eDATp!E1;%.p1>p87::l)/c@3+]Qq?.:+`buRo@_bGqdT1[(^BN/Y:`(;_,%/q"1="Rp,6^'rG#lDmE;=lBn8G%2fBLOpTPnZcaaP73JP@]hdDlOfOE<$2@1:tEJG&;iS?9L/%,+&J_S[lDf(e</$5"fSO9*WQ/(-(Nof@amOHh;\>-?Rq:fA-1UUA_%QVrYe[<a<.U*(UH*LpDGW4a;C<T_?OhC6,ns*A5t#e+i*IS3&7LD6Ufp2*ITS,I%?5\KA%50M/g9kS<C@]Q'\0!d^IpB6!6eu?gI%D-!Fp;5`5Vmp*7BlH)D.Pq+7.^kYK=YfY_B%D-\qYQ,-s-5t%+607fMAn`X4*[Q0V>J!gT#2*snS:"1I\omiP'RP4V/K!;I3o0]G%IpZqfNh&B(G@tfam`j6SX*7%2a9aQ3h3beBbZrtq3Hoe`3PVtf\Nb&uFEtRDD7F[+#P3=WG+1R:`g+0LU%6^]Z"']\q$K?U\6(k5%lBKF-YHp]r0JDR+q3f<,+dI*6oEVccF*Hm(l#(TUI_QT/EU"8#jl*,YX50AlceE&s?16>p\5QLmV4;[/Dqg>s_$TCKZ%#MYpY=nN%Af3YkjA;Xj.6VP/>s"%t:T(gBSVlg4\]C%7VkFC'c'S7g4O<#)m@ADuO/uQ`H^oJ5.m%sd0tkr%:X$4dVqBBRGMDQaTHf@&g\6b(%SM"i^?asOeccj&rmLi9c+pl0ChGa6fNAF'+:ZiZ`KKI;I4*=0Wjk>9$VfTnVdOsrE'^<N#]9T>No9h]'=Zs<m,&aM`"m@ejZ?=lh%hgO(sHQ-6E3XnMs\+04%_M*SWmboa9l1AkO3nbBPeEKjQVL*7M#qip93H[q726%;W'M1qj\%'oJEUKgef'*ij>!FSuGBu5uG8Q7[%D-Npb$gtHBbU/j!`LS(;Eeg/XVtV02gb14iFP?$rNcsk)Tnjqr=&cZkg1aDF=abGYFJ$-jRbtDn$G@kD*XVF>$WAG-Nh'KHYNB(O%]hU/\ca\+$U[D/@61R+tHEo4&S160D3-P.#RQbo^oPL]oIphRVoqHR*YY@8DV)[X5:R@t`9-E(348m"P/@]jaIJ^CYMD_[AXrC;<%m<8Kq%<]8;a#'^<cLQ'tUC<]r^"[*rO)A:'S\>D'\5QDrj)3bH'9+p<'X[hUSqXt<B?P(22hsG"l0$RUC?2aFHi]f+FR5CW:0J?N%V:'4)HeB_Q,Ll(d_DKJHGO<0q*mU`imP9haNV*[raOIl0OLU!>o0(kXBJDjgDQZI4PtngQ_l0]dl/G!+&J+7%jjB4$;l8<>@PZap%lBLSOoSS&&7=O*(2jU,kK./m5g[3e%VH(q\[]`VgY[;PQb*Mds`n*C+#(F$dGARe`GHU?0Q-*rC<j]&aB"s!Zg=a*i^0gO>pnNc,%ZcC\?O0\Z7j/Mm555S+4\_3AIf@/U2:\V&H.mYl'p/-bu]]RZ1Xc""dWU&/ZGD4G/g?u(q9YS)3]PHCHm#4D>]juHW?a"+gAj*m!%%grT\*5:mTB&15Y`UB/L^HT@`S/Pc3.JC-ah70qCH?kZY^OgL`g2d%i;N0b@U8!##bujYerG,Tp3;9U(>HI0W1&CNjD;FmNg0@:"%G5XHZ\"&:j?_?)$'UtOShKmYbQgD"rMP7<bldqHI"%-P[6?bcZ<%hsd[CFTcq/kCkKo^J@<e(!dYcW6WH^i"@)kBR(*aE>jUk;!W%HausH7]5BpnD!Bac>%PePJ;Ca<t+O,!6iY+>0Q%-c`G\U98bK`dlENRgD:XYf:HU:2p\4Um=kHX';etilo`'IBOK5Fr1$ut4go[,%CsIYLI+(Gt">-hBL/XumdFW'`:9gGOdO@BoMBG^XdHK00l0X+=VdS5e=SGRQT4;$Geo$VJo:gB=>;pc;0st]_PUjtHaa4e99V#5H%k%9QI_6ZE#^YUPXkqrBsXT,kQVqg:,H`,><0kR]2XPI@Ohka9@#Jp9:iR6uXZYQIhbOk3RmtrX(r`qPgdf=1kdB1k*UJo.sZOlom%nB/FCA5cTsdOb7+UAl!/c)%8]<Vu-pe7:?L!CZ4ndTXf*Sgl=sZ":ua'L^rF2Z8c=Gt]5'/@-YhhIN#LD/(/TKs_/u[T7E.4pM%^%r5_9m1:k(-;Mgr-7qEJ@2ZZe9Mp#hFF/"ToI`nIq5n<X*'26dOjVdtV(Vr"ZDb97[0nRpc9]J.&CM?cU46G0/#X.Gq*f1^u[TX'(%U1uDm.-?m0</6%m]IT6uEBQGFo]iKANM%@L3d$aY,'/:NI?kX]kP''"1.JVU%='H?;1GYeb>*\q$n:*(*7>8/E_3I-+8;e[YJshs%Oe%qs^:fUioHq0G6bLMZ?F:5,cn>YlG'<iRaM?.?5P2j3roU,Ljq#_NAHi`r?CQ?]#Q0\R)JK-"#`7"=;USA*.L<<7(B[8Rl+C=!%!@(e717`dYloNNW'FD@VemeiQA#$Ym@TLW9[n"=r<&G?<<q67/ZAG1._q'uNo]-G.U[c'YJ&'aI?"mLKW"7NI5W&@NYrTcOl_e"u%H.2Yff(RKRpZ=cM+0Xn8F5.;A>ksUo*dd-=B>NuVPtF0a!O_-u'5Dr#l%@^`gA.uYC'kJ'c=%bL#%Ej`[js&$a1SY14e,G`hdNeQ%*jSW^6>">8N"C$mbj/MH6d%N_6U*2&rR/I%T5mnrT"YY/(`QTd/ZlrDXElq@TIu_Yj&HP2-)fi4/:Alc\>Xci<%-`9bf4kdo^9#M%n+(Xen&BJn?^4JtHJX%Y>+8Z!_*:m:Lj)<>b<fLV0[Susrs=Z5'5EDRpT9F&T+'64"b5F'V!d>ZhoJFVU>ph?ViM]s,Ze@7j\<Vs%1FVB?-&SO4R?Ci?/'K2`'KauFpd"Mp0"mMKR<LOpFCW_K@^KgR[q+)p0bMV_Xpfr4l8bgikf(Aeo!G!3m;fe1=A*86X6tm+%SE15%e!3#kBS_Cr$p%HqH$Z.l!$C<RkKhnUo<nBge_c&$JFdF0Yu6C#'ckt:\5E_Vm(El>Ct3l;Tg6Dl;,W>o*Q=CC;N)WV@]EU4(YVKr%j8-&O<T_8j[oX1dZ&Y7E9uTtM3#T)@Eicl97;Q?nF61T:eIs$Z/%aQB!?Gaa+7$GVdPp"'0[rC`RBqmmfcKa^%OHtXQ\;NYKe"e%%5+G;'&;u0rX:*pZ3"3`\EGYetZ7TK52VW8FJXADsh;e+s%E7T"Y(MVc_kCjtV1NMVFep`Q*&CJ9DD,PT^uG)+dqBgb04!#6W7Wea%@1AmTc[AmXg=`mb(rSm/^u_imm],<<r*f=C\I&>mh^9*<?n;#NAL@N:@`(<O(Zn2>+1lr$4BCTU.&$gc?[Xf;IFYp]o)!Z1Da=6E%VkGf!<-A3=-9s]2`@$GKh_i9.RV+?7YrI?S&0`A8&W8_(#%2Dn^=Y>ld'9i84"I[ar_AnXF9tH.)@':Y+!?lbcE8bC\rJ*O$0"o(%fL)siJUkIrXHV^`**=ff_,0/-%+Hh5kn`2r)MhZNH\OJ$>\qTS53Q-Tb(1*:hH?<OlPubmN;FUQc!>q2:FP3iR-NDB*C1+P4'mPU%(ncmZ`5Y@_=<\2T;gPk/P\qKcMOBH<h[WmbBm0AoH,bVHr"iB!csoko<t/=WMVDq0o)s&;-VLrk[C+uhV0.T:+R(q2f#TP0#Yfo9%f/c,QoU\g_JIo,f4?!9PMRZ/9@@F'pgLu3F!$DXkM@^?=hj-Fl;fln-H%s8'7@R<.o,HjbR4$U?M"qMeiT1)AKILeqEWA(;fgi(0%&?)uH$,7%i>7n*ama*`bVD-pTKl,Df/l)JDk6f8D;eUjtM@dZKj?P(@g=[MNcHnWf(eVR"drRt[BKd/5-?`1b7'YVC#`GHph?BC^%M99;aS7;q++^A:3?3hB*)Kg\`fM?5':D)=TpfpBnBKD:(@:%.^W2E%qP5?ODPW;8kI>nE7,S4nHGO`<lRcA:.VXI@#i"?Ja*VD`2%Ika>8dGVpqeBjN0c/gVlc/=#;[h2.f"JoJ"3NY#C3.WBEDCO8s$np!>'MY=dED,oSbIOm=j(o**-d9bd<]1H\fXS8QdPA/OO2^40%KDt"j?iu_abgl,uCD]!64%0,_l6@0<2]!#Rqf\s^rk?.77DN#'0r(;JF^jOh_h5S]6cdJQWc^$'37a0l5El^&S:F*PSDl4>%ZsEO%3u[:78#@;509b0$/6F$1fm8+kXplK0qm@T3"nnse4[(.3<epAC1*B&(H9NAl\Mj(E9bAT$L>m;h;"cX9bK]].m!G*W#@/0OM]k&d%p-#Aj"#r[#pLYhB0(_767f^SEhn/,>[p:%2)dX1k6Z67Dh;eC;(j42[2l+KV>]l`K.6Y.'[%[:8(4e&VK*$1BQCUG8aNVRZ(t(!F%Ob$8#mM;Y8gS"lRG6>'N!etg[D0&YWJA&K`d=[8B)]OFa-l0n7Hu9VN]_X'7a-[NLL6tKp3l&j"lrV&s4A8e*;q%n88faC)_S)0p%UC$Z=QdRT"WEO_YZYR9R;X/K0!W/9XM(,tfQJ3"C[KU&kmG9g_CR[LM)GPm\e00\sCGUfnEB/`/k&QaNn1=k,@Uc#%"I)Cbf!6Ki%[ju8^Ea9:P4H(q?.?(=5"e(7BKX5<"ad,S!n#M<3?2gi8MX7EfdmptBe)p6U3HX*qFLKpC#0rq6cCe*ZG_aV=o?O#Hq3<2GU%?R&%ZXsRTSjV\35o5E;-ATl.K<?k3E53GSmgM7=Q6XMFo?O#pcP@KOLX%u6c>neML`AJE$p*]LUAEUE3HW"4Q,De3fa];%lYGkrr).:9%jmVo3m5jtMXP;sAD+I\ZjuXu.8/^lDU)Al6:UFA%&T"#_F[gEhefiK-:F?t92J^q<eu@,mE("dtGb6due&c/s*+bF='n-,0+rCbl%&mh8Gh;]Gd4o(Yd;Xj;()=bk>,K3H8.:rB#<rn+p)j8\/53pK"1!tCn=.]=&,\bQKCj''dIA^o_p:`[]->:ot.;'<r%b\7cLSA^^%;l"b]+ePtnTQWti9&tV.-kb_tLg.0Scc1Hj0\O](@S@?t7EKF7LT55n>+RW:3FU]%*5()=Vj3cp5B'!Jdo_Z=/ZBMe`J>)sIQfcS%Gf\X0?AAdmRG3XT7%.R'nkCkk1%/F<&lIT2YV(H.*X;d<!b^(Y1sQfKf4FMWZ99+I!jK8@95J[X@'DaI#IDTrG(&uWXB-2H-sCU3%TAYq5JsPg+6#)k]Und;cI":9E1o)#@+W43kRm5Le5&1;MlY6Wrq*P`fc^]2griGI4kJSdWAH6,p[ii22E]ThOJ9g%(&7f$:Vi6RD%Sf'=M.H[lM&tEDhM&$Lk>N!!&oo@Aj>-_eh2c%6u7q]R$DOFD.SMQ!/Ap4:7QRuhPi34lch0-G(`!kYlL;lH*UiZCpIFbt[3j>s"%kO%VM]*Vdee33[MVRrnt#,(u1J]CHrVM4gkf\dWFp\<Op8]N&OghP7sEu7MgoB1OOEY,d#*kOPC/3/4Qk-cZ-Z3OY!bNDNOG,3#^%kKeQm7=+)u=m\cS9HQJ\_cY#Eksmr%EE9'fB0bakcRn55om&6<m'.M7Z\QXD$cMT4"<;@9IrV;`GBnWS3Z4>qTh)EWc=!&[Th(hB%"cLIc6aB++eNj@raES-8I](="F<ZU`\9LTrL^Z?q]WG?^1'`@S1A[!ZN]CIq_hK`]#:@c+JFjiQ*70I^A?cMooUOSlH@A-/%)9)f%0Q]\eV4fmR*eN4GF>.)j`g2aEda3`.aPcDICIH20N]TJB_uh=KKHb;h>n4NrErmZN+C*LC](S89mE:=3Bc7Uo)/QjOiH#VB8P_+/%c<Ro*/Zlpamg[`'o%NoVn7cQR8+pmiO`6#WSPKh<?0GXfk**\rcA<&6Hf`fN*L_,X/q!9UJt?9:pQ?(rLf-ckcXJ$N,`#JViN`%Z%LOI[(s*]<+HY'#KE'F$hN@5lDfh8V``/Qf"0)->(,Tk=rKIY,T)f7do0IKiAoAR>;;Fd&aLHN:JA:f0k_c`h4)mEcBiUg>3#ZESb%bD1.!"$bdm\:.6/pIO0Aq/H>$ogIOqRD/QU#L+&(i_6/m[RA5MUH0'6Bt2R.nG\\HC;5+dklifK4J4]CK7[Db)Y.&>%*(F3.msk[%L`CcdImJ#Z\+4q8,/qZH(+-EEVA9$Io51P#%AD"gKMJENaOi2fR0M7^Vc!<<.#oWa:oK^XZ/LtsdH$tO326.tDR:^N&%),Sn8*oR%fU-Uhmo=oP,SAHVP7,2Ep8SK/`BOi"B%ecNgpUMEDPHWV9@#\)$&hcpNdON7gRZ6b)6"/8,KWKQVgU0p+jW]UVsSrn&/hJ>1e6ha%H=`n0dh4spNOQH;4ednblOd^(?B6KZom.l$WRjns5asl"K)@LlK\<MZ[N&Cg3+UO*c!b*LLMNP[0%Ql.![BjF45*Xn"d_@g/N0V.%\,l#L*Zu1mJ%sDDfVh^,E88n!HQP!XcI&g8Gq,=_<+5EuE/Lg*RYLg@E+F]sEJ^o0DKW0&iK6k$F!J?HD872q@KTr8jtn^kCd\e0%T^4OXNT!EEQqT%s[$O0'M:$L]c^d>(f*%SKd;M15?81JkL1FI"ee8W]cCc*2Mr'D6>gDUC.'NS)SX6<hoDElKjm"9R'htr/;pb[j%LRp<JT\jXb<aL7kd>sitj`9]qC*e4h5sN_[R_l-iSTD4?X1pg,Vm4dM-22NF8DD@rQ4,'WRTU;oo?K7kkIdCEMa]cam$9StQZJKg%q3dYo<rLl,g$R'0_lbeds65eW=$8"BFui,84I=kbX]RCGm+GM*JuM[QZJ3U(A-bVN!nc*$CdZ7mSmfYkhR[k;"Q"7HYbUajFlLgu%IZNrl_*#9iSU"i"FZB+jG?95u)4gK9a!WGa?JXJuMg9Gk2"0-In4VqbCW[CDWL_(Cd5%bcTQQ<F;^Z$/F'!(cf#,/(eU6X>R_B@/%RJ3W7c)GWppoD!ooQtm]da:G)Ar:>-3",[d)WlD7Y9Z+K\a@"%c"b'Ulk/&drN?+ff@Op/=Im_"c!qakd4];@#<6edT%[[3JUPjL%NT)6E-gTBkQSbG'jL-&bOW-+aQR+j?l$XTW]o0>[l>enTlgoT"D.J^K\K7?nX`<?b_0+WO<Vl6,3hM?PC\*!jJ:'ng[XI4fM,&#S%P*B>)IG[nA374gGVl<_S#d`d^,=HP7U#RhTflTu<JEC!n/t:-8i+71lF!TF\:*F8*RjX!8VK4cu@R$VIHo@No/tLa&2hPblO[lO/%aej+Z71XT0Lf64&;_FX8)9"nIl(%H]Pc47'Zg""XAui'S75g]n=Lo>lg3XhmS'EILc7N[>n8(/'X#Aj"2X5*>VqEs*rD@.T3T\]^%m3W74:$7a6LF(/8Zg""B&+dt8ZfuigV%I:f3Iu5,i>jnIc3]a8S&.Itkse,s?^i_T`<OM_F.q6BZg"!#l%jD^LpQ?9jC2f`flU!"%F<TOS*.qkP\`\p117QQ<pWMX2N[UCBkLS;uA^`ZaOD_mp/=V[HY8f<ec=?$cK\:HB>jckBOc*(oL(k.T6^jQ^4]0<`G"OKi"1THB%l6]Rc$",]i!XKdt`2B+gERr1A(uW(g-\KI_\eseI3Z%,!pUrUc3mG8Hag@C&6779#_JonS^L-fhGpSJLp^B_1"\s9qqlNNWO@Ybl%PaUMg-pJ*TB1SJEJO'mSZepk)\-G>,@htJ5O(bk8pP;XDQ/@$:=VttbBC8`VGs?Be`$BPSk0E.\&NB7cI-/`9[4LW2G690T)D"#G%q;`[Egj,Dc2BKFK,#(XSk&0C=,1/2j+eiHp_`i.>T7p4u3'MFCoO/9Ll8uAn%0foCCZk+OY^h!7m.P"B+SjQ*E]`]I*P*9m%YEE/%a'")rM0)eAH_@^r0]u?\C\XIKkj3YD"$TOOOoam4Q$2A;lnHd012QQW1rB;HD#*0+M9kcO7p1*fD:';<1.?uH"'rDhd-:2/`X#@-%!O,FlL,s)]Sqcf2o+7NchM*;sHs@XP\Mo/I3>Rs9L-spDNdRWK+e4eu7q6lnEKT=)14k]q#ZQaR=qW150)"VES)O]l"U&4dq'I8:%N0>HZ0Ji#I.k*(A;OM$NhT7K4P+IL=qGkc%?D)DbH[Cf)oXB0Y];KhVbS3ll4uiG1]!2;]H<QX$"iJWTq_;.2=,ZG>*Y4e:(r2Y\%5Lk$>MToE8AH]IF?oS0#)4XHG?oZGmCCQBHY`r>#^B*;[b2C0lrT>Y,-=3S2j1c/2U#-6%AGMM.^2R`2I3[aA^b=IPC5iIFiQa7N%EH!hC5XDs2UO_Bk:IP%WhJi9Y`_1UFCcM>#GE*;jn-*Uu([_L;eJr-b>nC8$i?u[K8!d>)NQiFN^C6]9HgU3#PJ6_fn35(p<2Rm[%kQhf:!K'f4/)ZgG"]!t]Am]@ZJMV[_/O8j=(G8g=4*iO*I3VoY>,.Te+\ZBlDYLI\PkiA-64j8W"K_#s+'L$`@^9aR[0=E_dg;2)%T%isa)>N2O%*[UG%hUkjcY]C1[;4RG8hkcOIO35!<A]55kp!WT![TS#]m($%pl"c=?ICs"^:B6WF'S)K*=lZtW\<In0$!Y9.Ds^*%/;!#oVJk>(&'^PdCt*`McZ-@bg)0$g.eTA`!7iI#bQr$P>Ghn]JR?PEII>MSp'1.5h+4,ae1solOlL0nm-&]];9/28M/#PT7&?lZ%_fZkFl(PJu_UQ_LV)Yk^9_%>U1GuZ1n2X7GhRk.6`Nq#.R0TWYQ]0-;PV'C"[G_&Z>OlTq1=O_Kbh`2ugbLB@b<'MJV:gbcZR9Wb%9mcAUEUG:@g*r:_o;>?SL*Fc-G>38Zfe![%aeR>@WOR;Q]=[H7;rl)mL,\_LpE&*fdld3[P34nCVG?g61nY]2Ea5eT\u"B)?^Gr=%QWe8uGj^uL5i*="U;cK0Iueqo$&AFPjDFRijOU<oe1&\E`rr9jS8_Jl87)j=>W\L&R,K^SaLd$c2.^`2ES[7nbpm2I..//VVPR\o%.KoE2O\YIh7O!CCIC_F-:p8]%IZ'TQ-d#'L1HRJFL"7a^2V%'R5+Q">BKOt,"u^8iCp%4$&*f(D%e5EZ/)ZO5pZs!neS:,JR$#,R%jniMG[aCr<o!kSU"ZfiKC?aaT`oh^ZR$'q%J50a;#LFGd6@.'ohY6CAiiKLp8#n`b^m=r)dK6MJobDEC8C."&'K;@'RfrLhEi`YF%Z/A#o*g5X'L[E*i?ppn^`@k!LZuj-,l$PD?-EM)dRXK+Oi$e1&@a);3pAC6X@^*C._(G,bT:U(ufsb"fCSqJd<ZfgRn$4*qO56tG%L5B\[DkuM:Z6YpO^+\b38!ZltOt6u[TM&t#\e59)W[f##./fBr6QCjQ8T+J1b5T$4o!TdlNk<h0&k8D*l&EbScB%+R73(J\.<k3X%k(3a<nkN9FRpVL,#hiFjgQq^I&6*hDDI'Kcq+7pIP4#OG'&=..3dbb)<Xt]lepm_P&Eu]f`gccF73dQMOe(.\5&aG8"P1)*:_n?F%P7$NA#WV.B^JCBBg%<C[;Ie`TWLPSt3WtAWT#&+PCjju]W"_Z`JEm-J=:elLhX>XnUR5C@:EYPjls'`\;O(pjTpXmj,Bh<.0+'CW%qp6VsOOT];r%`4,+DD<.dB+=)+GaCSe)*Y:-jq_24F,:)5eTCS*'iftlp7rX8TOl!O^YNq8TOl!6Y-:]dM$EWJ[5>JErbSkEj.)[%%qF"0pWYc-:`W7p<WnKSfj=dT4-/r8=0bWQf"d@;=ZhVWp*cPC'Q2umo(fuj5+5";n."d<Y15BMq4i>?;7M`Pb3,-J1@ds27e2#)%n"Y9=qo6;Rj^C5$U[c#:C?Tm?]O1=N5pk4)mY::^f8oiIW+"QU1Jf%,h,(9CqKYSbluqrmn+q=El8R)G:_)sjH&'Sungf@,lf\5H%+3@,%3jRuFWh8<'blbWE2f'hm-r):mR9Ut/6umY)0A-/emdKuULg(AZY+Kj^$"%<Nr2sDr'<6\tlfXLmk^O@#kdu:m.sWu?qKXU&%OO)Jrl+;BI=_T+*f2'TIEdlQb*p4X;?,,<5Clil>SC/!>On3I=f?YCns*K.25%Ue.a#Am"rO`g$oc:(Vht?S)k2q%!:%3B*]KN\%%ZdscBlfZL>g8f]%H*:cIqK\:QfL[(N>sIc[f:bAeA[$CWJn1^;.dt4QWh6>/)=UqH@<eFB>sHXla^nC?l;2H4Dt+,&*o@7[Z''ih%f?]!,Zu)Xd8OL5XkP_EQ_Y_6clfT9=#Xq5SY+OHX='kRkbSU]VY+PH;Z_JKZi*F)?V[*KVf?\hr])PdF_;F8\o!kRKH[J2bTa;'8%_BEi9d,4NfLjp<=`S7aIGh4V$NB2^+lf[Y3lOmgNGQ%13/]Ru-ZhI'1P'20'ceH[[k:K3nY+PHhI\V1LcS#ZmoKBqIU05K_I)EY`%Va5=J_@:VLb2HVjZ=J4#f_>I8qKXI+/+4bns/quPk#Pj^F-C*"ht?Sie^(Vo51I2nhJTss]EE`9chg_W+l\egMNOH_*:dB"Vjo./%SA[_NolD+9mX=ug2Ga1P?b^#_Iaub%=#AjIIL[$,&d=tblfgGd.=L+Ho1k+Lfjb-!lfXLjAqZ4.,DlNYp%-M4*Q>X>hO=o8H[CKm%f2(R*a&i5pc<CL$f?\5$R%g@IO1t<p6(EM3(\b"KKlQc!+!t]9$ggh%U"t(!d&tF*HR3QD9jGos:'kRW0ruIZ\qTO6aek[R<Woa$%Jjk;CfG?W5%>rke;3^sdQ]+\aolA[aT=-[aZ`7-=Ks.0;Thpib.f0F4Y38h!'gY(s!SMX<dQH\SJ'PHO3Q?lFCK1[W'_h2_YF?7a%1M>"WaN/$a7%X9nhk48%Ark_q\F]Xo-fNj[lZ[4eg3;IH:&>ElE#86hH$\lDIGr,P091MZket$,V`oA94TG*#Im*!JI/,>)MuCL1%GO`tLbO3f`=5UM<p"]<0b4i@e\1`lTfQ,S-5+(06];NuclbD?Wg"eX_jB$QcMZ;/]GkTg>pYG*2kM;]0Isg\P]\L*_mXBK[M>QPY%2[A,6-\"7;r5p[R++4(Im%*_F`RBl3IK&NMbO8ecq!?dc[c3SGatc&.H2?'jEcBnPf?YHCp!CC)&&7u1`pI\?m=4\Sqr1*hh>Qp&%:Y/@K&&/#/_==;X?Ms*HWNT)]/4Z$p^l8F$00fBn_XVs6UYj+T*5.08\)[@Ws)r&P^t%>VpkJ)5CUX1fG3RuC*qaqO+/Q/b>lf64%"`Fu8HLg.e'B9dRh.1Ld`Wq"SIer'Nf5L];UE;]kUTHV+b$Fr=]8Q+*LJP[2rh=i81G_UhN7;tEgS:BW+6RL*+"/N,_M-mVT>10[%l,THF\49uZ/m3%`;kH06Yi])"'YqA`=8FQHj`NA!jNb_G\/Y%:Y0T6(`HO98*BJZ<"/ORuLAuX[.lG)qGC9:_+#.W1E7a4_\4Er9%E%>Z&d6slsI!MT/[E^sbHKE-!cbKAFa.qgY*I)_sd,e%f*>[l!+"lD5r;Geg:Z'=A3;,_V%"nGT&!+nS3gG2>JY1[DM=]h]bJ/!X%_l8Qt*l/eKCNV6O;;Ub$Z&dl,1&JMf[=t5W9>g.l(N/$@N7%P7:Z$D?DWeKUgYQe>8r#$*#[^uTT-%AK'3\amH1/tt=8"etT8p(&%_6GL\+"Vn$^A`m0lbhfpgZs?6[e%]5#J]RVQd5PdchR(Pg>eO&+1aZYs74h=++?dG07VX64S[+scT'4E^O5rg`#lWl_RXbO?l"gM%Y'epiK>6,#MNVu"`dd9;nak5i;jt?slI)>2g#=6h`b,/H`^+)2nXlHDo;9*YVn[YcV=cp_J*X>XOko`5:UueO/N`rAHg.Z5>C9(+%f4+XPiK&coZh%tCGkKjep0h08a<_^&?1#(,s)OV,kk:M5J#D%,SR-N;os*7lrK@mVB<QgWnP;6]f$BtZrV#TAn$o^@\aPUW-r)u(%i9"s!?+u:+U]%RFB_S\M>P>tJYt;D9jk7BJbn_Yl(_V-)lX0BM\8e&=)Uj3'M#MPbG.`cNIqr^_-U6_-ir8rPjlkWhbalZ#a)1ir%I1%)-5M!"Yj<*S_4F;na*h.*2'-#7>pVJ\Wqr7k3:X;9'P3.e7SX49*+&?7Y#V5/;nV;/^q"a<(-U0Z^bEIS10:oh<IUB:&@7Tg`%RpVZ":B1-'QhrmM3P!G#0>HDa#f1^tO6BpeIe`9.rj@\'1\UC+88:,.lfa$cj!hGZ?[d+r56kMBHfjDRS*B;&2r,%:q+_tmip/tm%ebIO1#<o`gi/^,")\6uC0076':YbiR/]u/$]=_*&1;_4qp)Q?mAK!>pi!kLdoDA6RD^Q>-H5_;.Cu;K^T3]DX:.(]R]Q%?#g7+H'%*Vo<EkC5'mY`0OtnBdD+?T\q(DI7g:6sFQf%8$Y#P=L4IG3g?CrpIWdZDMBk;A:2#4rA>3fP\71*R5c,ri"SsT,a=.J,)(3U-[Pe%Js(6)"S8J9&"ESL?ejLD4aZ;Oc(DS^X?QY<A1_PiCq6/K*BGq:mg4H_+b/Ik'.50p$mc0q[Vpm?48%jHbP+5&:&E8GG0<m0rj.ea%h0A.`?QD)RT!WU+4ukB/jR8uh)38ggUs!'?E=4bY09:/qr2"$R:lY@qD7l_%\@hF^+(l[a`4PZd>2Ng3m!CUci0bh%D=(t_1s[n2%+_k(:lg?IEmeaushG[(EH?!OkBDO#@]ssqDP4l`;fagQYDdMG^)nS^*W.W"#KmDqBfP_T"FE)D8s(Nq%e2"q8IOhQX$.;$4i7.!a%mcO[Jc4<qHl&g+*H`3Q(o=B1^c@%nE*e'3[pN1EHk#Z2^/q,mhAe@jF&>*GA0)Y5/nbCMPhtnS6c6'q2a^QWWkk#fuU>C082c<A;%%"%a1Y*o=Zi9K%_V$+i0Q%CkMZ`@G@2gqpng1Y1m#F>s1eVSWg=%HgSndgKdSc8W6(hgK;rnt8/R3>(mb]S3=%klb:'hC!l+6V\'%]DJDsh3;sSf?+n%oX,PuGPLbuot>`cl\")u;s38%iNsSjd6--HYrJe!S36i2g9*I^b9Xasrou6F2g<j\3P%*Ph`m1rk7jHUCK%HY%qr]'Aq-oPl[B#2,:\FP<-Xj[[aSrRr35+qHdrf?ZU%?Sf"aK:s7d7H/s*YL_BB;cr^&!LY6$VMKa9T=q/YD_3`PhYFDI:a94?n&U%qpcsbm`Q,Zi.Jp;en4HfaaHBV<K0/Co[YXTr^1!s<Rj'Vluf)u4(C8L`XXm:]OMa^n$AiiUYEKFC)m+(4O&aE`mo"cl!qcjd)EUl%jftq1C&,cpLhFFcFND&'GP^Um0)Rei@H5/XjO:@f]-nc(<o_.(QTj<[p"]8'eT3,qo[U#uo/Q*uYs\!'@u&s6a0sl<%,s#A^-$T6%rH[bNgUm7L*?8GHYrB#1XtKEs`k+q+`dtVEKR6LTfKO$kpp\Sf>J#,magX=Mp3(HR4]c-?-2B03*;E#t[Jfh:S*.uO0&6>Q`nm7p%Fft_hB8"#aL>BART=3d0hk-7a-XZ3[<>WtWjg_@DnCf[K1\Rt-&WZh-0s%0^G[I<T>ArSYGEnKQ?'Lg;SjSa.iI/1[n@O1)h*9r>%//<?lkAQ,QI-(Tle916SWGd6tq!I;Z[kBlDEU3>ObN6pj4844"m!&4@o"%b0fWd3QTLH$=on575:-SME7>8-R5>ElW(Jbg)n*\>j%1G%`[>@r$$;0hK<H+dN*g7fHoG'`"+3</(NZ&0Fn$Tr=;dc(F.jjRl?+T<A3c1fOA:ht;qHSNRs]$Ylof>hu@%&:9Q?A<`\rjIdg%dt[k_kh;Z[r'%$%Nj&Gd5"3B5?Mu&8s7hqeo+-1AlN<2U,n7J47:#Z\?.q<Ip4p%7?i"jP1N?rQkn!FQ*$0:Yn#pD3_[gb:?U"Dt%2YbmEL2J!X#N,RC.-C5=\T[q(rUkhH8]SPi.V&IonP?B1^>>`J_`p-Z.AlKJD_8];c>HKln)T7G:80uo_qk3F?$Z3i_M7u3c'K@Z%T0Dj$hXYYKrU%dHc99nXjiH,Y*rP3Dq9M:]GAS(c=`3-Lfc?'%4U1mj3.1P]aa^R"lh'KnT<Qe("6fG`IehOnLR7GaDSM^Tp1jVG%(N09N'mAlOI`9FfcDr&59]tc'EAH7WBl+4&T<=*Eq`D>[_YLBZkTS(*D9jg'h<=b8*U#ZDq<>*ZNh3PSpfC`"Q.3d,NuoU6F5)#R%qg`#=gP`E<[Td4Eq=^8`4T#nB>eI/Ij8'kCs0:I)`#lbW`HbTsa19+bRgY:[*Op'i+!)BVh:TL5]hj_`n&t?Cc2UlcH#_ct=n=eq%Nt,O9Uu!!h\b-uMh`H;_='0t?MdI+3j\C-HGeUoedu@QnkE!'h(GB+ii^P`%e]Z"d4hQ9=d*im,T02o_]Qpt0f'4aC,6*Lq`@&,)%#n=:lEVCNB1OAGV4`p/=j&9Qd6S"S4Lm`mq+S"sqLH$V6+-st:56q5LcgdW3:U`;n6X1WoZgSB0N/4k],Mn4$l0[AG^>'?jrc[YH%;9J;M9eLhe3\X`"IH/Ms,sdmti"+H8(3gDaLcA#R4gL&VFGMgM%.Cj=s2VZ?+$@*D3um8rYMRSUY<:q!M8S8)00$F.4uKNH]QF)`%I(m@#4j"n+S:nX&bSWZ"pj%/bR;I"0?FoDMdFRFAHMlm&UP<N.qYs<-e6:[?$ajf]k5=B82m48cI"(baDnl5DAFnHn`uEcG5P>$P%PFnIRI/`Wo[h&MRQfju)GkLjjPF%ad2Rh"=g\LKjQHqdCnFYn!RnS%N5HU=4\8dT65Ls6P]:sch5j-GmVdK;\nqZ+MEprpUgoXM%%@tP#YIJYC$K0sWI_!_8<ms`%?=L`TmhkA4HNoB.Q\TTqSp\+'fkV)?$I*V]RmQT.bHsZa41FGD6'5W-d5W0+bGpnI.j\Of(rrru+%PPYhPoUfW(fC8Ck*5f)bHSGb@dIJ/Y?S;USmH7G/Yk./Xm>DKnT)\<C<u6&J>l*Spq/YZ]&'f"+4SdZum2&!:I'J1ra&a(k3tm,A%q"Bt#V_1-DEV"sZD="l!HF`S/DD1E$C(hNkrl=j<pB'4B0Ba'nQYgbfr=:[a.`_Gd-3UmeJ<%,:RitUGcs?Ld%(Z@Uoa,@HS?[R<%:FlZf?[)#.3qJ+N+\9qof&P7(p?3&,#Q?)S`#]qN`QeC1/RjbN0pKBOKbgp`LY+TU5LC\KkR_7ms&1N/m77jW0:l[,F\1M[d?Sk?%lZ>:7ihNCp?23jCT/VM34ECF7cfsMTS'Oij5CE"Sq,d=)\iTi[am"_3s#312h"g<SbGY?ps7f2GGj9qQ7g6.ud)MC<Zc=E!`d"nr%msX[C_rF8M,<,T)@rGe90j,/DZ=#dgI2LCq](GdD-dVKWbA2r_"$HFX/UTa'SCOuDWqH(I#</5M]qh6!Pk[Jp:ON1GXPnYX4S-Ht%=!)pDK\_*:E'=%9WHqeNQ"&n.0:tr2imbrLFka"t0ha8M3QLlDqWf=9&$O#4YC*QcJ_`t3Nil?OTcTeN3bT=jb61b&p!OSo=OE$_%iE<>]\oD-B>G5b\s2P5^pYb+U@p;0$8,SJYs,u"HejJ6u^Y`06,6G5hs1\%t]Ioe#+FSP7lPWKGIWS@Vo(hm@Vm!4FnECJ([an@h%l'+/MrU,dU9C2<ICLX1`Y")6*LX5Z^:>LVf='$Di]dJ?O/mdr1ipoU+f)Z'>Rd.S-%0iSU)/t-HU@+A/ia5mtD0qt9FZFX4:T+KX%6l*\O6X.%ofE;0/)ab3l&$f$r^*S=)n`+P"aH"*b2ao<TZh_41bDeCKRVpOM4!D5l!P:;&cI^l]DtC',5F4t:E>>mg5dF,#mI_nF%UY/WW:,Vh'4pgsYI^to#q#)Gp<`:,[ls$7:j"52=KJePV5B8]TH,V3tOS[4qgUBYUQ&r(Mr*b!hf,7.#]_:WG-(/eE)uh6<l7t=<%!s?/R)9!Q+\GQ205@[i_]j23Gs$!(Fl`30WFITOZ?]D7<GkUlWH<3t:;d\@/_mXgAWVl&?Mq=X'L0aVXG^r_"4l,kia7.f^SC%"/%?Tk$3R<7cbWXF%HMd$^8TeCjsq"N@n_XG2g,cE30qsrCI-h#;i%q#=<0)jS@UODUU@lL!l2ild@qECWtFE%9UlT,m?Z>1e)^[3h+%rMNT)iit^S^#*S[])1XW\oHZa]"%e'qi$(0o,k\i1>dL;DZ0Fc*WNT6:k-,*A)DV'MFiEgo,5mKmZ#ic%.4!PNT/Inml-!U++F"B%:ZV$)LK,/f%c7!Rg3OS0n%\H3Yaid]7WJIeTDraTrlZ.-?"9kiddg[Vir1#QhH*n;J+E0F0'HNcU&0?-h;GKePMaBHpL!;ls7tTj%%sIpLked]T"_\_Kj=jI.PVC86kh?j?f*3VdQ$p^!h+BO$i/D%@A&s*qDTJ*K#G1n6,`N[`Hf$Z>[jPlT_Yi4HNKjOW#=#j:$ePn4%hDh_Tkra4eb,P37F_c<ZLNVm>>;NV;?@V2B]aonMh`RuT5!7]=8E\^=LN1"r<i/%'_Nn-\dT$OE`)/nkcS32iP;H;uo)#7t]KJhr%4n7J_q%Qrb2s!uN6[f5e(]Uk_lgA%W1Bo5A7rlV]VIfgor6LQ_hDI0#$1%VdjG\:Wbub]qq^9K'n!]]MESqk$1QZPNnD)D+V#0V*%#?_])Du'_=^3=NC4oHE$i8=8=:7;$(r.BLV4%MT[ht.Gn`B/><s..m=Gf[m#]t\pQaj99]b`)]0#3FRVQ`m">JUI4I_d@k>Eol0X%IJA3-DsIAXpcn\cp.ZX_B#o8qaIlkM^N#(UDYh8?=.X4J\@[1_q9/BE4a?eWdjOm]s52'7+PltTb4SQVDk>V2ZZjHr+)`2=UN(Lu%e)O5Z&NdZf7X0-pD4VdJJ+N\V3.(2jnUJT?cc/1u+/JqCR5Vh4r;M`2r#*h/ZZ2KI>T_*h9r2YihIsmKeaG"-LV>m`H,LasIOcYe%CJW3Io-'aSQ7mA4*rL8V*H0f"XmUOC*Y4r_`>J3Lk83,n)S?teHM/3uEA>DV2S*e*>:YkogF@>>FDuZ/f8:`;&B?9-ZB]0,IQuKS%-#E7;b3G*'\%:n+4r2"_cY,.,hUSaV`n6SpQ78<,=pPWsk%GOY1>\k"^O4O`N@3b=?Ypd.KggDJrc<40^>!DQq[gb3;XgNlnW3%W%"NJ\R?_./dgT+[ffF0?JmMsg3s0:P=jqet#]<.1#hs=b[^gkMPlE(2NEijW9B>515:EYne.L@j'6&8aZ=&.HljY0.1;C6mDjPh"q%+8sa>8K,Lj5&^/b-XW%!H?KIfP\]"61DQJX0qtp)5]EF';3.Di[dt=9\fPqJ,.emAD^<pt#;A-=-hS0G*95$p/pN>R`>hIJ0dRCN%"4=\44`]%$Ve#aZ<qt0H.hQ6hr3.0P;)%D8Yi,&O60Ns7#@Xj;-R"OpEA1RDO@mGZO6N`U`B^BIHOt5^C/f7e0.l7"j%IXVM9]<X%NEOZ,(FN*%>en\.*RgOf>,m:0`0ZPP":eHsfp;tBW1Mh(>nn!al/VG+C4/4*Nado9ME)V)FnXWiWZY8ZF,I6r1%rF0]A=:3R\O-_%$f=,$ps6sBlX4K*.G*!+HQRa[PSH2p"V2A^j'>O;24!)&P)=HkPIM@_fWH@H+@:sQ]KTH'Eq0F6\A;^.jD'P&cQJ59WFP$*dV,"6%nudcD<5t*QXhb_8*6f+c[?)$q7*C3Ea6S0JNM#%8U@/8()lk,_)S:<s`7WrAIe%"io/V&Y'V@H9hIV,MGDSJBV28\4K%/iIBop\Z%]GNGLKeN'8'PN,;m'5,V,:Rqp,;^rK%llk_#F^oY15A\`mH63mhDpArhUI!l(t[D,UPClh[&;E3j+U&5d^QN7P]1@'`./B`6[h!J%9$2j+*;_Y#>qW;4Cc.j8=%T)f?fRDb3EWrj@'gDM"td;JT<#4Rd`,K0h`8E?Y8f3Y=;c%7Uh"*[M%R%o_1``P("-j5L)mXco+9N!%m'J6/#029+*OZ\0U/e?m`XXefbHn+rn?i`=9cIioU:9ga\]s;XZrKa/'8Dg\C!fNrG=?>Jbl6FC3F=fG3Hc]_/]M2aZ"rg0DlYd"%@eoq(1LDHn#;;$gC35"uPru3Ral@G*p^sF[TL=5f)E'AN&.>U^2CjFGD$!mN=)E>.o%$mi_N2qVqkUXT5V(dI9o^b!8`0sq6tBmc%Nt(`3U[M:n#O^-L%6dE>nqEnU9[XbPk-,%?2'5?q,ub>\9CNBoCdsm5B:S=@0@X&BS_69KmKhmQ\BKpO/3jgX(6N(b43.(sIa=ZD%mYS72;b3F]EO^o^'Sp4]W/fo+UBhFf=%Mp(MSc$GF!+B'%(6R6JaNNkeB,_*>p$*k7Ylm?Z]DL-+69Pc0de%?BG3:WJ&.]n[%UKA%H`iFEPNJWs^[\u@mi&Q4>p@2`(.F)?Drf7`nW=kZ+_LVI>]V3`,hHX8AXnBVUh4*Udnu+BS8C;\//E&`@_kB]d[M<#a^r^@UbX>]%-Z.eX151A=_cL0^j_HrNN!7Oh-GGKHTMc/$WDN0`37g:drLefP"jW0]%--rUN=F$%b*[7Q?NG@iP/cnn(QF+f1C1NMSf07O3ul.,%IJ_Bj?Bc^DiZ!nR%_3!n=)`ce_9iG`Io'U,ju"PURUcX&N1].sc).9HOmU]?9+Mkf2mR(H3n&u63eoY-WMXF;e?S$<D$Xad@8IqE%HM#d0(5:Z(0cN]V4D(Ng%T&5JR4r;n;XgGSJB03"iA>n4&f@rVaXUeUpd!5\3?C5bAu8C/*hUiNk,NTD$s!R)-<@0lS+Bf,J&]!F%E;F1&/*s#bFJ^$8!"[$SPf!$)%!!c7H6sAH%VQ?M/Y3='+;cOR8dO(>h.QsS0M#^9PEC6H:`d!jZ,o63%un:acP,s3E4Q9fb+9tK%*=DkL&`5CQ*4J7WF8EnLGm)`m08?R3*_3UdGmIAI@ae3`>(LE5:A2#t^loh_;l""'L#^d.6cIro32d%\rY<&=MH5JU@_[P**Gq%7%]eue$29J<0Xm-b(j-XXfGqNYc>"DbI_=#3;(`a,Z:,p>!!B_-FR!@XJ%!j79GCdaI@*jXV3QD^m<9lghk!5BB"E?/0WRaYAYWtGm%gM/P^'Q$5(3NtRdM%K(LF>)bpT@C+-pnZ7oI2/1VG\YUFAk1#Mq#h$7Ef@R>75/+P"73A69jV6gJMHXnC!DCoPI2C&,hgU=RnmL,%.#jr)(FDlM7Vu8]^p^f=YS]4KT]QFu:CnUjS?*c%;91Tm8."<IeMAf@3sQ4l%\Jp"+0Tcg=BM97@U"QkObLiEBm(53ckk,DVgpNZ%(-Rp&q0+sMZDM-u^:LlH)GXMs_D\pDg"o:f!^.;JR<U1n]4b"Bfc<Bf+p=-6YWG+$B(:E=.[57:[HonpD4F2S9-j?^7Kq%^[2nrd%R:[;fDKI!>g4D(JUXgSu4+ZC:e72Dn0kpf#GcegoGMW,agus=7Mt-@();:H)3(uq`jpMG+>O#uD.@IQ-[*%EuL?9U+_@UX"dOI6[%!a27u6-L8snHDa!Ha5qZ&fOFcnj4>0n,.>!f@GX6C!hda9KKt2F[6749=!d93&%;Z#Fp)t(p.C'7dSXB)J"-BP`39p8Jrn)dti@u%"OJX)O)8&cN+4nC3-@[uf%+u3s"N]rA,smG*.Ua*N;87VkXcZ8&B(^2N5n$=AV`dQ`L%02jtK`7cA"&d9o;WB"L.:5K-(dW\(D,r%]JCs'=]>@<.-*At)H8n\eOf!DQEl9_`Km>O[*""J@uGC=_Lcr&rJcdjAo1AC@UK`gk6<L&>.!,V:l_f\Ip'A5Z3FE^TkXlar*tB;%3G&g0pGlp'PNa'/U9Mb;.*(KT*%L99"`\G.65'?"20BPUV'uZjU9!TZE'npgD(rSTHf7jgiD1*\"oQfB1Jj!F;H;6D0_G%"kE1Nc%,b.%XhCA:BP]=q2^oL:^q8K=8=#cBcn,p]i-dlJbY!pNBgZV0K+!sGoHs"q+8_kJQ6Cf0i;remjRp^LMhqFu*J0V18SV@W<kD=h@%fQ9,kd0NBDCbVZ7`SBB._''0.3*%d`.>*iBi+P*i+C_T*%lgDmpW0Y3Q<"iG[.AH3dhi&oILK.pL?K"7bHV<#U<@+3#9+Y"S]b,S%R);L1J;53^ZT(p6SX=C:UR^#2deBb[l8WnY9g^q_VLF4SB00Y'EoXY8PO1]#r2rDZk8TR?\R2UM5q1M_O@Ak<G[=(sno<o0NR-38%!#R2BPK.4]7m,!B7gCX?^sI$BOk-i&^L<YL!QIb*dNXFgk35I_n2+$/D0>\rkmnXW#78EEV'JbO[a^E86]b6&<YuKam+;;f2LJ?^%=uaYG]k3p=`^fgKo6d"Igj"'+dJ*lF_Matf3q-8ZFU#J9+_j:\m]apmEj#0Cf8rHgbIQ$K/,8->dQ7=8K3!m`9BXZD8)#jq:4?k0%i3q$_bgl%.BuQ)E:g;KJ`'>7RB:%4$p0;0/%$pLTknn8=;n3q9#&RHGg=Lc>-9bFEo;5\,H1k1/>APk2%d.Eij^uq(k]<Bs_:Aq^%eRkpA[V%;F91@$'[/lf15&<`e#K3X?AeX*?K)UKb7L06)@8dqE7'qn=M=fqn_QG(L"'QWKo4NijF`<Via6o_43(&LI)O[Eu0a"Q:%C`9)RVu.d&`_`.j(*5M5,)n5d]rY43RQ!=[iDUirQ'&4#gVeZh`foFE'@#j#U\uo]V:+iMVN,kbS62WqN=n@+r<J3)!SVS4@Z>!,%*3!I-XsbhcBOMt=ojR=nT;C=p&n*<oZ>(#-p0h:5*IR>257n71SdNlg(K&<=TEHoL6&%H4m4rj>S1A,i:kfT57o0[5j%aQ%HT>/H%#3^K\R9qJ^ZS4@ZMk3@>MqR^rd-f.)PBg76%#)Ct3,YHXh_=)rGrWg;$ps;TmLgSsC)2F^4g9AX"HF(YDZ)Q+-.shqgDugmjksDk%Rp](7aZ%Wb`W.Fr\Z0rGe1]3RP&WMC0HqrscYMGZb!)<2K]P$Z><GFXqILV)'MJk(mJPlhKb0KB+/rNQ3dAK]]hDL:%t(AloANZi%78bTq*2.r?faamW'1W3s74nu8$kGj3,%6jRM;7-KT5-WLQqCO&-OC[<BbNkC,1d8VG8/E.Bq<t/UPkr&f_jam3117P#O\!,VB>EZ%X]^DM&@>KNT$"`(UUWogNP/K,3a^K2Yc"_cY.SB<Xdrl;$q8Cme8>]E2WeE',klK2QPPH=L`[E8.6T^Ph-6;:Y]B'HIpXHC+Ym`O%_ri*)VZ<j7ao\]bjgbl)1]=)Ol32aIL4f6*C(QA*#hiuWiA`W[E0ji:dTH>kf.hkgTJRl%4XuYW&M42CH2:H).Yr.dgNeN%!ZWob%pEHW#X3mC%ng9,;AIm'1f<RhJ+d/g#"?Di>Y=5Y5`3Wak'[hK!q6a4RC>9M-)B3"@JoFFq8;^]iX&@lHLZ46E/rl)<lp1obCG4.+%Am?k%`l:]5a/KFj7&6#tMC%u%K8NE*(g?dc'XHsj#lu3D<sFhB']e&ugBKO;MYUX>UhGkoqG9KKoKsgi0f1o=&A#b[6?EE\HVdUR%U'uAbOm2q#_RN0!$(eN>i!FS7FL0@XeOIS-8"=L^E!EZB3=7a.61XNNO\k;(k?k5;Qrji,W4;OaSrQ>MU,bBUL`D%A*MO?f)5fb0%@pe#E!#+C'@mZC(6\_@rn[f!,>_!7gb8[<L,+fWabadXN3&3NE3-n/R3HaZ._(gs]cSh=s\jo9'+jRP+.j-TP#q'2TQ_cG#QXS?q%&ATk7A'/\<mZ=2@n\$(nD*RFI`-!CI.p<f_09FbG8JsWZ;M"oVK#<bfg;g?+4A"P0XCo5r6YC0[R?@j3*Yo\=np)CDgdLE_.gDss%#R>$/J36:s!!780,@3Jh'Km)[5-`,I:iS!S?W\G;).O^KPI<Y3mW"uJ\E<E`*AO+fW?MD\G)0CIoj$VD6c;(?>!XT,9RcJg/JWk>%Ohp@Z(a2EV@J#S>&j<iJ_[IgKGejAAFC3\`=W:Qd,(44sZYPo=ir+:'1@-C@n<A9:SG#P<LoM86GU.io!10D:To&s7dCF/K@0j\,%Y"qGf<2@U.1?,kQBisUf6e&sn4^R:#XRT+/Di:/>+'ZnB>')1(GZh&0YIdqPc%gskF;gmTiZRKFTV&BiiS]]So>!X5$_GI^ZtI0<%`\r@^1aWTKGmK?I&CU5d".K^jnNqa91lT97'bTg]QirG9_''P>'3kkN3/@$U60P]#'*&GnodV/#Ic;&>)?L\g@-ABA3fM%V:a;XI%merd`As+UcNZenH/1L0`TkOq$!.p'1lid@`f^eN7#FJGCD%+G&!5)Qe$%\heI:J@,([s58rO@^R#X-._F@5Ar0XQ1qcl;aBfVf.H%^u\),!IgR/7)qpkeT)K8'%J9:Y?J_hS:kB/fLJ6CKO*L-@$c"d894p3(-'0(ZGdj$5&ZacmDM3/W<trm!^fi\0ouH<B;67GNF:+a%j94iee!pZ0D\gL?Ca@_VKB1',2\kq.#S&(Wj_tJNLqBq/K2>q`""8\u-+ZZg\`=$N*i+ClVbdh%,Y'ePXt[0G0d2EaAVT'`nd+fr%5%+Oip^<,G==pBfJ>GLR/]B"=$\V$$mb3Ud+!4sBhA^%id1qlcWiu[BJMDP:pP(Q(KD/!hrmg<j']]=V_F1;0J)V>u5)hii:*C#n%\RG!p_pAH6j.%80-?+@#0K5[KpqV.7"A!dI1%7l%UD:Q\m"#e"PA3S0&5n<UVECL90sdRKq[WeOKrg@iN='N(Z3"<U#&&NU;ddri%2I[2`X[dGb&69>QYdtm>1sY[u;D@:h+CuPlK>a\r$+Z/EW9+SAK1@QCZqtu[^;)JVRAT5G^]nLh5C@1.(EUp)GVKeXG=h"NJ9*O<%]G)O*c&:E@B>6/3PluUu:Ot`(@/*F96ZAeU=G^O3E)7m1:BRKL!)P9R=B'6O4#UinJ;"h!:kj_!+]l30YS=W"fF)M,!"GH'SA\TE%H5b1TA+'H!"@Ae9Tl\GQc'SN[##3dbR1X,^b:lJ+"iBu[E(.Pud$W3V6(E(60OR3I?r0'+@7;_PT98X]#rCJFT2Fuq3-p\!"fE3Q%mX-LO:E?]YBVRQoW<P[TX<-RGa;5CMclk[>j?DahJVrt@`QL3"p#(UE8(sje"A(9J:)b)<i!R7^`bH*3QmLO2&>"^9%oLM>(>])T%"'gP.(us';3XbDr.[2i7.@:@mOiIn"etG<[PTX'L.F8@u%Ch1R-q#;2b5f>8J[.R\:jQ"S9L6MT!-`TqFJ^hAhI-rs<QX/-_UgJP%EJBGjhdMnc_be:.#gRjoa?-cg`:G-+n.'[i0S9Wg1L)",$R@\hCUUbQY-49X:#ZGO>iF$17cc?rA#!(d4J=;0-hqp`K%:&88>/h;%hZi1lL[7t"?rfD<'Oi0AP0f`>I7TkcW3%0Cj%pH-%7$9^]''uP&(%=:S8flWM[sI9;?<(."D/2H6kVC-r5"cPTn"G:*&*jDI!7tX%)R@BG@`&KP,#O;b`ed*B]CW#?d/P4F`4Wl$TbrG,N$F@<[STYE-Z$9\%T2*>LAXhEnA!!_$4i1,R)$)unDG1'>r'*^d9H[$'"3L%%&g0KN9SdBJBW3uV"t(]fF@AV`JcS),_%9V!1_/lN\%tXBETBSI$Om?VGeM.H8FY4:H]+7Li8Xf.=;VsMU2fs;egh5U49>cs(n<4m%d1,7Cl9M_QWe/P0GN^WI9me&4L_saNH^s%8Ug^,PTm(r:]FM/B/%f(R(+2jN,GDrI"I9Oc1"<lm]cPoL$42a66tiN.gPG8.NW@2J%]+'@lP@oO</4`dB+'OUm+oi14"a@M>n1cBU1gps*nT>k$n-503<W0)F6KHX`'7D(DU=CQ(7("\$EA4+ibqhCE[Y/s)4;VsL%`ZD8%iGT\Gi!BMu+0\K#D?V9[3FIT\`b2-L&A*]_!tT%&MC4o`A:QRjiX+2f=9<.*,iSpG\j@A1_PeSt*,?8kQ9%SCgQPSQ&u)6ke)hO^%FpKs65moeMD/`%p(ct$&K.qE2,(bn=,\=982qAinPD>,-P2TA3nm"S;:\;((bmL6RpF/'I5c@XBI7W:O'K+V?.i5;ml%.\1911if%.Rjq!F%e4[LE']np9*EcnT`/#L,$NFd$Qm7Nud*$bUFP?lq+-NgFO1,VBbZ+eOnMdafr4X_Dl6I*(@LX-UMRd8*h8T,4L.!LL,np%&*LW\hN;_A#lu%J"4*-4c9l%M6:AlH"IQqE2N!To$0l3F1Z[ol]f9secRO0+`1E6m2B]<;:&mQqKpN7<7+XAUcK:hVF6&@B%&qT:%5Gc2)U,h6%Tu.*F`dEOa[E9/o6Zb;Y;/h3*#8D8l21e4-l;!@<T*=p0PR'Yq`)hZCK[gqi9k)m,Eh4;ENA,\[]%I[+!Jgg`\10I&%8?c!*:!lrIpcsAuNa`P)?O(>=<]u)n/j]Ap%,%F.ls2$@+HI@u!]Wd(XPi]jMN.eg#[87:n"YjW,8Fm3RXgncN?2Lic:F;q0ne?k%ooC,"n]ntC'+YX"A>)VW).?8c#clfuneiNFJGcobClZ2gn20;LhX7HmT]7c@%t,GdOdG2`?Zfp]ka4pYM%2Sc>oO2V.L"j/bD^]N%UkAa2&-"2u]hrEG89-RK\B-HXW6[%O2Wq&"!V>S=,DNasckG'dK)$/87eKF,^?6uB+>H,'ESTM3plTQ9!17J;P[pKY3qadh;/j'2%ci9@jQo76j+iX`gooD)-NmRb]m0!Ke6%HLtS,deCd0l31%%p-jF:k!Br"iT%1Nj)O#aJ6iE<1k"j;YFXTH:#3MZ7F2)D`!U)Z0%Y%EBoV/9)(q$TthV'b_&ME3]k>STm:4%1__o?C&B7G)$g?c_[a\kJDh7$n"HF674XI0!1sV&bt63q0uUnt*>UsjYo!em6J)]aTaX"R%(()gV8/O_<oTe`0'203ESQ3B]7qp1qhjVA,OT/.fonO0IKL12B'a1'*5uBl[@Vmo%?C^(Fn-4XJ%_d#,LdA`F=)M?*06n]JBgL0=%N1_<KFg)X$#!??#0I*Lr?p6OlZ/.O#Ac)a5M=J?c<QFQqAgB6V0W:Cd$F^c`>d,>[04=@U6h%iPN;Oup\EFd/%!V.XhL^[T=@ZMA%3@\3lrl4"C2kd9h6;Sf`%HGuA!C<M5!=02t.1fl`BdVEl)omK.Je+QjTl&bT!oGcE6"K,?Jp<*_!+k%>!9XB`aTs4KdV-GBnH?OF%(6jR+`fq%ligFR[0l,GS%"T(lE>m6*@\LJdgVE260gOKG#_O98+pK-##U]XH&8lWMj)%P_Au'XtV88Z)U*(:_Y$-n-\SsmdJ:Kp6%>`:gF&H,R!CiD?JEb;7<Rq()#&_g<J>4V1<MWBC6%h&WL3hZ\6_@gqXTU9-!F9Mu->Ng)0N.LRh8C]5<<Qtq;65e-&X0mf%)O,WF%h#OMMi%J?@#P13RD_5a2bohg`OXgmi$b-k%aY<QA_eS[Q_Q+!PJAo470S/`g!8Ggj+->?3O:oqG3-*(;'G'_G_,t*!l,;kY%$[Eo%_qP3&#c!GW7:>6&!&!?nGdpT3;R]$hTlY1C/W#.F,Q4+gfbE?M-=mJ\Y+^dhK`,4+;]>?#nN/hm3J^r4=onXO(1cu'g<g;m>r.Ye%pdTK2/1(Z[5[e"0nrqf93ZX@iHI>;L#`io`JZ3p.84A*i#F5J0nHet-Z4t>\X6)Ks15!CTE)O9`6;eL*oAUp7Wa_0RJ68QrF?kXC%bKt+o[]m"$i0%VML]5L_Ir.`qigHQkN\/g?A'RJ7_.<uTaA=X>,p]]:O1:(;Qnd64.H9<M$5P2q`%A3_&AjC-34Pm+>U;nD,N"Q$%0;d'\q>LR)%'HOdTK.\]$<1.6@\bWl6AFrVR&\eWHeEd069*VgOVN+1*]%VtJJ3f_UKNg%:u&p<6UQ6hiOI%f1mdaE6?fSk9LK8H%Fsg21`^,^W(`2gL7Cie+`jY+uptAZ6Nrg!/W,n$H4!Gg:3b*gt-mZY4#]7>8FM*L+_I*@o'^3^oo*k(449Hi/UW\:B(nS#-OB*e1%#L'E8"B/^F"sZOPeJ[Lk?6jG;9.oZm(>t0fN80!epcH#3Ni5qi)W-3W%"OeBKU7r>B*:=?P6(Ie9"\PV1b&QlRa:^,NqGn=$L/Zo%LI3-dG^2:gaI$Lm7SG^+&`/ntXQ_FL%;ph+.?hE,Hl"4sB=Fes\:B&V7W#Mo'^&'o6o,ki<%jb./SA;cRYHd:gL__@_Cg`B[\d/:%7J6rk#rN6ec7pGiL,=_%S-OL6cEYZD+M<f'dIJQ:.T2/4+NP24PTZ:0+SYY%a:^lYiP\V^\M6Jfq^V"B6rHI0?*h;[2f-gEnc48Q%4Jq(")0Q+W@3AQH\5SgZ$O+/YDq5WWF3$<AU%fN*,62SD4Df`pK$XlKfd%!Ok)3i@"NcD*"*h$!aVZ_f.h%J*^D_/<2bpUHBS7SN%S;*ogjk@=m61eXT(Er_Ng+j@tN]TLZF3B=t\$*JmrnEWD2@l??GP8k*=-(+AqXP]!>q8<oR8/Q]ULP*^`"r/^OVImk$%!^Q+A>.;%69[7$ZoE8YL=7qDD^7VIJf%$Io1^JrVTmH=oO(B)QGb/f)lkU<X5R=ep_`"X"C\lnGrn;Y^+RG5`bd:%co1pp4oa)$?/Ok8LCS7Z%r,0CZ4UCsYN$[L(]gg_K#dJY)1]c82[+30Z6G`1*D9@r8ecGGo+Or`D1Yacd(tFcN'uW@F"oqCNPE92!$1&Shb0@;qU?n^!/\&t8%b=Koi5\EWN@YS"'A0\2n:(1<<#kUK2G@h]fnH,L1_dOk@Y!Xn#RDD5HqD#DUh2*ZeK\+]H(cHB&87+S5'Z4'D``?K06TKh=L",<[%,_WQCRP3E++<4f'3Jcc_BTA2=nLP/7"MqC2#hCA64&_(18-LgPl8YJhKM+rYY?jmjKN\SV#?o:k)*HCY]ha541Mm0XU?XkfoE-QW%$6os$&n$\8=F@H<#rOfarMu?8*c[J)R(Z'>251M5,rh^JB:t!QFk2_R\Ho*]!NMk"=^@0,$/MQr!O<YT1dcN)M%cg+W<8@I#Upc-%K]jo3*7*\fl=dkuV*P!N1#Wt^J?oD#B#"MA0[Z$aglDeDb@^d"<)J4DiX?kHZ2^I;U+cTR3<qHo_Q,Qu=Bjk#(,JCI$pm3F.#'d*%e<,,7,;3b#TSNZ@+`fM>[:Vsn`WWNU:iGm=C=IfZ.n($P&qF^dGQn?W%D('b7'Bb5%cAU1VHmbJ!KP-m-:((=L3jD?i_,O=:i0=R%VTRr>hi1EBW6,6[_BTQp]bG6ZLmW]'.EJkA'F=dpk6/qN#RiNg'K"RsrgEVLb?PXZl&c<U$6j$I7:t^DDiIBXeBkccbI8[`'abfc%M@b%?mh*>p5'o(j*.1H,+bMQs+0nrSY[,fi2%B>iR'/su3u0#kC.bc7,%=a+0Y]FRT_Cf<o%f9!8tZR=jYX$r2B(IRZN<CD=(Z1g%h'Hh]eYC?f6@=>6%A=nt=s>@ki<urr_*p04U]OD.(7tj3<'n"p#m!%>aQ@TD=sJ]a#%\'<0>uuaP"`qJH8"[QMBqZQXiWQjq+O.i%#SI[dBriDN7N!VHL;_&AD).Jt:eL0XU1P['2lHKR7&E"/^aqFP.<)[Q!XfFL$Kl<u_N0cYe#adZ<G!2o6*i[eJm&%SQ\Oc,p2bUo%"(!8XCJs,=CVVKd@*aeH2)t6A2Zgu7kep>f"sJU59k8j<J/"E+C'-b#:n]#?!qUKLe["'^<&<\;84>pfi'lQlU<HD#kX5D:OPi`H%FKO0s_0-$g/iTnQnAu%;-jPRr,*`(Xa_<YY7/Wc8X;B"4V4\Xk/ucoGK)sb8Jm$SZM:HlTFXmGQEm8t[f#%;N&hRFWbnYInS<>HC%!o+H+S=taSX6)N4&#0[;^Se*hN=\AAG::)I9s[8?83eDg1du%01H96.1Cb$e6>JZ]]#>Xnn5k4+99=\H.Kokf6Wa+QA3QJm*mPIZ%JVi($"m]JI*UelCUJ1,RDZmYH-;mMaL,6^Kn;4'CC]MM2OSVEa$O:Q.W%c*63[\CY!YkOoQ&WS/&;MeH#'cDPiWQW[[tBX$,o2gr%9fWisHf<b.$p+Df_?!h=0@n?'9`n.%ij05*[Al*L.9WaLTdT\!SrlU-<DCD7hFM'`!5oHn(Cer5<!AP#6\Km.SdKEfN=Q2%<M4m8%U1R0"*^Js_-1WnO.qq.<KBQ!pQ34`l)dpK.<bG8NPUBMG#^9WMM29+g_EKjMjK3rj1S(Wmbc=\]:V3!*>.V"1U9l@?2l?^$fu[G(%FfH1aX0\A&6(iTkriZsfPVCH9\W(S1d$Wfar@W?F=33^U;[$^33E3:nMJj5IRfuH\HGOq#<[=Rs^T&LIX1BP/fFi8XS=V2q/Mc@D%=iAgp+<.OK%.\[qDR6a/1SMq@Atb+%gfM7e4@hk<=>5Fgc=4&9JccIh%%fEk_cj@i.*nDP^^'u8"K+NpQX9.(biq_tj'?1R+X"`0%41HOq1X!]:^:-HKU'@MXSIddd/;9gr+s<7HIEP>rBMu;R_^N#LZX%U8_;^:gnkh:"(u&LHM'maEm;Q`@:(CMF+OJrc'VJQm*SR56%"gog](NN&LGJOs#abO-(8c]9aiARJE3n87B`RJf3GZH4a3X;),b0k1sj.hh[1QqXZ`=i6.M#^OY8=cqQkZM&3R+7jAJ`RcJ#^U:K%\lDJpX=o-h&`rHbVUG.7*!B/YlL$?&XK4jHdV,VrM*P:k%!P@H/j[U7)>+"^9V&lN<S5Ng&-frb7C_gu#E?,>/^qhB`n2[AWAkM)%REc-\17]*8APeQ<5]Msc2HE<N+I?(X.O\V;B<W[:4J;"Cl&+?T9F/b5\R6.H3pZG^Dh.6_WfP@<#=^1F]p)W2!^+AZUbTOh!;kig%ji:t1K(AHigWGBrj(JcF`LKppJC-Gj8A[K$BnL*&b<Q4<TJ>*5(p+^6,8l&(>R`"C]JY>4['N)oOG6F_i(@2%q_M,?#Y%BW_]J*Q%C,Ro#!CSDP'nSV-$_.;l\f--)g$5[&"C6R'/66!f'\5ulE2s1i#5*:A+/0>j#TBQNp`\/E,9[`)P*%5,c*FS8^`d8.!GMZn`J)0P%n3#m<U?o*i#Xt@i=O%@^(TRPS)Cm5bOk0fE6\%u@Q?$85b^tilbA5@AP(40Ji.Me/gBI"%B'gn<O1ZqG?pOe2K5W3_'lcZ`$)jaV%=5oY*TFOr+;M'H-8ng2&(*$5a>b,6L5Y8N1FqE+3Emn/QfQCpF\hRrO<Cf`da\8:b"8o)P7<0ta4+UujbsP:);j$I?*Ap<cMK-<!%(Cl\bNQ+i3.+#bt-4W?OQD!W7D#t\sIdT5?/'JN9-@nKK4t+7I&c"!Q>dG>"U-YXbMCUT(`jgTCldRnul]IF6RPM.7@Pe)fHhA"6%NBCO:P(/mGmgU0@D\-'1Z!8prUh40b9NK)s]88&f(_FhC/$#/-7tjaX@$JT%-3Q//\Z_C4g9J_iM*oQ!dOB4?-:IZTE0Q-G%8NEE%dURAeTP=a@NlVP<3[$NlUK&'?d>?3jeMkj<6r>kMXYPT6-UIu?$\aC9]['LcV)u2mn>OauB<G(1X^"-Nf`KKEoV+_g:P$ucM0(`E%:e(W'fpIDt\eD-CeZ"BLDOp"u+p'dWn_P[J.q.qi&?hKZR\4mTj0p;&^-E31iWMDQL'#@1VFa%fJ=nL&_5RM[)C"Ngka(r_#pP'Z%7R]m2'"ETH<n1O?]9'3X![(!3ef#3;$;kV;esMLo9X<g^#i;G1!t]Kc8PnWd9OWTMM:I<Y"1'!UfOi;r(N1L(R'UIgH:9!k?-7)<%PEE94Wfkc)2eY+dd6Y@IK*))fk=t]R'XC9\W*NQ8a_-0gEL(4[Me2Da^sTL=*qn:@7@%DWp7JFST9]ZPK*_-_&Mn+086,eJ^<I:H%b[]?MYb'\Q)(C+I,rk6VE%EMui%9l5;7fj,*8p?i!Wh",F5r0WEgFo>9RE%9<n=MlK>C(3Xd*Oi-$i:V1/'dk.3,B^%Ykd3=Na!O%c,n[4S[CYn?m)fgH+7M`A?8O?'+,>s@$U5W8ZAeJd$8D6G[eOfb[`9S)@\asi-5`#G&%3d&/<;fKi=hJ&7T9]*#.'Kc3.AT"WJ45%R1oukf(6^eAg40Q+4b`&_P"0f.LWqq0Gqu7RTWB[#HmsZ<=@@]eaJ*>+#PF=mkQ\kAJ\QMJggg`639<Tphbem?&b4M!Q>eaGp$XN%^KJ:JWL&kB7)hNf7KGWjJjAVQ"/H".?XRTpXLr2EY[5H]^ceb8bt<LYTgF`ic;H(DEiSnYkB.Q8.OCl1]IV-lK@iOPDG_]kQ?,JL%?@$:Z[>@`p:Z[N]2C",2GAj$+]rU<bJR[lr_;in"iVE3VgJla+L@5>])fhTu;?Ft#9#ST=L<<ALS1jsQQoL>1ns6b=E(/psBatu,%.e$B9li_*D%e0cuPiY4;@,h?l89j<re#`Z&b-Xb`\.EFdI6G8'U+?rlb0ZIX3b6^TMl&PV49@PL9L!,,k$blQi,VRN\q"nE#1_R7%V.RXa1##\]nmI:YS"\%Zndm8NH[BAE7=iET923SJ($U:t1^g!H<=jag_h+9n*Dep/:1^>0&e)sWA>Ch<R%pr4RhHQ1Fe]=-XIV5<%5X6J"<(GG0KXl`?_0gd17qfq>S)?U8WLE#\p:e`e26;4;DQr8s,E8W7X(/,`?%f#H#rD)7'$^hUH01nOPb*l0&p/4:fMYaP:q/9"%/[ZZ'R$Z%sF=Ju'nf<uBEOIb/;i_3pehJT]YejZ6l@c_&.#R50TBqOK@gu%pkFTK*$sWljCZ`Wg'>FjObEB)iEV'g:m8$j?e]moE%g!Q)3$I_q5\F1;$#^W?MbYh=<J;or;b!o(>HQ[$S`"lr*Z"bje;F"1^ERIk.QuHbOgo*%YKUkP#;WB]%Tg^"Md/Nl9>oDm$bn^U8%FqQp;QoIid`b/BT(^<BH$K/iXKlL*d-]7A#od""C!mPe`b)Q'E*5Rm;W/t)&*.'t#)-pu7CN,h)YXRe#3b04X:-]E=RRT]0EO\?q%.Q=nMOA/_+_\DWs5YtK]6#-1Q)(s+^@rRgOi.)_UeR<N#S>d&sU3&pql0(l-d:L#pMPfc&!pg53bJ%0UAn&^^PN'to'uojeo"3h1%$cM&0S-fN&#]:uf;R(6l(fp\`Yf&W-OlDB2WRK?>&ASJcXAac@_Ng?.PcrT%Lq5a'?74iGAkkM<m+&%cJ!%]P`7k,nB&ket!J&bR%lI9X-WE?r-/'Y<E,Xd?"<JV4(6l$j:'.REf$&CB@XB`V9?n861WaKd7&K4>G$Yn/[(X/j;FV^X)`5$Mk(^@,SO:Ps/1@L/jSI%/B%'NQ\ta4,,-Mb4lmm&nPVh]`KsnI2`OBf1U@1`2a<Al0ChAAGrYq*73qE^cJQ?\KGaaeFL04EqUT$Z7M-,Vmu>KFk8?0G;O6^o=CJ%8j$V0!kEV5"rQ5f?:kh`+QQmd_9FNGMo8)0'8^e'U54c77[-:4<?K_`$kOoSGsqn\%R`Z3I"E5_J71cb`L>"QiB7kdG7^C*TOu"q%R.l,qritJ,7u_XmM-t!'<8_1I60`),_4!+oiUP3H,g'.UV)H0BS'5I%;@A[c1BKKhdo_Eck84F/U!CJCX/QIHPk%s[CE&$8>f+Q&%7V$g8-6f2@9IC%&_2a22^l''))JI]UKN=oKe>s!6a<jAIP"$rqj3.k@=k/"c\t.P,ls]6Zi.3&I.r(N5B:4cV6qGCaafIt'X\Go9%E1f[%=mUd33:=H%ZmDS5oHG(_1*U^%,)N":jnf3J2\:`6b4fE!q!80`H6C619%>W=P6QHeI0uD8]Xg*ePiTt(L:eK8qZj);/DAil%ehCH_GZ#)>fC50D-;P'+=!1@76<Mbe!E^50oE6V\K9qNZT\G8$='WI+!s[U2V`-Urq>r3Qk)D'E;nfK`?6oArkT#LSATbA`ObO*h%>Bdu0CQoEe,KWBTEnct6hH:qi5V&\:;kTM9Y8`>41F,g_#/R75b7/]Q7RBQ!9jYm@Y7F0`fnS-6/Vnq0&oh8l`$!QsX:YKcI&<o@%K6N&1o.]]<<d=r^I*h)=,1<egDK1l[V.4aJ=_.ejCfP90(@t"Yqiup^Ia^74W_1(/[fLG>l2&&B#)!CIB-nTBP0f](Mg>>W*6'&=%Zp8Bm\B@5E6BC\!;_9<3>dua*B(Z/6'"SaTR&e.^2QI)cJs:Z4HXV7!A/S?n!Ko,UC']KaZnJ.6B0,T7*>phjUADCQ;M$Z>7&(Mm%:nueOZsXjR$?(Z?!+1801k=qtiKuM3_oOa3e:u8A$$ir+=5$dlM1_SR!a?&?`c@14G/nXU6t.macE`?T/bjnd8Jn-K7<4dT5T'Y3%<6:-"PRn^26T,h+=5F^&!?$E8S:k&2b1tH,#M&*LAQWUaP^hC"]KmlbE9!._Kl#6n@9:[7F3JB<./0a_:Ij[eN?Y8K;kO1G"ZiCN%4P-fWbD]0G@I`kmn4XC7L@M$))+b+Vj@DU8_(-(=Ej.Y/$.sn%Y[IjpX?<@\;m]#Z.6FbG\e<C1DAS\>)m&Z=0I:NQh9<d"]LGLa%PZ1Z7`hSSm&E,fk#p=BAbR?bU1@_@nHAdXCM]+)FmmTnK>L6%iM`A==m>m6[S$W_lJU5=X10lL5&tIF7"9RV2]*RmL9nJ&F6:*\`%>m,K!ed8>Jfa($X-A_kk-](`k..2V!!!2B5%.B"W3i6nrWm43j5r,b,Ud?Ie9Ym//_8<dfY#3@lXbo]JK8[.YWRhRWY>2&-A"EtU%A>b8oSl\<$+G1o'ZXq7ZB.P<ceEe(1oF1\J#]Madd*836=HStQ;Fedn+;AA<^kN44nUN]m!*-#.3-aDr@@@r>^O$^\#,*hE)^gA^%c`$aN*V"GQ7'RM^0p$hhKpA.;U"#YPV5c%^:iQKW[e.FZ`AL!0kZIQnh?5elnJbf=*QBTR?jnmaR_fQ*[3;P"#;S%84WE[/C/_>+%7?)UJ-**_)d%Z+*XRGt^DRF2O]cfS$=Z3eSWWN7%%5/)p'Qp,-Zcm;&&rB@4I]DgBX\(5Pab^RR>W/Dn5EHPnaiY_mP';HWY"uC!%8=:g;-3LeeKj*C_7?T.C-\0667O.5e=_ji)&F6>U/%:"^9b2`U'Q0^DGJ\<E)Zf;Z-ua*IWaK-M<q`hoGSpp.3l5gk[_ci.+(][g%kT`cOn,dIU/mBV&qud'oKHb4458jqi3.T64_=8$4PobAcYhMI:edLf6l!P!$:X#uAd(Ca_QaR\r\6cSa61Eh4M;3MeGJ[;tW@/i]%)\9@*i5V[%*HcD\(l.JtdgSWTib&?lqG_@1n99Z.N<EW=Br]a!eg8#'aHBK,SPYU0e//JqTu_r7U/"gPP&f.kHbs\(QnT6XDh.o#%Mn*<"/SuL+.(UH*"B:U786E(l^]<0q/E?'ELkVt"JgY@Z,]!j"FqWH)$^W7S0Y"oCfG-CIg]JL4F6O<N<MqTg,ScJA]:OJ1#[`so%CE:0@njF6iD=]ZYLujDi:7(($J"X5GA[8UJ)k/sL+n[j6/<>bbAoRGf+?_55N`l&f9EZ>LWRL^)K[+%Z<,7/V<T)@Pct2GWKn%kJ%-5[C%a\oSo+[fa5_gM.PI`T:RQT"rpLa[8$G.A/<EKIQDhNZqABIj]Tfa%=V"HH[YVN_EbTQ0fXluu#N*(NmOQrIVt6%EPOCPG\X%G014*(#%2r1NPl<1*K1ROY)qQA\Jt@HC->@9hp47LrhHPX:6IYkQD$)Qc;XtIC;EU'1\`leb[7SEH+@T7_I^p0"-Ib\>pOK;)TBn%GXGu:f_-?.X5G1![s2R!cqNr*Z]6fEEiNs*)/SIp-MZVL0?`Qu@j<RjZC3..=*+BDmL1Tl=)UegYY%0Q<0JO5Ju/!h*rA8X.O,@1%)&qiY^]s>K5-/IQ]/>FJ@GO$#)N&CmkB'YP"/%FXH"C*i][gQkD@D;25lG;aUh__'^>Tm8TZ]SJb@,1.B^`2XT7f09F@;THFW>Mh%#78I^_k!Yr_&8@(Q+2X&i.tj=)EMX=KU"ZRH-l+m4/O!A98cq#9F`NT#[7=)]r3(2TbEuuq9;aC=ULo>)dQlP=ltn$k]#&AH:sHD%)D9<;gTMJi$CD&EqrLODQ#BU%p*uAAJl;#R^fcIdQMR*J0B6k]Q/H?=6m3<RW7u&2]r2,pFOq4nfjO"_[m<J&-+kdf]!f-`]L`4Q%>-E/ca6DuOa)86)67doq(R(H0DMG5b-5K2!oY,]F[lCbX2/VhK'N&PSgS?6r%"+qC&N)&ZSQ4VYV$']'8'E=e\/oE)'76i;>#lXo%;ImBeY'Ij$WUn<"=c&2+?c7("[(o[M;&p:<Y.[4Z>p>+$@VoS#)$MJ5>d.g(b3t]5K"OrW_1GA^'=a^5/Kt%DlDpTA*[Kl`8bGT(%7X#LJ4<nZ4UA;okU?^&BHkqt.2QTM])(-`q(9LOE6VrRUJH(aPKbSG8a&n[?k+pL1bW2Z(k0R1:/!m$+2SJrHgh/TZNd'G*V)6qK%(Ld=T?fN/H,gjBK>-*HenC"$UDlb5'9qY8S#1(TNn3i;AYgrUuDT[_4J/Wa1a(DI]'n'^'<sZcu2;i<'=[sOYF'T"W-KKPAs/h`@%bW@.%Y?rk3jL<p*\m:?_KgQ99Y2uWlQ;Og9Fk&oIYd!=I!\FdmQC;)iWOL9Ck\ZDYE.Q"qUXg.eh(iM&H&5md_j$L'c*)Pgl<nI<%7[hJfQ&-^$"K9&&\+-hNk8/Qc+sf5\ZcdDYgpCgc&^2??X"``"ZZ[7[4k<EOZF\5LO4f9Ef@:q]O\4+:)hG9P$`nE&=U^-sFmc[X%$/gH*H*1s;R&@XPR3rV4$=i`[go4?urM:06A%MP;]^i)H$,TaD1XMW9#-ZGTW0U:]I_+OKh+GR;1YmU0E0L*'[Yq#KX_&%h-nMh%%g7c$@3`u5D<okZ-SF^anbQGH:8t0%Lo*,G*\*]9@S9WipUD,.WKI$:L#tTPMaOX33d$M^sm$XB%'eUFq5ZujqE4J!`2;6eIH0>*K%kr^qOM>s"mVA6aifqc8sHAYU-Vk;5]*+$&=5e>VGo$S34cLA.&\I*qY]4*_Znqa!Kc.gdYKt1L7=kmQU'(`St\HdJCA$;g+4qpWL%"^]%+ZI$n0,,s6:,Qm:OV7tYD+EZV(k;JIK9c!npkumW#]PonrPI]Y`$'(eerp&Vpcr_Rqf+p#\m]<<Mg"06;%a)FA@_-D]SVo%>%c#i,XdO!#5$<dbEI0_T<ej24rgr.EocL]dqS1+nU=TQRm"=RD"(K0ouEbO-L<9bXN;HM%jY.B+\3BQ/$P`/&GF:U<gk0Emd*:3/c%[49LtjquYsM:a?5^of3f"]\-H?_=iC>2gM91K9\)DJA6(kAEtd>jQ2P)E[NTLt;fGi-qP5GAgAD0k1h1gDC5%3XNogmj&,Z1MN"p%*i`d@1T?>U(c4raK&%s*XPOau3DK7*pc53,mu+ERV6brD8q_(bfac-T+L)Wn\i+A1TD)2C\hBEs<p"g32?4G"[sW;`*7s:?V=o#f%^]rA^'59fjPht-kiQ&)n/Q0.cSDD/mgbL2Z?fo:L]>p\R@.1"n:02cmbPR01cMLW)5igVQJWPDN%fiN@.d4ls%o[Hc+[ZKP^,jZY%BRWOca'eu^UKDgV02k>/_DkUN$D6KtB]ul[$aI[\[\USdU8:V=a,=A7@(rP=Y)9q2WJcT'f4K[U"i%*d[R&SYi9s8F/"Ye_%?i@T%?GQ**d%MA'6LpjhD=(%hNE=$:7LuQQ`[r:>g#j/r4qlWi0;JZd=#mA="F)$j,>C$&GV9U]P*kh@G9[0#@59l1hjmbVqV"Udgt%G"%OasG-nfE71=%8(eP%cSi;!c.lRGr(S/,hh6Xg>H1=YUdL?@r-11',;J&p%pA+Zd\2A95*eJE8dAQpLorCT5JnM8VIAbLU,$9<P<3%6,/7,VAh0Tnr)s^21B4-0!+2p+k"$i5DU)",G9mm%=sG=Ej4,K&$%;*TeU'6DSKu0&69F2@;;bI\i`1^nuCA+Y*+Hh*Z@A[(7%<a%UmIK#aEsK9l)Bsd802U#&uk%!BAIPiVnfVW9@(=(hZH,g>G(eg9/>Z(<-jq[_J`gI-J!EgYBB,7DS,%jQ^NRsO@)=[PHg8,#7"C(%9,k&q/$$o+R'>E*O;'A,qfjh\gr0N.ONmW55RqBrZT6t1j&Y"nH)JLP8!Kg][JaCCm\<rt(0;0I\?'FaoT&W]o*.Dl4J?nC:R&&i%]?/^LPHKRBlOio-Bp7ep]X%rW>>J2kN3B21Z@qaH0[;HB;+,.'94#Z8!Pm1*g.9at,i'_TZE#9OG)B<J"dHeP;RP61egC<kY9ph1%NXF]mKYLc0E(&92:YK^r37l<B'Ul]pYc8D$ki^Sj;&uEFK,I\s0q-Wp8KWV4Nb9#qSFC^f\AO5]`pD)2*:$n(3,,"W"3_\1R(_7i%<7kuS1CU#9DU:/bIEi`!Mt_M!%62^X&i$f`NO5o`S#\#VQYk:bEs=TTg.YS$4lKhkM_sLr+m1*)Oj=>A&NuV1c5IleZ*'rH[8f'q%G+8ki/DYaWJ],bB2[+TJI%]h^2f[4Fq_#6lrE:Rl7AM4KZbQdG2q]RPS/3D#FuV6Y"e`W=W+`$k?Bnd_-n3(PZ<E.JU$1?u<2T`<%#YQ;]dnCkgi8fGl/6N^0*($"297]tuT+8S%1'd)NZC4QgHn"C<9IPFBW5ogn/--HH;dR,@=WhtEe;5A+/@FIK!D7a'o6r#B=4fsC%ACHe5bZ]6FJ<GfP_U=r&8`_\53[-[f9[X-RhEks.;2Q(eDM4+'C&H?5$NhAS<WPRB/3^iW_^^/fGpZ>rP#RUr]snbnLaqsj0Y0f/%`D"!;*X:T6$,'<-LmcMh-6\l\dAe;lA%3YI-E5[@].CtT!Jd[#<1&2lPNF]=\kJ2/84>K$7N@7-n7k^3UCa$-YAPBbn0^"Eb.C#c%3NlMWe?SoXPZ+B>+@I18aE"5NTr>(V6JO00\e=g@(r8K%31+BB]HRr+K(T=6>`/+qWY[<.!(qAYQ:4[XL2:!9;H_^8(WDon1r)6S%BTj^O9NGE0=tT1Y<+`Q53g6NnNflu.Bb+bq"?Mc.K@#!'ZY7i:@Y^-]oSeQl2mZ,@QX^'-1^gli]MF;(6elgH2kiB.AYPNOL`fE9%Wg;'ALd5)kXM%ptQ)W%9mT#tTK]5U='<Aj',S3;ji"?Wk#Y8J@Q]4FZ!-"oJ9iXR^A)a(^-+Q;V(O0]IoHG\3$]9-tiC=]b'SbP"%<@hdkF`*At4'$$!O3kU0Z$3BIjNW\V&j`-t!O"V*>YH9228*,j*E?STBb,%i%+^Y`U.2XLObLW?1=X!&$VVZ$DdW/Y(T(]CY6ao+%"Cb12%G2"b&-e3NB6/dCYJQ0-=[4kG64cL7eZNfACA:c?2$uo[kTbkKPYVYgCE7p*V4Ifk/=G?06WXp@LAP\SC85qIpH"40K:nkP%C_CEQ+OP\]ddS0WX1Ws'kpoeSXb;PoULT1WU]c*j_si$L#[)6L";UPO#*9BJfI^A^nj:<;3^7r?<Gj'A]a&64(`!_iXQr2>'`,$X%T+Zf"pF&]^3'JYq"BIr8_2Al*lHZg%jb,q'Eml;=Fo^2;l<R;5!Jcb3Y,\kD6S)aq;S(05q^Ap'?r(@&4U?j`JWSnC5eu(s<hYts%&RrXre_N_)Qbnfd5m[cMkdiJ;243\fFLs5`[6G3J7>4eS/D/@<\Bl!(4M\W:31oG-lNGqI;4aP81tUf"VH]d^;'IW,E2+4;ZjEuZ%/O2b*YB)B[5!UNpDo:oYHJ,!h$]X&eXGc!`5ej?r6"qeibp;!IM%WftYj5>Z`XDKBKojr%ps.F,'->PG_leOa=n)1*e/(rUO+Q^F%Uo"\Yn#Wb03\G@6?NL9!)N.>*F$3tN3:8mc6/L@M%$<naSc/-6X']2c,RX2uZ%=q7f^Oo7_(LjCXtd:k=7us*?3o4-DB?`2\fSSZ%?qr8rf$Ik1>fFgubtAOcOdO=-K#\hQe&7RQ^>_Z$&"@`/,aR3Q=^[IZ-P.roRsSAoSPUpG"?WGpZ4\2e)M!na@qX:V_MEE0;kQPc%>D3aSA<@::ZClIJKsFMT_kVV);?/a$0g#V]e?RI"Na3YL_'od1N[0j\URDj<,W1t%R?^g9`<CA4)X^%N3`HIp[%"@s_coA_7HG*]%J9!>d0PV%c3Ao)s]BCr"AnU9;TXiL\@]<:9Oa=tkJf7>iQC4NE9n_Yp+RiR!Whb^DWaS:lD:4nuTnkD0!R=c.jQ>t^Z9@/_e.7IF%F"O8,\u?>KY.#OW4R*)DX;]9?JfCCaa"VYoKZa#8]lhdl1jb)2QHO+d&Fq@\9f+@\RZl6Bf$C"8*X#O8_(MkQ2&J"fb_ef].*12*%8RhM39K>'+GX;-2,e31&:XrQ^\rBNdOC5G;-B/2maX#6ALoP$"V4(fh_PZ>khXnE]51?f"o,[*,XKZ$/+mi9cZES5DZa-F3!52N7%18)FRBj,_@V&kQ[qM67**%Uum=0F!MX00.7bc7IP;e>$ERb$>SSD0lPeKdlPkkpuS&<2@eS4,nUX:8oHQ"i@.eJ1\)+mH;G(bR=F%Kt4]"Fg!%&.FnXf!JSbAA68Hu=OK%&k;+R5Yur.dg"(IFid4:rbJXG89lR&adQCfcGY#0&/.&uOW0m[hM.4b*?i'g+jEb!V'?n!J%*Dn@C1.Z8.#.[,)8RrFG;lT8JlZ<kfo:`[UdV9Z#\#Td"8<10mN[:-s2&8.P5f+HrGSi<^VmR9/:u*Y@nXKlGbcf0XVT(;U2)%r_%-^[Cr2NSJ5q)LR-:%2;>feFfT+G4.REHuU[911BbD%@*Zrjg9/]W)8%=Jcc8#^QLJ-MH?nD7nH/gL(q*J[*meF*'ZV0-3U.%.g$a%4T[g;C#"#UAfFc+[RPXg:mhCX')X:<\\&-ca];,t*<SuD/$ihl-=M"-1KRS'Z3#E]2KLE<mH.a@65>51q9H&?F%Lf=]1>hh"cKpq%W*e'!8[$OY.Ti3dRKh^Cjqi$M5dsl8YY1b,=g_sc'M%cjH>*-a#naLc1.2[.q26rc>QQ9_i@PRi"oQc]ch@ENLmkZNpXh99qNkeI%ARXCA06`ZbTm%%(C0@/$eH_eH:%Z%'4tV4[blSl0F%s_Qe=CHdNkTq90HR<TY,T>e$2>4Q'QOriJ_%i@*-5BfC'sJt5!Sor/G0mU%/[R1&,nn_`*RRm-9J>t:%pH)t]r:'KkF:#Y3oT$U(;'X9g[#'P96@']Nn+Er5bPb;@tap#JJ^rL2?k"O`-3bJKNH'!M=ZA(ULDY'%>9'a"RJ!q'=);U#<JqUu$:,i6(;,&,TUMEQSM$[)%0[T![Qp3%W.,R]+Nr0t>d63\$t(.JHWV!`DN$DTUC"JE=.1`>&sjHdQ^+CD%=<uG2RF0bh?pnQGFCWl9D-!jZ>M,F(adOi-fs7X8kZA1kXu4,2YbI0uj&3%$NQ5*H4QhssVQ^uXSp$=;></Bb1lHZ9&l+%o?>-2K%g=)<:KVKtj9Y)K<)[%"r;HH$'c.RpPiTgolOBiEd;A#=-72T$.d[SPEJo<.X2*H1G8P)5;Mrq+j:7F3M<[k>B>!/e&1io%q0J)d\%8q'@%=H>0+!EBls,@ENWIGD>)2;6!f3^'=e-Dg6M*UlS-N`moQ/Clj2=nb!CV$7];[%KaINZ"\o-n&F52*ead/utWHK'pp]J/:4"%m+uRZp_Gn1]bPSLq't--(ju$/]&0`/bo,sQBb?%U+6h8E2s.`U[mHmhgT[_aL0&-t]AHY7B]pTej!GIMPX`/#_sbTQltFFWn?WGi%7'a[P-V,1KE$W&]Z.b`?q7:!u$&QffJS)>*_Z2]+6W"&.5/Z'=Xf"kIebbM0=QCGIF2';RV<)D97UBQ<RMM+l9ToNj!PDZ_Ec60<%8kKkc=!UtSoDQ7'&@YF^Hc1H<&:S]Tf`F[odF$as8]Xm,Y\Y^JSEemOZnES6?!SNrr;NBB$SL2HoXT"DKaS!s46&pW[2Gj61[0Ru%`GoA(C"U[1c@TTW[-4I*TqpsL[RTi8PZbLu>QG28KBK]j\KUN!ZWV0T*/ZS[k747SUUIE'>+D\#gi3_E&gFD3=B>Vo_?i%bSrT(2%)fL&1@<Nq#J2VUdZTRS,&G7er\cVbDgk&k`^2+4,$gJMHZs$bHPgUPK&9Yj=`\k$=<(U/h!,]k`n(#R@[9*jR>'!s_7%UEJou!".%l?fqB93Gjs]#ernYQm%*[De>E>-]X&Y/s)'DHq)a+m\<QP1'&<MQWa$CKgSKLbC8>BdWq>:)!@`AY/:-A6/CaDT\1*ALXgB&_R6Z%>H%d*qWFI./nGNSX[m*-!3D$kriO$fpJ?(90$Fqie2iM7+pF/VA3&=cQ<=K2E]=_*;'g^4J@5XNd4Bpf*?QW23Y@]@BuF"Q44QAa%bCeeiS)RX@"op_5PNQ+M$>5b.V@0bk#YeMb0%A1EaXF0PBU<dUcFp5SWrCA03J*7275g=$=^GjG'r@bpfhQV1otFlaBa\EMQ84lP%'3-Hd-KeIs,Z&lgo7Tq?7UE'fcV%!"r9EIPA4=HeX-Kd3<=mqb2L;[idQ4H(2+-:leBlC>M,N?KgiSd_]J%IhAY82jo[$h"GR897%lA"_n8C9S2-6.ZOcD+uM??O5eP\oQ?YZ`aM%Z>Fn2m3k1@f4/ZTh]h2W`;s^6s_.$EAZ)mig_?%rQOTNnpJ4C@!V#0_S"%@#em4E%WFT/32MF-^:uFX2Ekm\qet&6JM=Ni=6.f,r.*JEr4GBdA9V<Zb_M6_N>Y]jH@FBCiP2E<C?;jG*^*Tho_.mU*=`s-S?B2+/RHRA"%=E2B?<LK]VB9K<>;V$cog<`bq:F5-&U<7pcGt/W:+@WgJ\-enSG#?:s<5;YM2d$MW=dsZU.&g@Hl5D7!5G,fo0`Su/D3d^AD<C.R%hS0422%,"f;Q-uGkr]m#i1ESU.;?*iA)KN7TL^1MUY'4SKVU+8HCUs)88r$8nmW8_j>H(P=>0MtS9_AB:pJ<hA2V($2$E2[;Nh*b%$bb=nfKcHa,1cPq.lJ$PW0ms2EPRu+)^%/Ae"G=M,@R)c2!Y.'"a]k-S:LZ.@od/YFb*&Es'`5S&DVo@kgNejJE;Nk(fIVYYYBlP%8Q422?sIAhS"R,E]Vq"OQ)2Up'&'d;3L'drPF:%DOFY1j:u!Hj6,5&Qb]7OkK06gK]O":f7_0%l11D,rVSf.o8d2U7`j,"u.!BlB%CV#^_"J"(;du8@R4jKqES#rcO-gK)/b0nDLif%2$VasD'(Ce0BP#0BSe&!BoR^D?Y?/?5#2PeE(-daS+bUF,V-[EN(d\K;t$[Z1F%(07'6%g4Eh$,,"dDY$]Mi%1sN'#4jq8@G/cd+X`&r*VB=-<)is[`:=.+I0Pr!ZVS,ob>qt+Gn_G"J21^S`DC\B!U;sDB2W,Xp@o2%NJ,<qm9k:_it@&Lj@$I8JFHXk_q-[IPG+eH1O6dj`rYB3W]*?Zd<_(&rkeN>XIbe2q3qD"SjRY"g1I/!!&"Y0K]#4#3l-qWh;fQr%S#kQ@[\4kENEj;7Q/<RS3CN?g9Bon@TorQbeT%P##5:/1CXnK0"2;12hoeh:h"8lIpj6%<Ts</_$&LTBjV2@1Bh,:r_V8pml.M1b%=BI]+HE"L*2O0\*h4(,VdFm44JsB7cb;U3mc.1"u*Z"tNCR/tBdA"FYV(`QD>KV%PMW@;P8m\&VFu"0N2@363TR$)gm-\=C%@UVD%+I2Q,4Xsq"-o4tB(=6FNj_^#(;0[bpoL/,IK$fZIa/Xs(]jY7o`p0(S*6<:hc)?C3hH5n?.8WTqA;dH,m5d*>_0`c]ipaVT<H6Gh%@ko?hr^`,QVO[C^-?^?d]VCp-YW1O'\&;*/@LTBY;K`fnorO`imIhP3S7tku2<tjq-+d+l5ZL+48e%CZ>CgKg(RR.TJl91Eh-L3t%WepRr;-dBq\'llqQgAn2lE#"f$cE,Y##h>gRPQ,5@ZYb8Q,:KART6>Z$G@)n#)O#dg'Ki.4VsfUEgnB=$iq_D)3E%WfZm+sANl?U%_<,.5mp!*e]r+m`"I_8LQa`4d)[=WiXII#7-JD9MJ=I`XBb%3Pha0G+;p$LCr#ie!.gmnmp!So4"e_ri;_.tn9Rpasp.RT>LaH8]%^8Q]1@rX'J_m2ijnl<XV$Q:gS8@C9t/d/cg^8\,<'_816-&<+-(0Dn4CI#?hA/4L*[Yg9H#rG%'-]Y(J-EIDd-8l5?a`nh])=YJ@%5X]Yr<d>@OV5lj1D#(*rOUMTG"2L'l5g9ID[5OarM@-(??kTLnFr=pn74#sr:caal1dkJC0dK[TN7Na9@TK0t\sfDQ.\gg!2AU]"%`K[="Vi8WLPcW(5#XpU!SYn8o-BhdBEeZ-@@Pt4Q3`2M$Fk.3,Rrp*ag2L".0[nF3<T0\Yh9p'`YYh?Jfr^2SpG4.R22Z[=M62O.%KmHRhULMgqYh"InUp>Q5!W_qqW0E"'f`e_X\%k53=9EA`rNEB>0%7an.Q\e:$]U#2]-u&HDC\=Mdk-pJ>VR-;DY!M&;rga2eW)]s%G[^kH8-nK/'&5p5Ri-.1Z&SA/ZJ[4GY_4'C'ms]"W7YKV%_3ks$[h$s%KM;Il$\g0#k,q@@bNsss4.gU"<2caM1-A-FU5L^S2e(-%7B=@[Z'L2GqQEAEafJo#_?Rf6ArqAkK[S%PAg5\#"W`'s7#4[oZ.k#WX/kSa7,3CMlP=/L_p:F#66R2AGE$4JY>b3"]-p^9^@NJT%]+"m0!eMc?eFbB,N52,2?7kJn*gDt\BJ`>DqPEHp;.[!takb*`,bLr83NJT7'[iD`k=J7\I1e`bat02r2dba5"!)N*&cL2'g+eXW%YXA9-;$T7-CDWJh;E7dA,GhGGLh@kdN.?KcP\uEBFQ'jururP1R>W,2CB;.ORgLTBnd'>(h)0=bHE']1fDBXn`*[cU?UYN(L/k>X%obWGocVoe/d'^'iT2ubN8NPaFi,T;op,0J@,.j^(S!@lKg+a8KW@:=AMUY^^"e(r1[@:]8<XPn2kdDi5)(b(8:gli\qXapqn$H'&%khpe</R$C.'s.0Aert$?1p3B.0DR.r3_m]#&9]sTO`5q(R37qCcDeIT1OL53o2%S/%_sT=\;$l(^7&7SlNT*)I^I2uF[B1,A2-/P%4)eSr,u52-=+OKi1/m]oS<E9*8_*W*Jo4CkEoFtoZUQHhL'<H8d1dja2D%nXjSo1d]t)Q;8^j2R"lDJM#XEq%^50-C[38(l0L?kD%)"G@j*.L(+X%q"=1^FO0@J[oHCK<'M&K^@?45X/^BN.Ia3YGo@l5`c;kg<0Gq\030O,a:1PjI\FbGL?B/XE%tLeTRu=DH/<VIDYI%opIU:KXjcdE@lePQ!tL'MLYtR%nLVoAk2/]%GWU6(=n<#K[60n,)(c3CjeMpB7N>.o<IAdg&&-tZgPbkU*Y8rb^rC`e/oqh8)3`m%W62)rfF@m]*l2At&M/)4/"1dS<soq'^rCG[K>HW\IGS^YD=VF*DkHW5$,O,N\j,UN-L,Nu_XHJ:A_@c2]#U292TfR,AeETRW0&W(%,aL8fSA(F=!bVG!of-j"<0*XTT@960@qP^B,FDA0"Q2;mkLC7q>XTh7dG&GuUI5_Lj)S7`Kc4b^ViY"`'^G%'b8b.aRH&CKa+a`L%Q\E0HAI5gG:skOEMI(``)(?_%W5O<m5VefXm5.JK?8]9G2Z:TrMS(\Fa-5f4`j?"cR\QXQ[?@8E"4u19<04Z!aE;A=NM8;AT#qst%XOLcdabR$d0669i.3fb3GH,Ws\sOiA9(q,N-'*pT2sfNg2K.&NQL9%ZD$bA"\ljnNK(05Rc8:YcG`f9WT831:BAi\Ng$B;4#\96H%E#03ZCot]:Q5:I;ob^3L'B4Eg3BkQ4]">+Q.I.b/^m8IW+)Z_m=gM8[kO4&eG7@D-NV;'48E85-p"(C+>J66M=rc4pRM]YTf'T]m%PH"#e[Du`[]Y.QcTCmC)9ld%DO&q6R[-5rgX^luRXgiLCAOQp'CBkRrRmVDr;i[!6)93U*B&[V4d?Dr9W+K8[23-sWon1K#/23jA%j%9'<(TZl="^Peu71VU)2nV)se>:?Slj4"[ak6@5]-bMk:4CDrT_-QcRebZb?>[GZR*C(?n(Pu7r3BiG?=0!(ZYSI5lOI.'fE^<c%?)kK6%`Z1BmoDY0@F:\J.jPW6:f%KcV!.?ua8bC!B@7h)n[fqS`EfAj+7Jg846H"to#g;'`$T30r$uS<e\f%R+`cQK,n;JgrCt2A%;F,a`orUJe2T0%$!1T5h='@Dc^U<L)#b"q5gFDdq1'ljR<qsNAF1'&YpGs^aL.@a&BGD=%Oe23,A++G]B^)Ik(/p6-L1riOY1SmH%\3&6t"uK;c8N=ZLdSdZloQ``8=4L"bFdf21.OnqAES_+JC%Y>t'1B38*a6#67&+AnICdD?B:ej4TYc[ZIZh;&d^ZCcM=VVJN>'-A%o3c"4#7o%uRI!dQMA+UB3@'B:/?$;PED%iiHAK?gj_'7a@j@$hIsbI@-t,6(P3:`J@tX=%&O"D;g,4B7rbnJ3'_A_Q<.C<s]Z2!u%(:pk>d0'lPPT3qV/T;U"qEHuYcKKA.ohB,q)(jI$oS5eWm!r:C;Q2QRa0^/3M7a^OoA[)[M$7rjKrcEgk02>61>TMTa<^aTp3DQ^%ML3!2Hg`h??ErX0L#pF)[mX3(eWX3E-Osp__e8S7lI2,X(K03njB(.t#`LWGB,ie-L4f=]q+BIh*Q%3aH#:"mP$2KC;t2FCaW_4\%d)$%u6cssW*H*>'9.dreftp;(5o2#/Tki?.?/H1$]ON/TN65*dq81BCKbKacD,psL`8>%s&Vqbl5ijh%lH/?a)uG$T?,P6UQpAPK%RUn0'Tj\q*YFnO:?LU0[f>u<C@T-H#(t+9^cq&_Gb76VGZZ)/cZ[0W[K<LUVeLf1jHB.Unf`Z5$^f[nSe4.J_Q50DT5!Ikd0ZI*#%fNA4%K#QK^XMc+7pGjn)!0LBD7&;Q6kL/GE,GEL0U9J9d0;SUV(4tr!Ne:(L"H<Ie!kFS:];HZ_D^qG)?t!X/T(j>L?%)-`+Dq?V%PqjgH!+1aNrbYj7>nbe=rR_&=+9(;]s7ZKlleh^'>27\&3gMmPBeNn#ciX-$U5dK_?srj`S=<A(V50%:N9fEF_2_[V(n3Z2U04$d%`Kr[[Nm#rYJt[E`dZ/!->uhpcfB-^b"Q9l032a&g<-8[<5DML?)`k1<Jh#\/K.3qTV$`0id0]Cp2=\:tlOnqT\5R2?go4AEOQG&Q%PYi%r**e=/gBYr6rB*66G!X"%^aMeO<n`7Ua04n/qc9E&RnV6qbOHl1-jU4:N)/\7[+J<CGG/XI"K59qF#@,i[aBM0Y]_@[H*b8m%pFRNj#O7s[28X&W%F4*N*/hT@Y>(^*m,m!WSa"][#T5OlLl1<K$!D(#o9FE;_2g2"?OeP5p2MZA(-QMn4lM%3iGIrkk2Z9^6^4-I%3Y>_b8QJ502-OAi)bVV<_s6m6]dY(p:RJ)jZm1tZeU]M`BX[&s@B%<N55(Lh^gcd]3PH8Ql\J:5m>M!&2kJrj\-KsiVZN0,-AF-R%&O_kX=0PKTJl0be\.ulqdDA,&_%jfB\`6=pPsC88"FWL_&+.bg7$iABE4*[^3[kDZkQqn_SR3K,pMF<6f[.,c'qgSc;'jN4@o&Kr%B@t\?%2e^\2s$fic[_Q7dS\]Poc5DKO7'/q<CKCe&KB9R,T%8#C5ra"i!iK+aUT8T[o,6LOS[>J#+I4]nN<;>'3Lnf!W1te:lS04%'rrk)ZNsF%feCBo5A;`XHG%2<\b`o1KTcc&b"E$`n!T*(L)gCPDMG1$!D:]N2RpoUo7WTFOQbj=^E\NX>?9h"(VHV_n.B1B?XN'l%7TH9"^.l\`HR*X/.5o5*N6J4)=>iMX^sol27_f^K1@ouIaX=p%\:O5G[sV*PhW#l#.4]qT.$!O'3\$klI1[+'kM^g:/H0gQ#EdEd%jkK9NU#3?=Cub/qP`=-g'J[d?04;C*at#0*`r^P3msIOqQ:;.W'5Q4jb!hU@Y/$IQ.5,=[S?[rPR$8/d+=\nIjiDm=&7;E^F<$;E%lNM?CNZ<mS"=bXc:'`/4IjF&4,"".ffM^eJ?1asEjpE=$Q>If5lJ,Qqj`:[i3$b!LBO45PIqcdW2i[&jpI!j7=1!&+f7]iE1?jS9%AP$K.L0dWOcS:h*?"*X/bgf,!4nFqe!p4e)Wi]&es2Bl&RDKsLDk^dpkUG)mMtBhVE@?)Mk(+[d'Ydu;pN>F6f1ZAr`I*`pP\_qE%1)7ba=_bl4S%6ke:S1J[(r]dbO)QjI.gPSbrbRlb,/j5c*b1Mai[3n,Ml9PMFHVH.:5'8/flufW!O92m[-X!F@L9Q4&U^KEa#)r?%X@^P3_C9,]lk>acs'./,%[RtWCZNL0e3d?6e.^k)4N?3^%5hXUesLZl32RVjGLpe;ot0U@hcE7kG[#=Pj,X'108$O82\PulftBU9%m+HCRiI+/_V\3f]oqS1$30_"_`EGT2:LUZmbP$?ZK$/h(5>H6S(Z96md+8F&#+og-0i?]ES<j:`2QGq*U^+#rctlhULp0X*nb.O+%'.uu/W\D\;7sH*L^8-&U;VRF3SLd*;L"Ut[n0^!7alr['gZJ'5WTS4n&9GKWfe;akHi;<op;Ef_,<k3#Oa1((X\dX8\"Cs\rR0<G%i[#P(Q7<#)r=E`DNP*G[CWKR96o9oEp$*0GjfOKYn`Io1AY5ph(/rYP07d=ds'G[VSifRB+rUQXrlh&-bO"&$?6S/rUZ-,[A>E/k%W`ff\9D!\^:VUM#j&_`K^2[.?dt8rhH&F-+IbBOgjf!PE,@Z5,JRs=P`JUj9VDZ,LRQ4i.O!R2%'j>e&DR(gYZ'ij,V%M.@=^8l0%pN%<W&es3$qS&WKM4s>$=P[/(.GBZ]Ru/2uGAiLgLgY-TTN5:;:qSQZZHcT_``'cpNhpX>I8H")]d8.YS<!)cZ7iLPNVD$X2Ia.V%,o]#AD/$8s7YK(K:Z6[o)/b.>`e;pE3eL[[S@0UURa7'gc>M\k'Nr4ZD5eae=jl0>nL#O&i,7Z2!%8cne=.mk-.\BqHAT7f_q)g2%m+1*gcnUY5>HqIpHmKtUp"@.\]e+`sBNgSWd'P:Kd=Z-b'D":6<A!4.h^MH+H[G"e6#Hk1/$j;LXFQOpV^9rqO]\&3Blhjpee)I=%]<:5WJIt]lP=K+rq`q>#HWgjrD`%oYKN$1/YC:5/p%ED)I*u8#(75>D4gnFUC^9KsG5.U;>cQDacYUrP(V)teWXY62F4FO7)h-Wc%\#t%hC*JfVeB2J<Qk@2:'oSAOa:!I1cgP':^>cL)n"VE]$sU%Z\5/KH&VUh;*-dN&FOaQoihtu"EXp5m"S5=tV[Q:e"2Z#SWDhna%aLns60Y&N&87.*?=o[6<9sUGmUb_&!>+ig@11J<_&/IHa^s9$+iW(/[+mO?nmYHuLQA9-)S7pGN:fj,21*rFlqOp+nLRdKR9B/8W%Xsll`ru+KOhhEOB4^aC^10A,5Do;GkrSECE(j?Lc=tS-s7E_CZ)<$r?]t<WG0.0I@FP/F:D%b<(e8"[8r4CicX:_^HV%n,`:L:^_%$#iRKl3-m/)`g<o?RJ]=rENHhY60d8ko'5^=8HdJA'gnjrkQ:-AfbZT.t'LlZE9P,$,6ffWW7[O\&-T\2\q6T6ZR^3MUrAXFTCG*%[h]@Fd6haI-."H`*!L^soj'/Loni9rOUpQU_ou9u3C-\#8flEd@?&'q![pp&fa>eeJ3k\?4[BBGn+IlN+m.;!B&E/X>EChA3X^A-%2IO/dQYuR/91]@54J:E+(t+D:n/Knqd?$o7WeRZGncYA,?J::6C><Djr5OVseecOrc/LAeLc7VDD_`Mb0l:1Fg+-"65`s$9^W[[u%mjsMp-5Li7MR=0gkIB+c^\3?<(M&((eGW[`fr,TVY,*,b!c[VH*!4'>2k[p!^ohh=c"fHuOUND,&<1WuFJu7?l(mO<l-:#/ipenV%@bXbQd]0^:Rr7E1%&'ie)!90B\dI1qh`*c5^&:(:f?_"Ed'>%DI73Oe14R@*bXKb-f.^[^HCY`s\0B0@lupQha#]?lR3PA;O6SQW%icWeTZUBbl!p,[NO&$H!A)-jOd+?^Pkb6s*UhQPLi$K;X'0lnmkIo4)"sSO>O1UK$0lc863Bkt=UQ]!oS5r:I/EiA)E;7`/Bb5,E%)r_eo[hCLtg4q-NQedUc4bY-$r1q@ToB^5u!pCq3<2uXbXm44QkB'c*Dl(B]B:E$%#G_[)06Rc3p9P\jbtZrRA)>2<5EMl;So[HC%Je-oV_VDWQpLcl'@NCC1aSAOra6Rr0AI6'%Grn'AijCUhCcAEL=ls4h+Z=F9!M`73f"7+37$iA6kXA`];sX8V(k\2_L)$=NFb[G6%PCZNY/KJ&L/d)3g/"^\*2$&MBZT>gM2g;*g%eujao?\dR\E;4$PbDC7I(?kKIZPpMM$KHG++H\N/OkJ.Z*s'\PS8e&$u$d3h#b6o%-,k9c+sn&^\@-o86`u$?3LX.\c'HEZX=F@=TS8ts'DqB8D(2=endMBS;8nJ.;%]'B8j;rbU:Vq$-fD:d<Ji_=9JlfY(6h"=o;$h5%N@Eq7nju=Y&3Jisn<ehsFFolC6S9p/Ujj97p0nlcYh$Mup:2VoaE8__`?mG`Kn-:OOVe.C^H!l70IF^RG*^>Fqc)Xg8Zihh81Pc9%pk86(gT'LpB$!h5nj:@MB:<jOZP$-\OD4(^e&k&2<YIeYO:iL\%r%#o2=r\sn.elRiBPE+6q:YYrXA0b9MIaN?XqKX6YZ(PJVQsN%p8<Eof@pO[EhBK!f%VdenS$628O8HafoD-"Jen+'_hHE<Q4-?dpXHsJF1a]>SG%#aQ:(Hd&GUq!6:-Q\GKJ3Po<=+O<7GQMH#^;6%jCmucs7^dO=YT5hV2GC?W)1.:Hs1>J2)oa"$l==XnVqGZM.a16V@hOo>O^XIOi0)JbrIpjCn6gYBKjGDX\.k3A<ZisSAT(bXL-\i%q#>U8_^6TF#&CD!7t[WJI%@F/k4)K]&;;mi&iFtpC:_K0Y?PK!4Z@C?K8PHmfD4HD(b&E%Xs&ZGA6P:[_IU'0b2Yg6n2;CCoqtU>%".cH`LQC-1>J!R/NsrS'-HtV*,,Srj%)=QejQ.-eFUZaKeGCZP!l=P)3]GZG,,$\=(j$'u9ApJ#qqs5@Dh9E1eaEhs`hM0c^BHJ7%E3UHY%UWcg/JbAP9qC6X:<@9>1RoVgMI0P.k&g%_=Z?U(N\5pcMKTCn&*JYLaeBS)"0fh4+g')r&35X:KF(#ST\!\(biJYs0P0,h%#L>nPqF5P2N,.o1)N*Ta$6mKkr15OQ:CSm^Ka`uFBc9n&qCs_hUcIk&73\=mFi<uFhCn9aNleo/fq1_V*ULV/g9#JOc-Mm5M!V'$%U^TCQ1HSb8N(/WmNKDas\9NO)Yr@R%lbmkM,.aZi]P($ig"`H&;R;bm-'6q,Qn3^C3mT:g`c0\KM*`uE,E$pcbOXB]b=;h^\APg4%O;$=9Vj!&(GK_@pZV#0/CU%*.Skf!Ng@@t+R=G2oY6'XPYj(pF>'"uN.r%gVq"&IDE:i<&Mb@#Vh0W!aomW8@0t+n>`A*<pIejK"%fC,c+@QAschd#1SkLi8BR,20uCYX5h+:GN]Fl,"kc'l*QKLU.#KdBp3R4M3SqK6*>Xbf&<[>Xsh)[c*OQ;7UM*9Kr>&fB,:M#5,3%XiSkOn*jRFK?.X*i^;7l"<5WM-Y4]JC:!6klTh/m;*jB@N8`gp`(:OD89_)*&doN]q$lRH@=aq8WFm[E+i@_X&1M$,2A(FhmU=m\%BEWTt]':o7&O<kCA+HF,\\2\`+<Aj+cC9B16IdJgJaZ:_!h8GN4TR^#,)XK,?]uY$M4b`j%,SqCjJ%OY71pm6ZV;]5\G3-*.$Oj7%_<[lq:1.(AFp8D=P/uaZ;5^5P0j+[.>I\3&/#E_=JMpNmW2dWrL+*D#MtX-2ra0].fcZl.eDr"m3[XWo<U\arHk6/k(fL&p[ifpL%>:2HZ<$eb$mEgRAfr?`I\70'&4/)nVRoI+!c'PF:?"X*XgJtAOF*udEls9lqH'H.`;-m"`aY6uJZU:#f;mstG;02n;6WUd08\q0B%pbQIHbj[GmW9)63L8SIc$Lki9[]a[RW)ZYE'0)@R7%RKD'\JTNmlYMQJiWEt#+..O:_/#^De/&d4eRi,di*>W,)2K3T[RQBgGFp%%=c5%/L:3*H*=/*D6Bk5[P$E^l'-V05LC<FGV1s"qfB4QtiRb4oc@K.>_4QhE;RMm=8@:VnBh"+sYR-*k>>a;g)XM.[X^Z]&'Hj*h%Niu>(B+`hUR_cRXppAd6bEdF``,2FQWsgjf\?iCE)Q,a>[&_`M0nm!hP->@Ld!D/.61Va9;"2%9'9q/'.eJAG'-jqXAr^!AT>?=H%rHQft8S:9p92//5VP8e,$t:@")teYK'i*^j0"F7\-=u3\"7\p-Fm2SXMc>b7]&ou5TgDp6faJfYF.B$9d[>WdlF;l]Y7N?m:DLf&%9/%o.!d6eTL*?I:VHI5CU*utWPGbdOX5pTG?'7r$eI6?*P"NWN)O3&2i8R]n(TSS6Z4\$F=qfdkR72i+lY$n#eUE&&Z,>K$iPj3@%FY]^(PA_.(_W'%,WGV$ojM5e;<%bW6_tegXC^K*c]!&s9,g\2<Yt:='S7NgLaG1_)'^90$OlC_k'tY'&N$6XX17]/lf=[1>hqIe8%d6ln;$?M(7Dq-OPP6!Goi^T*37.)Hu>*02'BQAbpLh>pB!g,V4d)8sJZBMR#m#$r&P/g\\/8*j#N)EJfN^KJcN_ud?iT[GLab1&c%-too?L.W#V:,,O^;B-AJc^q;@e@/ein'hhbOlHH>c2&Q-Qo\7'()CBpdNFXWS/8%_Xj=TlqC3Z23jOTI=]q#@O>G7LFWck/p4iES%ZERG3e6B(V7=e'Z5$<n)KasI-)I@7-7ROFS*6;<h>:eH7bPH/#hm:t(p6=tB?XAg/5U*&/BUYqdn?&Yi1taj]om)33TLa[cUj;(Z%;QMYDLDpa2-LJfrRc.aU<M1`Ee;L.NLA72O9sZ1U..@Gh1NV-BgRGZ0?rB@-,`@cm%b[l8$F*sK2]Eb,dClK9L2,KqjLH*h'iC@'%XObe+ZXdhmdPB'_LEm<Cf!SaR6-WtFX.4J<aE?*3fcJZ+U6LO#YdOji8O5]`1=.-N]5gi9*.]bo6Upbm;TRP93p6Dnd.<:Ji[.U?%<]ru>iE8ZmSue1EgJ.`!g/a1FGF9rQOS<IC01A]O!jnT')P"=Ml<<A@DA27h?UR\^'_kpQB,_tOM3G_T.KC=s-Sc4=#K?R7$OX!r%l8`KZ$u!q2A_i`D>E.O470'Q@^Lp)k90g_qj.@4i$nJnj/b>JX./O@?a3t6MUfgTU80F'e]@D6Q-%qr3M7+FF4r<4WkBdZ:KW>?U%gH`>Tie@2J5F;KTD+$IcIU-CMU\/e:B]pp1me8KM6X3#AbuD7?q`\KQ=+m6%&e:N95i\H6ml3d^3ZAh#@(#QO4[&H0dIt]I>)6.L%2XiGDN]9L2E2=H+l#=;/cr?_'IU59bOrOq/6k(Hb,C\s:BfT>XlUE@mhXQ/1a9&[Cknru1b3a-DGcG\A+fAEoBpA4<KelW=?W:5r%Q%N93lEm!bNDLI\eTu,^>QW5W&1rkhM5u`W][&bVK:VaZFR\'UP:+B3gd^T+ZCR1_h9YuN<;%2O$NH$SFL5*[SD-HLDJ\$I.bWP8%OAAYB;k`?OpP:[a[sgN&-6<j9:@FOth3:PhSp$M/l&IhM#g<LJCW^XlL1.1SqPo_ZF.=K,6H$/%HrK^l#u+$Ah$9TpIs2%&(1O!U%)U0J)c1029TEZetbgT:AV@O;48+TUp<46P4X,,V"=eqAPe#@=EgVtr=FdkN15JC%C+>D+j,`Td0=5sHT5r/I0,D^X:(u3h^RDHJ!%@J-V&MDJO,'auiS"^%"lg*)c\^\N0PXB(*KJfUoja0aFrQ=_i;\@mSXJM-MH+3>^&?'<MXqQAR:#Z<Dk1rOB"`:th!gf_:I!_!i4%DN+Vrm\Z42<fC'A>Io$a9VA+(SW4#/3@h\t9mo%?.tGTS.Ta/sZS,A0K2dcCQab.WenYoN!C0Mr`26*@W$K^.C($mO49tG'n>t4W%dapOWT`S=$d0CO914b`VOJ.Dj?odLG'>A_uREtA,[A,(Bcb=!N$*_55GR)4+2W0/TERN:@96*0@V32aepogsk#,<F#B.7Op<,:bt%+UlIV(%:pJ;!$7frQN!Rgs^.X6POL*inNf;L@%t7%WPun!6KSd'24]F#e9AX7>jN!W(Xl>?P,9Z<+jCYVN3GpbccKUmrM%EFI,>>%rNAcRFOP&:aC=XRK"hl95ZH$5E"pflcK8bo)@!T`(gNE`65`0QS%K:#a#qb]4bHUP6/RNlh[8p$LJ+[>k=mOiNq-3+L])%B1,Q-?%j9!j%&d]C@2mCld3fOa$"_b_#Up,H*W]Br+7ZDgI&S0Bh*-<a6,_mm^$8-tW<[L-\f.pS9^6&n]gTB,.Q,=Wl/Aa$=%t=6k]gr7E%Dpf$!llkq39CZ=?bn+:IH(H$_Xm+VWHahQnrhMgsX._;gH&m6ZCDh"qCs@;fB>D&;_baVpW*Xe=-h'%bGnUjSMEN*73)(k35Waa4%Qtf'd7QiTlU?1J&Ks]I>>YVf$,D>]tV,4M1Q?\"jA_!Q84cUdlI"R5^ITqgDdJLRlK9TFQp@36r3e"VHBO,#hkA=fn'm4+a+-S"X%qH=e-LTe.382`S#D$0]?PgugcNs\T3OUY9e1O/^r-3U%Kj5Jui`Ed<.Y2WI7VH;<6BEq7QCW&L2]]Q#h:s/.Bbk@c,63]*TSmfD>%W(:54Xq%uEG4_^G4R+X>Sl*r,fjn_*.Q*S5&eqk`e0u)PC/I*oCaFrs"i$)I9GPoN>8VoPlC50-omBO"h,T#Ka*biM6J.u%:11\W%-LH,b2S04c"gWF;"LoWa\jXmf0)SHjQ95<\>R@V_o-AYEi_adVBNH`n*9uEkfI6+5.5=A*iXq2F]@_+\Mh6e.8+jF?#n-.KY'<WZ%Q"leBoLoT-%_81"WP"+p_Q^;i22F#nB$+D-/]oi&Z;hGn?[hW_9&GC4VVARg"bGcS./K=TRIE8We;E@SF,n5tMYm;+pAB:Z%$]U'%R<GjtDhDeBIQ9ts/%tHr!Ec)^PQ?4C0"ZB%4kIRRWUHpOWtZ@NO@_%9g:9)UiVY_!ClA5<j(P=8k?4c)%a%4FiA:IN]CA$.H>sfN%GB].4,G`e^J_?el<[-J03hR'Y2M/'2A#(M).&5M#0)ImI;[BEp2;(]*&5S5*#TD2q9g2DW=8#4t\L+SiTTC`6`F7^8')RXj>54)/%hbr#X[*F[Mp*`Pg_5Otn$3c6?cle\"//I12Sm?<!?':tV+6D*q>VK,\N%.VY`&>b:JSdC:nAstf0K$K=;5?6'&.^kfAbj[UTZoQ[%[;GG*7BQl:F#!O%Pk(go7GcI?5/:t:hc4J:lt$H)hflXdTY%`5q+Os)1NB[+T.S^=`NHYYQ'=#5\h#+*cE3frYGQ_S+tB!V)1U"A%-VN1tE62:P;G7ro,>B2g-?8WNW_d<p.#R>GIQH,U_Y/+OD?1AQAi%aDqhYrI,tMfTE"X]kMDduOZg!lO!A5tgGo?jn4Gs[:%ZS8U%PapaaQ=l]dXH[]Rj\rC>)=f1K$(A;oJua=Oi7/fi*F+R1<"k1K(P/k%hs7SAR8[5`Oa^3nN=R;3\/sS05(fW<*6W$3Hs,2b5d1R=%6d\`?0E;-@7''>1V.a9DU+q%X56IRdK;<c^;B0NrPC&ptritg3Yu;sfUK\j?Q5-3oWCN-3]cHlbgC0e\_,T&dM"2@jX87\]K_An>%/?rTK-Su"c\e-&Q13/))A&UH*]VHO^)c@$Bh6_/SSW3bH.IdZYkBK>5'#_3-6Vl:[\A&ERM:V=mfVE5FH:XB/9A/W9.&82V(OS$q%C1G3M590X%knpt$,GJ:-G8S;h+Jc.XNQV3?c_Z+<98sr"gR:>=`TctLdr-c"XM`)E?l4*`bWEF8%P7*b2Xb+ZLPYDl6m(&>"H-J<%Z5V>Y%s`FS4925f9#Yn>+@B-P^`ASQ9gP\k?"nEQ>c"?d%CN?WQh4'@Q-@.EhATLm@=IW;;&brb#TC.eNu(G"5ta28)#uV_%X$`f%RP6X@cl;+G`D&%?.4:sj$9M=(\H^`%0HQP.%h,M-*&;><`7$.Y/j\]g>OYC(I7_31:/SqK7H7!8[NK%Q(fN4i\B\cfqX*cp0$Qfk%p*eDjr-OmXDWYq6km@Q#h*j#)B!t"a8\]7S'V7ObR(\sO_/+a/[]r0E)JV`(LDKmIB9kc";hJ(Mn'fK7@:giT!La<ANa,=6:mLn6%JDBUdbF3PpZH0rM'(QTK9eZ%=7i?2=a4DB8@VshlC-,YjTu?>MiuO",dr)TQGF+h!+-CTn<@X%inW#NWDi7a5G(Q9[4?j/D`qHta%r*P3)8"mgCeu7R?IGF`I$raXE<);lh10*nEWp:keS2=iri'_r-`Q=-X1@g>_<U!=e<P0PB*<X^A[+]:3R.DKY(:jNhoI*u_YS_Lq%njCErOX=l:674Y:auujmm!r3;!ZsMnQ@LLIjN_oVfd.:T7sIFa_kNG9-K&83)r(4V6-C]'=PW;kK=OXX$&QG4gg8t[!;pgeF1MmM%_*G0ZnW"r?ZYaU.6rr9DL)Lm_92LOG4r?&=#'He6-FOp7rtXL72'h#a1p5S^FGdZoh!Hn))I$H=m5&Kr"Io8)lJeNSc$S9Lms-['%Y=jnT1^tDX0#>94bUGPR4p'39IM[<gfdA61cF,^;:L<TX?1a[6Qh8bld`eY&@UY6_@//(pYTtD=TW*&PEM\B<o:L8nRhs@\qU=BO%B2Q)G8sH3!kq5'1P$13bDZ[CVER@ia"\Lda%k/:'(3#_lJo=+5q\HitAget,^WuE<=<BPWHu.X591QFh6&+kfcfDP98l^3bhebh4%jY&G$Q[08RJP7ILc=CAk>+O#qP(74'=ccL-[7^.&=dN1$lUB[)^onprZ2c)KQjNU\5i)ZCb96pJQ/kb&KG`fI+@3J;2Xh!-6EhCE%IOf+&r[mKZpDI/6A:Xn#<6c]PP2JXC^glG-Ks8WpWJT,#:%VAs,\;_(Em!aO\EB*bSYuk6c`X@F^*]!%dCn7..eo$1AtMhNR<9,f%9LUFRk0O4uP=uJ]Mn"mY5<+BR%aiL:^[U$(lLt_K3Y%QgrX,?&)2-Zi2&OXd"GUqPUE!k"/k!kc4WgfA_f"cfqPm:N!['N7f:2ic%TiWd6ecjJJ^5m?8:U=nNAeVcaDEGr;'MXnf[Rp_2,FmIfM7p\Aa4gmH#[fcZ@<m$(kBl&5qt."EZ;7ij[f;d:><7MW8L%MDAD]tP%R9e+u2`"IECJ>3`hj1.\#,71SINQO)6Ml)-Y[GjCNh!(H3"d1&E>*o4."R:04B,F\XO"O_gl)[2"m\:/&NSp%I?apZB1;n1f-uG8%jQOWOi@+a?DRZ=N/aBjg;7Ra*L9NrS-0V$B$=LCU3$&,<>!_G^!_gV.KT7cG=Hg#s%ksr>5Z,mnSu37&M$V0iIX-b>db)Gn*>iUV%K)5B$*0u9N\o8*l5.B[E7n;4G?O[#_[l:"d<:1\cCfsq'rH&>/7#E:tP6Xr<5t45<FqF81Mf=G$(i"=70pi3M,isL?HsK.dR*Uak%'5gogba\0"nRp4u($")h"%^Q3V4)47"Nc.HZ>Jonk"Z*-AuS'k6AjS<D'ne3HVtFY!m0$qg4ZuJ?ilPShbaSgiX42I#PB9.31A,O%.la*"^Jat;"Au60_HUZ'<if`ZM6!=j'H3o<$XWt'C=Z;Z<r7I=TX(#dHNg>nas?)+.$0Z`,2E#S-dD%-#_O$^]>@35+Upl;W?"\O%055E+bGl&.d%%O!;[!AH)DNKrDJEZhh/Jt^-Q9Qr+pj,a(=[YmTU7rO`9'P7*M_]V@%bYTeLo"]6>7`Y7$0;CkN%oM(BIFc>]=(P%A-pM.'A>2e*s9n+,.[it0";n\S0f<q2Cs.P!%@Js<?\h\B0rq_R/[VLSBt5C)?c5%YjE8gCbZU:D@ACMB"a=m%*cZa:m7He#)6VP%Xh!!eqKVnD>5bidA&#2*b#5uW0H/nEg3^+pUuGi&eLrGD+AL\O:IJXV%f5B\q'(<$GP%*f3_,hSquXZm!@j2bddOOFb$]]RH4'ub%c)B-eY3CYK\Y"?H9#%\@Fc(AF%!:tcAeT2*'>AO2Q-:umE3eaL39d)='n"N-2D[jnUa76fLNgUe=1\1(O*)l@l]*G41^j@mJ7s)S%nN0[o_I/=Yb]:7ECH*)Pl,Ma:1]Q(Bg8>hT#O#D:J@p+$qF0h^%*Vn5!b2Y^"5n#NK?MHbi^VNrY?pg,Q>g1(h[s9e+aK:B<#eLO%T+$k@=1"u)/<G)WoqgYH+Ji)Ya]>I^i#pYlnbanHB7tZB8Ff?S\U#A%/4@2;k\lYS<TpTrLa%u%PoJ=[7$1ElCo[&.g%AV!a&!El%"(AAn9bOS/"AP^>!q`<(cI]qL2J2H'7+E1(drc&PRX7_$oDOtK9J%YiG[[T<E9GV$O)n-;k->HXA0f0sDr+k^P(17FH[?d\%(]a0%!Ye,1^iHPH7r:l4\13@aFE,<9f$LK^`@rdK(ESZiRHfW;7T!!+!(mmg_f\?La&'2=fel*6aNl[sXJ,XHUt1nol?4C'f_JL:hp\W(%:,>=Y%1C$c0mR;2DcdBa-3lHd#&*A<:V*DefCq"K`Kq_N5]u$6*5V8ilUBRmL^^jWA_3Bsj<:3?lnq$W!uj9V[TWr:\M)T]NK(F0%nL/H'=t0u-Lk?CDXg)!NePWSV[fV]SC'@:#%P:>%'Md>[]hBiGR#t"^4m:oV75n1(mJ]I4I":E0(j_7#O;(EepfDZ68<7lrmPECk%lo8^#<<76T"ji.'ATT=S`n5oK"feBd&A:Wl#FHG@4N.O4,oE,"]*@,)5,Rgj`(6E$%,LEH1ZjIn.0f(BRRsl+;#rZkLIf=$QrA0d%"aHNq:PJ#08I4JtC7&EsQ/I`$X4iS;4P2V6A!ZuP#b&8N<eOO:r<nkIgR3a10cN_4L*@!<ha<nM0eHJo`)Q\t,Hib!_N\Yi@u;dT%="\-Z$+>A2:8?$3p$8kh%08/SEobT!)8gdH5&"SL@dP/aqs#fKR4I\6P!FblN]p4(:'`qSlK[+QAN[D-bAmR<UY9=`'Ci)"OYb(&%J0M)EoaKjDn?/m2_i;5D%?:H:8UCNQKC"::c!1'N'qY&u(,Y.5%u'h2oPJ7t.CLh8F;<5Y;a>Xs62;onCXZ;,&I*i0KAr+1Q-CbX%U3;Wq'oNQ^Emjb5U[9\(RZ>cIc0l?[)&si!E?4H;kKi9eH!fXU3VfeY[d*K5d^L8[S5i4s9Jr1iZP$5C)=m.&>5AA-q=/dbC'`8A%Q^-+WGa660flnpNROD:k:Si<eB(_NBme&UF6aOPu53\HWf\a_OSG-TN<$3!cLP"dVf%6Sep+Id6e*=]<1s:dFhodlF6e&>NL[Gn>%m41SaiJ(WC[*Hk5\lm04CRN+t.K6hU2JbHA#H6#i"P/0'0(i6;\mQ%HgKBM,jhp[u>@,FlbSDt&>PpZ?*0Qs?=k?SUob6[`p%#E:%6(3V,>NZj;!k@Cao8p;J9i:gL!EGOk8&#IiQ424;LRaoCjt39[c"KrK]^$_R=+T"Sq"Vf,]6<G=KWaPN5B".T3V!=u]:M+7IFt=R%bPj>0T@;%QP#rg)7`qA35,@U2SIgNb>1L8o1*N#GpY2@3_Cm8W;iV5%\bkiZMH0p!%`MDF(';[QO3fAun4`6hF*QpA.(P*hX+tCW%MFj;9kG2Ghq<q8ofV:0$,j!F*P?#8#I7,q<Hr+kFi.WqJC'\S.LEf"NA*!<p!(5us.aqgk#_!9B*.#(Mi3q?C#`m(o/u<q7<.Fam%dM-Yp.oR/&5[i>9`5n2Fb;Q`5:>W&X,1HW-"S9<M@sTMsYXBDiXnQBk4/Vt!^eQ%!Gn!Ub8kMl$1/(a`o?3dpln9_,'5Dl4K0/_K%d)P<*pVJLoO*g2.303ep8Ms[,m3%mf>/<8(dN+lWQ0'i\_k=];e#1*5!i/5=)YlesPPX)gGoh;Z"`BdDr=o4%$mr%t(']lZ&G2u5%-.0[\]_@Z=\T)Vt<omMQ@8[S]0.Sa+D\?0&s2c_'LTX%BTNtseFgZdu`thZY^.PP7$Wl*gC'>oc%sfnPo4)LVrH6D+e^j=?!e-AV%T<<JP8>0a[ci2DCIclDocPIt.hW+%D&AlNF=rim&m]-&Q0*BdK?#7f+8/:E5i,AH$gG4m\cfr[*"$R`j<6#@t/cV`[efn]QTn&0`%Vt#Sm<X\+PN@dQgm(&!;?Ctgo3Eg5A,>Lt9Of@1]j`\r6-B$Na+#N;]20nG]jdq1neFHbfNU7.)47KRf_%--,;Xccc,0RR263BuA%YfEC+IHpMUYfi`4<WKRd<al:3FEPnMW>nfL,k6mD2"C:1SBZcNhVA^V&rFhn_>5[.^ZN6o%q>/o%KF0<I7`_UStB$rbFkQ@f&oUH%LWl>nC5+G#;W^qqGt8%6+_&3hp/!<_E_9jJp%]db\Q`%NVr2u4$*Br\J5SOF:rir^M9*6B9JnehY9BhBALIeF]CjtQ(7d6_</;J0%p5Y&E'AY$sIaG-%:m&0[0hqO%\j@7L37;j?Ye2#UoFADO>3$s3(Tah/f)B#BV>bCLNg'$pm*ME[P==OOCfQ:%/W76_^P0E>6c78T%4cqZ7_4[]\,B$0Kb)9QbZH]pC-]5FA8t6S3QuU2f*GgA2?\V9kIG7]j+c/7`%&W(AR*q6Z7sKDS[2_kGdaerZT6a8dP\:fo!#]%Z%FdQ-7kO<bAT214BCCTFp1u*3KhK^9`nYbjgI\A<l"q:X"*Fb#>b-GK`:LYXe\*bdW;<I4;k"`XR<bN33cXkF!a,#jH\7c^+0e=fX%PF1BX("[3<]+onBlJh0Xj'b\(d@$<^"Tq<#JOPqAWC:J?\Afj)jK^TL<QP<M1/9s>30uHua.1oF:WcMMd5KsD,gcm<blQg>,'NVT%:&WJo;!19@PfQo=AC*&NUQWGbl6N:+E(Nf$3Uq3TC,9?D0f2j$AO,3SM,NM33Cu/*=sqW8\=A!l<BhX6^]<RB:/]XsR<Zff4*Bu?%Lm@@u22%L[2M2hu2)1f%a,TkmCcVG:I.gjoBn`R3LH5Z$Z$nTWO']`=2s8]%mO=WC]!R:hPnV9F;GY1Z5fVsQ`l"gW+G#MN.@Qe_%LUkH:d$1!f!7'mE_)rK58F:+p;;/9CSq[F.eo.lDGG>#LHbU!^"U_bX>V/Bl5#?7Pl&$Eo!Wh+:_P$iWoQ9=]SSH]>/F2gdK\@VO%QK(0GcRN!SbO%I7e`D.J0%ZX4/%F2G#&;"P[.YppfefCCSFC,fCJ/(s"tbTES*(h[BWLu:?$s\_+D,7M6MBIr<NJEI+YGJqN+2!@%G&18DTQ$(eZ5!VH:9Ym(l'$Xrl?Y65_P1#MKPo91Ga8jF0"IUbSiP_rcG];H>P4&lS.d5ZVr*4D$cY%,MZ:nRa5gAU[4an!3r&"d%AkV]P,?>Pu-'_r^B?:^,<r'sJYcu9U262pd.l#k(54iAWB7Y$]1j'0Thc2?<7Q"[E-l@9Qj0_:"D>e=n8U[+CW)0psTt[.nZ\5o"%TilDdFf=J;&lkHSr-EJ0@BP.jZ*_)Hb"g[1XO\,Ud"-K9$iD&@r2/HR-=l0%]fXThB"\sb3/Y.t.%0MK0$R7MDe0>6lc>Cl]GVrQ%m%8j<*U_i;jG8sgRN??9>iTlWHJMcdTO>mBCFE;N9_?s)0?oq)8gLoO50lJ^CBe!=NqpVHpu7u(4+rSWIaQJ,[&V0i_<W=t%H+p3%.^=]n3t105^R?WV-?#\Lnjj,sW/q/EL*2Fk?U&gXee'cD"YKkm/]XR>:L%FhFgM.S!^HO]?o\u3oYY`r#UB\/Y7FV(/aH82P"\^C%K-V@WL!c71?CKMA8ba*gTd8rF9Z[-:XYcAY"_N`<7[f,)8ieg_KO4+h-oUI(mYsdYQi%&5'M]7P!ioGhpeI52!.-or-l1f$P^1A1%I$2;JE*9fUS5MN4>=tTi0j!X++U:ESpgD__ZQ*"5_X<@-6SN\Z^(/n&?\U";_D".(*lB\^_tt]*V3m5$BrYiPm6mDLY0<6k:Yodo%GDHr\A-nuPrAL'JP6NkYf;\TqSfe]*oCt#aLTG=0<9@81q2cRG"kg@Z.k#nZn!cVXWW[3a^.I!#>m*g#?TNmeb17&f\M^16fBC,,%;\h8*dgh:)>$ClEFp;d'6n^<$FQHFtofOR>aGQTScfjh<U6NZi&[bpT<aj]ZP=S'H=cXSl+TFKs?UEaO%.mdV`6l]<b"tGDC3AQ#%f-0J3G&GeO\,9m4m`b8Tj"M17%6Bh(0g]A6cYIPQjtpCdKq*KZTO9gA(dX%G`F00`E"lkS:L$7XKt0tB+>9L$p,GqiYk:qPkrG]@%n.NXMB`e,9b0pq8:ZaQ<7m"+iUN/u,-a6oWp`Z;j2scRal/Bo=M\sY`X`P-SPn'TK3YCm<A&aN"f_ceA>*-4m?20h#*t]%eFB:",%M]76<nk!+hSG+ai38FBfbq:_rV^$GkX1Lkqn5]+K^4lf/X,.QG[$1Dl.rGeRW0Y+2bCoO,6NW.#]*15A?DqEK*H,dJa_DJ4Jekh$%_k./4ZU0fMp7e)5h6$%@Eq@bAlbIa+ncR>jg:,/h^(;E:O$/0CNr//$C2Ge4bP(R>*7s7+Ip-'Z8Xo71frc#WQl%$]cpkCk5/-Bg%:i21BCJpXdHX,Um!WB3XNVo\NRM2,h[K"'_p/b?']<k<18dJDhG1\=-=b=f9FDKVD4dZQqks;_W%%:les6cOIW73=r@Ho/IH'HCW%KDa5#&JVj45tPMocUl/F+SBTEHb9eBRg<)r*QBh%Ai9(Lf0D(;f1B-:#i"9)`@BrNecJe";@Ce\[a!aqD0"QDO'DPi8a0,p&s?HP%Bb`nP-s2%i,r6,^]#RL;e=iP^N)j</Kd>iW"A<"C_(M4GO/ZGM`Rp@,)s;'o%2JjL0Zc\PVONr].+E(T+Pa9*@d+7o>!3XMR2>dd%IGpT8&CA:]VLVBc2<Vi.U:&pT'l)!F*%UI,LuFR@)3?;_YYg@^dTlrg#HKDbDI@hWm"b0:*>Aj@lgm^f`+?TV#h0P'.J<H`A8c!^%iL`dgJe=m<GHCkfG=qV"<3?Bc%uQ;%"t]oonqqLKBd"Mh2QUSGCC!>:9[]k%-4K=DcgP-)0B_9'd4WmY,7s/shJ0QDJe_BFmBHRH%-0hHNT73.3q]^Vn^5?L["!/.(e^PX"^'nq)^0EgT\\?C@,"\rh(r:6E7_NQ[;\+K_<P:@O-WBLu6B?shA6lG;/jEVRVA:fUH5\mr%G,/V;o[QVT9crKn`Q>e:"^OAn%$1*uKRdX$,H*YOUSRB0671e&$8`VY_E"Jnb1\8B1!S-!+BWg)P^Z_ppZgM/V9Q3>'iLW\"lZI;%K+r5,D6.I_'P/#P]9V<,l&I!(e]+84P;\R#IT`Bte<,F&"qkF'1Kb)QL-^&FLY=S^#W0d?a%5M&/5Re#aj<^HnaL+i;OBa3jUid5%)e-4'87jc&,7lMu1Ghp>8\;[-%3ScccY2Kc][!eS>.tM]dCZTUhQGd[$Bn]"m;IVL&Ulb)R-oZhiSODJSu6oVpNE/&n+FlYA6$,H%TU'&g,/bYo)0HlRW.Ip=c<Rin%0uA,3s0.s$Z'q<PiOP;W(*BU$m?qRjK"\J9,FHNWQj(K2>R=#e2-=D:\m1`Cj-u-it<_mfn6C0%Nj23U;f?:i&cIEK6Tt1RWi=5#daJCTRs(!)s"bH3dS8%VcFN"aBDNqV6@"P>`a$tl6b-k=m\ZA]I)^3aW'pqcUcW/WpD]ur5]<Y!%$ca_,J=+.8BBOJ@eGRE:'(B`&i)+/^RTD(m#V5$on#csRq/M0P^12sfV8S'bJn?1KoS("L#t(O//Po&PD;lj?*0N8IU;1`\<%ZsP%Y'H@7Yt-GncWK_K8PMj=AQ++T7CZApG\ACGji1sG03BM*"6,:4\bRcL44Q"5X(EUjn$9."E,Jl'AF1PkaO>$&<p6OS4t\T>3JNW&%YaJ'B:+@T?S[HKm4<'*^\FU!S7!5:b8Z;ngY9eMh)OiuVXQsdl.IHt*cjkd:_g3>5Y=`]Ul_J.D4'e4O+?[0RX]$`n*g8(68cRo<%4DJ\:.kj(\\ZuJAQ8jZ.P@fEm89<1iiuV&\X`s*+aKYF^2#sB&;$>Sj[jh<8iFPkW_c0OS3_BRdR/F6p@0.8b99ctsE&l2bkt!!p%N^o8K7jM/G[ZofrFai:3)06Zp[GglBLuo:2[EIqsbjP-fflU>-brA4B40d`)-HHc%^!T!Rnp+RUrdRYW(rkFIS5bimBA9bl2EB'3%PSHo#_*+%XcGiE.a13F$^WHKGc8G:)aRWfe:*W^Mo,T#_%,.2Dq%MYmciJhMgo$uAn<_-/TLWE7S8hc)KAdp<Y\m_AU=DH3mc+AL%8W;ul=:<nDS"_Ct+nAY+grGr.lSMjHaBX?VeTMnWVIo?_[ZmY9?De7`*N=%9l?LC'f@]5.+7ko?i]a)ELtKmd57&#Za0Vb]!*/-j%8.=!rL8c7_=J>WaKi2%C(d61GgY(1+7JV*$SEBaDA#T77]qpmUk>Oo3CW"ZI.3e3/hC%]#GkU+Mnfn9tF1hYfcsR.5otEg(Al'nI%%$Nih4n#MZDWWfdQAaQnN_@l(hQi"U<]@ZHr!es2.RhZDeSR6<GV*0C.%U7*eB+ePHlSQ.J%JcAelcBI8GL1fKuPBRNu-Wg*UGLU%SCgqoP"_@A#&m<s4*k89TsGqSj^!ef,PSpGDmi#(Wl;R!7#F8nF$=rCjC`>i\cK_8k7FG9QW:&4=?'_rT1@e`%L(auBhA?jbL5Zq%3W-K1[q0h8Ht\/oLJ<O>7VmJ*6BU00T)eO&$t\O:;!k(F_gnT(?26\+Y>=jJSotpb!\>XHgoUpUA+B\&p:!>7hdZq)JV>-k]b;\G%%rfd;mr%FK^>&/tQdFSGH9L[lTnASK"oKdt8[bt4(-X#a"'u*\4SRZLMH6HDXa5o^goPh^'N6P-duPRmjJrmb*WOT<IA18k\7Y$b%lOH6h0PuS>+*pW]%o>Q<,Lks@@KDle5Hu_i#rZ2sAMCV;0a5PB$"g$8&nc`17W1C',6:0t,K'N(IG8qXY+L[n[FYI7k&Z?ZiunIc%eA[Mpc?#U!gZ7$TDPsK&^oOn1W_s=rG1LH#KFPT$aH-/egN7FYK0rZ==;J8ol-MA(4Nl\Let!O6p4bEl/B2K7o2(btG/>l8GrqKg%!?JLjBY71I_o=W*C5?/s/G:C^[WT-JJ(met/,+T+]FoI*F<eo:!"J0^AfF/#a*Znfl,BeC8oMWr>Kb,A5*[oS6NE@10(2XHDoj`V%4V(4b`#]&S!bJs^"L6YKSSA7lH;M"5Jf(gS!*,uS,E,I/#\DpXM=N_#"Tg7m(86[dKC4u`,u"_.+$Asbf#B+`)1FZ5"+Il$XbS+.%Un6:+$P.s92,WDQ+,4`"P<2P)JKMK,Th:Q%2\!LMTd>ub:-:*3<"%EZ*cKP^Z.H64oI[\L@$eQY[<m2qRe)&SH[$C8"FFiAT#]O?%2-^H-[N':I2P0KJi?GmXY/+G(+neG#L&1?mbE4&&E^D1V4GiT,+quED0mGT]Uq4o9V=Jq"6tl%Ke@W-[*A^l'j&C"8.VE[(W_8B\%A^39$m7:QiV[#:=%Ya5b9T4Ul?J?@JSR:HYnr)*P?O$)F:>Wf8J>55&<j7aW/g\<M#\F0Rb;Zb'dSbr!)*$+5.f<^(9tB71Lmb8s%o[lgrNKed,\2dhQ)uUBhVuntU)shut;WmPX,?#gZKW^\1-<Ms[l=B[<ElO?16ShZ2=)OJg.0iY_7U(G/.f6H3p0\Xa_9&*3X.oi>%ktoG0nW&%M=LE>;$ft2&*nsIt+:JK+i6=OtBX['?mN'62WW[7KJ@W^Z3rQ9sp,h04qM7gJbg[e<_Z%s3I<L+/U#9')EWP)Ger_;=%ai,gn"b<NW.]?GIX(QY=DE;R(P`2FZ_7/)#-R30Kl9-RXBM_%q[qig5=_u$V+lKI\^@eMBFm'qj6p&G6pKW%Nd<YO&8c@@eWO*:4%6k,ed['.^OaP(QFW4%+LZ9'1X[1[<1e\5P]J]@J*(k*NU?4Mdq*<:Ca3@JseE)af=,K4$&#AIFLI9:V;,dc%>['5*XFj+:PQ04m@%e!mflIq71CH[$eoR8*9*L[K<(<eg7"JkX38hFIVERZ;:O@lSd[a'e][E#Ch:r,^gH8.m&hD'077aY5["ZXQ9f\f`=+oLuR.(d:tY%Y_hHhY8Cf>(oD?MB:,[J*iD/ck!)eJrQnEfP.d:;caHV$gl6g/&.o2K6,Z@6H)JV[q#7l18q1Q4Ob#L#(;gpRNkV,5[DI*a#IQ`!%"88PFE=Q/CH^#;bIa`\DD"*=C.4WIeG*Hf6dsKtOgHe'"C=/kWX&l[A]c0^h"@r9lcV>`8-MLtJ3M;88]r+U[EIW+4mr*gWQWi'Y%Dcjr&[5\^7KZ$egB#lI`_sM92--4s@kn#TQ<POKJfe!>-83jBuSudl,k=bWR$263oB\c57.$(<WWA&i+.u`3e^^5q\M"W?j\/N17%[11Q(ar.Xo=AmqpCfc#C,k.aq+40*knSQ.j]3i<j:-VJC68t+'WfUb*O.,GkoFRHfVKKBd-FEuP<F(_PWn^m`'>lp.k]`SM>WFjH%Jnf6V)NI5[fC.893P2,T6t9aM1K0:d0m[Rq^*k7:N;i7l4sl#W5fX_YXbL:(<ULab(_oXu"P&.>M=Oir;Q<0T^O"8k<`MP9i!c>Y%+VG%$]Qc;-ddpt^%W0EAbo&;-jX>7Lj/A;MnWH<q3Gk!X1c`W/T^$_ZD+&dP&,I,mVR-5e:VX%17\91Ka7f4E3l1J`j\Mb:@G@=S%@^@*K.H)/<kJS`S;0s$('E+.dQ0(mT]Ri>H<%%Ao@49\jHjhJ;puNb.70F<JmfeY;`C,6Zd$c0WSe"^,!o=ZbFP^^!#ZR<t-4u2N%cVsD6GA>m%"[om<TpcMN19^,'3TU"gE^YP(-_k*a%ISPVrB):%80KIP3\K[poX;22j+>$c9Mb2X]Cu4"J+)PG7424P6FR[`)nsp_%-#bjL50JT<9]IkT&Y".0X=4pg*iO_tA8$$eQ>b9cFu:#bkohKls6eaY";nM#BG77e)rVQGpL4<J:[`TEYj4WYob6(a2:*MBU&gN2%,Spi^0GUlCk/&`4aITet0A*DHUnu:2jqnI<0d2?OXdlt7\Eu!:;nZI&?BQMX4V2)9Hb6s"#?uehZb$]u!^/q?^`nuQ53rHk(<m#f%'K7;i'bgr,DAQ0p+7O>&ho:>J\B5T+-ji<="T;?IZBR`0blj3@,sLn!;V7c*]CZ%9o[a/P:kH>^a!`bjD]4YiQQ\$2fO>1EMFlED%#a39\5JN\_27p6iNUSV']=o!N?-B7h2Dg"P;"+DU8K*+</4tXBiaR/[A0"s7Q,dH#T@8h^=oiqR&[<@Qc0'*.)O4M5"*]NJgDVdA%'eToQ&;C01[,nf`9Qm.'4kE\*RlXd'NJO0W]Tk"eH+&fC4FHQN]4_o^*6U2pCOaIngkO!#_%ajQF*Q6,.I)(gEser?Fio9n#=YM%%a*e0+5g&=.)DD3UK;/m/Y;r'smaIVK@JtW77'nCH+R39h'2>LPb10pr&"^P^6Va.Alq@EeE-Z@WJV0@Pa3T=Q-adhhaL#/*)QQo'%c!Cb6[c-3U$pJCVfJK%_6=`s445dD-6A4km4(=8_/;=Wt'O;S0a3fP+g>-5DmBa.udfV^sp>W1^3B8)]EulC<+Dm.i\7ZnJ-Ko*a%;jPQu[-]5Y`tUG0b:-\qjI.Tn#E\s<1]WC@IB!=X]sp<1_p<g\R8s<7Y@3dqAKZ!VP;G)PRLr?+<m!6dLnsmk;+hLOkMVULH;K3o%@qBkV!Oj#@A,:2Jl10CL4.@`(UWHu#;F7\u_m[`Fb@MaP;04jN3+B#1ICi,X,T6R1K5>2Ff8;F3)/h@XI0&DDj'(_nT<0+PAY.Wq%M'T9mC>sb*J$!$9HNbXGl\aU5r9I_P'/uFiH.c:)Q=)*uGSB8.PP9cd<0msJ=>mTb#R(2mF,'L9lTqNaRW\m^NO.,^7HUn@NS-k0%K/=?T4qNreA9$2g*CS-i-JbN7UBS^\"t<:cL.Z5&W=B9\AL9!@3lSo+3N#=.'lK_g?%lP#S8fdo4)/PDjBkihrVIFqNP#\kO=_c(%:KWRG"otjaB'>SJ@c$)WhRgMP1>p3uqAo>4'=D4,9!>p`=8!92&!@%%IrH?*2.j"aIeSKb=o4?1X?kYDN\1$k&.;<lo2XD`&sI%S%g6N,CC@gkmU9AY1"6_?8Y^+G.HUR))[Bjc(34=#"qMp#ae*-r-O.bs0*D#c'''rt[=s*;Lnu17U9coRL;r+MP1*YBH5bGA7LFa^=%]t[k_JXJU>=Qas;6&h=c*JS_3?5aEJAletb4D(7=0o<7L@IH5&Zrks.2J_*rIP&#+-+cHa"?rL.p8?YUV7O'Pm4kd3ZLlgW_cRSr%@Ei!8O4!:pdI8?+31N4YmPE&fnj\e#](LW/UH9&O=$STHTGlfZ`bZ1)dWBdu)[2YR%"a(XpJnY'>*<O:L^q77B?=4UU%t2Z9O$J^%=MT-'$8I;miS0UOpE?BaDaSqB8sp:c.UEa'1B[^[<dHSooUCaqA^*&n+k.^9d(Xn?H2:uoIIaa'VbA<ZS+WjgU78'Iof23lm=%N3%*+HlR`ba5iMaLQJcr7GdYZL9j.nDT[>%6Z!G<)^YLVbgSOR$*Z,%%%$O\0pt8:F9(f<dX5HT'uVZE`u:&Og[I$lPt-o'C-rhP'HP%FoNM[@X[qN]C44LC<j(-?(PrCjoZJn:^*RuX_m:'Qg7\^?>\n(*7NCPT@=d+b4e[%+Ef.Vi2%0-E`ke;`Vg\I+"a$ZpLOYS`2q"h%BI8k%qGKj3A4YhKXK$#QmV\4Ke/RaP6O[XN=8D$F:YAMVUm,o/D+PgMJZFbG66>?b"U?<lJ#9DETaMOKF,9Y9kl:`E(=0_iLQo[[%F]*(=E#b`H)?<lEgE.FZR3fIICp4/S5b03V1<[;!rq([9.<51`s4>$aM\876d2uOLM]`]?Ie1lir.k=LJ,:o!ci<ZFrf8/TPlCTA%5LS`0s7ZKk/#OKh-dS*XJ'PsU&#Kq\+fT;'Wj78B7J,k.e<l?EPbeTS&YI<</a+q)B/LW+gX1H2(hHh.c3DmPZC)ka2H\/c)40I%%iJj[m-p1B9B_rCc:o-cD679=c&MQXf600rT$_Ec&P;>*"A'FDA@Z+JJNBpR8E"92I)NL0qlC'Dpn77@:)^RA,,PNl7rWQ)VSe9sV%%2G9<\d=h54,1":C_.?iEP(I=hk+MIDpqd>"*fpQNe:/_&@\c1GJj"#FR5d@Bp5Z7EMa6SJTO`k>GP#fH:K8L),#tAGm*><c`<Fd%\-Z,`$mn=V'>!n+[W,9.-MufhHWAJGG$*>WT:qF<7ObM2?fO7\OBOKF>V`+(As-u0hQYs!P>K0FJnBugjB-jl:M`$UOZXopffQi0%Z4OFrLWDDKDc2''A^dBu)ejIE<O&NeAVLV@mH8p&0,?BcHaKZE<CK6/A]/Z4$Ro/*pK2ND$)3=Klr'_Lq`O]&Bo$iN!t=+,ZLnu?%5ng=.$\;<\PGL&g4P,OI%%V\2ipqI=Um+f<lW!:!'Lsuulg.#M/,S+=F:N=K-`?LCWjJnqZ04#hB(ksrPhTpE:nB42*CqY)$ns\;%UjF.l;mRoK#r?$g(4fOkY\YSYd7=Z]7(0RcR3K;.V#^Ba=uM`%#Y\#hk+?W\(A8J'=YGI%#B-'=o'sDO#sMqb2'3.h8\nc">XT]e%(UPHV^M#3bmhSje&O[9`JU(pBQ7P6?O.J'D?X>MM(g1$,r>E.&R77`2Q=g[<8[7_erSQcQdk^IHjOF3$]d"7!0Q`R!2SMqV\sQ=`%prlaWl@:9f1JqcMCKsGUc#D+SWtpDh^s5G*(C7==$M<FT6$Yc-C5)RGUjuYD)/l.B70f54M4>:Pq(,H2gLU0gp5jSZA`No>d=9eV%INL@"oaio(86MA:\k!L*&7ra%6Pl5`S9B^eF;76G<T'=iIblN+Ftp^Yoc@S)RKe<]p?p#0b.>2rANJLDMRKkND_b"dcD;#M0rfHI%Jde9aG=UZI,kP'DH>JW+gEK8oNZ8X7Jj<0I.o&u:\KXaUa7KSb7=SK7=F&k'XmfjS6.=<n6Fhn-H6Vs]n'mR@5b/(D.6uMs1=$L^%J=c]1.YGm-`A-km%n%OiW6]"jm,RidJ(_-#0qX9(^C?V\hnOdD:;%6WAH`35Ls\C<_c2Uh!!X24%S[V^Tj[^R&8^,R:=?-kL2h6M%K;p)^_-9m-@a\m^en;glm0>32.mJ4jXaVAmGc]56O97e!L[:k<WS-^!lG=T2+d_GHA?p;JJ^/\^g.\:kjY4'om2:&*WJ:;+k`bcj%7c\L!Y<kl2EDl17o5.$g^tYo^dkJOro>a:tdgQ87o<#./%Juu?]WIWn7i69U@em]shH<1!KL(tl2H#:)qin7=Q_J!Zippar>s#Rq%r:j<obG80d+01>Y;j,=g4NS:f-_j.V-CUq_(&^1?rMF;6,_7;SDm`)5bX4:@H]lHN\(4J0!k^uW:)FAM5D__Sc'#Of(lS<(=[#A*%kq/jRXu9g'K[NQUT%(GbQ1BkCY/a,nGf68R+uCkHS>0JXVBQW<o#(l@8VuTYI=BsA5p<,27WRhm_dYoO+2J8[8gLm/V@XKWBRR``%Oeos#:BF%@-*FMjo$35KX-*6D!Z*:!Gq);\oLW1a[MBP8O?#X5q&"M-<p]])PL4hJDa5tC<T`gS:c.eph,C1"o])=A3%hb0-:'8o%o!1$$^_i4phjbo`[)"gK`ZW1GgoC`kW"F&+/k4<',E5b[Cdq++9?Ko"fn3Q4MFjFS9u$3@O$(kRIBk[H<IiPhWKgmLZZd.XQTe0(%.Y"2D&n3/TC,3"\F/",M)<sV14nX.j9i[)fdOF=!9F>-:.#u;iV*?\Jc_N6b)UD";<.k?E%gRrRG3oXWoD$:]f9q1>kp;+B#c583%+B-CU!@P!MjmS,:DM[(KQhKo?AdFelN2*T--P!NeFc.i^C3l+nDjikNaj/oUl8gs3j@j8iU$;"jpU<j'SZm5QMCM=I"Ao[e84(Ls%`c!pYW+?is!`S$-S9g0ni#V5<n5YZs*s0pG5gBT(ZeA-rI8T6-#cJ5jbW)/i%OA(@D#Tj%r*H:+V-PX-pf/&3#o(BU>BL6+9XEdO%322CS:4goo$iZWTW*$BI;F<8TV#R>#@i1!e'jnHq4<3EL@_M"P`3\R:.?B+T+0]*P-&##E:p!GH-Q.XFXTj0p$CEh8"T24C15](b%dX0U4-,UdYnn_ai0W]oODu..QZAA&bQ`pGtaSD1]V[I_`f'/DZ#G[+?BtBW-[:2@>J*I`)@]1g,fV_@M=SVZoJk`J.Jf9M7\p4g`%PD#FT#=/^%Yo1Z8UrY]hUW<(IR%\b#:\)a2A^T7Yhkcl>TjoD]!WLeMJ(m^aHgF,,lR]h:j;bJcL=a]B\;Q3W6^CJ639pO??+h;e%OPJS38n:Yc=`n;>jf'_S5pj?j4UQ7!/k5<'m\o?'G$VcboFbGUO[M,9K`#Q#>P+"VH+SYM7t=fl2eP<?hp>SNl::9T#b)JJ-l_nO%02*^;7Yne7rpNspeqP5Z%0D=mheR^=6]6=@4J>J@/gn7VHL9SVA=A-HpXKI(UbnMAJD**WFOJc48OFDn8*i51nZt6\Z3/$[bF,P7%c1F\<_<jK-F=(n3#RT=ckpPKGYX4eAIMn1JU!U<6qM=fEY&R'A'IYHI'G&>j14)Q'S[hQlZSm+MjHmb`.Q2uR]*"*jW]bDq2$'a_%D]]!snXlLEjW6<Pa?:i\QkURo+oKbaIoHCIT+B`ZRSkfbJkZ?cf2tRsC-JuF%Gt&NFi1[W.NV3`C]L\3D%r5`[$ZU4O2lqCcY"62%9]0PI9;&`Hbp7a@33WH9I1VB]dTnVfjfND8N3l+_/"'Hq.n(]#?@-%skG2lk<:SGNFRNfir'-V/7%(FP2(bOUhRaRl(eHT!W=/G=%qL]84WQ1GCYp_\9OF3E]E\PMV+I3dV.'Dgj?t'YQNqtUJ_jujfo^!!fp!,LN4=l!m&5\]o:;d438U@-e:`$C1%]C5[DlI3=!M&r/%Gt)TkdiU6,;L(1V'>I4.lRn@jT@mLGe@2:1GNYBP=j`6qha\&nn(73BNjQLjIa/iu<m:PJ=6a*A4Z`>gAJB]`n#&13k:MdKS\LVT%CSJK71KtPmTJgho=^,7h]N)#RpU#?%nM+"'JQtM0!6Fb\RpUri"&1<N@o[SGA:1[uP0DM>\YQ_^K"ldj`JH73YsG"1"8^ZQ4t:lr%_BNO)a-?r[aj_'>2371g&00H&lcZMEC[XQ2:!\V]$E_p01d-I^]9D[ZrYV?_WgQ0e(/GfC1"7]2"q/SYY&*B'&#9V=[[a95GTOaY%LlMd<Aod2WP;!Oi8'BL9%M\9lLKVdfDpl+R(hp;_$QuET/Hre<WX!bB@WC;r)#jHbgN<;]BsE.GEM?17rOr"%31FUHHp6J#S'$cN%Ht5?%D6?VmJ,i&#^M<fhH;8MLRGp6"6euYSGLJSBD5q3+/gQ(M<Kr1nQD&-<.^.oIOH`sU:FcL(Z"gRO<,To0mm_[UVnlWjo'_uA%)j98hj)sU(R8;Q+j-(4`oUR-f(BfOLJ^uP1"Gc&H<GF5PO!4@`ccMl?9<\6Q0kgV?g*3]cWkA>dgFUJnY-VVHWToN<%IP?!Dtt<&%fCTK\BWuuj4QCAALo/s#b9*5BS#`isRd/r/HJJaT7<@MV!kdWn5Q3Qr4k!V8$n7q+8_(b/I8%WIF\I:t9[.VPJ%SPS10(X6P3VqS%GqpXV:'BTjT.<oNnpjQ"$[lRM=ufC?lGof&Oen0j8uHJ?:mU_Eo<tlYltcFWZ']ZIs'i!S#8qhF;=kWY:ki-?*A%*214?TDk#tg(%^SjXTR_!9DddO/oq_@:S5Mi[C_&Fj&IOt?/;c#O@e'^o>nMuijJ'r@Yq8,e(CGg>pF>dief'arUfu2(6S>-sr*HpTD3C],of6r7r%OJ*E@0;_$(\4iB4h(\eY$0I_$^YDT1s-)^3X$Un6LO8nJAME`?WiiJ]n$.N]^%n<`hC.OA<5J"sD`qKtrnq42/JZk_c6&nF\8LsZ%X"M3$or0k-Z+0I>GSSPEl4M.>8^BL5YP=^L*`L9r\%2L[Uq3^pA&-<"./h?=[gVu/d$HLQ71EnQVsCB":b01):JOZ\Oqq@6N@PRc%#ZB%1\h8=kQ28!C\+@AId5u$=M,@fH+EMjuFR]tt=%kACfPe-Fau8U#!L/_68b@h8qA>*^AS=]K.BG)E_r'UDfCW"+m4P9]>Eh6U%e$Go7-:L*^"&jq$R5*?>$GVY"0H6#@Biu`t=i$3iO[74E>IZCNAl/d"os#UVq6!^+$aomoVHD/.YHB"s]V\kr"lmpT-:?C8I+C*A%@%W;K9Y\OPJ!RG<qlXPOngnD)&mgm-fcNFPL?;Jb4>g9=0It25j5Fd!I)l,9cVjJ(mVHi,a?Q%s0M[Z^!b[9uWa'a"j;g64/&(QD%dm*:[q_`chQ5*WKj#JH]1UMaEq9rAI6n-+G%huh1%%,g]"N"Wj:o9AU6TBe?:gIc%P;']HfelbCccM9V;rf_D?)K^Xo_OdZljn:H%G`60(&s9^F,$-:J]_^@*FLkLBlFR!WVUO9Tldr2HA^YcWXn@Y33)=@?WoF&!7@eAG",\D9Q0TVX#4:e?nJi3e\Ep+R-KPMJnXYQj%-+a:uGdq?pInKt0%;&Fm/YR&tH._ANr0kt$eS9)RCE0e@^V5I305.:W'G(5I=lVB51_Ge]*7_g<9W)=2BL:H<>>@h8\0R^>TdiSQ%1Q#DJ(Y9He:#.7NX\Vl2dndg6C$KJYReiCXK1Va;j[rmW\t[6`VVu)!PZOC10,(`1T/Mq-L<bF??,*:HO+_55-O&$Ip(3qU*27Z'%>$i5F>jjAk@sU:HGEhQg9\4'AC"N3ME/$)%qUu"SbJ8#oF;[7#[%cOg)'^#69K$#[TZ;T(Cn+F6),XGmO-^#RYJs.:]N:!!#Ss.=%%g<7"//FW:A0Qf4[8[O4Sf^6_XWo%$s*21Qgq3jcA%Bd;EmfAbFZ@>)btk=arA*bL7]j-k`0sF!-Wq>aCaN]n$M/'nAP1+$SkWp9%gWG;\/,qY&?3:Hi7*>7$s8"LA_4`9=b0B>hae$fW/:)q8oCkX%!T4Re@'+]Ps32l8ntL=;c`21_Y@[0ic5uC[p\:!9erSR2TC04d%p\A_d4R`(1in*f@QNR6QJ$;$U>WRlgPMo.J,X.-hHoNA[;cI$3:E3h(\))t3;uN<:JgbYtn*_WUE_VU!r0S[[ilecU,:L;!R]cu(%O#Op]dGCK3aS#4CiuMJir3=U=rqkTbbo]`B!^T!4]19P.3+JRn(SY-fOOl]Acd:lA7<C0tEgHnLf.t"I:/WlqOO$M*_//gN?RA5-%Q(:mCY.(V\jbiK5492/)2k+%f)5qLS6hT`Ypj),[,LiN1LAC5e0%t1PC?OH)VRPfKq[)Laqfb_HHqin0T=mc!6W>965+g^VEV$+n%(4rfV,9-fg/g@BIIlh]X_ULV:+=!5:2A$kncDYH`gS.<\VBP6A%Edn`)l[)5!U8Rk`up+9pZRr8atNTsC+c\K6@jKuS*OWHrT`"[%oBKBr>,JLMKlZ/%,<_`YCO4tSpV\]uMBb'%U"lXRjDO0jUDEb;?0lG1V\?Y?KF?3;>uZfpg7HY[V$&io65S8EKJ)+.65L@LJb"IH%WeqO7ItoXe.XOCRMi%jqj&cdYW1q%12(`8RkP8Gh$[mp=<VWA0).4JsfGaO+^1.s`._b9b])ZEqT%M"O.H`4)Z'SrG-ZlWT`26W"%@\\VP'tW$Kra2?,SYgZ$CHeWXVX8ji4`dtiDXr0A(DSj!SY$&e2TG]U>uX.:l%r\F88@^T?/4=5m,FI?POp_$m"4Q'W9(rM\2P-X%-[*>dM5DP-(Y&YPY6Fm;j(g?^9P:([mIa8P-W$Lte*:$$@Oq!%?a5Nk6A5#h?#5=X^1%ltp7:`l0%?@)E]\8tb!4H=G&_m/'>&KY%bnI&./bl&HVJa3(NEpr"Q<&LS0(oQsQm['^_8!]n([Bn!^LA"o:,7m.e:c>4nXg!/qs.`)<5nr69Rj]K2[sk'-Oh='$.>"AP2YHt%mT1;t-B"?R%Fh<W-r1Xs$-e\.cM]KR_9`m1bWZ!$l&LgjT]R,qM^u7"*J!U]K%okpJ5Yon0_D7RE=A4=?F,^5n2N/S">*c!lPu+k%2gh1T%4saPpR[L<p!Ddi'\><.$nkGLjn$4H1HsZm(_!%62lY$E,S32`=I>QH@@\q/jaC_tE=K./(^VnYa#uAd"/P@WSP75_7@0*r%IV-I;TG0)\aYgo)o4_?5,mh"'1r$J:HBd8b0Rn4/E)mis%=[!V&<UBX1DBqGdGnfS:J>]GLWZh8;%eeeSaHXS:>e;Jmcmr4(-VJ(%H2FD2]gOe$7+Ii]bHR:C'0O$@<K`^pd?HsLUT`gnrh?Mop_X'g_K*)tXciVIZe+hkd*,#WZ8?\1cKbfbl^\$Z_(i[9)ksE1jt-K_%3NAg+.)'8T'.t24W@-p,Y@,GQ+A1H7VYSH3^8)q&[cL*uiI@=#W+Q&!^GGY*NLZG&0sBj#R/ZlL0p^PW%o-r^&%tX\!XW^Y\"kMI%#+_N&,H$kq>BV.ufV<Le-lfXJd7D6_[iC:r2Mb=IHU(o$C5qEb`N#)Ar^>!t1N)[JZ?a=Z1dc]od"[StU?CoTbkn,aCQ)mE'hL_j%-kd#H>%9))/lNS5pmD&*R8b3\0bl:RA,Ke>O^1tTXF@Y<N,7JWMU^FJ__qKp>%)\dl_2Fq(jVonO7K`]-il<rDk3OIc&QNYddHui%!J+I;]W!.*gSF)+LJS<AKD1I9P\N-\Ze&[m*akU^9Nb1e):l1a;,^Y"GH,83=q*m+/6#Ni.Eid[>YCjW;Iun4;0?(k>j^d>fHe9p%bLh##R`r<U]60TM_dbrTdV?42Ni!H6/i%N+p&['X?O"J+E;goB1mZ\K<BN+W$DHasHrYG5O-cidgX?da5fE>X^gNcoZ/2JBrf/;j%_mS%KlPPik.'+#0==of=cWLAmC$u=M,nZ$U:kk0a=j8*W4q"RUHs4XLe!AT?-hAYW8K'CS8O.LfOJK@K/k,rl+-5YCefXq'-iRST%5uY@Cm595%^s[^t)0E/<S'jh\$LCLQG:IKe&L)jCB6WoH*S\B&P6eO^f.k^m$l;87WcX]jBO4)Po^/$g[=-F-PG+m^kP7dXcYn'*%F.@;F9>l-3Pj2R2'#R:N2X'a5hU*Qg[=lS$KT=)Y<`E2tK3kN*k6h;X3pj-]A\!2*L/X"1G/i^I&.PZYC[Ue>+XbjrY=1^K(VTsE%AS/uuqC@f9=f5h'<ei>lELX&mL430M)mZ-hVb>Z1-?hthnLRSV+4&D%?)B),4D)9);-E/OY$[icCLYa.<ae8U0?lTKgKt`Yn`LIc%XW;Lc;'?Y`IM*@6.s'AJV3(qB03Q9`prn?E'[uN='&7[-3X01+)-!'@4Au^A+_9u(QMQqkfE.$g+\6W`;[Bp_r,'8p\`HOLeTs?d%^V3AR@/9.IV8r+BQs(6+3269W@*6i#m)#K8.u`3aOJG@Gn=c-e_0cYMJpC'd"S8'W"S5soln%V=TAA[Y^9^2?DfC-so9M%BlC&dG%8\o-2:B$IAf`4tpORj,-Q!p">D\06(0HRI*#\(qe5&9O_okTBU/p>;0pWNFuVIt,NQm.4JMq46lY8`C#p#Z2=iL5C[G5j'Y`0^LR%?Ld.W^J#5UqHMQsJk\rNkrbQNl_debNa-KBkVYN=fkUrQC_MDI>0%W?X:2KsT,GFIR7=V=2#G/@"5S2d7uoh+lW[`Fo3n-*.OG+i%l1rn)]l1>\8(*.H@]TQB>>J97H%<4Ve`eJEaB9BE*dPB=fuNT0mpg[O=;)Qkh-VKWfrq6[DZ7eoc0BLNg!YMBr<sDU/Bj$APp)&c%io"E'W,"N*foK&>s8@R&]p9$uI89Yp%C.L8DUn@N;P&oE(I/3%)"csj],^:2e[io/p(O'4?$kg9T*tC1<VQeW/(7P3jn1afoXr5b%e;;IuRArmG%WGHmgCVIrf9/G=ndfV=:H56c2W/0df_k:KK"m;&f/0Qij@R:g.RWqJ02lEmX'%rkYktu.-TH-?n5Fd"W=2L#FR!Qi%:R>LC)Z*d`rA*aX895LL2:X@Xp\Z=Bk03E[@'8`3*CJ3A4oWk$%%%&%`\W@<dL"[G<IlXuY1o)h<J\$*2"\"u$Sg_`Y[Dbi0Arob%_Zf9fVPhCf0P\mECaj,Q<46k$>G8Ma:mGUB:u0qU&,)#r-SMa"=B&R)VQ)XeJ7.a)?^e96o:>Q"=\^&&&,=JJZdpV:1A>QB*f:tg%bYaeXq'd:Po8Sd(i\J%-R_H-FmB%;C(7@N,Ump"=RQ%jO7K26BY%A6id/54hF'0`W=Y6AJ%U!dc'tQR5'WgflY=W2$SO:hOV*f/k%H8X6rF;ec.Q+[):dqL?*4Gb5!(1;8i8a"_XWSC0N-/3^1krm51<!2&5rBT)@-Dn])_#7gu^4n)<msUUOGnQs(96ecuC,">1r!H$@%L6-5Xdk&A$cSH\#Yh:U'L%]([1C&W#2Rh;2:7,(PA.u=rSRY:"QmF&1HC!A-.UA(;nAL2tC%Njce.BI%oR*?Z!5`s4ZPXb3TX+/Y%091StfUe3:!tE?TcRMcflQi8fS]SY`JM##$S=>&V0eB,,F.?d)U?C5gRjFRc=i<l'/6R,*MAT(1DtV%c=W1Z\R5'cro3)(dSSjf$%Br+ZI;d4oMe0'X_*0X,m2<4d@6AY[[4lQ(UAA)UK;rF!s[u`'Hkk@$7fb(+bBn'2>Wu[UL`=#Z4.mml,44F9#l-Kl)fdbjYKkcm]%0R@cGcA(:RhJW]poc,b?5^81kYp!4WB"4OOY<TLfBn]6O^@lI$75#CK4U+crHA9/2jQ\kAP6cr/&QN;@6&s+VPeCK-)Et2HS6U7t%g\<W(0;%DhnC7]H<-n?g^\ie"[.]7M2^N/P7X1D%\8*MKmUS?t)+l]81gri,VEpZ._hY2/RV+=sa'8;nTim^U=E`qB6UOgS;,N`>%`!BGDL)rktk60JH8i+N[..)UfB^Y>JY&.(?@lW@c]ag/U86eRK75LJPp$ad#)T./OMO+!+U:-c=<50tt&l9e`$,6o._h!V2TajWE%b.NJmm^9`gd46Z&s"S?[!&dJj2)kuD'--e1NM]$/V844Z.)'WjE+KkO'fDM:#F7,*F*rBs<@F^BMl@LKaj:Lp2(*u'09\X.Nm4Hd%[9nd$'ooK%C$I0X(_5>$[*U^!&3,fkjh9qfLHHgGft(#"d)l_sq\_t2$lKE3++m<d+aTca@t[+1"0'7A[D3uF;UeU2r>`[G8gJ5u%WMJch=jg"?2AJ;$]ob,"V=AH<9g(oJ^pb+qDT*&l,!FO6%tIJbd-X\AGoZt`5/'TA9MtZc`mAOG;[p/5)Nb!tmpl"C'm<$,P19U8%K$Y6mD<lm@\<`%2GY\,k%<Pt[J073J.P(Q*1*fC20*7gt0GVtd&-t&PA^)7?J%Z-7SR2q]0'WRMSIYk^=rmsdgB7YQ6bI%B(C3?_%OiefEJ08qh6nTJ^JfmGLYA/p?4<r80on"=A#CJ32HAB)OlSJcMB@L$3$qFOT[u]aWRQ,G:pL"PCBZ2aUaj^BJ9Wo6<iU^_`dQ8i[%)/=6_-R]*8&?C7V#b@>l880#s^hGJ`h+^8_=YS(jO/BOMkTUKfYC2'40N=PZNsqX8='fm>%VNc'2c_1kR1:q;p[8?@E(s,ujY6oG%_:O\!QF[+kL(O!M&9tkU/V50/4F_YlaPD&f*9"@U]\_CLs(&^&"27MhEoNP+F("A<E`=gdmG'3?"<#Q$HVb!,[I)``i=WY"b7Ef%%I;mNh?^o\0!1p.-1N4u-5US/eP$TIqY*#'78VXplFB<[lib6Mf6BDN4PCl2pK1e#kTFh)\ci!U-Ju7>+B,CHsbOfm6"mT`M@Q[q)%qE3N7"H\27NMfrFVO:^[7R;S6+qd*T#P[tPn/TWPUE*!\8FJtlL3i=cKN[cMSP\[$qV0EC)nnAebB/&q,),(#YUt!F9V70mSa6!'%L(4J.`3MW.GD2ZX<C"0BHWPS%NbQJW`9_FP0W2-Y?;nqcF-RdB9-P8&Sa=?Cf;n0^pt;2kDdmL]gPbn'[X+^G+QtQXq=j@X7r/St%T!7uXT4IPk@oQ<iO&u2R=Hk,8ji`h"[F=TCO@NDR^LoLH57Q2f:Y3s^9SfL&^eP)9hUK)h7eeq^b/VbCplgcf'j:DUF^<7PjtmWs%JpE-bbRqs:gid]@#pc=3i4p@m@'h%.$^sL,hO[^>ml0.jBpICj'$"lOm<2R=6[872TMNgJdm"co#7aBQUCtVEBar9Qkh9`1jqTHV%M1?k,E4/-[KgrVE>0TkC7\Na>8cTbc7'Y3HM\"8-OR>!0d?qZFnL[.?ODDTfVT8,;lg\&j5#hH=5@=^0's[gi#a5iUIKH/qbPgF:%JCqZcZuquq#T1H2p.6Qp9:Is-!f2JcJF[(l+?u6Lqo6[rT3XWOhS/buq&@7Uj):?j[tO;S3N+X:hLonm)_@.oQCBfJ0Csf&@>;G_%\EmT)d(/I3Sf]T<=;K],R!)Vu0gj)=k(k$Nn<QGZV`^:'A&X%rhD5Uo$Ai7!2L[a2f_PuAFf[iO/9,;^`;t\6R`1POmSY38pQu?E%[kC!aH.T2fg+'4/jDSc(A`GWcK>DaDf3<7/$\5ZYjAj6CY[&4tUQ#!%X]WEIMa5<U+hIlAA=%h:liLQ9\l^+c8g#m'JfdI*!AqA#%X@[RI#a+ODJcrmB7V)WHPV$DirS6:`dTXVQT$pk_fGRp1RE\]1K'NJoiiULK!AHH\EH5=tE3;hV_0&>f\1Rb09]94m["RtejLP=(%;9L-7"`JKVbuZ+@7;ujIhb1H1!kE/BB=\k"_uA.L1s0tJ.+p3Z);@TQ.(u[m#MC^0-6A[n(SUKW0_k]^GsOK"/"-QaPGEG!FLe2.%:Y[)6bq]u0%P2DAQE_4V(KtAbA9ruZnpET.*A?NZl"Wi!J"?c>F]jM/.1;7_m^Meb7l$_4@&1?0hi>,sir``c@o]+#431a4$u:EA%$s>XNG$#8%R-*<7!fL!JCI'"m0M4;V2Qb4i.MM$]A1Bk'$-I>/HTF.Q!Dj56ZTfYPWdBh!@r]&.BMa!pI!",Mf]t^<U9%0]24LYc%-d)j<7sndF&6<PQ/MdJ:XM(d)s+>SNK"qn+5qK'gp-SaumTOaf0BiI7K?,Z>Ll1Nr8T3le:FOJl(V4?)*L$#*n_0#E4i4t.d_fdW%YKbUM^]Ik5Hehsj6WdOB9\*u7'aQZW["92>N$l#^nJnbgKgd?\-pYs4ThWbCK(k0[-t+ueAgJr&WXaP`bk3EHcLY&m6aXk(c>u)P%VdmehktR-QC6bgo_)!T"G-pmJKls;>!l*O`"$VtEf`^CCOi+N]FH.O5';81VW(9j1]<HgM->a0u$NO,)(_`T&.Nk-O?'NG3[!bAf%ZlB31=uSs=22(j5*FT]uRDfb-B:G+&C7<"['W]i)#"/11.\'3R(`#d:"2tC(pAVu/80K6_UJk;u;FBUT&Q3%Cd$%%#r&Eoe>b;Fq%1,rO*.+i5SHIq>hT()DaK"G;Zs,J?@3tS1b:T/5M.M@]2b%rEJSWs.GEE>jf+Q`WDnW=-DS2((Kl]nPS+^<JD);T=\!A\k5,39Y1%U)X6]a6;K\cOG2I]fPGBq:Vm^UQ4Ykb*MIo-P2;a5j>3pA34efG?;L$\*A@Ld=#gmch87*Q<SgP_(*BjGft2W&rP#/O3BbMe:7*?%_McU)s0Ju%;']UGk`F:nc.T\Ng#k#WY";Cc([unaI3[eN?Od(!lXoYc"go*oNGZ?."G6@i:tf)>`qou`lWD"##LH6SL=r.+@I>Hh%o)L(+;T<>>-KV%2B-lY=aA&_?UtaX[gDV=p7L?/iGE0Q^%c86+K;7Cp"6'+;^,^_g<a@cL$&!LD:t#=V1>4r7AVZkQrM+L/*D#$O%?XY`V)`Y8Cn@b"]-R;-m%]9p=@3j>(cJPj>n-\1Tl\-RMQ&3SS8E&RP^1j^5jPhF!kp?Ek(C.b/<I0F*SCr6_)l'tEP5Q6CL;CbH%X<K!S7Om^F,,$c/(<lM),TP&8%`M9f!-=JAce_dZpni<U11cIjQoG(hfm5>l!_?*CTOd%-A5"!"G\]fcHMR'DCjF^FEVA&UZMirI%assBo=B=?JHieE6ZC<:oK_9b)U<2b4&1.p#,%\:M8XT$ejpj\f+i2%s!7=lGiP]lCE#`j1%dlC:V)\ip6>6Xl#t_u71g*#f82t9e%Dd%pfd4,,(g"/g4@<5R?b"+LU.B^\s&e:DZ1^D`*31'G+J9D&%kF.F"XQ:^tM,;tZ$O76DNB%AZm`>0$lQloD^p<0o>AHK<RlbX/%\+:?a?0_hS*59ssHL[fiE0uZ\Y].rn$t24*#=H*\jUdN-1Qf(0oK;#E3,0"?$Q@=Ol+g!Dc0P2oSh]_Kj:-0iA'1^9=P!nTh!bXK%"p"%a-\R3b(6^Na%W)<<n`8U.U*d6gE6obTf8AhRhuo,]S:liR_n.&ji#E_[U*s='3&kSGDl2e)%M%4INg\;9]<6D?PT`m=#QA]7%OHf@W%Fg.+'L]P^!b9T1B'?BhpM^X_]g6UjV3-HR'o5uY>&nUM_%6S[!m4.'XoK4Z<oaaHk,)KOLnX7Zp(u3kJZK%C$O-c,kZf_f%p3H9JG26u[Jc#mKr'=>mCEWe(iCl`Dl'nHolAQhsO(?B-%J$d9k$p?SXKJseV*);XS%@6[2^43"lpu*2'OnU2.-;W5H?-FB3G.s>%2C/1[%V0O0mYqria$HmAICd_bbOS\qK._Waa+pYq^_,I`7ZdpYQ`mA'bd_O3Gh]Co/NiY)nj\ihOmE)?84WF9Dm6N]$GlBZ"1q")%cD7#h%h@[(e'sJbM/+l\)$N93#Z?UE.\JGU*91<PU&G0T`_5Q`$Y;CZg/L+A'$,)\_MPH`mgIWE%8WZ<Um,)>N-S?PT]I<nMqP>b%Ep3!%1E7;`B+$ie!STn6E^TP*YT;*&/GY^K6*sObCaT:8(o+p;hHe6K(tJf`+fu1u"Ogh.a&@\k'0sY4d,irSJKbCJD1Rt#W9B3M%!Ao2&?dSGT%?4k<!'^T6%YiBbo?`j>\P@CgbtdU3BK,R\hN.U>qf3>M?ruVNdoarPXe@NOmdcFLQZIgMbaj6)fdXZ:YhSI]QW(S3%[2L[SZn_?br$\XA'0K.a,hALerdch1$)lYe8t;.-W^'h=52NJa),6_o:-)JER/\R2#l@@WPS3R'P`DS-iE47%"s/dN;R2?fc]*h8%B0)=ibT;+Ka<iBE%B3]L8+N]3+M$<uXX'-k,uik#8f&5XMK9bR%oFKXb0:\7"f.++Tp#O]fM/o(\e,Ao4\LPcLma>FVs'-74AOkQ%Onhh$9/I45Mr@n"'t,<L'!GH.b6#4-Bg)/:iYsN=pq4"oN(9:GoJ.%",OEhCYQ6u.80ES7drZcQ/8aer.KP]_Hom*e1STOK$N1$6%]tY9X"gf:uA04P`8J1ifX=SW9+t8WJ(fK5E\\8&h0.s&2Pt4";f#E^]$0s99h,a]i][I:O/;=a0La7KZOZ6<,,S#*=4mqX`pNUjN%kbEPI`K)s6=lO@&Amdkahn7"dJoV3mmq4Xp_W^W8PfHSrm&!)^,Ilg)U%TFKi+g#NX4T(3(R@JiIXRSa7H",'&!((I00as`l.>Z*%s#n,Ep!pt?j,ZtXSpu'3qYfIGbJT+]:]EPlHi!@@PmX,_])LmKLR72MJ,f?8r9j/pJ,Ti:q@io)j5[U5I/!+pRMY\E~>%AI9_PrivateDataEnd