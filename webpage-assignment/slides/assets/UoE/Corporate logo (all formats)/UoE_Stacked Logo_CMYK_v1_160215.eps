%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: UoE_Stacked Logo_CMYK.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: Marc Wright
%%CreationDate: 02/12/2014
%%BoundingBox: 0 0 200 48
%%HiResBoundingBox: 0 0 199.6371 47.7355
%%CropBox: 0 0 199.6371 47.7355
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2ColUncoated</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-12-02T15:15:38Z</xmp:MetadataDate>
         <xmp:ModifyDate>2014-12-02T15:15:38Z</xmp:ModifyDate>
         <xmp:CreateDate>2014-12-02T15:15:38Z</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>64</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAQAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qlPmrXpNB0O41ZbKS&#xA;+jteL3EURAZIQR6su9SRGlWIUEmmSiLNKWBXfmLV/MGizta6t9W1PQNUVbnUtMeMafNZXFTFOxnf&#xA;6vLEkMimWMyFuSEVBYHLOEAsbSTTvOHk3TZvKKXvmDR57ny5Lf8A1yW1ea4URXCyxRC3kSOapKsp&#xA;cNJXalT1xkOfmzjCUuQtdo+peXbbSfMknlbWLLUdavDdW3lvT7GZbee1t72d5+XoOYZC8c0xb92p&#xA;PBEVN8POr5MSCNurIW/MU+U9F0a21U3OraxqMjMbNuX1qGzUmMSlDb28zcmCqiyRK7M/GpoTkeCz&#xA;si3peVMnYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlHma51&#xA;X9GXVnoE1sPMckDSWENzIE2VlV5KcZD8HMUPAryKhtjko115ILzy4/Oi80Py0ZNa0qRdbeVrPTbO&#xA;Z1iknljkaORpmIVFjg+ASTr+7dieAA2yZxi+aYgnkHiurarrfnTVUXUdQtdRuSXltdLt7m3+qwmp&#xA;ZvRgSRlr3LNVz1JzHyxzdBQer7Nl2ViAM58eTzjKh7hVfOz7lA6LqSPLEYOL25AkTkoIqeKgCu9S&#xA;dqZi/lcnd9z0Q9odCNhP/Yy/4lTGhXl5bPIbUPbICzyScQgUAnmWcgBdj8XTDHT5YnYV8WrN232d&#xA;ljwzkJDzjL/iU08tfmQdGu7NNTkj8xaRYzQSLbieOa+thBOkiG1nDNI0ayIpMLMUI6ccz8YyV6xX&#xA;n+t4/tLFoib0s7JP0VL/AGJI+w/seyaL5nuLS6k8x3mtN5jvNbhV/L3lzRpJZElh4Ikk31eQUho8&#xA;R5M5CxnkrMWOTMenJ0tvVlPJQ1CKitD1GUsm8VYt5i88XGkeZdP0G10K91me+tpbpmsTADEkTpHV&#xA;/rEkEdC0g3LjJxhYu0EpNp/5wjVH1mHSvKet3l1oMrW2owL+jgY51r+72vCz7qd4w2SOOqsjdiJ+&#xA;Trr85bCzfyvBPoGqSXPm22huNKW3FoyM8sccjxF5biEq0XqqGLKBj4XPfkvHy807/MHz/p/kbRRr&#xA;Wp2F5d6eHEc0tkIGMRcgJzWWWE0Ymg4196ZGEOI0mUqFoDzJ+adn5e0jR9U1DQtU9DW5Yra2jjFk&#xA;ZI55+RiilBulCs6qTUEqO5B2wxx2atTKkennW9TULGzvvK+r2CahN9Xiu5f0fLCjlWcep9Wu7h1F&#xA;EO/HBwea35Jv5g1hdG0W81ZrWe9jsYmnltrX0zMyJu5QSvEh4rVqct6bVNBkQLNJKW+R/O1p5x8u&#xA;R+YNP0+8tbCcv9UF2IFkmEbFGZVjlloOalfjK+PTfDOHCaRGVi0s8rfmjaeZbzXbLT9C1RLry87Q&#xA;X8UwskrcoxX6vGwumVnPFqNUJt9rcVlLHVb81Erb/L/82vK/ni51Cy01Lmy1LTWpc6ffpHHPxrxL&#xA;qsckoZQ3wnfY9eoqzxmKxlaY/wCNV/xp/hP9D3/1r6v9d+v/AOi/VPq/P0/U5ev6v958PH0+XelN&#xA;8jw7Wm96S3y9+aVrr3mDWdBs9B1WO/0EH9IiZbNY1chjFGri6YFpeB4fs+JA3yUsdAG+aBKzSr5G&#xA;/MzTfOOoavYWel6hYT6JIINQ+vpbpxmLMvpgRTTMT8B3pT3wThwrGVq1n59a913WtFtfL+qSXGhM&#xA;Eupv9CWGRnT1Ylid7peRljIZeQFARz44mGwNraV+WPzcTzTpLatoXlXWrywWR4WlrpkR9SOnJeEt&#xA;8j1Ff5cMsdGiQgTvora7+bGm6Loui6xd6LqhtNclitrdVS1EkVxNy9OGdJLiMqx4HcVUeOIx2SLS&#xA;ZUiIPzN0hfNlt5V1awvdD1e/jMunrfC3MVwBWqxy201wnLY7MR95FR4ZqwvFvSI1zzu9nr6+XdI0&#xA;ubWtaFsL64t4pYYI4bYv6YaSWZlHNmHwoAa9TQb4iO1lNoSL8zbc+UtW8yS6LqEceiT3FvqWngWz&#xA;XMX1QVnehmWJkTf7Lmo3GHw96tHFtaCg/N1L3T/L19pnlrVLuPzHJMtlb/6Ik/pQIGM5UzmIIeVP&#xA;jkXp8qvh89+S8Wy61/NoXeu6poFr5U1qXWNGjjl1C0B0wGNZkEkfxfXuL8lYbIScfD2uwjj6Ul9/&#xA;+e2naV5c0zXdX8uatbWmpyyW6vGtq6Q3EczwmGZpJ4TG9YifiUD32OEYrNAqZ0yjzF56h0S60Ozb&#xA;SNQv77X2dLW0sxau8bRIsjiYyTxoAqtuysyih36VjGF35MiaYl5n8uP5q1IeYrfUILnR7K6eCUlG&#xA;sb3T1tuVvcT2l/F+8bgecyoRxY8TWgoZxNbIIt4N5o1y781axd6u3qM16Vh0+GVi7x2qHjbxcnJN&#xA;eJ5OSd3LE9cxBkvMB0D2Uezxh7LnMj15ACfdxCh+n3vK0fV9D1cOhm0/VtPm2PxRTQzRN9DKysM3&#xA;OxDwO4L3yz/OB/PegWkN3KLDzFYf8dExSrbC7eqR2tyrF4lUI7n1lr8IPJaLvHjHHwnycmOTiDB/&#xA;zH/N+91TQLXybosno6Laoo1S7jLc9RuVpykdmo3p1HwjavWgHFVsx4qNlqyZL2DDvKOm3k0l1epG&#xA;/wBVtlRJJwDwEksihELdAzBWIH+ScdQRwH3FyuzIk6iFfz4/eHvH5KeYNZttTuvKum3FvbTamrT6&#xA;RdXUJnW2kDI16iKrRt+9hX1FXlx5pv1zW6fJxR35xej9pOzhgyicBUMn2S6/Pn83tHkq1s9CvdR8&#xA;sfppdSu0b9JC1MaRzQJdGshYQhIgslxzdVVBQNvWtculvu82GW5BLsVeR/kl/wApp+aH/bef/iUu&#xA;XZeUfcwhzLvzkOpL+YX5aHTUhkvheX/1dLlmSEt6Mf22RXYCnguOL6ZLLmEu/PuX8w2/KbXRq9rp&#xA;Eenn6p672lxcyTD/AEyHjwWSCNT8VK1bpksPDxCmOX6U3/5yMMw8r+XjAFaf/EWn+kHJCF/3nHkQ&#xA;CQK9aDI4eZ9zKbJbS6/NL/E+lxanZ6bHoMi3H16awllmdXWOsIb1o4Sqlv5a+9Mh6a82W6c+cv8A&#xA;lENc/wC2fdf8mWwR5hJYl/zj1/5Jzy3/AMY5/wDqKlyeb6iwx/SEo/JL/lNPzQ/7bz/8Slw5eUfc&#xA;sOZQPmD8v9Tu9LXzr5PpbeddB1TV2gVR8N7bLql1ztZVFOVVJ4/8D3BUxn0PIoMeo5pr+XnnzS/O&#xA;/niHWbFTDKNBMN/ZP/eW9yl4PUibp0rVT3BB26YJwMRXmyjK1P8AKr/ybv5rf8xOmf8AJqfHJ9MW&#xA;MfqKXa9qNp+XH54Nrd231fy35x0+Q30nREvbBOfKg6lkAA93OEDihXUKdpe96D+W2m3dt5Xjvr9P&#xA;T1TXJZNX1FN/glvDzWLff9zFwi/2OVzO7MPJfyLn/MWL8tNQPlm00ydFvb0wG8nnSYzUGwRYnjO9&#xA;KVcV70y7Lw8W7CF0yL88pNUbyD5Qluo1/Sra3pLTwufTX6wY3LKzKH4jntUA08DkcVcR9yZ8krvb&#xA;3Udf/Pfy9Yed7dfL76NFJdeW7S3k+tQX077u31opAVp6QIQxivGmxpyIFQNbsect2RfmX5J85t5n&#xA;h88fl/fRJ5jsrYWeoaTNx9K8twxkVWqQA2/7VK7EMpG8YSFVLkykDdhSh8/p50/JTzney2J0vVrL&#xA;T9UstY09vtR3UVm3M0NGoa/tCoII3pXHg4ZhHFcSyT8mP/JVeV/+2fF+rI5fqLKHIMa8k/8ArQn5&#xA;j/8AMNpX/UJHkp/QGMfqL0PzZ5Y0rzR5evdC1SP1LO+jKMR9pG6pIh7MjAMMrjIg2GZFvM/+cdbO&#xA;9vtBk1zWbx9R1HTmk0DTpHFBDZWrhuIFd2kcjkx3oqjtlubY0GMOSL/MXyv5N0L8vPMOoaNp0MWq&#xA;afZz2BvlUi4AvFWNw8pHKUiKf4S3KnY9cjGRJ3ZCILwSxCi9tR0AmipT/XGazTf3gfUO3ogaKYHK&#xA;h/ug9p/5yD/JbS/M2k3XmnTjFY+YNPhaW4kciOK6hhWpWVjQK6qPgc/6rbUK7XDlINdHyvJjtOfL&#xA;2h6DqP5YaBZ3dnbT28E9kYrOWOKRUH6SVGYIykgSAEHxqRgJIkWdbMS/O38s7Xzd5s8saLpn1PT5&#xA;5hJHLdgRpwtomkZkRVCeoy0PGMd69uTZPFk4QSxyQtMPzY8k+X/KH5R2Oj6LB6NraajbyO5oZJpC&#xA;rq0krbcnav8AAUFBlMpGQlf80ub2eRDPjPdOP+6DyzyVMYfPHlxh+3qMFuwBoSlyTbyLt4pKwPtm&#xA;BpD6j7nvPamIOlvumP0h9N+WvJ/k/QdRn/QNsbOeGIQ3UCSTGNhIFZXkV2ZXk4xgepu1NiczpSJ5&#xA;vnIDJcilpwxRgh4sQeLEVoexpirB/IH5a3flPW9d1STW31L/ABBMbq9ge3SEC4LluaFWago7Dj/T&#xA;LJzsAVyYiNIHzl5Qt/M/nnRb6HzbDYal5ed5NO0mNIZZBI6q0pkUyLI/JEG1Nl+nDGVA7c1Ispz+&#xA;Z3kGXz15e/QLao+mWMsiyXfpxLK0vpsHRasy8QGFffbI458JtZRsUlvnD8sdW80aJoul3fmN4v0P&#xA;NFdm5jtULz3NvyEUj1egorbqOp39sMcgBJpTG0zfyn5tur6xk1HzS8tjaTxXMtlb2kduJ2gbmivI&#xA;Hd+PIAsBsaYOIdyaZZJGkiNHIoeNwVdGFQQdiCD2yCXnOg/ld5n8tQTaV5b83PY+W2leS106axju&#xA;prVZWLukFw8gAFSSOcbePWuWnIDuRuxEa5InyN+Vc3k6/wBfudO1ya5TXWaYpdxLK8dySSkzScla&#xA;SnI8hty9sE8nFW3JRGk68i+VdS8s6VJpt3q7avEZpZ4ZJIVhdGuJXmlBKs3IGSQkV6dOmRnKykCl&#xA;LSfy70PSfPOp+btPBgutXtxDfWygCNpA4czinRmp8Xid+uEzJFKI72lvk/8ALS/8u+b9a8yPrr3z&#xA;6+yvqNo1ukaFo+XpFGDsV4ByMMp2AK5IEaNpl+YH5e6N53sNPs9Uqsen30N8hChiwiJEkJr+zKhK&#xA;n6D2wQmY8kyjbIr6K6ls5orScWty6FYbgoJAjHo3AkBqeFcgEvPfJv5VeY/J+hyaNovmwpayTPcc&#xA;5bCKSQSSU5EEyU3p3GWyyCRshjGNN+Z/yi1HzB5b0jQ7nzPcBdLuf0hJetAkk893zkkEjMXAVVMx&#xA;ogFOngMY5KN0pjab+e/y3tvOOi6db3t9Ja61pUsVzY63bIFljuEpzdUJ2V+NePLY08MjCfCVlG1J&#xA;fJXnK21ebV7HzTGt5d20Ftex3OnrNBK1uJAs3COaBkf97+y4HiDh4hVUmioJ+VZi8na3oMGrul/5&#xA;lmuLjXdYMEbPM12CsypFULGvD4VAJ4/M4+JuD3I4dk88heVZ/Knli00CS/OoxWIMdrO0YiYRfsow&#xA;DMDxNd/DIzlZtIFBJfK/5a6honnnVvNs2utfT62qrf2rWyxoREoWERsHZl4AAd6jJSnYqkCNG2aX&#xA;0V1LZzRWk4tbl0Kw3BQSBGPRuBIDU8K5WGTEvyw/LqfyJpt3po1d9UtLq4a7X1YVjdJZABIeSs1Q&#xA;3EbUyzJPiYxjSUeddX1XzDoes6AbCCK11ddR0zRWW553kt5YRzuXa39LgIme2oKSFhtUfF8JiAN0&#xA;2Xzppl5b8oLxyBAoEzM3QBRyqa+FM1+ngY5q976R21nGXs2WQcpCB/2UUb+e357XPnO5k0HQZHg8&#xA;rQP8b7q966nZ3HURg7oh/wBZt6Bdzhw8O55vl2TJewZJ+Vn5gfmd5tsG0LQNFhNrpMQuHvBcSwp9&#xA;Yhf17dGaf6xF+8mRfgVFLCvxKKsIZIRjuS2QmT0eb/mR+aHnLXtbg/Slt+htU0aY0jie4EsVxGxN&#xA;azySujKT0Uge2XQxgBqnkJZ5qn53r54/K9NH1YcPM9je2bTOoIjuYDJ6TTDjsrj1ByXpU1XbZcbL&#xA;i4QSOVF2HZshLPjB/nx/3QQvkNYv8aaZdzsqWmk+tq17K54qkNjC0nJjvQGUxpX/ACu+a3Rxsk/j&#xA;d7n2tziOCMOspX8AP1kPovyH55v/ADKZI7jTYoRAjF9Rs7uK7s5XSUwn0ivGUBmjYrzQVUVBOZs4&#xA;U8ACzDIJQup6pp2l2Mt/qVzHaWcA5S3EzBEUdOp8TsB3wgWrDfNP5seUrXyJquvaZrFvJJHDcw2J&#xA;U1b68kTNHEUYclflQ0YdMnHGbpiZCrU/ys8p+Uj5N8qarbww3eo2Vu0y6ou8hu7hGjvWZxQvV2dT&#xA;yr+GOSRsrEbMR/MfRvLn/K8/K7atIIdM1ayu21NJbh4YHe2iKwsx5ooP2RtToMsgTwGkH6gy/wAs&#xA;eVfy1bXtSby5crP/AKB9S1axguZLi3Md41UYsXcLJSBxRWrQ1I3BNcpSrdkKYX+SHkPy1rGg61Lq&#xA;sEt5cWWuXtnb3D3FwrrDD6fpqCki9KnfrlmWZB27mMAnWkatrHlL814Py/vL2fVvLnmGzlutFe8d&#xA;prm1kiV2lt2mYl5I+ETU5kkfDv1rEgSjxdQt0aSn8ofKOiS+cPzHtLiOSe1tb46dawyTTMIrWXmz&#xA;xpV6iuw5dduuSySNBYjcpR5Y1LW/yn1cXGo3U1/+XetajeWM1xKWkfTrq1vJrWN2JLHhIkKlv6r8&#xA;RkBMf0mI9PuZ+PLehXH50DUVQy+ron1wBZXMLTPP6PrBA3AkxfD4d+u+V8R4fi2Vu8s8tW35d2Wo&#xA;fmVD5k1L9HrpWoXEOin67LHdQxr6oAtV9VHkZSF4jep2y2XF6aawRvaP12LzTqX/ADjE2sebGnXX&#xA;7HhPp147ulyYJLqNEeWhWpeJiPi6rQ9cRQyUOSm+Dfm9cTy5pSflaNGEbfUf0byoXfmXMfrF+deX&#xA;L1PirXrlHEeK2ynmH5d+W9NvP+cab7Ubr1Zb+9s9RvZbpppPUE9k9wluysGBHpiMGnQ71y6cv3jX&#xA;DeKQakNJ0f8AJny3r/l/Up7Tz/OLQ2y2lzLJcXUshpLHJb+owZSlWPwdQB3yQ3mQfpQfpB6vSfPH&#xA;mbzFfeYfJ/5f29w+lah5ghN35gvLZuEsNvBEXlit5ByKNI0brz7be+VQiKMu5nI7gJt5n/JzyrqH&#xA;lq607R7YaTqZhcWWpW8ksUwmIJUzyqTJMpOzepy2JpvkY5CDukx2YV+cmgabF5o/LhtSnMKXF0tj&#xA;rMonkiimghWNqSNyQUB5fFsaHLMR2KJcwmX5/wCp+Ub/APK/UZLLVbV9T08Qvpv1W7X1VYzRo4VY&#xA;3qwMdQQQfHBhB4lycnpHkzS7TS/Kmk2NoCIIraMjkzOxZ15uxZiSSzsScqkbLMJzkVdirsVYP5v0&#xA;nXrfUzeeUtCsINQvFRb7zKIoHvkV5VjZI4nEXqsqN6nKSXjRSCCaA2RI6lBDwb82PIGr+WJ5LqS2&#xA;WPT/ADBG5iW3q0FrqFzGfVs+VBRDKxMLGlV2/ZwRx3kEx05/rdvj7TrQ5NNLrXD/AKYEj9I+Lzr8&#xA;r/yo8weffMB062RrSwtGH6V1CRTxgWtONDTlK1CFT76AE5nZMgiHnYQJL0j8yk0r8u9ak8seSr7U&#xA;ZHa3WfUtJtjHGLf6vFDKs7zSwTmRpfT9RwlB26GmVQuQst0jw7BM5vyf038zfy7bzfouozXvm6ae&#xA;4nkuLpRELhg3xWrgJFGCv+63RQv7J2+yPE4JUeSmAkLDwzSbG90+4vfr0L2rW7x28qzKUInS7hZo&#xA;qHfmoRiV60GW5vVAgdx+5s0E/DzwkdhGcfskH0d5M8uax5H0y21/U1SwvNc5CX6zbvcRw28ID29l&#xA;cNHyNubpmLvLxbhxVaVzBxYxGPCHZdq9oHVZjPlHlEeX7f2PYPJdnB+io9WfR4NG1bVI45NThgTh&#xA;ykSoVm+FG3BqOY5AGjb4yO9OuDIMil5t+aNwbXzh5JvdUilbylZXN3PqUkccs8aXYhAsXmjiVyAs&#xA;hbg38x7Zbj5GubGXMMJ816VqF3ovmC+lt2sE/MrzDpOm6fZzIYpEtYWVRcSRmjI06ws7KwrTrvlk&#xA;TuP6IYkfa9/zGbHin5jahpLfnd5XfU7Ga60jSbO7TU5jZT3UCSXMRMKkLFIH/ZPw1pX2OXwB4CwP&#xA;1Blvl7zN5Hi167Xy7pMlvC9i15rGoR2VzaRKlm1IkETwp6sjes5oi1oO+wyBia3ZWw78kPOOlaNo&#xA;mvwazDe2E1xrV5f26S2N4S9vOEKMOETCtVI49csyxJIruYQPNOLDSda81/m5a+ebmxudJ8t+WrSa&#xA;10tb2N4bm7nmV0lm+rOBJHHwlNOagmg26hYkgRrqU1ZtL/yf123Tzn+YlxcW93bW19fHULGaa1uE&#xA;Wa2iEgd15RjtQ8ftGuww5BsFjzLJvIs2h+dPJOqaXqNjMLe6vNRN7Y3cMsLeneX09xEVMipX4HVg&#xA;y7qfA5CdxKRuGOflb5T82eUvP+oaRrEkl7oWm6UY9A1RlJ5WjXIkELsP24jUcetOnw8cnkkJRsc0&#xA;RBGyR/l7r3lu01v8xn8x6fdSaXq+qPd2Uc2m3UyXMJaUVWP0W/mGzAdfnkpg0KRHqs8t+SPPV7/z&#xA;j75o0CfTprOW6uJZ/L+lXPJblLVJY5xCVbdSWRgitQ1O+xGMpDjBQAeEhmFj+a+i3vkxdNt7HUZf&#xA;M31E20ugrZXKzJcLF6bq7ugiVFbcuXoB77ZA4zfkzEmM/l9q8dh/zjbfaTdWl5FqlpZ6jZvZtaz+&#xA;o0169w8ARQh5BxIPi6DvTJTF5LYQ2igtJ/Lxdc/KDRNb8sWbaR+YPluMGOdYGtbiaaAfHBKWVPUE&#xA;iEcSaiu1acsJnUiD9JXh2Fc0RrN55l8xXvlP81dA0e6k1zy8ptPMnl1oZIpzFIGEn1dZVHqbSSU4&#xA;lj8S9wcQALieqmzRVPzv85eXfMXkQXHl+71GLzQksS2NnBHe29ypZ19aKaJQgFEruQdxQYMUSJb8&#xA;k5DtsifzVi03SPMn5c6Tb2t5eWGiXpuNRkMNzeenbvwXnLJxk5ljyJAJO3Tpjj3BKZcwnX5/Wmkx&#xA;/ldqVtYaZ6upakIY7CO0tGeQkTxyOaxoeFIwT8VPDI4b4lycmf8Ak7UYdR8q6Vdwq6LJbRgxyo8T&#xA;q6LwdWSQKwKspHT8MrkKLMJxkVdirsVdirzrzjaeafMPm2Ly8bRIvLPok3IuEM0F4j8TI0qhSnCM&#xA;r6aIJEmDsJB8C5bGgL6oLyu6/La//S1wnkXULi4SKW5jtdP1JzDJIllIIJjZXdXhnSORuNH4svcn&#xA;BkBO90XO0eqxQ2yYxkj7zGXzHP4/NIzpH5iW8l3eSeVby/vbyE2pvVto7smMp6YAmtzIrxgeDUO3&#xA;UDiXGZg1Ighu1v5KURLCJwl1B3FfM8lHTvI3n90t9OTT5dIt534W4vpYdLiLufsopKTsat+wjHI3&#xA;lJskD3buQcnZuONRhkyS8zwj7N/sZn5Y8j+WvKevLf8AmItqepaXcw2mp6jckx2+mfXIz9UuoFuB&#xA;I0yev+79eRgqndV2JFoJrm6fNkjOViIiO4frNk/N6b5H8leZvL+s6klxrd1daL9Y9e0SZoJTciSB&#xA;Yz6/KH1keIovxLNSQ78F35QlIENQDO8rZOxVLfMd5rVlpE1zounjVNRjaIx2BkSEyIZVEoWSQqis&#xA;IixXkaVGGIF7oLFpNJ1rzb5s0TVdS02XSNC8vNJeWtrdvE1xdXksfpxu0cDyrEkClmHJuRYjYCuT&#xA;sAEd6Kss7ytk7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWpEDoyNUKwKk&#xA;qSpodtmUgg+4xVi+l+QdN0NluNIeR57G1ntdEtrtzJbWonYSOFCgSHnIq83dmegpXJmd80Uktx+X&#xA;epxeWfKWjaY8dle6GlZtThchEmFq4esXEevFcXJHqq1KrXvkuPclFKXmX8qbnXfLXlXTxcQWWpaI&#xA;sKXN4FaUcUhHMIp4+p/pEccgEnwnj8QNcY5KJUhm195b0HULm3u9Q0+3vLy2AENzPFG8gArtyI6V&#xA;NadK79crEiyTLArsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;Vf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:ac64d6b6-68ce-4f6a-8f58-85e6c5766dcc</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:ac64d6b6-68ce-4f6a-8f58-85e6c5766dcc</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:d13fc2a1-66a0-4901-88f8-8a594d89deeb</stRef:instanceID>
            <stRef:documentID>xmp.did:d13fc2a1-66a0-4901-88f8-8a594d89deeb</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:07+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:18:29-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T12:59:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:02:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:47-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:30:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FEE440664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:22:44+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F85BBCD703EDD11A8D1DFE8FDCD79D1</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:30:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:676AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:43:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:81784906200A11689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T06:08:19-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:07:10+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:11+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8661C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8761C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39:19+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811AFA6A99C165E9A27</stEvt:instanceID>
                  <stEvt:when>2009-11-12T11:05:09Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F1174072068118083A1CB6CF26EE7</stEvt:instanceID>
                  <stEvt:when>2013-01-25T16:36:38Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068118083A1CB6CF26EE7</stEvt:instanceID>
                  <stEvt:when>2013-01-25T16:45:04Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068118083A1CB6CF26EE7</stEvt:instanceID>
                  <stEvt:when>2013-01-25T16:50:39Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F1174072068118083A1CB6CF26EE7</stEvt:instanceID>
                  <stEvt:when>2013-01-25T16:50:46Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ef178029-920a-46f4-a38a-b3588a6f2a9d</stEvt:instanceID>
                  <stEvt:when>2014-10-06T09:24:53+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d13fc2a1-66a0-4901-88f8-8a594d89deeb</stEvt:instanceID>
                  <stEvt:when>2014-10-06T09:26:07+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ac64d6b6-68ce-4f6a-8f58-85e6c5766dcc</stEvt:instanceID>
                  <stEvt:when>2014-12-02T15:15:38Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>199.999995</stDim:w>
            <stDim:h>48.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>87.112230</xmpG:magenta>
                           <xmpG:yellow>42.169830</xmpG:yellow>
                           <xmpG:black>51.827264</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 199 C</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>6.832989</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>85.232317</xmpG:yellow>
                           <xmpG:black>0.955215</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -47.7354 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 47.7354 li
199.637 47.7354 li
199.637 0 li
cp
clp
3.55271 19.0694 mo
3.9683 19.1612 4.1006 19.1084 4.1665 18.8135 cv
4.2695 18.837 li
3.9961 20.0596 li
3.8931 20.0362 li
3.94871 19.7901 3.90871 19.6299 3.4321 19.5225 cv
.7993 18.9336 li
.687 19.4346 li
.583 19.8975 .669 20.1377 1.0235 20.2491 cv
1.001 20.3526 li
.2114 20.1748 li
.2344 20.0733 li
.2871 20.0342 .3291 19.9873 .3721 19.9073 cv
.407708 19.833 .4443 19.7276 .4771 19.583 cv
.8809 17.7754 li
.9483 17.4737 .9434 17.3272 .8775 17.1983 cv
.9009 17.0899 li
1.6909 17.2666 li
1.6758 17.333 li
1.3721 17.335 1.1416 17.4034 1.0186 17.9522 cv
.9009 18.4756 li
3.55271 19.0694 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
1 .871122 .421698 .518273 cmyk
f
3.7393 15.1416 mo
4.6602 15.5909 li
5.0435 15.7784 5.2119 15.7432 5.3443 15.4717 cv
5.4385 15.5166 li
4.8779 16.667 li
4.78371 16.6202 li
4.9033 16.376 4.876 16.2188 4.4546 16.0127 cv
2.4736 15.0459 li
2.09571 14.8623 1.93071 14.878 1.7925 15.1612 cv
1.6983 15.1143 li
2.2583 13.9659 li
2.3526 14.0127 li
2.231 14.2618 2.2739 14.4268 2.6792 14.6241 cv
3.5835 15.0664 li
4.4282 13.335 li
3.5235 12.8936 li
3.1353 12.7041 2.9785 12.7295 2.84571 13.002 cv
2.751 12.9561 li
3.30671 11.8184 li
3.4009 11.8643 li
3.2681 12.1358 3.3526 12.2871 3.73 12.4717 cv
5.711 13.4385 li
6.0884 13.6221 6.2593 13.5948 6.3916 13.3233 cv
6.4868 13.3702 li
5.9312 14.5069 li
5.8369 14.462 li
5.9585 14.212 5.9268 14.0655 5.5049 13.8604 cv
4.5845 13.4092 li
3.7393 15.1416 li
cp
f
7.9219 9.3252 mo
7.855 9.4053 li
7.57471 9.2686 7.5103 9.2881 7.2778 9.5674 cv
6.7163 10.2412 li
7.6885 11.0518 li
7.8223 11.1621 7.9136 11.1592 8.0401 11.0069 cv
8.4356 10.5323 li
8.7676 10.1338 8.8306 10.0186 8.6104 9.5606 cv
8.6773 9.4795 li
9.082 10.0264 li
7.4502 11.9854 li
7.3692 11.918 li
7.5469 11.7041 7.5591 11.5537 7.1992 11.2549 cv
5.5005 9.8399 li
5.1636 9.5586 5.0054 9.5557 4.812 9.7881 cv
4.731 9.7207 li
6.3633 7.7608 li
6.8189 8.1407 li
6.7749 8.1924 li
6.4253 8.0059 6.3223 8.0811 6.0733 8.3799 cv
5.4209 9.1621 li
6.5835 10.1299 li
7.2163 9.3721 li
7.3696 9.1866 7.396 9.0879 7.1948 8.8565 cv
7.26271 8.7745 li
7.9219 9.3252 li
cp
f
14.5498 5.3389 mo
14.4483 5.8487 14.2163 6.1924 13.8076 6.4229 cv
13.0596 6.8438 12.4614 6.4864 12.1611 5.9541 cv
11.3067 4.4375 li
11.0762 4.0284 10.9234 4.0079 10.6812 4.1446 cv
10.6304 4.0528 li
11.7432 3.4248 li
11.7949 3.5166 li
11.542 3.6592 11.4907 3.8086 11.7129 4.2012 cv
12.5918 5.7608 li
12.8584 6.2344 13.3125 6.4258 13.8345 6.1309 cv
14.1895 5.9317 14.4014 5.5782 14.4292 5.1231 cv
13.3833 3.2676 li
13.1836 2.9121 13.0327 2.834 12.7798 2.9629 cv
12.728 2.8711 li
13.8145 2.2579 li
13.8662 2.3496 li
13.6074 2.4952 13.5835 2.6661 13.792 3.0371 cv
14.874 4.9571 li
15.1011 5.3614 15.2622 5.3829 15.4995 5.25 cv
15.5508 5.3418 li
14.793 5.7686 li
14.5498 5.3389 li
cp
f
20.1602 3.9395 mo
20.0576 3.9649 li
16.8789 1.6055 li
16.8667 1.6084 li
17.4829 4.0127 li
17.5713 4.3604 17.7407 4.4502 18.0523 4.3711 cv
18.0781 4.4727 li
17.0381 4.7383 li
17.0117 4.6368 li
17.2984 4.5635 17.4131 4.4395 17.2861 3.9424 cv
16.7725 1.9375 li
16.6743 1.5547 16.5181 1.3662 16.1021 1.4346 cv
16.0757 1.333 li
16.9556 1.1075 li
19.7798 3.2266 li
19.792 3.2237 li
19.2788 1.2207 li
19.1641 .7715 19.0151 .6895 18.7163 .7647 cv
18.69 .6641 li
19.7246 .3985 li
19.7505 .5 li
19.4155 .586 19.3433 .752 19.4458 1.1514 cv
20.1602 3.9395 li
cp
f
23.0449 2.9961 mo
23.0664 3.4278 23.1777 3.5518 23.4736 3.5371 cv
23.478 3.6426 li
22.2085 3.7051 li
22.2026 3.5996 li
22.4927 3.586 22.5982 3.4688 22.5762 3.0196 cv
22.4663 .8164 li
22.4443 .3731 22.3394 .2618 22.0376 .2764 cv
22.0322 .1719 li
23.3027 .1075 li
23.3081 .2129 li
23.0117 .2276 22.9141 .3682 22.9351 .794 cv
23.0449 2.9961 li
cp
f
26.6187 3.8829 mo
26.5215 3.8702 li
25.8164 .8789 li
25.708 .4297 25.6441 .253 25.315 .1954 cv
25.3291 .0918 li
26.6026 .2618 li
26.5879 .3662 li
26.3379 .3321 26.1973 .4512 26.2647 .7403 cv
26.8208 3.1192 li
27.9253 1.0411 li
28.0752 .7569 28.0449 .5596 27.7271 .5176 cv
27.7412 .4131 li
28.7627 .5489 li
28.7481 .6592 li
28.4849 .6241 28.2622 .8008 28.021 1.2539 cv
26.6187 3.8829 li
cp
f
32.1992 3.9512 mo
32.1011 3.9161 li
32.1353 3.6055 32.0957 3.5518 31.7539 3.4268 cv
30.9307 3.125 li
30.4956 4.3145 li
30.436 4.4766 30.4702 4.5616 30.6558 4.6289 cv
31.2363 4.8418 li
31.7227 5.0196 31.854 5.0411 32.21 4.6787 cv
32.3081 4.7149 li
31.9307 5.2793 li
29.5357 4.4034 li
29.5718 4.3047 li
29.8325 4.4004 29.978 4.3614 30.1392 3.9219 cv
30.8994 1.8448 li
31.0498 1.4336 30.9995 1.2832 30.7149 1.1797 cv
30.7505 1.0801 li
33.146 1.9571 li
32.9424 2.5137 li
32.8789 2.4903 li
32.937 2.0977 32.8311 2.0254 32.4663 1.8926 cv
31.5093 1.542 li
30.9898 2.9629 li
31.9175 3.3028 li
32.1436 3.3848 32.2451 3.376 32.3955 3.1094 cv
32.4946 3.1455 li
32.1992 3.9512 li
cp
f
35.2471 5.1875 mo
35.4844 5.3438 li
36.0254 5.7012 35.7222 6.4981 35.832 7.5323 cv
36.4351 7.9297 li
36.4927 7.8428 li
36.0274 7.4834 36.4829 6.3868 36.166 5.668 cv
36.6846 5.8243 37.0386 5.6661 37.2525 5.3418 cv
37.5108 4.9493 37.4429 4.3575 36.7778 3.919 cv
35.5664 3.1202 li
35.5098 3.208 li
35.7456 3.3653 35.7969 3.502 35.541 3.8877 cv
34.3228 5.7383 li
34.0606 6.1368 33.9048 6.1368 33.6782 5.9873 cv
33.6206 6.0752 li
34.6826 6.7754 li
34.7402 6.6875 li
34.4981 6.5274 34.4766 6.3575 34.7144 5.9971 cv
35.2471 5.1875 li
cp
36.2188 3.7129 mo
36.5278 3.9161 li
36.981 4.2159 37.0913 4.6885 36.8335 5.0801 cv
36.6099 5.42 36.1904 5.6319 35.69 5.3008 cv
35.3286 5.0645 li
36.2188 3.7129 li
cp
f
40.8828 8.3946 mo
40.8086 8.3194 li
41.1436 7.9121 41.0288 7.5049 40.7778 7.2491 cv
40.5181 6.9854 40.1865 6.9395 39.9531 7.169 cv
39.4868 7.628 39.9961 8.3926 39.9907 9.1075 cv
39.9883 9.4571 39.8731 9.6573 39.7056 9.8213 cv
39.3091 10.212 38.6719 10.2061 38.2818 9.8116 cv
38.0181 9.542 37.9292 9.1885 37.8467 9.1045 cv
37.8032 9.0606 37.7422 9.0596 37.6543 9.1026 cv
37.5811 9.0284 li
38.2627 8.3565 li
38.336 8.4327 li
37.875 8.8955 38.0972 9.4287 38.314 9.6495 cv
38.6133 9.9522 38.9878 9.9815 39.2608 9.7139 cv
39.6963 9.2842 39.2319 8.4073 39.2363 7.8487 cv
39.2383 7.543 39.354 7.3077 39.5518 7.1133 cv
39.9395 6.7325 40.4761 6.75 40.8789 7.1592 cv
41.1431 7.4268 41.1719 7.6495 41.2676 7.7471 cv
41.3062 7.7862 41.3242 7.7862 41.4028 7.7432 cv
41.4717 7.8135 li
40.8828 8.3946 li
cp
f
41.1826 12.1787 mo
40.8272 12.4248 40.7813 12.586 40.9487 12.8291 cv
40.8633 12.8897 li
40.1387 11.8438 li
40.2251 11.7842 li
40.3897 12.0225 40.5444 12.0498 40.9151 11.794 cv
42.7271 10.5381 li
43.0923 10.2842 43.1328 10.1377 42.9605 9.8877 cv
43.0459 9.8291 li
43.771 10.8741 li
43.6856 10.9336 li
43.5166 10.6905 43.3447 10.6807 42.9942 10.9248 cv
41.1826 12.1787 li
cp
f
42.9439 15.3897 mo
42.5567 15.5674 42.4834 15.6885 42.6094 15.9639 cv
42.5147 16.0079 li
41.9922 14.8682 li
42.0874 14.8252 li
42.1934 15.0557 42.3218 15.1592 42.7656 14.9561 cv
45.2183 13.8311 li
45.0049 13.3662 li
44.8071 12.9327 44.5933 12.794 44.2432 12.919 cv
44.1997 12.8243 li
44.9356 12.4873 li
44.9785 12.583 li
44.9605 12.6455 44.9551 12.709 44.9688 12.7979 cv
44.9854 12.8789 45.021 12.9854 45.082 13.1202 cv
45.8545 14.8037 li
45.9829 15.084 46.0757 15.1973 46.2066 15.2598 cv
46.2529 15.3604 li
45.5171 15.6983 li
45.4888 15.6358 li
45.7295 15.4512 45.8716 15.2569 45.6377 14.7461 cv
45.4141 14.2579 li
42.9439 15.3897 li
cp
f
44.3389 19.6905 mo
43.9219 19.7803 43.8071 19.8936 43.8706 20.1885 cv
43.7681 20.212 li
43.4981 18.9502 li
43.6011 18.9268 li
43.6572 19.1934 43.7451 19.3389 44.2402 19.2325 cv
45.3276 18.9991 li
46.3169 18.0166 li
46.646 17.6944 46.7017 17.5752 46.6563 17.2998 cv
46.7588 17.2784 li
47.0484 18.6319 li
46.9453 18.6534 li
46.8638 18.2725 46.7217 18.2588 46.5401 18.4424 cv
45.6358 19.3506 li
46.6235 19.7139 li
46.9312 19.8252 47.187 19.7823 47.125 19.4932 cv
47.228 19.4698 li
47.4307 20.417 li
47.3281 20.4405 li
47.2534 20.1787 47.1611 20.1045 46.8179 19.9737 cv
45.4258 19.458 li
44.3389 19.6905 li
cp
f
2.2285 28.1416 mo
1.21971 28.4327 .659708 29.4541 .9522 30.4698 cv
1.2432 31.4834 2.26271 32.0577 3.272 31.7666 cv
4.2632 31.4815 4.811 30.4639 4.5215 29.4541 cv
4.2222 28.417 3.2373 27.8506 2.2285 28.1416 cv
cp
2.3735 28.6651 mo
3.3584 28.3838 4.1631 28.7022 4.3941 29.5049 cv
4.5952 30.2041 4.1602 30.9463 3.0918 31.2549 cv
2.2676 31.4912 1.3262 31.2803 1.0806 30.4248 cv
.8599 29.6592 1.3823 28.9502 2.3735 28.6651 cv
cp
f
3.63871 35.0088 mo
3.26271 35.2237 3.2026 35.3799 3.3496 35.6377 cv
3.2583 35.6905 li
2.6275 34.585 li
2.7188 34.5323 li
2.86571 34.7901 3.0249 34.8194 3.4058 34.6026 cv
5.3203 33.5108 li
5.707 33.2901 5.7568 33.1416 5.6099 32.8819 cv
5.70071 32.8291 li
6.9033 34.9385 li
6.356 35.2491 li
6.3164 35.1807 li
6.6485 34.8916 6.6192 34.7881 6.42871 34.4541 cv
5.9815 33.6729 li
4.6943 34.4073 li
5.1509 35.2061 li
5.2822 35.4366 5.44971 35.4541 5.7114 35.3409 cv
5.7603 35.4268 li
4.897 35.919 li
4.8482 35.835 li
5.0615 35.6983 5.1294 35.5186 5.0064 35.3018 cv
4.5444 34.4932 li
3.63871 35.0088 li
cp
f
10.4234 41.8311 mo
10.3418 41.7666 li
10.4766 41.4854 10.457 41.4209 10.1753 41.1905 cv
9.4976 40.6338 li
8.6943 41.6123 li
8.585 41.7471 8.5899 41.8389 8.74271 41.9639 cv
9.2202 42.3545 li
9.6211 42.6827 9.7373 42.7471 10.1929 42.5205 cv
10.2744 42.5889 li
9.7315 42.9991 li
7.7598 41.3799 li
7.82571 41.2979 li
8.0405 41.4756 8.1904 41.4854 8.4883 41.1241 cv
9.8901 39.4151 li
10.1685 39.0752 10.1704 38.917 9.9365 38.7256 cv
10.0029 38.6455 li
11.9751 40.2627 li
11.5986 40.7198 li
11.5464 40.6787 li
11.731 40.3252 11.6553 40.2237 11.3545 39.9776 cv
10.5664 39.3311 li
9.6074 40.501 li
10.3711 41.126 li
10.5576 41.2784 10.6563 41.3037 10.8862 41.1026 cv
10.9673 41.169 li
10.4234 41.8311 li
cp
f
12.8838 44.2334 mo
12.7002 44.6338 12.5415 44.6963 12.2837 44.5772 cv
12.2402 44.6729 li
13.7656 45.376 li
15.0274 45.958 15.8814 45.4463 16.2534 44.6397 cv
16.6387 43.8018 16.4346 42.71 15.2075 42.1436 cv
13.7212 41.46 li
13.6763 41.5537 li
13.9463 41.6787 13.9849 41.8448 13.8062 42.2315 cv
12.8838 44.2334 li
cp
14.4551 41.9463 mo
15.0654 42.2295 li
16.0811 42.6963 16.1113 43.6495 15.7568 44.417 cv
15.354 45.292 14.624 45.6202 13.8281 45.2549 cv
13.4971 45.1026 li
13.1997 44.9659 13.1318 44.8174 13.3613 44.3194 cv
14.4551 41.9463 li
cp
f
19.1089 46.4659 mo
19.0156 46.8897 19.0899 47.0401 19.3794 47.1006 cv
19.3569 47.2041 li
18.1148 46.9307 li
18.1372 46.8272 li
18.4204 46.8897 18.5532 46.8057 18.6504 46.3643 cv
19.125 44.2139 li
19.2202 43.7803 19.1485 43.6436 18.853 43.5791 cv
18.876 43.4756 li
20.1177 43.7491 li
20.0952 43.8526 li
19.8057 43.7881 19.6748 43.8975 19.5825 44.3135 cv
19.1089 46.4659 li
cp
f
25.5068 47.6065 mo
25.4024 47.6104 li
22.8745 44.5596 li
22.8618 44.5616 li
22.8892 47.044 li
22.8926 47.4014 23.0361 47.5284 23.3574 47.5264 cv
23.3584 47.6319 li
22.2842 47.6436 li
22.2832 47.5381 li
22.5791 47.5342 22.7202 47.4424 22.7144 46.9287 cv
22.6924 44.8604 li
22.688 44.4639 22.5806 44.2432 22.1597 44.212 cv
22.1592 44.1065 li
23.0669 44.0948 li
25.3076 46.8252 li
25.3203 46.8252 li
25.2964 44.7569 li
25.2915 44.294 25.1665 44.1787 24.8584 44.1827 cv
24.8569 44.0752 li
25.9258 44.0655 li
25.9263 44.169 li
25.5806 44.1729 25.4707 44.3155 25.4751 44.7295 cv
25.5068 47.6065 li
cp
f
29.2456 45.2022 mo
29.5674 45.1143 li
30.168 44.9502 30.6426 45.1827 30.7798 45.6827 cv
30.918 46.1827 30.6543 46.5049 30.3081 46.5987 cv
30.0293 46.6768 li
29.7612 46.751 29.6465 46.6612 29.5205 46.2022 cv
29.2456 45.2022 li
cp
29.084 46.3858 mo
29.1987 46.8037 29.1323 46.9561 28.8462 47.0342 cv
28.874 47.1358 li
30.4458 46.7022 li
31.0884 46.5264 31.4526 46.0791 31.312 45.5694 cv
31.1856 45.1104 30.7207 44.8155 30.167 44.8526 cv
30.1641 44.8409 li
30.5918 44.5557 30.7393 44.2549 30.6358 43.878 cv
30.5161 43.4444 30.0435 43.1436 29.2217 43.3721 cv
27.9356 43.7237 li
27.9634 43.8252 li
28.249 43.7471 28.3799 43.8272 28.4995 44.2608 cv
29.084 46.3858 li
cp
29.209 45.0713 mo
28.811 43.6241 li
29.1499 43.5323 li
29.7041 43.378 30.0503 43.6104 30.168 44.0401 cv
30.2852 44.4678 30.0606 44.837 29.5601 44.9737 cv
29.209 45.0713 li
cp
f
36.4043 43.4912 mo
36.3096 44.003 36.083 44.3506 35.6777 44.585 cv
34.937 45.0186 34.333 44.6709 34.0249 44.1436 cv
33.1465 42.6397 li
32.9102 42.2334 32.7568 42.2159 32.5166 42.3565 cv
32.4639 42.2666 li
33.5679 41.6221 li
33.6206 41.712 li
33.3701 41.8584 33.3218 42.0088 33.5493 42.3975 cv
34.4522 43.9424 li
34.7261 44.4131 35.1826 44.5948 35.6997 44.294 cv
36.0518 44.0889 36.2593 43.7334 36.2788 43.2764 cv
35.2046 41.4366 li
35 41.085 34.8482 41.0088 34.5967 41.1416 cv
34.5435 41.0518 li
35.6206 40.4229 li
35.6734 40.5127 li
35.418 40.6631 35.3955 40.833 35.6104 41.2002 cv
36.7217 43.1045 li
36.9546 43.5049 37.1162 43.5264 37.3506 43.3877 cv
37.4038 43.4776 li
36.6528 43.917 li
36.4043 43.4912 li
cp
f
39.0884 39.9366 mo
39.2881 39.7334 li
39.7437 39.2725 40.4673 39.7256 41.5029 39.8194 cv
42.0093 39.3057 li
41.9356 39.2295 li
41.4922 39.6182 40.5054 38.9561 39.7378 39.1299 cv
39.9922 38.6495 39.9068 38.2705 39.6304 37.9971 cv
39.2959 37.667 38.7012 37.6202 38.1421 38.1866 cv
37.1235 39.2198 li
37.1983 39.294 li
37.3975 39.0928 37.541 39.0694 37.8711 39.3936 cv
39.4492 40.9502 li
39.7881 41.2842 39.7583 41.4366 39.5674 41.6299 cv
39.6426 41.7041 li
40.5352 40.7979 li
40.4605 40.7256 li
40.2568 40.9307 40.0869 40.919 39.7793 40.6162 cv
39.0884 39.9366 li
cp
37.8316 38.6944 mo
38.0908 38.4327 li
38.4727 38.044 38.9575 38.0284 39.292 38.3584 cv
39.5816 38.6455 39.707 39.0967 39.2871 39.5245 cv
38.9834 39.833 li
37.8316 38.6944 li
cp
f
44.9014 35.0088 mo
44.8452 35.208 44.544 35.7627 44.4605 35.8995 cv
43.6509 37.2295 42.5801 37.1827 41.8838 36.7588 cv
40.8135 36.1084 40.7066 34.9287 41.1597 34.1866 cv
41.4194 33.7588 41.6611 33.6807 41.8032 33.4502 cv
41.8609 33.3545 41.8599 33.2959 41.8047 33.2198 cv
41.8633 33.1241 li
42.7549 33.667 li
42.7036 33.751 li
42.0796 33.4795 41.5259 33.8448 41.2754 34.2569 cv
40.896 34.878 41.1533 35.6768 41.9819 36.1827 cv
42.8677 36.7237 43.8428 36.5928 44.2793 35.876 cv
44.4111 35.6592 44.5352 35.3389 44.2661 35.1748 cv
43.939 34.9756 li
43.5703 34.751 43.3867 34.753 43.2363 35.001 cv
43.1655 35.1182 li
43.0752 35.0635 li
43.8208 33.8409 li
43.9102 33.8936 li
43.731 34.1905 43.8252 34.3565 44.0879 34.5147 cv
44.9014 35.0088 li
cp
f
44.8013 30.9287 mo
45.7866 31.212 li
46.1953 31.3311 46.3555 31.2666 46.439 30.9756 cv
46.5401 31.0049 li
46.1856 32.2315 li
46.0845 32.2041 li
46.1602 31.9424 46.1065 31.792 45.6563 31.6612 cv
43.5381 31.0518 li
43.1348 30.9346 42.9746 30.9776 42.8867 31.2803 cv
42.7857 31.251 li
43.1406 30.0245 li
43.2412 30.0518 li
43.1641 30.3194 43.2349 30.4737 43.668 30.5987 cv
44.6358 30.878 li
45.1694 29.0284 li
44.2026 28.7491 li
43.7866 28.6299 43.6367 28.6827 43.5527 28.9717 cv
43.4522 28.9444 li
43.8027 27.7276 li
43.9038 27.7569 li
43.8198 28.0479 43.9292 28.1827 44.3325 28.2979 cv
46.4507 28.9092 li
46.854 29.0245 47.0176 28.9698 47.1016 28.6787 cv
47.2026 28.708 li
46.8511 29.9248 li
46.7505 29.8955 li
46.8276 29.628 46.7715 29.4912 46.3203 29.3604 cv
45.3355 29.0752 li
44.8013 30.9287 li
cp
f
2.0576 24.1885 mo
2.05671 24.3604 1.9165 24.4991 1.74371 24.4971 cv
1.5723 24.4971 1.4336 24.3565 1.4346 24.1866 cv
1.4356 24.0127 1.5762 23.8741 1.7476 23.8741 cv
1.9194 23.878 2.0586 24.0166 2.0576 24.1885 cv
cp
f
46.2925 24.1944 mo
46.291 24.3662 46.1509 24.5049 45.9785 24.503 cv
45.8067 24.503 45.668 24.3623 45.669 24.1905 cv
45.6699 24.0186 45.8106 23.8799 45.9819 23.8799 cv
46.1543 23.8838 46.2935 24.0225 46.2925 24.1944 cv
cp
f
32.9341 40.2491 mo
33.1826 40.1202 33.4107 39.9483 33.6504 39.7979 cv
33.8545 39.6748 34.0576 39.5498 34.2617 39.4248 cv
34.4443 39.2881 34.6118 39.1338 34.8003 39.0049 cv
34.9966 38.8623 35.1914 38.7198 35.3877 38.5772 cv
35.4292 38.5381 35.4702 38.4971 35.5103 38.458 cv
35.5562 38.4346 35.6026 38.4073 35.6475 38.3819 cv
35.815 38.2549 35.9854 38.1026 36.1411 37.958 cv
36.2671 37.8428 36.3599 37.71 36.4922 37.5909 cv
36.6226 37.4737 36.7666 37.3662 36.9004 37.2491 cv
36.9566 37.1963 36.9868 37.1397 37.0366 37.0889 cv
37.145 36.9854 37.2568 36.8838 37.355 36.7705 cv
37.4224 36.6866 37.4912 36.6026 37.5606 36.5205 cv
37.8047 36.2862 38.0269 36.0284 38.2305 35.7666 cv
38.3965 35.5674 38.563 35.3682 38.7276 35.1709 cv
38.8374 35.0186 38.9473 34.8623 39.0547 34.708 cv
39.1118 34.6475 39.169 34.585 39.2276 34.5245 cv
39.4043 34.2764 39.583 34.0284 39.7608 33.7784 cv
39.8135 33.6944 39.8452 33.6065 39.8941 33.5186 cv
39.9341 33.462 39.9736 33.4034 40.0127 33.3487 cv
40.0474 33.2764 40.0801 33.2041 40.1148 33.1319 cv
40.2354 32.9268 40.3486 32.7198 40.46 32.5108 cv
40.5537 32.3526 40.6485 32.1924 40.7412 32.0303 cv
40.8193 31.8682 40.8682 31.6963 40.9409 31.5342 cv
41.023 31.3623 41.103 31.1905 41.1836 31.0205 cv
41.4575 30.2842 41.7276 29.544 41.9463 28.7842 cv
41.9629 28.6944 41.979 28.6006 41.9951 28.5108 cv
42.0547 28.2334 42.1314 27.9463 42.1865 27.6612 cv
42.2031 27.5147 42.2193 27.3682 42.2363 27.2217 cv
42.2759 26.9834 42.3242 26.7276 42.3569 26.4854 cv
42.3726 26.292 42.3882 26.0948 42.4028 25.8995 cv
42.4175 25.8233 42.4317 25.7471 42.4478 25.6709 cv
42.4561 25.5069 42.4649 25.3428 42.4746 25.1787 cv
42.4834 25.0967 42.5088 25.0205 42.5127 24.9346 cv
42.5127 24.8213 42.5093 24.7061 42.5083 24.5928 cv
42.5591 23.8526 42.5723 23.0498 42.5322 22.3194 cv
42.5093 21.9385 42.4209 21.5616 42.3823 21.1905 cv
42.3389 20.7959 42.3086 20.4053 42.23 20.0303 cv
42.0122 18.9981 41.7251 17.9844 41.3613 17.0205 cv
41.3096 16.8819 41.229 16.7539 41.1719 16.6182 cv
41.0532 16.3311 40.9199 16.0655 40.7818 15.792 cv
40.7363 15.7139 40.6914 15.6358 40.646 15.5577 cv
40.5327 15.3184 40.4541 15.0596 40.3281 14.8272 cv
40.25 14.6836 40.1582 14.5616 40.0669 14.4239 cv
39.9981 14.2745 39.9263 14.126 39.8574 13.9766 cv
39.5957 13.5704 39.3247 13.1719 39.0527 12.7745 cv
38.9492 12.6543 38.8467 12.5342 38.7442 12.4161 cv
38.6294 12.2686 38.5156 12.1202 38.4014 11.9737 cv
38.292 11.8623 38.1709 11.7705 38.0742 11.6475 cv
38.0186 11.5772 37.9863 11.503 37.9277 11.4317 cv
37.8423 11.3379 37.7568 11.2432 37.6704 11.1514 cv
37.6201 11.1045 37.5684 11.0577 37.5171 11.0098 cv
37.3867 10.8623 37.2647 10.71 37.1299 10.5655 cv
37.0117 10.4541 36.8936 10.3428 36.7769 10.2315 cv
36.6626 10.1182 36.5503 10.003 36.4351 9.8877 cv
36.2788 9.7666 36.1211 9.6446 35.9634 9.5235 cv
35.8023 9.3819 35.6387 9.2403 35.4771 9.0967 cv
35.3687 9.0166 35.2529 8.96 35.1436 8.8877 cv
35.0054 8.7862 34.8643 8.6846 34.7246 8.585 cv
34.6196 8.5098 34.5303 8.4287 34.4297 8.3457 cv
34.3535 8.3008 34.2783 8.253 34.2031 8.208 cv
34.1021 8.1358 34.0015 8.0645 33.8985 7.9932 cv
33.5654 7.7881 33.208 7.6329 32.8613 7.4541 cv
32.7359 7.376 32.6094 7.2959 32.4839 7.2159 cv
32.2651 7.1065 32.0479 6.9961 31.8311 6.8868 cv
31.6528 6.8008 31.4673 6.7393 31.2847 6.668 cv
31.1953 6.6182 31.105 6.5684 31.0161 6.5196 cv
30.9473 6.4942 30.877 6.4707 30.8081 6.4463 cv
30.6992 6.3975 30.5899 6.3477 30.48 6.2998 cv
30.1377 6.1758 29.7778 6.086 29.4229 5.9766 cv
29.2564 5.9258 29.0811 5.8575 28.9121 5.8086 cv
28.5415 5.7012 28.1734 5.6436 27.7896 5.5586 cv
27.5449 5.502 27.2871 5.4317 27.0371 5.3887 cv
26.875 5.3662 26.711 5.3457 26.5503 5.3223 cv
26.2798 5.2657 25.979 5.2168 25.6973 5.1836 cv
25.5903 5.1807 25.48 5.1778 25.3706 5.1739 cv
25.2964 5.1641 25.2202 5.1543 25.1431 5.1446 cv
24.9961 5.1426 24.8491 5.1387 24.7012 5.1368 cv
24.3706 5.1133 24.0205 5.087 23.6724 5.085 cv
23.5371 5.1241 23.3477 5.0996 23.1978 5.0996 cv
23.0181 5.0996 22.8389 5.0996 22.6587 5.0996 cv
22.6094 5.1084 22.5606 5.1162 22.5112 5.1241 cv
22.3867 5.127 22.2612 5.1309 22.1358 5.1338 cv
22.0698 5.1485 22.0039 5.1651 21.937 5.1817 cv
21.8731 5.1895 21.8081 5.1973 21.7432 5.2051 cv
21.6802 5.2051 21.6167 5.1993 21.5625 5.2207 cv
21.5259 5.2266 21.4873 5.2315 21.4492 5.2364 cv
21.3692 5.2364 21.2832 5.2334 21.2197 5.2676 cv
21.0444 5.2666 20.7837 5.2891 20.6475 5.3633 cv
20.6099 5.3672 20.5708 5.3731 20.5337 5.3789 cv
20.4224 5.377 20.2749 5.3916 20.189 5.4414 cv
19.9004 5.4395 19.6621 5.5625 19.4004 5.6241 cv
19.2617 5.6563 19.0962 5.6729 18.9771 5.7442 cv
18.8633 5.7442 18.7398 5.7735 18.6494 5.8243 cv
18.4678 5.8243 18.3096 5.9297 18.1543 5.9903 cv
18.0625 6.0254 17.9468 6.0274 17.8648 6.0821 cv
17.6826 6.0821 17.522 6.1866 17.3721 6.2539 cv
17.2681 6.2989 17.1641 6.3418 17.0601 6.3848 cv
16.4985 6.6211 15.9507 6.8907 15.4111 7.1709 cv
15.3203 7.2295 15.229 7.2881 15.1377 7.3448 cv
14.4912 7.6729 13.853 8.0323 13.2808 8.4971 cv
13.1123 8.6182 12.9434 8.7393 12.7749 8.8594 cv
12.687 8.9385 12.5977 9.0186 12.5103 9.0967 cv
12.3457 9.2178 12.1738 9.3213 12.0147 9.4541 cv
11.6904 9.7295 11.3838 10.0371 11.0825 10.336 cv
10.898 10.5039 10.7119 10.6729 10.5254 10.8409 cv
10.4619 10.9131 10.3985 10.9864 10.336 11.0596 cv
10.2515 11.1387 10.1665 11.2168 10.0825 11.295 cv
9.9492 11.4307 9.8565 11.5948 9.7276 11.7276 cv
9.61571 11.8409 9.5039 11.9463 9.4028 12.0723 cv
9.3574 12.1348 9.3101 12.1983 9.26471 12.2608 cv
9.0684 12.4795 8.8784 12.6954 8.71 12.9327 cv
8.59471 13.1123 8.479 13.292 8.3638 13.4727 cv
8.1968 13.6866 8.0093 13.9629 7.8818 14.1983 cv
7.8423 14.2745 7.8052 14.3506 7.7671 14.4278 cv
7.6553 14.6143 7.543 14.8008 7.43071 14.9854 cv
7.333 15.1807 7.2676 15.3887 7.1699 15.583 cv
7.1245 15.6592 7.0796 15.7334 7.0342 15.8096 cv
6.9395 15.9854 6.8594 16.1612 6.7583 16.335 cv
6.7124 16.4463 6.666 16.5596 6.6201 16.6729 cv
6.5635 16.7881 6.5083 16.9053 6.4526 17.0215 cv
6.40771 17.1553 6.3613 17.2881 6.3164 17.4219 cv
6.26171 17.5655 6.207 17.708 6.1509 17.8526 cv
5.874 18.7471 5.6421 19.6455 5.45171 20.5948 cv
5.4356 20.7745 5.4204 20.9522 5.4043 21.1299 cv
5.3794 21.337 5.3081 21.5635 5.291 21.7686 cv
5.2774 21.9268 5.28371 22.1084 5.2388 22.2588 cv
5.2266 22.3838 5.2158 22.5088 5.2036 22.6338 cv
5.1753 23.4014 5.1963 24.1319 5.2158 24.8741 cv
5.2261 25.2295 5.2959 25.587 5.3272 25.9366 cv
5.335 26.0889 5.3428 26.2412 5.3501 26.3936 cv
5.3989 26.8721 5.4805 27.3565 5.55471 27.8311 cv
5.5899 27.9541 5.6226 28.0733 5.6563 28.1963 cv
5.7363 28.5694 5.8203 28.9327 5.92871 29.294 cv
5.9605 29.3741 5.99271 29.4561 6.0235 29.5381 cv
6.0435 29.6241 6.0654 29.708 6.085 29.7959 cv
6.2266 30.1924 6.36771 30.5909 6.5083 30.9873 cv
6.5791 31.1358 6.6485 31.2881 6.7183 31.4366 cv
6.7583 31.5362 6.7798 31.6455 6.8213 31.7432 cv
6.92971 31.9971 7.0874 32.2276 7.2163 32.4717 cv
7.3174 32.6709 7.4385 32.8623 7.5391 33.0635 cv
7.5679 33.1338 7.59771 33.2061 7.627 33.2784 cv
7.6621 33.3233 7.6973 33.3643 7.7324 33.4073 cv
7.7705 33.4912 7.8091 33.5752 7.84771 33.6592 cv
7.9424 33.8252 8.0581 33.9873 8.1792 34.1416 cv
8.2505 34.2334 8.3101 34.337 8.3833 34.4287 cv
8.481 34.5518 8.5918 34.6651 8.6836 34.792 cv
8.7549 34.8975 8.8252 35.001 8.897 35.1065 cv
9.0308 35.2666 9.1641 35.4248 9.2988 35.583 cv
9.40971 35.7237 9.52 35.8643 9.6304 36.0049 cv
9.7695 36.1495 9.9072 36.294 10.0459 36.4385 cv
10.1597 36.5694 10.2578 36.7256 10.3887 36.8467 cv
10.5757 37.0166 10.7588 37.1924 10.9317 37.3662 cv
11.0244 37.46 11.1162 37.5518 11.2075 37.6455 cv
11.3589 37.7764 11.5357 37.8702 11.6812 38.0088 cv
11.8213 38.1436 11.9619 38.2803 12.1045 38.417 cv
12.2066 38.4952 12.3091 38.5733 12.4111 38.6514 cv
12.5376 38.7608 12.645 38.8858 12.7818 38.9815 cv
12.9468 39.0948 13.1001 39.2237 13.2715 39.3233 cv
13.3853 39.3897 13.5064 39.4229 13.6157 39.4952 cv
13.7427 39.585 13.8701 39.6748 13.9971 39.7647 cv
14.1216 39.8467 14.2642 39.9112 14.3921 39.9893 cv
14.874 40.2862 15.3604 40.5401 15.8672 40.7823 cv
16.0899 40.8897 16.3003 41.0264 16.5386 41.1065 cv
16.7578 41.1924 16.9756 41.2764 17.1939 41.3604 cv
17.2735 41.3819 17.354 41.4073 17.4326 41.4287 cv
17.6475 41.5108 17.8613 41.5948 18.0752 41.6768 cv
18.1328 41.6944 18.19 41.712 18.2485 41.7276 cv
18.4331 41.8018 18.6167 41.8838 18.8101 41.9385 cv
19.0435 41.9854 19.2759 42.0284 19.5093 42.0752 cv
19.8555 42.1475 20.2188 42.253 20.5728 42.3096 cv
20.7026 42.3194 20.832 42.3311 20.9634 42.3389 cv
21.1348 42.3623 21.3076 42.4014 21.4863 42.417 cv
21.6226 42.4268 21.7568 42.4366 21.8926 42.4444 cv
21.9815 42.458 22.0693 42.4717 22.1563 42.4854 cv
22.2485 42.4893 22.3413 42.4932 22.4336 42.4952 cv
22.647 42.5264 22.8574 42.5596 23.0703 42.5909 cv
23.1787 42.5967 23.2886 42.6006 23.397 42.6045 cv
23.4624 42.5967 23.5288 42.5889 23.5943 42.583 cv
23.7886 42.585 24.02 42.6045 24.2149 42.6143 cv
24.3389 42.6162 24.4556 42.6084 24.5737 42.6143 cv
24.8184 42.628 25.0513 42.5791 25.2788 42.5459 cv
25.3809 42.5401 25.4849 42.5381 25.5874 42.5342 cv
25.7271 42.5166 25.8765 42.4932 26.0137 42.4815 cv
26.5195 42.4366 27.0093 42.378 27.5 42.2823 cv
27.6641 42.2393 27.8291 42.1963 27.9937 42.1534 cv
28.1997 42.1104 28.4058 42.0674 28.6118 42.0264 cv
28.7193 41.9952 28.814 41.9424 28.9151 41.9014 cv
29.0835 41.8506 29.2505 41.8018 29.419 41.751 cv
29.4907 41.7256 29.562 41.7002 29.6338 41.6748 cv
29.7564 41.6416 29.8657 41.6299 29.9873 41.5909 cv
30.2344 41.5069 30.4805 41.419 30.7295 41.3311 cv
30.8765 41.2608 31.0244 41.1924 31.1709 41.1221 cv
31.3145 41.0674 31.4575 41.003 31.5952 40.9385 cv
31.6348 40.9151 31.6729 40.8897 31.7124 40.8662 cv
31.8613 40.7959 32.0156 40.7256 32.1607 40.6514 cv
32.3291 40.5537 32.4966 40.462 32.6655 40.3643 cv
32.752 40.3194 32.8477 40.294 32.9341 40.2491 cv
cp
f
23.6685 41.0108 mo
23.6626 41.0108 23.6568 41.0108 23.6519 41.0108 cv
23.6519 41.0049 23.6519 40.9991 23.6519 40.9932 cv
23.6265 40.9932 23.6143 40.962 23.6001 40.9444 cv
23.5366 40.8428 23.4736 40.7432 23.4102 40.6416 cv
23.2783 40.4893 23.145 40.333 23.0127 40.1768 cv
22.6157 39.7998 22.1514 39.4776 21.6651 39.2666 cv
21.5645 39.2315 21.4629 39.1944 21.3628 39.1573 cv
21.25 39.1084 21.1475 39.044 21.0308 39.001 cv
20.9219 38.96 20.8052 38.9483 20.6895 38.9268 cv
20.5723 38.9034 20.4517 38.8702 20.3301 38.8448 cv
20.0811 38.794 19.8296 38.7198 19.5772 38.6729 cv
19.3316 38.6436 19.0879 38.6123 18.8428 38.5811 cv
18.6475 38.5713 18.46 38.5733 18.2715 38.5577 cv
17.3867 38.4678 16.5112 38.3819 15.6558 38.2432 cv
15.3643 38.1944 15.0796 38.1924 14.7935 38.1416 cv
14.5103 38.0928 14.2251 38.0108 13.9551 37.9229 cv
13.8057 37.876 13.6524 37.8428 13.5083 37.7862 cv
13.3657 37.7237 13.2232 37.6592 13.0811 37.5948 cv
12.9829 37.5498 12.8848 37.5069 12.7871 37.4639 cv
12.7193 37.419 12.6509 37.376 12.5816 37.3311 cv
12.5488 37.3135 12.5156 37.2959 12.4824 37.2764 cv
12.249 37.0889 12.065 36.8311 11.8848 36.6026 cv
11.7471 36.4268 11.6748 36.2217 11.6094 36.0088 cv
11.5776 35.9034 11.5449 35.7998 11.5122 35.6944 cv
11.4087 35.2041 11.4194 34.6944 11.4141 34.1592 cv
11.4063 34.0557 11.396 33.9522 11.3877 33.8467 cv
11.4019 33.4502 11.4268 33.0479 11.4346 32.6534 cv
11.4312 32.5674 11.4287 32.4815 11.4248 32.3936 cv
11.4273 31.9971 11.4287 31.5987 11.4312 31.2002 cv
11.4326 30.9405 11.4536 30.6807 11.4512 30.4327 cv
11.4404 29.3623 11.4595 28.2764 11.4834 27.1963 cv
11.4746 27.044 11.4663 26.8916 11.457 26.7393 cv
11.4551 26.5694 11.4741 26.4092 11.4746 26.2491 cv
11.4717 26.1729 11.4697 26.0967 11.4678 26.0186 cv
11.4888 25.7764 11.5093 25.5303 11.5288 25.2842 cv
11.5332 25.0948 11.5166 24.9073 11.5166 24.7295 cv
11.5181 24.5948 11.5381 24.46 11.5322 24.3213 cv
11.5278 24.208 11.501 24.1006 11.5039 23.9776 cv
11.5103 23.8741 11.5166 23.7705 11.5215 23.667 cv
11.5191 23.458 11.5054 23.2315 11.5098 23.0127 cv
11.5122 22.8858 11.5298 22.753 11.5269 22.6202 cv
11.523 22.4756 11.4951 22.3311 11.499 22.1787 cv
11.5161 22.001 11.5322 21.8194 11.5488 21.6397 cv
11.5537 21.4639 11.5391 21.2959 11.5396 21.1319 cv
11.5415 20.7666 11.5576 20.3702 11.5591 19.9893 cv
11.5625 19.9131 11.5659 19.837 11.5684 19.7608 cv
11.561 19.5967 11.5518 19.4346 11.543 19.2696 cv
11.5562 19.1289 11.5684 18.9873 11.583 18.8448 cv
11.5952 18.1651 11.5938 17.4649 11.6094 16.8018 cv
11.6099 16.5733 11.6099 16.3448 11.6109 16.1153 cv
11.6045 15.9541 11.5806 15.7959 11.5845 15.626 cv
11.5903 15.5166 11.5952 15.4063 11.6026 15.2989 cv
11.606 14.7256 11.5918 14.1495 11.5952 13.5674 cv
11.5972 13.3545 11.6157 13.1641 11.6143 12.96 cv
11.6109 12.7315 11.6016 12.4834 11.603 12.2412 cv
11.604 12.085 11.6211 11.9327 11.6221 11.7686 cv
11.6226 11.6377 11.5972 11.4541 11.6401 11.3428 cv
11.6406 11.3116 11.6792 11.3164 11.7066 11.3135 cv
11.9419 11.2803 12.2378 11.2491 12.4902 11.2881 cv
12.8008 11.337 13.1138 11.2862 13.4385 11.2881 cv
13.7271 11.2901 14.0156 11.2901 14.3052 11.2911 cv
14.4795 11.2813 14.6524 11.2725 14.8281 11.2627 cv
15.1543 11.2647 15.4566 11.2842 15.7754 11.2823 cv
16.1577 11.2784 16.5713 11.2725 16.9697 11.2745 cv
17.083 11.2803 17.1973 11.2862 17.312 11.2901 cv
17.4746 11.2813 17.6392 11.2745 17.8027 11.2647 cv
17.939 11.2686 18.0664 11.2969 18.2114 11.2979 cv
18.3945 11.2989 18.5606 11.2813 18.7329 11.2862 cv
19.002 11.2911 19.2901 11.292 19.5679 11.3077 cv
19.6983 11.3174 19.8286 11.3272 19.959 11.3379 cv
20.3433 11.335 20.7446 11.3174 21.1206 11.3135 cv
21.377 11.3213 21.6333 11.3272 21.8882 11.335 cv
22.1055 11.333 22.3203 11.2911 22.5415 11.292 cv
22.6968 11.294 22.8687 11.3077 23.0327 11.3077 cv
23.1797 11.3067 23.3267 11.3037 23.4736 11.3018 cv
23.6426 11.3155 23.812 11.3282 23.981 11.3428 cv
24.1113 11.337 24.2422 11.3301 24.3726 11.3233 cv
24.6294 11.333 24.8838 11.3428 25.1406 11.3526 cv
25.2617 11.3428 25.3809 11.333 25.5005 11.3233 cv
26.1983 11.3057 26.8555 11.3233 27.5596 11.3174 cv
27.7139 11.3077 27.8657 11.2979 28.0176 11.2881 cv
28.332 11.2803 28.6641 11.3018 28.9658 11.2803 cv
29.0322 11.2745 29.0967 11.2666 29.1626 11.2618 cv
29.4248 11.2881 29.7305 11.2598 30.0117 11.2666 cv
30.1289 11.2686 30.2256 11.2969 30.3384 11.2998 cv
30.4634 11.295 30.5899 11.292 30.7139 11.2881 cv
30.9155 11.295 31.1485 11.3194 31.3516 11.3174 cv
31.4932 11.3164 31.6294 11.2881 31.7778 11.294 cv
31.8814 11.3018 31.9844 11.3116 32.0884 11.3213 cv
32.2319 11.3233 32.396 11.3037 32.5454 11.3155 cv
32.6489 11.3311 32.752 11.3467 32.8565 11.3604 cv
32.9424 11.3575 33.0303 11.3536 33.1177 11.3496 cv
33.21 11.3565 33.3023 11.3604 33.396 11.3653 cv
33.4883 11.3623 33.5811 11.3565 33.6729 11.3526 cv
33.8482 11.3487 34.0156 11.3702 34.1792 11.3584 cv
34.4463 11.3379 34.7075 11.378 34.981 11.375 cv
35.1113 11.3662 35.2417 11.3575 35.3721 11.3487 cv
35.4595 11.3536 35.5464 11.3584 35.6343 11.3623 cv
35.7163 11.3633 35.8198 11.3526 35.8887 11.3799 cv
35.8941 11.3858 35.9009 11.3916 35.9072 11.3955 cv
35.9653 11.4815 35.9434 11.6407 35.9424 11.7569 cv
35.94 12.1299 35.9238 12.4912 35.9395 12.8516 cv
35.9473 13.0791 35.9443 13.3409 35.9468 13.5713 cv
35.9424 13.6475 35.9395 13.7237 35.9346 13.7989 cv
35.94 13.9629 35.9473 14.125 35.9531 14.2891 cv
35.9443 14.4522 35.936 14.6162 35.9258 14.7803 cv
35.9395 14.9932 35.9531 15.2061 35.9663 15.418 cv
35.9566 15.4991 35.9473 15.5811 35.9385 15.6631 cv
35.9326 15.8057 35.9614 15.9336 35.96 16.0723 cv
35.9507 16.2139 35.9424 16.3545 35.9336 16.4961 cv
35.9326 16.6709 35.9297 16.8448 35.9273 17.0186 cv
35.918 17.1495 35.9072 17.2813 35.8985 17.4112 cv
35.9136 17.6241 35.9297 17.836 35.9424 18.0479 cv
35.9365 18.125 35.9302 18.2022 35.9229 18.2784 cv
35.9165 18.4541 35.9028 18.6319 35.9053 18.8008 cv
35.9082 19.1026 35.9336 19.4405 35.9365 19.7315 cv
35.9297 19.7979 35.9214 19.8643 35.9146 19.9287 cv
35.9204 20.0655 35.9258 20.2002 35.9312 20.337 cv
35.9238 20.4932 35.9082 20.6709 35.9072 20.8448 cv
35.9072 20.9698 35.9346 21.0811 35.9312 21.2041 cv
35.9238 21.2686 35.9146 21.335 35.9053 21.3995 cv
35.9097 21.4873 35.9131 21.5752 35.9146 21.6612 cv
35.9072 21.9893 35.8779 22.3057 35.8818 22.6416 cv
35.8877 22.8057 35.8916 22.9678 35.8985 23.1319 cv
35.9063 23.1983 35.9136 23.2627 35.9238 23.3291 cv
35.9194 23.4385 35.9131 23.5459 35.9082 23.6553 cv
35.9116 23.7256 35.9165 23.7959 35.9194 23.8682 cv
35.9097 23.9873 35.9009 24.1065 35.8911 24.2256 cv
35.8916 24.3897 35.9312 24.5616 35.9248 24.7334 cv
35.9072 25.212 35.8809 25.6631 35.8779 26.1397 cv
35.877 26.333 35.9072 26.5049 35.9063 26.6944 cv
35.8965 26.7998 35.8853 26.9034 35.8755 27.0049 cv
35.8735 27.2295 35.8716 27.4541 35.8677 27.6768 cv
35.8565 27.7959 35.8457 27.9151 35.836 28.0362 cv
35.8418 28.4873 35.8482 28.9385 35.855 29.3916 cv
35.8526 29.7061 35.8203 30.0401 35.8237 30.3565 cv
35.832 30.5245 35.8399 30.6944 35.8467 30.8643 cv
35.8433 30.9287 35.8394 30.9932 35.836 31.0596 cv
35.835 31.1807 35.8335 31.2979 35.8325 31.4209 cv
35.8311 31.71 35.8447 32.0049 35.8433 32.2862 cv
35.8418 32.6241 35.8447 32.9893 35.8369 33.3467 cv
35.8325 33.4463 35.8286 33.542 35.8252 33.6397 cv
35.832 33.7002 35.8394 33.7608 35.8467 33.8213 cv
35.8369 34.0284 35.8262 34.2354 35.8174 34.4424 cv
35.813 34.6162 35.8384 34.7998 35.8262 34.9815 cv
35.8067 35.0909 35.7861 35.2002 35.7671 35.3096 cv
35.7515 35.4287 35.7359 35.5459 35.7222 35.6651 cv
35.6802 35.8682 35.5327 36.1592 35.4253 36.333 cv
35.332 36.4834 35.1758 36.5635 35.0562 36.6827 cv
34.9839 36.753 34.9028 36.7998 34.8276 36.8623 cv
34.688 36.9834 34.5498 37.1084 34.3916 37.1924 cv
34.2905 37.2295 34.19 37.2686 34.0889 37.3037 cv
33.8853 37.3877 33.6807 37.4795 33.4722 37.5596 cv
33.2803 37.6319 33.0772 37.6846 32.8858 37.7569 cv
32.8394 37.7745 32.7891 37.792 32.7407 37.8077 cv
32.6358 37.8077 32.4946 37.8545 32.4131 37.9034 cv
32.3213 37.9034 32.2256 37.9151 32.1519 37.9522 cv
32.0132 37.9502 31.9141 37.9912 31.8018 38.0323 cv
31.7666 38.044 31.7305 38.0537 31.6948 38.0635 cv
31.6372 38.0635 31.5733 38.0694 31.5293 38.0948 cv
31.4214 38.0948 31.169 38.1436 31.0879 38.1905 cv
30.9922 38.1905 30.874 38.1729 30.794 38.2061 cv
30.7373 38.2061 30.6734 38.212 30.6294 38.2373 cv
30.5415 38.2373 30.4375 38.2276 30.3677 38.2686 cv
30.3252 38.2745 30.2803 38.2784 30.2373 38.2842 cv
30.168 38.2842 30.0952 38.2862 30.041 38.3155 cv
29.9805 38.3155 29.9102 38.3233 29.8613 38.3487 cv
29.7471 38.3467 29.5772 38.3291 29.4849 38.3799 cv
29.4419 38.3838 29.3975 38.3877 29.3545 38.3936 cv
29.2432 38.3936 29.105 38.3526 29.0103 38.4092 cv
28.9453 38.4073 28.8672 38.3995 28.814 38.4229 cv
28.7813 38.4287 28.749 38.4346 28.7168 38.4385 cv
28.6118 38.4385 28.478 38.419 28.3892 38.4541 cv
28.3457 38.46 28.3018 38.4639 28.2588 38.4698 cv
28.2256 38.4737 28.1929 38.4795 28.1607 38.4854 cv
28.1275 38.4912 28.0947 38.4971 28.0635 38.501 cv
28.0137 38.5069 27.9644 38.5108 27.9146 38.5186 cv
27.8462 38.5166 27.7715 38.5205 27.7188 38.5479 cv
27.6748 38.5518 27.6314 38.5596 27.5874 38.5635 cv
27.5142 38.5635 27.4307 38.5616 27.3745 38.5967 cv
27.3052 38.5967 27.2315 38.5967 27.1792 38.628 cv
27.1231 38.628 27.0576 38.6338 27.0156 38.6573 cv
26.9639 38.6573 26.9082 38.667 26.8682 38.6905 cv
26.836 38.6944 26.8032 38.7002 26.7705 38.708 cv
26.6865 38.7061 26.5747 38.7315 26.5078 38.7686 cv
26.4541 38.7686 26.4014 38.7784 26.3599 38.8037 cv
26.1895 38.8018 26.042 38.878 25.897 38.9346 cv
25.7852 38.9756 25.6719 39.0186 25.5591 39.0596 cv
25.3399 39.0577 25.1074 39.2608 24.9463 39.3955 cv
24.8042 39.5108 24.6216 39.5674 24.4824 39.6983 cv
24.0947 40.0596 23.8609 40.542 23.6685 41.0108 cv
cp
0 0 0 0 cmyk
f
25.4907 38.6885 mo
25.5908 38.6475 25.6914 38.6045 25.793 38.5616 cv
25.9912 38.501 26.2002 38.4639 26.4107 38.419 cv
26.8032 38.335 27.1836 38.2315 27.5762 38.1495 cv
27.6734 38.1416 27.7695 38.1358 27.8657 38.1299 cv
28.0181 38.1026 28.167 38.0635 28.3267 38.0498 cv
28.5332 38.042 28.7402 38.0362 28.9478 38.0284 cv
29.1968 38.0108 29.4492 37.958 29.7002 37.9385 cv
29.9258 37.9229 30.1485 37.9151 30.3692 37.8858 cv
30.5669 37.8545 30.7632 37.8213 30.96 37.7901 cv
31.0249 37.7842 31.0899 37.7784 31.1533 37.7745 cv
31.458 37.7256 31.7515 37.6534 32.0425 37.587 cv
32.1416 37.5616 32.2368 37.5498 32.332 37.5225 cv
32.6118 37.4405 32.8828 37.3311 33.1553 37.2452 cv
33.3833 37.1709 33.604 37.1006 33.8184 37.003 cv
34.0039 36.919 34.1597 36.7998 34.333 36.6905 cv
34.6416 36.4971 34.9785 36.2901 35.1709 35.9639 cv
35.2564 35.8213 35.335 35.6045 35.3609 35.4346 cv
35.3677 35.3526 35.3735 35.2705 35.3794 35.1885 cv
35.438 34.837 35.4292 34.4483 35.4253 34.0811 cv
35.4317 33.9502 35.4356 33.8174 35.4424 33.6866 cv
35.438 33.6162 35.4351 33.5459 35.4292 33.4756 cv
35.4292 33.335 35.4292 33.1924 35.4287 33.0518 cv
35.4204 32.9971 35.4136 32.9405 35.4063 32.8858 cv
35.4121 32.8389 35.418 32.7901 35.4229 32.7412 cv
35.418 32.6924 35.4121 32.6416 35.4053 32.5928 cv
35.4072 32.4971 35.4336 32.417 35.4336 32.3155 cv
35.4351 32.2061 35.4063 32.126 35.4053 32.0205 cv
35.4038 31.8955 35.4356 31.8018 35.4395 31.6787 cv
35.4473 31.2491 35.4424 30.8252 35.459 30.4014 cv
35.4546 30.2979 35.4512 30.1963 35.4483 30.0928 cv
35.4497 29.7159 35.4522 29.3409 35.4541 28.9659 cv
35.4756 27.9424 35.4624 26.8506 35.4849 25.8272 cv
35.4785 25.7178 35.4741 25.6084 35.4668 25.4991 cv
35.4624 25.4659 35.458 25.4346 35.4541 25.4034 cv
35.459 25.3213 35.4771 25.2295 35.4736 25.1416 cv
35.4668 25.0811 35.4595 25.0205 35.4541 24.962 cv
35.457 24.876 35.4785 24.7901 35.4776 24.6983 cv
35.4756 24.5108 35.4302 24.3487 35.4317 24.1592 cv
35.4326 24.0303 35.4512 23.917 35.4595 23.7998 cv
35.459 23.7412 35.457 23.6787 35.4546 23.6202 cv
35.4629 23.5616 35.4717 23.4991 35.481 23.4405 cv
35.4736 23.3702 35.4653 23.2998 35.4556 23.2276 cv
35.4653 23.1475 35.4736 23.0655 35.4819 22.9834 cv
35.48 22.9092 35.457 22.8487 35.457 22.7686 cv
35.459 22.3233 35.4624 21.876 35.4644 21.4307 cv
35.4653 21.3291 35.4917 21.2491 35.4951 21.1514 cv
35.4985 21.0557 35.4678 20.9834 35.4712 20.8916 cv
35.4785 20.8428 35.4873 20.792 35.4951 20.7432 cv
35.5029 20.5967 35.5098 20.4502 35.5181 20.3018 cv
35.5147 20.0791 35.5127 19.833 35.5039 19.5987 cv
35.4951 19.5245 35.4849 19.4483 35.4756 19.3702 cv
35.4741 19.1866 35.5073 19.0245 35.5044 18.8467 cv
35.4976 18.711 35.4883 18.5752 35.481 18.4385 cv
35.4868 17.3858 35.4458 16.376 35.4849 15.3311 cv
35.4883 14.7618 35.4917 14.1895 35.4951 13.6172 cv
35.5064 13.3077 35.4824 12.9698 35.48 12.669 cv
35.4771 12.3623 35.4824 12.084 35.4849 11.7705 cv
35.48 11.7705 35.4741 11.7705 35.4678 11.7705 cv
35.4678 11.7364 35.3145 11.7569 35.2881 11.7696 cv
34.9839 11.7657 34.6782 11.7608 34.3745 11.7569 cv
34.1768 11.7393 33.9795 11.7256 33.7686 11.7286 cv
33.71 11.7286 33.6377 11.7227 33.5889 11.7442 cv
33.5142 11.751 33.4375 11.7588 33.3609 11.7666 cv
33.2515 11.7539 33.1426 11.7393 33.0322 11.7256 cv
32.6514 11.7237 32.2705 11.7198 31.8887 11.7178 cv
31.7822 11.7178 31.5044 11.6827 31.4321 11.7149 cv
31.2359 11.7139 31.0396 11.711 30.8438 11.708 cv
30.6948 11.6983 30.4824 11.6358 30.3364 11.6924 cv
30.294 11.6983 30.249 11.7022 30.2066 11.708 cv
30.0645 11.7071 29.9229 11.7041 29.7808 11.7022 cv
29.5698 11.6885 29.3638 11.6534 29.1436 11.6524 cv
28.9805 11.7002 28.7461 11.6211 28.5874 11.6827 cv
28.5444 11.6885 28.501 11.6924 28.4585 11.6983 cv
28.2896 11.6983 28.1206 11.6963 27.9512 11.6963 cv
27.8687 11.6963 27.7564 11.6807 27.689 11.712 cv
27.6377 11.711 27.5659 11.7061 27.5239 11.7256 cv
27.3838 11.7256 27.2661 11.6963 27.1328 11.6924 cv
26.7954 11.6905 26.4585 11.6875 26.1206 11.6856 cv
25.9976 11.6846 25.8164 11.6582 25.7124 11.7002 cv
25.6738 11.7041 25.6358 11.71 25.5972 11.7159 cv
25.5479 11.7198 25.4981 11.7256 25.4502 11.7305 cv
25.2593 11.7295 24.9439 11.6299 24.7793 11.6954 cv
24.7466 11.6993 24.7153 11.7041 24.6826 11.71 cv
24.6099 11.71 24.5254 11.712 24.4688 11.7422 cv
23.9815 11.7393 23.4951 11.7364 23.0308 11.7256 cv
22.9072 11.7237 22.7764 11.7295 22.6548 11.7286 cv
22.5967 11.7286 22.5103 11.7041 22.459 11.7305 cv
22.3384 11.7286 22.2197 11.7276 22.0991 11.7256 cv
21.9326 11.7139 21.5645 11.6475 21.4126 11.708 cv
21.3037 11.7071 21.1948 11.7041 21.086 11.7041 cv
21.0132 11.6983 20.9253 11.6778 20.856 11.7041 cv
20.7593 11.7041 20.6294 11.6866 20.5469 11.7198 cv
20.3516 11.7178 20.1797 11.6846 19.9746 11.6827 cv
19.9097 11.6827 19.833 11.6768 19.7788 11.6993 cv
19.6572 11.6983 19.4878 11.6729 19.3862 11.7139 cv
19.2002 11.7129 19.0156 11.712 18.8296 11.711 cv
18.7432 11.71 18.624 11.6924 18.5532 11.7246 cv
18.3189 11.7276 18.0845 11.7276 17.8501 11.7286 cv
17.7017 11.7178 17.4146 11.6631 17.2774 11.7178 cv
17.1299 11.7178 16.876 11.667 16.7544 11.7139 cv
16.4453 11.7139 16.1607 11.6954 15.855 11.6748 cv
15.7476 11.6661 15.582 11.6299 15.4795 11.6758 cv
15.419 11.6748 15.3511 11.667 15.2993 11.6914 cv
15.1821 11.6905 15.023 11.6651 14.9243 11.7041 cv
14.8208 11.7041 14.6621 11.6787 14.5801 11.7178 cv
14.1934 11.7178 13.7837 11.6983 13.3721 11.6963 cv
13.2515 11.6963 13.0801 11.669 12.979 11.71 cv
12.8301 11.709 12.5044 11.6787 12.3901 11.7237 cv
12.3037 11.7237 12.1524 11.6983 12.0957 11.753 cv
12.0039 11.8409 12.0537 12.2696 12.0576 12.4073 cv
12.0532 12.5166 12.0493 12.626 12.044 12.7354 cv
12.0479 12.834 12.062 12.9375 12.0508 13.045 cv
12.0508 13.1983 12.0508 13.3496 12.0518 13.503 cv
12.0366 13.919 12.0322 14.3194 12.0298 14.7461 cv
12.0288 14.8614 12.0005 14.9473 11.9971 15.0557 cv
11.9917 15.169 12.0171 15.2784 12.0161 15.3819 cv
12.002 15.4854 11.9898 15.5889 11.9771 15.6924 cv
11.9824 15.9102 11.9868 16.128 11.9937 16.3448 cv
11.978 16.7159 11.961 17.1143 11.9653 17.5069 cv
11.9712 17.6592 11.9766 17.8116 11.9819 17.9629 cv
11.9878 18.0127 11.9942 18.0616 12.0005 18.1104 cv
11.9878 18.2041 11.9771 18.2969 11.9649 18.3877 cv
11.9717 19.0547 11.9531 19.6905 11.9492 20.3662 cv
11.9483 20.6612 11.9639 20.9307 11.9575 21.2159 cv
11.9473 21.3584 11.9365 21.4991 11.9263 21.6416 cv
11.9302 21.8545 11.9346 22.0674 11.939 22.2803 cv
11.936 22.7002 11.9185 23.1397 11.9224 23.5713 cv
11.9297 23.7237 11.9356 23.8741 11.9424 24.0284 cv
11.9326 24.2237 11.9224 24.419 11.9107 24.6162 cv
11.9072 25.3897 11.9199 26.1924 11.9268 26.9698 cv
11.9297 27.1631 11.8945 27.3252 11.8941 27.5264 cv
11.8926 27.7334 11.8911 27.9385 11.8911 28.1455 cv
11.896 28.2412 11.8994 28.333 11.9033 28.4248 cv
11.8887 29.128 11.8648 29.8037 11.8609 30.5166 cv
11.8584 30.8389 11.8242 31.1221 11.8223 31.4307 cv
11.8223 31.5674 11.8228 31.7041 11.8242 31.8389 cv
11.8306 31.8936 11.8389 31.9483 11.8457 32.003 cv
11.8374 32.0577 11.8281 32.1123 11.8208 32.1651 cv
11.812 32.3233 11.8027 32.4893 11.8018 32.6397 cv
11.8013 32.833 11.8052 33.044 11.814 33.2452 cv
11.8174 33.335 11.8423 33.4112 11.8418 33.5069 cv
11.8413 33.6045 11.812 33.6748 11.8115 33.7666 cv
11.8106 33.8799 11.8408 33.962 11.8403 34.0791 cv
11.835 34.9229 11.8447 35.7373 12.228 36.3799 cv
12.4922 36.8194 12.9771 37.0967 13.419 37.2862 cv
13.7251 37.419 14.0391 37.5694 14.3716 37.6495 cv
14.6182 37.7061 14.8613 37.7373 15.1196 37.7823 cv
15.3154 37.8155 15.5195 37.8662 15.7256 37.8877 cv
15.9219 37.9034 16.1172 37.919 16.313 37.9327 cv
16.7334 37.9854 17.1445 38.0596 17.5723 38.1104 cv
17.7725 38.1202 17.9741 38.1319 18.1753 38.1416 cv
18.2622 38.1592 18.3496 38.1787 18.437 38.1983 cv
18.5952 38.2002 18.7544 38.2022 18.9107 38.2061 cv
19.0796 38.2217 19.2485 38.2373 19.4175 38.2549 cv
19.5039 38.2588 19.5903 38.2608 19.6782 38.2627 cv
19.7544 38.2842 19.8311 38.2998 19.9077 38.3174 cv
20.1245 38.3506 20.3262 38.3741 20.5435 38.417 cv
20.6099 38.4385 20.6768 38.46 20.7446 38.4854 cv
20.8921 38.5264 21.0264 38.5635 21.1685 38.6182 cv
21.3735 38.6924 21.5801 38.7666 21.7857 38.8409 cv
21.9356 38.917 22.0835 38.9912 22.2349 39.0674 cv
22.314 39.1202 22.395 39.1748 22.4736 39.2276 cv
22.6382 39.3213 22.8003 39.4034 22.9502 39.5264 cv
23.1353 39.6768 23.2617 39.8584 23.4234 40.0342 cv
23.4756 40.0928 23.5034 40.169 23.5742 40.208 cv
23.5742 40.2354 23.5835 40.2256 23.6079 40.2256 cv
23.6079 40.1963 23.69 40.1455 23.7119 40.1182 cv
23.7471 40.0655 23.7798 40.0127 23.8135 39.96 cv
24.1709 39.4385 24.7026 39.0635 25.2412 38.7764 cv
25.3247 38.7491 25.4063 38.7159 25.4907 38.6885 cv
cp
1 .871122 .421698 .518273 cmyk
f
25.5855 13.792 mo
25.5855 13.7959 25.5855 13.8018 25.5855 13.8077 cv
25.5689 13.8077 25.5523 13.8077 25.5361 13.8077 cv
25.5357 13.753 25.5342 13.6993 25.5327 13.6455 cv
25.5562 13.4825 25.6909 13.4082 25.7832 13.2862 cv
25.9566 13.4375 25.689 13.6797 25.5855 13.792 cv
cp
0 0 0 0 cmyk
f
26.4336 12.4287 mo
26.5025 12.3555 26.5405 12.2666 26.6006 12.1846 cv
26.6519 12.1338 26.7036 12.084 26.7564 12.0323 cv
26.8735 12.045 26.9834 12.0616 27.1143 12.0674 cv
27.1143 12.084 27.1143 12.1006 27.1143 12.1162 cv
26.9409 12.1143 26.4761 12.6924 26.3687 12.8389 cv
26.3179 12.9073 26.2578 13.042 26.1792 13.084 cv
26.1309 13.1084 26.0752 13.0879 26.0361 13.0635 cv
25.9243 12.9952 26.0078 12.8731 26.0401 12.793 cv
26.0601 12.7422 26.0654 12.6827 26.1084 12.6455 cv
26.1538 12.6221 26.1968 12.6006 26.2422 12.5782 cv
26.3067 12.5293 26.3692 12.4795 26.4336 12.4287 cv
cp
f
25.3242 12.8233 mo
25.3511 12.7393 25.3506 12.6475 25.3926 12.5704 cv
25.4439 12.4707 25.5698 12.4454 25.6475 12.3741 cv
25.7173 12.3096 25.7319 12.2217 25.7871 12.1514 cv
25.8447 12.0772 25.9243 12.0635 26.0039 12.0284 cv
26.0684 12.0284 26.1343 12.0284 26.1992 12.0284 cv
26.1992 12.1104 26.0928 12.1934 26.0532 12.2588 cv
25.999 12.3477 25.9458 12.4414 25.8906 12.5274 cv
25.8281 12.6123 25.7637 12.6993 25.6992 12.7852 cv
25.6563 12.8526 25.6406 12.9287 25.5874 12.9893 cv
25.5479 13.0205 25.5088 13.0518 25.4678 13.0811 cv
25.4321 13.1221 25.396 13.1621 25.3604 13.2002 cv
25.3237 13.2354 25.2871 13.2696 25.2505 13.3037 cv
25.1841 13.3848 25.1841 13.503 25.0947 13.5733 cv
25.0166 13.6338 24.8755 13.6748 24.7686 13.6397 cv
24.7583 13.6397 24.7461 13.6397 24.7359 13.6397 cv
24.7363 13.5909 24.9507 13.2579 24.9995 13.2149 cv
25.0444 13.1768 25.1104 13.1739 25.146 13.1221 cv
25.1782 13.0733 25.1729 13.0166 25.2012 12.9668 cv
25.2344 12.9082 25.3008 12.8897 25.3242 12.8233 cv
cp
f
24.085 12.5928 mo
24.105 12.5118 24.1821 12.458 24.2056 12.378 cv
24.2334 12.2823 24.1992 12.2022 24.2666 12.126 cv
24.336 12.0459 24.7559 12.1104 24.8926 12.0381 cv
24.9805 12.0381 25.0654 12.0381 25.1528 12.0401 cv
25.1528 12.0518 25.1528 12.0616 25.1528 12.0733 cv
25.1275 12.0733 25.1275 12.086 25.1167 12.1026 cv
24.9893 12.2823 24.9238 12.4912 24.834 12.6885 cv
24.7925 12.7608 24.751 12.833 24.7105 12.9053 cv
24.6777 12.9834 24.6445 13.0635 24.6123 13.1416 cv
24.5274 13.2979 24.3159 13.5684 24.1318 13.6026 cv
24.1318 13.5977 24.1318 13.5918 24.1318 13.587 cv
24.103 13.587 24.1123 13.4375 24.1089 13.4082 cv
24.0957 13.336 24.0674 13.2745 24.0767 13.1944 cv
24.085 13.1065 24.1318 13.0479 24.1304 12.9502 cv
24.126 12.8291 24.0562 12.7139 24.085 12.5928 cv
cp
f
22.7861 12.0459 mo
22.8467 11.9805 23.083 12.0225 23.1763 11.9961 cv
23.2798 12.0303 23.542 12.0264 23.6665 12.0323 cv
23.669 12.1036 23.6724 12.1729 23.6753 12.2452 cv
23.688 12.2998 23.7007 12.3545 23.7119 12.4073 cv
23.7017 12.4678 23.6919 12.5274 23.6821 12.587 cv
23.6763 12.8467 23.6431 13.1026 23.6299 13.3555 cv
23.6387 13.5127 23.647 13.6709 23.6558 13.8291 cv
23.6519 13.8291 23.6445 13.8291 23.6401 13.8291 cv
23.6401 13.8243 23.6401 13.8194 23.6401 13.8135 cv
23.4321 13.8116 23.1934 13.1768 23.1099 13.0313 cv
23.0625 12.9502 22.9917 12.8975 22.9356 12.8213 cv
22.8184 12.6573 22.6065 12.2354 22.7861 12.0459 cv
cp
f
21.4639 12.17 mo
21.4644 12.1661 21.4653 12.1631 21.4668 12.1592 cv
21.5005 12.0596 21.7583 12.0577 21.8511 12.0049 cv
21.9478 12.0049 22.0728 11.9883 22.1514 12.0264 cv
22.3843 12.1407 22.4619 12.4795 22.5557 12.6934 cv
22.6152 12.8321 22.6968 12.9659 22.7627 13.1045 cv
22.8076 13.1778 22.8501 13.251 22.8931 13.3233 cv
22.9234 13.3975 22.9336 13.4776 22.9365 13.5635 cv
22.937 13.6241 22.9478 13.7393 22.8911 13.7686 cv
22.8443 13.794 22.7744 13.7823 22.7295 13.7637 cv
22.6445 13.7315 21.4688 12.2725 21.4629 12.1963 cv
21.4629 12.1924 21.4629 12.1885 21.4629 12.1827 cv
21.4629 12.1787 21.4639 12.1729 21.4639 12.17 cv
cp
f
20.8233 12.0157 mo
20.9443 12.0362 21.0166 12.0713 21.1055 12.1592 cv
21.2354 12.2842 21.3462 12.4327 21.4502 12.5791 cv
21.5029 12.6543 21.5332 12.7373 21.5972 12.8096 cv
21.6782 12.8975 21.7603 12.9854 21.8413 13.0704 cv
21.9141 13.1631 21.9859 13.253 22.0586 13.3457 cv
22.085 13.3848 22.1094 13.4239 22.1358 13.4639 cv
22.1875 13.5088 22.2412 13.5547 22.2935 13.6006 cv
22.4024 13.7051 22.5025 13.836 22.5596 13.9698 cv
22.5337 13.9698 22.5342 13.9981 22.5278 14.0186 cv
22.438 14.0186 22.3291 13.9864 22.2656 13.9356 cv
22.1607 13.8291 22.0557 13.7217 21.9497 13.6143 cv
21.8828 13.5479 21.8037 13.5205 21.7461 13.4434 cv
21.6333 13.292 21.5484 13.1133 21.4102 12.9776 cv
21.3311 12.9004 21.2168 12.8858 21.1362 12.8096 cv
21.1338 12.8067 21.1318 12.8037 21.1294 12.8018 cv
21.0444 12.712 21.0132 12.5928 20.9414 12.4981 cv
20.8594 12.3897 20.7388 12.3155 20.6607 12.208 cv
20.6582 12.2012 20.6533 12.1924 20.6494 12.1866 cv
20.6485 12.1827 20.6475 12.1787 20.646 12.1739 cv
20.6318 12.0811 20.7622 12.045 20.8233 12.0157 cv
cp
f
24.4815 15.419 mo
24.5278 15.4248 24.5742 15.4307 24.6211 15.4366 cv
24.7617 15.4873 24.8838 15.6944 24.8311 15.8438 cv
24.8023 15.9229 24.7129 15.9942 24.6445 16.0459 cv
24.5972 16.083 24.5283 16.1397 24.4605 16.1338 cv
24.3657 16.1241 24.4063 15.9229 24.4297 15.8682 cv
24.4629 15.794 24.5474 15.7725 24.5527 15.6807 cv
24.561 15.5713 24.4805 15.5225 24.4815 15.419 cv
cp
f
24.7105 14.7481 mo
24.6553 14.7813 24.5908 14.8711 24.5186 14.8623 cv
24.418 14.8496 24.3775 14.7198 24.311 14.6592 cv
24.2393 14.5889 24.0879 14.5547 24.1089 14.4229 cv
24.1157 14.3682 24.1636 14.3409 24.2095 14.3233 cv
24.2095 14.3194 24.2095 14.3116 24.2095 14.3077 cv
24.3193 14.3291 24.395 14.3838 24.4932 14.4258 cv
24.6069 14.4727 24.7222 14.4991 24.8399 14.544 cv
24.8643 14.5537 24.8755 14.5811 24.8662 14.6084 cv
24.8428 14.6787 24.7666 14.7129 24.7105 14.7481 cv
cp
f
24.4981 16.7715 mo
24.4756 16.8916 24.2036 16.9405 24.1104 16.8819 cv
23.9717 16.7969 24.2373 16.6241 24.2944 16.5791 cv
24.3643 16.5987 24.5156 16.6768 24.4981 16.7715 cv
cp
f
23.7861 16.667 mo
23.7402 16.6768 23.7153 16.6348 23.6846 16.6143 cv
23.647 16.5909 23.6035 16.583 23.5703 16.5469 cv
23.4863 16.4541 23.5112 16.3565 23.5064 16.2315 cv
23.5025 16.167 23.4907 16.087 23.5147 16.0264 cv
23.5357 15.9737 23.5869 15.9502 23.6279 15.9209 cv
23.6817 15.9229 23.7246 15.9268 23.7656 15.9522 cv
23.8125 15.9815 24.1421 16.3008 24.1494 16.335 cv
24.1709 16.459 23.8848 16.6475 23.7861 16.667 cv
cp
f
25.7061 15.6221 mo
25.7056 15.7393 25.6445 15.8682 25.5405 15.9151 cv
25.5401 15.9405 25.4834 15.9053 25.458 15.8985 cv
25.4585 15.7793 25.6133 15.6924 25.6909 15.6221 cv
25.6953 15.6221 25.7007 15.6221 25.7061 15.6221 cv
cp
f
25.3989 15.4112 mo
25.3579 15.4405 25.3203 15.4746 25.2656 15.4737 cv
25.2085 15.4737 25.1846 15.4366 25.1675 15.3897 cv
25.1543 15.3487 25.1592 14.8204 25.1729 14.7745 cv
25.1909 14.7178 25.2788 14.669 25.3184 14.6231 cv
25.4424 14.6612 25.4351 14.7364 25.4776 14.8467 cv
25.5547 15.0518 25.6089 15.2549 25.3989 15.4112 cv
cp
f
25.1958 16.3545 mo
25.211 16.3545 25.2051 16.3594 25.1948 16.3711 cv
25.1948 16.4463 24.9829 16.5791 24.9175 16.5147 cv
24.8242 16.4248 24.9395 16.3301 24.999 16.2715 cv
25.086 16.2784 25.1494 16.2832 25.1958 16.3545 cv
cp
f
23.7007 14.6299 mo
23.7593 14.6358 23.8154 14.6436 23.8735 14.6495 cv
23.9751 14.6827 24.3003 14.9463 24.2651 15.0752 cv
24.2354 15.1905 24.127 15.2569 24.0435 15.3409 cv
23.9575 15.4248 23.8535 15.5235 23.73 15.5381 cv
23.6069 15.5537 23.4321 15.0079 23.4546 14.9112 cv
23.4658 14.8682 23.6582 14.6709 23.6997 14.6475 cv
23.6997 14.6416 23.6997 14.6358 23.7007 14.6299 cv
cp
f
23.3208 15.9561 mo
23.2568 16.0108 23.1738 16.1055 23.086 16.1114 cv
23.0181 16.1172 22.9854 16.0684 22.9409 16.0303 cv
22.8335 15.9375 22.7559 15.7452 22.7925 15.5928 cv
22.8174 15.5459 22.8403 15.501 22.8657 15.4541 cv
22.9107 15.3223 22.8916 15.2998 22.9942 15.1983 cv
23.1353 15.2637 23.5391 15.5616 23.4981 15.753 cv
23.4805 15.8321 23.3779 15.9053 23.3208 15.9561 cv
cp
f
23.3941 16.8516 mo
23.3887 16.8516 23.3838 16.8516 23.3779 16.8516 cv
23.3779 16.8799 23.3179 16.8623 23.2979 16.8565 cv
23.0508 16.8057 22.7842 16.7422 22.9883 16.4405 cv
23.0278 16.4463 23.0615 16.4463 23.0908 16.4717 cv
23.1485 16.5147 23.1655 16.5791 23.2075 16.6319 cv
23.27 16.712 23.3648 16.751 23.3941 16.8516 cv
cp
f
22.2622 14.7705 mo
22.2632 14.7705 22.3809 14.628 22.4258 14.6065 cv
22.4258 14.6016 22.4258 14.5957 22.4258 14.5909 cv
22.6314 14.7237 22.7988 14.9629 22.586 15.1807 cv
22.5435 15.2227 22.4751 15.2803 22.4175 15.2901 cv
22.2261 15.3184 22.3067 15.083 22.3042 14.9834 cv
22.3027 14.9073 22.2798 14.837 22.2622 14.7705 cv
cp
f
22.6392 14.462 mo
22.6392 14.4454 22.6392 14.4287 22.6392 14.4131 cv
22.6729 14.4034 22.7056 14.3936 22.7388 14.3868 cv
22.9434 14.3565 23.0742 14.3252 23.2451 14.2354 cv
23.2979 14.251 23.3818 14.251 23.4146 14.3028 cv
23.5068 14.4463 23.0762 14.7393 22.9497 14.7266 cv
22.8101 14.71 22.7368 14.544 22.6392 14.462 cv
cp
f
22.3867 15.8164 mo
22.417 15.8252 22.4478 15.835 22.4785 15.8428 cv
22.5571 15.8897 22.8423 16.1631 22.8506 16.2471 cv
22.8599 16.3389 22.6187 16.5079 22.5415 16.5245 cv
22.4761 16.5381 22.459 16.4717 22.439 16.4248 cv
22.3633 16.2373 22.3086 16.0323 22.3867 15.8164 cv
cp
f
22.0532 15.6436 mo
21.8941 15.6827 21.9282 15.376 21.9326 15.2745 cv
22.0493 15.3135 22.2876 15.585 22.0532 15.6436 cv
cp
f
24.0747 32.6436 mo
24.0747 32.5967 24.4297 32.0811 24.4819 32.0186 cv
24.5088 31.9854 24.5484 31.958 24.585 31.9444 cv
24.585 31.9385 24.585 31.9327 24.585 31.9268 cv
24.6665 31.9268 24.749 31.9287 24.8311 31.9287 cv
24.8296 32.0284 24.4424 32.5987 24.3423 32.6416 cv
24.271 32.6748 24.1738 32.6592 24.0899 32.6612 cv
24.0899 32.6553 24.0899 32.6495 24.0899 32.6436 cv
24.085 32.6436 24.0791 32.6436 24.0747 32.6436 cv
cp
f
21.582 32.5948 mo
21.4922 32.6338 21.3535 32.6084 21.2471 32.6123 cv
21.2485 32.4639 21.8472 32.0342 21.9693 31.9131 cv
22.0508 31.9131 22.1323 31.9131 22.2153 31.9131 cv
22.2149 32.0342 21.7007 32.544 21.582 32.5948 cv
cp
f
26.042 35.8213 mo
25.937 35.8662 25.794 35.7764 25.7363 35.6983 cv
25.6734 35.6162 25.6519 35.5147 25.6182 35.417 cv
25.5659 35.2608 25.5156 35.0987 25.4546 34.9463 cv
25.4146 34.8428 25.3355 34.7041 25.3506 34.5811 cv
25.3604 34.5049 25.4326 34.4737 25.4854 34.4346 cv
25.5327 34.4463 25.5659 34.46 25.5943 34.503 cv
25.625 34.5518 25.6362 34.6045 25.6558 34.6612 cv
25.7075 34.8116 25.7573 34.96 25.8008 35.1182 cv
25.8516 35.2959 25.9277 35.4795 26.0039 35.6455 cv
26.0161 35.6729 26.0962 35.7959 26.042 35.8213 cv
cp
f
25.4927 31.9053 mo
25.5708 32.0166 26.0376 32.5342 26.0108 32.6319 cv
26.0034 32.6553 25.9741 32.6592 25.9522 32.6631 cv
25.8106 32.6651 25.6699 32.667 25.5288 32.667 cv
25.2788 32.667 25.0278 32.6651 24.7774 32.6651 cv
24.7774 32.6592 24.7774 32.6534 24.7783 32.6475 cv
24.772 32.6475 24.7656 32.6475 24.7612 32.6475 cv
24.7612 32.5928 24.8047 32.544 24.8272 32.501 cv
24.9058 32.3545 25.2134 31.9366 25.1934 31.7862 cv
25.1875 31.7354 25.1494 31.6963 25.104 31.6827 cv
24.9063 31.6143 24.6704 31.6709 24.4561 31.6651 cv
24.3423 31.6573 24.0825 31.6006 23.9824 31.6455 cv
23.7676 31.6455 23.02 31.5401 22.9321 31.7295 cv
22.9107 31.7745 22.9404 31.8252 22.9595 31.8643 cv
23.0459 32.0362 23.1807 32.1963 23.2964 32.3526 cv
23.3599 32.4502 23.4229 32.5459 23.4863 32.6397 cv
23.4854 32.6455 23.4854 32.6514 23.4854 32.6573 cv
23.4697 32.6631 23.4522 32.667 23.4365 32.6748 cv
22.9766 32.6709 22.52 32.6534 22.064 32.6495 cv
22.064 32.6397 22.064 32.628 22.064 32.6182 cv
22.0791 32.6182 22.7329 31.8272 22.8047 31.7373 cv
22.8047 31.7159 22.7998 31.7159 22.7876 31.7041 cv
22.707 31.6963 22.624 31.6827 22.543 31.6748 cv
22.4068 31.667 22.271 31.6612 22.1343 31.6534 cv
21.7437 31.6436 21.3316 31.667 20.958 31.6299 cv
20.959 31.585 21.5156 31.0459 21.5903 30.9698 cv
22.064 30.4717 22.5571 29.9932 23.0518 29.5088 cv
23.2227 29.333 23.3916 29.1592 23.5615 28.9854 cv
23.6167 28.9327 23.6665 28.8741 23.7354 28.8526 cv
23.7354 28.8409 23.7354 28.8291 23.7368 28.8174 cv
23.8462 28.8741 23.9424 28.9854 24.0327 29.0772 cv
24.1802 29.2295 24.3281 29.3819 24.4746 29.5342 cv
24.5679 29.6202 24.6607 29.7061 24.7544 29.794 cv
25.1748 30.2315 25.6221 30.6455 26.0508 31.0791 cv
26.2276 31.2588 26.4585 31.4405 26.5962 31.6455 cv
26.564 31.6495 26.5313 31.6553 26.4981 31.6612 cv
26.3633 31.6612 26.2261 31.6573 26.0894 31.6573 cv
26.0391 31.6573 25.9741 31.6416 25.9277 31.6573 cv
25.7407 31.6573 25.52 31.6319 25.3706 31.7022 cv
25.3696 31.7745 25.4541 31.8506 25.4927 31.9053 cv
cp
f
20.8652 33.7608 mo
20.9312 33.6475 22.1914 33.7432 22.4009 33.7452 cv
22.7261 33.7471 23.0151 33.7002 23.3335 33.7022 cv
23.7578 33.7041 24.2085 33.7373 24.6406 33.7373 cv
24.8599 33.7393 25.1011 33.7315 25.3272 33.7256 cv
25.8423 33.712 26.377 33.7354 26.8789 33.7373 cv
26.8799 33.7334 26.8799 33.7276 26.8799 33.7217 cv
26.9063 33.7217 26.9087 33.5772 26.9087 33.542 cv
26.9107 33.2139 26.917 32.8741 26.919 32.5284 cv
26.9204 32.294 26.9126 32.0537 26.9541 31.8428 cv
27.2212 31.9834 27.189 32.3194 27.1978 32.6123 cv
27.2017 32.794 27.2139 33.0049 27.208 33.2002 cv
27.1978 33.3057 27.188 33.4073 27.1782 33.5108 cv
27.169 33.667 27.2149 33.8428 27.1563 33.9854 cv
27.1563 33.9971 27.1563 34.0069 27.1563 34.0186 cv
27.1514 34.0186 27.145 34.0186 27.1397 34.0186 cv
27.1397 33.9873 27.0386 34.001 27.0093 34.001 cv
26.75 33.9991 26.5073 34.0127 26.2407 34.0108 cv
26.125 34.0108 25.9629 33.9873 25.8648 34.0264 cv
25.7671 34.0264 25.6377 34.0069 25.5537 34.042 cv
25.2539 34.0401 24.9693 34.0381 24.6709 34.0186 cv
24.5391 34.0069 24.3589 33.9483 24.23 34.001 cv
24.0112 34.001 23.7959 33.9834 23.5772 33.9893 cv
23.5288 33.9912 23.4688 33.9776 23.4292 33.9971 cv
23.3062 33.9971 23.0313 33.9483 22.9385 33.9932 cv
22.8662 33.9932 22.7852 33.9854 22.7261 34.0088 cv
22.5191 34.0069 22.312 34.0049 22.1055 34.003 cv
21.9819 33.9971 21.8443 33.9912 21.7129 33.9854 cv
21.6694 33.9854 21.625 33.9854 21.5816 33.9854 cv
21.5332 33.9912 21.4844 33.9971 21.4346 34.003 cv
21.1924 34.001 20.9995 34.0577 20.8823 33.8506 cv
20.8721 33.8311 20.8501 33.7862 20.8652 33.7608 cv
cp
f
27.0972 37.8428 mo
27.0484 37.9092 26.9019 37.9287 26.8228 37.9385 cv
26.8247 37.5303 26.8018 37.0948 26.8179 36.6787 cv
26.8228 36.5596 26.8013 36.419 26.8252 36.3077 cv
26.8335 36.2686 26.8545 36.2491 26.8818 36.2237 cv
26.9658 36.2237 27.044 36.2237 27.1099 36.2569 cv
27.1348 36.2569 27.1392 36.4327 27.1333 36.4678 cv
27.1206 36.5577 27.1401 36.6475 27.1401 36.7471 cv
27.1397 36.8936 27.1162 37.0245 27.1235 37.1709 cv
27.1333 37.3233 27.1782 37.7276 27.0972 37.8428 cv
cp
f
32.0078 37.3135 mo
31.9531 37.3135 31.8867 37.3213 31.8443 37.3467 cv
31.7632 37.3467 31.5982 37.3877 31.5332 37.4268 cv
31.3843 37.4268 31.2568 37.4873 31.1226 37.5127 cv
31.0303 37.5303 30.9321 37.5479 30.8457 37.5635 cv
30.7808 37.5713 30.7046 37.5694 30.6489 37.6006 cv
30.6118 37.6065 30.5737 37.6104 30.5347 37.6162 cv
30.4971 37.6202 30.459 37.628 30.4199 37.6319 cv
30.3223 37.6299 30.2007 37.6162 30.126 37.6631 cv
30.0879 37.667 30.0503 37.6729 30.0108 37.6787 cv
29.8526 37.6787 29.6602 37.6534 29.5371 37.7256 cv
29.478 37.7256 29.4082 37.7198 29.3574 37.7393 cv
29.2822 37.7393 29.2261 37.7237 29.1621 37.7061 cv
29.1611 37.7393 28.9658 37.7666 28.9326 37.7862 cv
28.8233 37.7862 28.6836 37.7666 28.5894 37.7998 cv
28.5518 37.8077 28.5137 37.8116 28.4756 37.8174 cv
28.3657 37.8155 28.2354 37.8037 28.1475 37.8487 cv
28.0752 37.8467 27.9937 37.8506 27.9351 37.8799 cv
27.8286 37.8799 27.5576 37.9073 27.4937 37.8545 cv
27.3877 37.7725 27.4463 36.7315 27.4507 36.5362 cv
27.4478 36.4385 27.4419 36.3409 27.439 36.2412 cv
27.4351 36.1377 27.4697 35.792 27.292 35.8487 cv
27.1914 35.8487 26.9766 35.8252 26.9014 35.8643 cv
26.7935 35.8623 26.5073 35.8838 26.4439 35.8252 cv
26.332 35.7198 26.2705 35.3311 26.2129 35.1748 cv
26.124 34.9483 25.9805 34.7198 25.9497 34.4678 cv
25.9458 34.4424 25.939 34.3975 25.9566 34.378 cv
26.0034 34.3213 26.2202 34.3311 26.3032 34.3311 cv
26.4961 34.333 27.3721 34.337 27.4439 34.2139 cv
27.4878 34.1319 27.4702 33.876 27.4624 33.7745 cv
27.4683 33.6162 27.4756 33.458 27.4819 33.2998 cv
27.4907 33.0557 27.4351 32.7725 27.5078 32.5498 cv
28.0645 33.1495 28.6963 33.7002 29.2695 34.2979 cv
29.3242 34.3662 29.3765 34.4327 29.4297 34.4991 cv
29.5728 34.6436 29.7334 34.7725 29.8804 34.9151 cv
30.2764 35.3057 30.6431 35.7276 31.0303 36.1162 cv
31.3272 36.417 31.6372 36.71 31.9341 37.0108 cv
31.9902 37.0655 32.0855 37.1299 32.1113 37.2041 cv
32.1328 37.2608 32.0371 37.2901 32.0078 37.3135 cv
cp
f
30.9282 21.7901 mo
31.0181 21.6846 31.1079 21.5791 31.1987 21.4717 cv
31.3047 21.3604 31.4268 21.2764 31.5352 21.1729 cv
31.6782 21.0264 31.8198 20.8799 31.9629 20.7334 cv
32.1245 20.5791 32.2866 20.4248 32.4473 20.2705 cv
32.7632 19.9424 33.0776 19.6143 33.3936 19.2862 cv
33.8784 18.8233 34.3726 18.3662 34.8184 17.8682 cv
34.9326 17.7393 35.103 17.6329 35.1914 17.4893 cv
35.271 17.6006 35.2144 17.8916 35.2232 18.045 cv
35.2442 18.4063 35.2266 18.7979 35.2305 19.1729 cv
35.2398 19.3643 35.2471 19.5537 35.2564 19.7432 cv
35.2446 19.9405 35.2363 20.1377 35.2251 20.333 cv
35.2339 20.4463 35.2417 20.5635 35.2515 20.6768 cv
35.2481 20.7315 35.2446 20.7842 35.2432 20.8389 cv
35.2495 20.9053 35.2564 20.9698 35.2612 21.0381 cv
35.2549 21.0909 35.2471 21.1455 35.2383 21.1983 cv
35.2134 21.501 35.211 21.8037 35.2153 22.1162 cv
35.23 22.2725 35.2442 22.4307 35.2588 22.5889 cv
35.2495 22.6768 35.2398 22.7627 35.2285 22.8506 cv
35.2276 23.0459 35.2251 23.2432 35.2232 23.4385 cv
35.2188 23.5049 35.2153 23.5694 35.2124 23.6338 cv
35.2153 23.7608 35.2461 23.8897 35.2442 24.0108 cv
35.2398 24.1846 35.1978 24.3662 35.2002 24.5498 cv
35.2153 24.7745 35.23 24.9971 35.2446 25.2198 cv
35.2354 25.3565 35.2241 25.4932 35.2134 25.628 cv
35.2212 25.6787 35.2251 25.7295 35.2319 25.7784 cv
35.2354 25.9248 35.2212 26.0733 35.2153 26.2178 cv
35.2222 26.3213 35.2305 26.4248 35.2373 26.5303 cv
35.2373 26.6084 35.2168 26.6827 35.211 26.7569 cv
35.2002 26.9131 35.2105 27.0713 35.2285 27.2159 cv
35.2573 27.4424 35.2481 27.7393 35.2251 27.9678 cv
35.2178 28.0205 35.2085 28.0752 35.2002 28.1299 cv
35.1924 28.2686 35.2276 28.3897 35.2251 28.5225 cv
35.2153 28.5987 35.2056 28.6729 35.1958 28.751 cv
35.1992 28.833 35.2036 28.9131 35.207 28.9952 cv
35.2022 29.1045 35.1958 29.2139 35.1904 29.3233 cv
35.189 29.4268 35.2539 30.0127 35.1563 30.0127 cv
35.0928 30.0127 34.5713 29.4444 34.4834 29.3565 cv
33.833 28.6983 33.1724 28.0284 32.5254 27.3721 cv
32.4219 27.2686 32.335 27.1475 32.2334 27.0479 cv
32.1416 26.96 32.0498 26.8702 31.9561 26.7823 cv
31.9107 26.7276 31.8613 26.669 31.815 26.6162 cv
31.1885 25.9991 30.5542 25.3741 29.9268 24.7588 cv
29.815 24.6495 29 23.833 28.9971 23.7803 cv
29.0005 23.7647 29.0029 23.7491 29.0049 23.7354 cv
29.0679 23.5811 29.3237 23.4092 29.4512 23.2881 cv
29.5903 23.1553 29.6919 23.0069 29.8223 22.8741 cv
29.9395 22.7549 30.0674 22.6377 30.186 22.5186 cv
30.23 22.4815 30.2739 22.4444 30.3193 22.4073 cv
30.4209 22.3018 30.522 22.1963 30.6245 22.0909 cv
30.7261 21.9912 30.8262 21.8916 30.9282 21.7901 cv
cp
f
27.1699 12.6846 mo
27.2236 12.6455 27.2813 12.6338 27.3286 12.5811 cv
27.3618 12.5313 27.395 12.4815 27.4282 12.4327 cv
27.5161 12.3037 27.6069 12.1954 27.7144 12.083 cv
27.752 12.0479 27.791 12.0127 27.8296 11.9776 cv
27.9009 11.9385 28.0239 11.958 28.1118 11.958 cv
28.2993 11.959 28.4834 11.9502 28.6514 11.9327 cv
28.7344 11.9229 28.8106 11.9287 28.8804 11.8975 cv
29.0064 11.8995 29.1304 11.9014 29.2564 11.9043 cv
29.397 11.9209 29.5469 11.9541 29.6978 11.9551 cv
29.8311 11.9571 29.9453 11.9073 30.0737 11.9102 cv
30.1172 11.919 30.1611 11.9248 30.2051 11.9327 cv
30.3613 11.9502 30.5596 11.9502 30.6948 11.9082 cv
30.6948 11.9131 30.6948 11.919 30.6948 11.9229 cv
30.7007 11.9229 30.7046 11.9229 30.7124 11.9229 cv
30.7124 11.9463 30.7163 11.9405 30.6948 11.9405 cv
30.6929 11.9493 30.6885 11.958 30.687 11.9678 cv
30.5278 12.1768 30.2964 12.3389 30.1113 12.5166 cv
29.7612 12.8584 29.4126 13.2032 29.064 13.5459 cv
28.9844 13.626 28.8926 13.6885 28.815 13.7686 cv
28.5 14.0909 28.2168 14.4385 27.895 14.7461 cv
27.7788 14.8594 27.6611 14.9717 27.5464 15.083 cv
27.4805 15.1397 27.4165 15.1944 27.353 15.25 cv
27.2798 15.337 27.208 15.4219 27.1362 15.5069 cv
26.9414 15.7139 26.7354 15.9131 26.5269 16.1084 cv
26.4292 16.2217 26.3311 16.337 26.2349 16.4522 cv
26.0181 16.6612 25.8023 16.8702 25.5874 17.0801 cv
25.2183 17.4414 24.856 17.8135 24.4859 18.17 cv
24.3628 18.2862 24.2554 18.4307 24.1206 18.5225 cv
24.1206 18.5284 24.1206 18.5332 24.1206 18.5401 cv
24.1148 18.5401 24.1094 18.5401 24.104 18.5401 cv
24.104 18.5342 24.104 18.5284 24.104 18.5225 cv
24.0986 18.5225 24.0933 18.5225 24.0864 18.5225 cv
24.0923 18.4737 24.0977 18.4248 24.1021 18.376 cv
24.1045 18.2627 24.083 18.1475 24.0947 18.0323 cv
24.1079 17.9717 24.1226 17.9131 24.1353 17.8516 cv
24.1436 17.7393 24.103 17.6465 24.1563 17.5498 cv
24.189 17.4893 24.2642 17.4639 24.3125 17.418 cv
24.4072 17.3243 24.4619 17.2041 24.5762 17.1299 cv
24.6948 17.0498 24.8447 17.0264 24.9736 16.9639 cv
25.0552 16.9229 25.1206 16.8526 25.1983 16.8057 cv
25.3726 16.6914 25.5733 16.5938 25.7046 16.4141 cv
25.7398 16.3428 25.7759 16.2715 25.8115 16.2002 cv
25.8545 16.1377 25.8994 16.0752 25.9419 16.0137 cv
25.9756 15.9287 25.9717 15.8321 25.9966 15.7412 cv
26.0298 15.6192 26.0913 15.5069 26.0947 15.3623 cv
26.0791 15.2373 26.064 15.1123 26.0488 14.9873 cv
26.0313 14.8252 25.9414 14.6807 25.8447 14.5586 cv
25.8037 14.5069 25.7539 14.4561 25.7285 14.3955 cv
25.6973 14.3955 25.7285 14.3545 25.7373 14.336 cv
25.7642 14.2998 25.7901 14.2627 25.8154 14.2256 cv
25.9277 14.0567 26.043 13.8741 26.2114 13.751 cv
26.2959 13.6875 26.3071 13.5967 26.3726 13.5186 cv
26.4502 13.4287 26.565 13.3799 26.645 13.2862 cv
26.6865 13.2305 26.7285 13.1748 26.7695 13.1211 cv
26.8037 13.0577 26.8193 12.9912 26.8706 12.9375 cv
26.9238 12.8819 26.9824 12.8565 27.0386 12.8096 cv
27.083 12.7686 27.1265 12.7256 27.1699 12.6846 cv
cp
f
17.7007 11.9659 mo
17.8613 11.9678 18.0625 11.9903 18.207 11.9512 cv
18.3247 11.9746 18.4566 11.9678 18.583 11.9698 cv
18.6826 11.9776 18.7793 11.9834 18.8784 11.9873 cv
19.0137 11.9873 19.1489 11.9873 19.2852 11.9873 cv
19.3462 11.9991 19.4058 12.0088 19.4649 12.0196 cv
19.5899 12.0205 19.7368 11.9366 19.8584 11.9776 cv
20.0029 12.0264 20.1275 12.1885 20.2378 12.3008 cv
20.4136 12.4746 20.5884 12.6475 20.7622 12.8213 cv
20.8784 12.9463 20.9888 13.0899 21.1065 13.2139 cv
21.2525 13.3643 21.4126 13.4727 21.5596 13.626 cv
21.6475 13.7178 21.6997 13.8194 21.7857 13.9082 cv
21.834 13.9463 21.8838 13.9854 21.9326 14.0225 cv
22.0269 14.1006 22.1143 14.2061 22.1665 14.3116 cv
22.1143 14.3116 22.0376 14.4239 22.0029 14.46 cv
21.8677 14.6016 21.7612 14.7452 21.7168 14.9317 cv
21.7051 15.0079 21.6934 15.083 21.6821 15.1573 cv
21.6572 15.2784 21.6265 15.3975 21.6406 15.5332 cv
21.6626 15.6202 21.6826 15.708 21.7051 15.795 cv
21.7432 15.8838 21.7793 15.9737 21.8174 16.0645 cv
21.8638 16.1631 21.8858 16.2676 21.9526 16.3604 cv
22.0039 16.4278 22.0908 16.4532 22.1538 16.501 cv
22.2178 16.5469 22.2437 16.6241 22.3071 16.6719 cv
22.3682 16.7022 22.4292 16.7295 22.4893 16.7569 cv
22.5742 16.8135 22.6577 16.8702 22.7417 16.9268 cv
22.853 16.9971 22.9898 17.0459 23.0879 17.1387 cv
23.1524 17.2276 23.2163 17.3155 23.2803 17.4034 cv
23.3384 17.4756 23.4331 17.5264 23.4756 17.6104 cv
23.5034 17.669 23.5254 17.7471 23.5288 17.8164 cv
23.5322 17.8809 23.5156 17.9522 23.5303 18.0137 cv
23.5645 18.1582 23.6231 18.3643 23.5977 18.5186 cv
23.4653 18.5186 23.1919 18.1885 23.0933 18.0909 cv
22.8911 17.9014 22.6865 17.712 22.4849 17.5225 cv
22.3369 17.3662 22.19 17.208 22.042 17.0508 cv
21.7505 16.7461 21.4351 16.4629 21.1475 16.1631 cv
20.9937 16.002 20.8364 15.8448 20.6807 15.6827 cv
20.6167 15.6065 20.5498 15.5303 20.4849 15.4551 cv
19.9502 14.9317 19.4209 14.4131 18.8897 13.8936 cv
18.7495 13.7393 18.6084 13.587 18.4658 13.4346 cv
18.1611 13.126 17.8794 12.8213 17.5606 12.5264 cv
17.4043 12.3809 17.0703 12.1827 17.0142 11.9776 cv
17.2398 11.9786 17.4688 11.9639 17.7007 11.9659 cv
cp
f
14.2534 28.0713 mo
14.0142 28.2959 13.8203 28.5537 13.5869 28.7764 cv
13.2422 29.1143 12.8975 29.4502 12.5542 29.7881 cv
12.44 29.9053 12.2744 30.0264 12.1895 30.1592 cv
12.1846 30.1592 12.1792 30.1592 12.1724 30.1592 cv
12.1724 30.1924 12.1348 30.1006 12.1314 30.0752 cv
12.1304 29.958 12.1275 29.837 12.1265 29.7178 cv
12.1328 29.3565 12.1406 28.9971 12.1494 28.6397 cv
12.1504 28.3409 12.1543 28.0557 12.1514 27.7725 cv
12.1489 27.6748 12.1436 27.5772 12.1397 27.4795 cv
12.146 27.21 12.1611 26.9112 12.1587 26.628 cv
12.1553 26.5088 12.1504 26.3897 12.146 26.2686 cv
12.1494 26.0948 12.1631 25.9131 12.1636 25.7295 cv
12.1597 25.6202 12.1563 25.5108 12.1504 25.4014 cv
12.1528 25.0928 12.1533 24.7823 12.1553 24.4717 cv
12.1509 24.378 12.147 24.2842 12.1416 24.1924 cv
12.1528 24.0791 12.1636 23.962 12.1734 23.8506 cv
12.1821 23.5909 12.1563 23.3487 12.166 23.0967 cv
12.1753 22.9073 12.1851 22.7159 12.1943 22.5264 cv
12.1895 22.1162 12.1704 21.71 12.1807 21.2998 cv
12.1934 21.1045 12.2051 20.9073 12.2183 20.712 cv
12.2114 20.6084 12.2031 20.5049 12.1948 20.4014 cv
12.1904 19.9854 12.2056 19.5596 12.2012 19.1592 cv
12.1963 19.0713 12.1924 18.9834 12.188 18.8975 cv
12.1948 18.794 12.2012 18.6905 12.208 18.587 cv
12.2095 18.4659 12.1856 18.3506 12.1934 18.2256 cv
12.2017 18.1553 12.2114 18.086 12.2193 18.0157 cv
12.2173 17.8213 12.21 17.6211 12.2114 17.4258 cv
12.3784 17.4873 12.5117 17.6729 12.6401 17.7979 cv
12.9238 18.0723 13.2046 18.3467 13.4863 18.6211 cv
13.5835 18.7256 13.6807 18.8291 13.7774 18.9317 cv
13.9902 19.1329 14.2022 19.337 14.3936 19.5577 cv
14.4585 19.6338 14.5186 19.71 14.5947 19.7823 cv
14.7334 19.9131 14.8828 20.0342 15.0181 20.1768 cv
15.0772 20.2393 15.106 20.3077 15.1694 20.3662 cv
15.4966 20.6768 15.8413 20.9678 16.1709 21.2803 cv
16.4849 21.6045 16.7984 21.9268 17.1109 22.251 cv
17.3101 22.4405 18.5645 23.6182 18.4907 23.7998 cv
18.4678 23.833 18.4458 23.8682 18.4209 23.9034 cv
18.2744 24.1553 17.9302 24.4385 17.7051 24.6416 cv
17.6265 24.712 17.5781 24.8077 17.5029 24.8819 cv
17.3179 25.0733 17.1338 25.251 16.9483 25.4385 cv
16.6914 25.6924 16.4307 25.9463 16.1724 26.2002 cv
16.002 26.3721 15.8325 26.5459 15.6631 26.7198 cv
15.6201 26.7705 15.5772 26.8194 15.5342 26.8682 cv
15.106 27.2647 14.6807 27.6768 14.2534 28.0713 cv
cp
f
21.1963 35.8643 mo
21.0547 35.8643 20.5835 35.833 20.501 35.8897 cv
20.4688 35.9112 20.4653 35.9522 20.4629 35.9893 cv
20.46 36.4268 20.4561 36.8623 20.4526 37.2979 cv
20.4556 37.4873 20.4776 37.7627 20.4385 37.9483 cv
20.4287 37.9971 20.4024 38.0362 20.3662 38.0655 cv
20.3662 38.0713 20.3662 38.0772 20.3662 38.083 cv
20.2324 38.0811 20.1138 38.0245 19.9888 38.0049 cv
19.8701 37.9873 19.7461 38.0147 19.6314 38.0147 cv
19.5444 38.003 19.457 37.9912 19.3692 37.9795 cv
19.2007 37.9659 19.0313 37.9483 18.8623 37.9327 cv
18.7969 37.9248 18.6929 37.917 18.6348 37.9424 cv
18.2442 37.9405 17.8814 37.8623 17.5068 37.8252 cv
17.333 37.8077 17.1646 37.8096 17.0029 37.7823 cv
16.8662 37.7569 16.729 37.7354 16.5928 37.7139 cv
16.5342 37.7002 16.4722 37.6846 16.4126 37.6729 cv
16.3262 37.667 16.2402 37.6651 16.1528 37.6592 cv
15.957 37.6241 15.7598 37.5889 15.5625 37.5537 cv
15.4116 37.5323 15.2207 37.5303 15.0908 37.4659 cv
15.086 37.4659 15.0801 37.4659 15.0737 37.4659 cv
15.0737 37.4541 15.0737 37.4444 15.0737 37.4327 cv
15.0991 37.4327 15.086 37.4385 15.0972 37.419 cv
15.1851 37.2803 15.3535 37.1319 15.4785 37.0166 cv
15.5933 36.9034 15.707 36.7901 15.8208 36.6729 cv
15.9951 36.501 16.1851 36.3448 16.3628 36.169 cv
16.4502 36.083 16.5381 35.9971 16.626 35.9112 cv
16.6978 35.8311 16.771 35.7491 16.8433 35.6709 cv
17.2925 35.2393 17.7525 34.8194 18.1919 34.3702 cv
18.4629 34.0948 18.7134 33.8037 18.9917 33.5362 cv
19.3775 33.1651 19.7598 32.8018 20.127 32.4151 cv
20.2329 32.3057 20.3418 32.1944 20.4492 32.085 cv
20.5186 32.1827 20.4761 32.5596 20.4653 32.6885 cv
20.4473 32.8975 20.4434 33.1065 20.4419 33.3272 cv
20.4409 33.4659 20.4238 33.6104 20.4678 33.7315 cv
20.5078 33.8467 20.5903 33.9483 20.6607 34.0518 cv
20.6983 34.1104 20.7193 34.1885 20.7891 34.2276 cv
20.8887 34.2842 21.2036 34.2959 21.335 34.292 cv
21.5654 34.2823 21.8057 34.2666 22.0552 34.2666 cv
22.0537 34.4268 21.9526 34.6221 21.8989 34.7608 cv
21.8003 35.0088 21.7022 35.2569 21.6099 35.5088 cv
21.5737 35.6006 21.542 35.7276 21.4751 35.8057 cv
21.4258 35.8584 21.3579 35.8213 21.2944 35.8467 cv
21.2608 35.8545 21.229 35.8584 21.1963 35.8643 cv
cp
f
22.3076 38.7745 mo
22.1382 38.7569 21.9819 38.6358 21.8296 38.5733 cv
21.7085 38.5205 21.5703 38.4991 21.459 38.4327 cv
21.4546 38.4327 21.4483 38.4327 21.4439 38.4327 cv
21.4439 38.4248 21.4439 38.4209 21.4439 38.4151 cv
21.4487 38.4151 21.4546 38.4151 21.46 38.4151 cv
21.46 38.3936 21.4546 38.3995 21.4761 38.3995 cv
21.7149 38.3995 22.8443 38.4424 22.9473 38.3428 cv
22.9985 38.292 22.9966 38.083 22.9981 37.9991 cv
23 37.4717 22.9385 36.7627 23.4234 36.4932 cv
23.4937 36.4522 23.5684 36.4444 23.6441 36.417 cv
23.7788 36.417 24.1094 36.4659 24.0933 36.6455 cv
24.0899 36.6885 24.0401 36.6885 24.001 36.6944 cv
23.6812 36.7315 23.6192 36.9073 23.4863 37.1553 cv
23.3789 37.3565 23.396 37.7041 23.3901 37.9678 cv
23.3838 38.2276 23.3711 38.4737 23.3696 38.7373 cv
23.3643 38.7373 23.3584 38.7373 23.354 38.7373 cv
23.354 38.7666 23.1939 38.7373 23.1568 38.753 cv
23.0684 38.751 22.9907 38.7764 22.9121 38.7803 cv
22.7095 38.7784 22.5083 38.7764 22.3076 38.7745 cv
cp
f
24.1445 39.1104 mo
24.0889 39.1787 24.0308 39.2452 23.9741 39.3155 cv
23.8316 39.46 23.6846 39.5928 23.5918 39.7686 cv
23.5874 39.7686 23.5825 39.7686 23.5772 39.7686 cv
23.4771 39.6553 23.3755 39.5459 23.2744 39.4346 cv
23.1758 39.3448 22.9766 39.2315 22.8613 39.1748 cv
22.8613 39.169 22.8613 39.1651 22.8613 39.1573 cv
22.8555 39.1573 22.8501 39.1573 22.8447 39.1573 cv
22.8447 39.1534 22.8447 39.1475 22.8447 39.1436 cv
22.8501 39.1436 22.8555 39.1436 22.8613 39.1436 cv
22.8618 39.1143 22.8877 39.1241 22.9092 39.1202 cv
22.9697 39.1065 23.0308 39.0948 23.0903 39.083 cv
23.2818 39.0772 23.4717 39.0713 23.6626 39.0655 cv
23.6714 39.0323 23.6797 39.001 23.689 38.9678 cv
23.6973 38.8858 23.7031 38.8037 23.711 38.7217 cv
23.7026 38.6475 23.6943 38.5694 23.6865 38.4932 cv
23.6909 38.417 23.6943 38.3409 23.6973 38.2647 cv
23.6953 38.1006 23.6758 37.9229 23.689 37.7569 cv
23.7085 37.6651 23.728 37.5713 23.7481 37.4795 cv
23.7691 37.3662 23.7993 37.2295 23.877 37.1455 cv
23.9551 37.0577 24.064 37.0655 24.1646 37.0245 cv
24.1968 37.0381 24.2334 37.0577 24.2461 37.0967 cv
24.2808 37.2041 24.2549 37.3487 24.2534 37.4659 cv
24.2578 37.7491 24.2608 38.0323 24.2622 38.3155 cv
24.2735 38.3819 24.3169 38.4405 24.3447 38.4991 cv
24.3848 38.5909 24.4243 38.6827 24.4649 38.7745 cv
24.4805 38.7745 24.4815 38.7745 24.4756 38.7881 cv
24.4038 38.9229 24.2568 39.0147 24.1445 39.1104 cv
cp
f
24.7876 38.6631 mo
24.7105 38.5987 24.6553 38.4522 24.6475 38.3506 cv
24.7285 38.3526 24.8213 38.3584 24.8931 38.337 cv
25.0816 38.337 25.2686 38.3487 25.4478 38.3565 cv
25.4478 38.3662 25.4478 38.378 25.4478 38.3897 cv
25.3867 38.3877 25.312 38.4366 25.2622 38.46 cv
25.1123 38.5264 24.96 38.5948 24.8096 38.6631 cv
24.8096 38.6827 24.8008 38.6748 24.7876 38.6631 cv
cp
f
19.1323 25.2452 mo
19.1353 25.0967 19.1641 24.9424 19.1651 24.7881 cv
19.1548 24.6182 19.1455 24.4522 19.1367 24.2823 cv
19.1328 24.001 19.166 23.7334 19.1719 23.4639 cv
19.1626 23.2998 19.1548 23.1358 19.1465 22.9737 cv
19.1509 22.8487 19.1563 22.7217 19.1597 22.5987 cv
19.1509 22.4737 19.1416 22.3467 19.1323 22.2217 cv
19.1333 22.0166 19.1924 21.8389 19.1973 21.6338 cv
19.189 21.5205 19.1807 21.4053 19.1704 21.2901 cv
19.1753 21.2237 19.1782 21.1592 19.1826 21.0928 cv
19.1914 20.8506 19.2207 20.6202 19.2217 20.3741 cv
19.2232 20.208 19.1953 19.9522 19.2398 19.8077 cv
19.2827 19.6553 19.7305 19.1475 19.8843 19.087 cv
19.8843 19.083 19.8843 19.0772 19.8843 19.0713 cv
19.917 19.1973 19.8989 19.3662 19.8848 19.4971 cv
19.8696 19.6534 19.8584 19.8174 19.8643 19.9854 cv
19.8731 20.0948 19.8818 20.2041 19.8926 20.3135 cv
19.8931 20.5205 19.8941 20.7276 19.8955 20.9346 cv
19.8882 21.0284 19.8804 21.1202 19.8735 21.212 cv
19.8779 21.3213 19.8818 21.4307 19.8858 21.5381 cv
19.8799 21.8291 19.8638 22.1592 19.8716 22.4561 cv
19.8804 22.7784 19.836 23.1182 19.8447 23.4346 cv
19.8545 23.5537 19.8643 23.6748 19.8731 23.7959 cv
19.8745 24.0401 19.877 24.2842 19.8779 24.5303 cv
19.8701 24.6455 19.8604 24.7588 19.8516 24.8741 cv
19.8511 25.0635 19.8491 25.2549 19.8486 25.4444 cv
19.8477 25.6748 19.8784 26.0811 19.813 26.2725 cv
19.792 26.335 19.7168 26.3741 19.6817 26.4268 cv
19.6294 26.4991 19.5752 26.5733 19.5225 26.6475 cv
19.4697 26.6963 19.416 26.7471 19.3643 26.7979 cv
19.3096 26.9014 19.2554 27.0049 19.2017 27.1084 cv
19.1953 27.1084 19.1914 27.1084 19.1865 27.1084 cv
19.1865 27.1143 19.1865 27.1202 19.1865 27.1241 cv
19.1807 27.1241 19.1738 27.1241 19.169 27.1241 cv
19.1704 26.8174 19.1235 26.4854 19.1196 26.1768 cv
19.1167 25.9952 19.1485 25.7979 19.1582 25.6221 cv
19.1651 25.4873 19.1299 25.3721 19.1323 25.2452 cv
cp
f
19.4404 27.2725 mo
19.5205 27.0772 19.586 27.0186 19.7442 26.8838 cv
19.8296 26.8096 19.9033 26.7139 19.9981 26.6534 cv
20.417 26.3819 21.0733 26.3838 21.5903 26.4912 cv
21.69 26.5205 21.7891 26.5479 21.8877 26.5772 cv
22.2168 26.6377 22.5147 26.6768 22.794 26.8428 cv
22.9771 26.9483 23.127 27.0987 23.2959 27.2354 cv
23.3389 27.2647 23.3838 27.292 23.4268 27.3194 cv
23.5044 27.378 23.586 27.503 23.6934 27.501 cv
23.8462 27.501 23.9429 27.3037 24.0571 27.2217 cv
24.1836 27.1299 24.3091 27.0303 24.4507 26.962 cv
24.836 26.7745 25.2202 26.583 25.6455 26.4776 cv
25.7988 26.4424 25.9512 26.4073 26.1045 26.3702 cv
26.1924 26.3545 26.2871 26.3643 26.3657 26.333 cv
26.4961 26.335 26.6255 26.337 26.7564 26.3409 cv
26.9732 26.3741 27.1992 26.4815 27.3682 26.6084 cv
27.4439 26.6924 27.5171 26.7745 27.5923 26.8584 cv
27.7124 26.9873 27.8423 27.1241 27.8638 27.3037 cv
27.8584 27.3037 27.8526 27.3037 27.8462 27.3037 cv
27.8457 27.335 27.7173 27.3213 27.6831 27.3213 cv
27.3403 27.3174 26.9976 27.3174 26.6538 27.3135 cv
26.5288 27.3135 26.3599 27.2901 26.2612 27.3448 cv
26.1475 27.3428 25.9888 27.2745 25.8853 27.3252 cv
25.8486 27.3311 25.8096 27.337 25.7715 27.3428 cv
25.6426 27.3428 25.4849 27.3213 25.3779 27.3721 cv
25.3223 27.3721 25.2593 27.3819 25.2153 27.4053 cv
25.1045 27.4034 24.8731 27.376 24.7901 27.417 cv
24.7412 27.4229 24.6924 27.4287 24.6426 27.4327 cv
24.5947 27.4405 24.5449 27.4444 24.4956 27.4483 cv
24.418 27.4483 24.3145 27.46 24.2676 27.5127 cv
24.2393 27.5127 24.2612 27.6006 24.2622 27.6299 cv
24.2686 27.917 24.0552 28.1807 23.7559 28.1787 cv
23.5137 28.1768 23.3247 28.003 23.2778 27.7823 cv
23.2622 27.708 23.2818 27.6006 23.2339 27.5401 cv
23.2129 27.5147 23.1738 27.4991 23.1382 27.5069 cv
23.0235 27.501 22.9107 27.4952 22.7949 27.4873 cv
22.7691 27.4952 22.7412 27.4991 22.7129 27.5049 cv
22.4458 27.503 22.207 27.4698 21.9292 27.4678 cv
21.8584 27.4678 21.7568 27.4541 21.7007 27.4834 cv
21.5034 27.4815 21.3159 27.4639 21.1123 27.4639 cv
21.0156 27.462 20.8941 27.4541 20.8179 27.4952 cv
20.5313 27.4932 20.2378 27.4698 19.9512 27.4737 cv
19.8501 27.4737 19.709 27.4483 19.624 27.4873 cv
19.5366 27.4873 19.4502 27.4854 19.3799 27.4541 cv
19.3799 27.3858 19.4175 27.3272 19.4404 27.2725 cv
cp
f
28.0508 22.9248 mo
28.0401 22.9248 28.0298 22.9248 28.0195 22.9248 cv
27.9663 22.7959 27.9859 22.6709 27.9873 22.5166 cv
27.9888 22.3213 27.9453 22.1241 28.0401 21.96 cv
28.0918 21.9717 28.1314 21.9854 28.1538 22.0342 cv
28.2022 22.1455 28.1953 22.9268 28.0508 22.9248 cv
cp
27.8008 20.9131 mo
27.8008 20.919 27.8008 20.9248 27.8008 20.9287 cv
27.6734 20.9053 27.6514 20.8057 27.7212 20.7002 cv
27.7886 20.7334 27.8648 20.9131 27.8008 20.9131 cv
cp
27.7593 23.3018 mo
27.752 23.3174 27.6563 23.4541 27.6563 23.3643 cv
27.6343 23.3155 27.6401 23.2412 27.6397 23.1846 cv
27.6348 23.0342 27.6377 22.8662 27.6343 22.71 cv
27.6333 22.5049 27.6318 22.2959 27.6309 22.0889 cv
27.6318 21.9229 27.6162 21.7471 27.6821 21.6143 cv
27.7315 21.6397 27.7695 21.6807 27.7842 21.7334 cv
27.8325 21.9131 27.794 22.1202 27.793 22.3194 cv
27.7925 22.5889 27.8613 23.0655 27.7593 23.3018 cv
cp
28.3399 20.7842 mo
28.3384 20.6319 28.3096 20.4756 28.2974 20.3272 cv
28.2935 20.2452 28.2886 20.1631 28.2842 20.0811 cv
28.2808 20.0498 28.2935 19.9034 28.2651 19.9014 cv
28.2651 19.8975 28.2651 19.8916 28.2651 19.8858 cv
28.2481 19.8858 28.2315 19.8858 28.2153 19.8858 cv
28.1821 20.2061 28.1992 20.5596 28.1909 20.8995 cv
28.189 21.0303 28.1309 21.128 28.1206 21.2432 cv
28.1216 21.3077 28.1221 21.3741 28.1245 21.4385 cv
28.1182 21.4971 28.1138 21.5577 28.1079 21.6182 cv
28.0293 21.6299 27.9727 21.6084 27.9556 21.5323 cv
27.9302 21.4229 27.9844 21.3291 27.9815 21.2256 cv
27.9727 21.1534 27.9663 21.083 27.958 21.0108 cv
27.9546 20.6241 27.9893 20.2139 27.9859 19.835 cv
27.9785 19.7705 27.9727 19.7041 27.9658 19.6397 cv
27.9561 19.6065 27.9473 19.5752 27.9404 19.542 cv
27.9229 19.542 27.9072 19.542 27.8897 19.5401 cv
27.8897 19.5459 27.8897 19.5518 27.8897 19.5577 cv
27.8843 19.5577 27.8789 19.5577 27.8735 19.5577 cv
27.8638 19.835 27.8325 20.083 27.8184 20.3584 cv
27.8071 20.4073 27.7974 20.4561 27.7871 20.5049 cv
27.7705 20.5049 27.7544 20.5049 27.7378 20.5049 cv
27.6514 20.2901 27.6787 20.0069 27.6758 19.753 cv
27.6738 19.6143 27.689 19.4756 27.647 19.3604 cv
27.5972 19.4483 27.6001 19.5401 27.5913 19.6534 cv
27.5811 19.7842 27.5723 19.9405 27.5791 20.0791 cv
27.5874 20.2237 27.6143 20.3858 27.6026 20.5362 cv
27.521 21.4737 27.5645 22.3916 27.5591 23.3467 cv
27.5532 23.5381 27.5488 23.7276 27.5459 23.919 cv
27.5327 24.0811 27.5064 24.2569 27.5044 24.4268 cv
27.5034 24.6612 27.52 24.9131 27.5147 25.1612 cv
27.5108 25.3955 27.4844 25.6553 27.499 25.8955 cv
27.501 25.9287 27.5064 26.0127 27.544 26.0127 cv
27.544 26.0166 27.544 26.0225 27.544 26.0264 cv
27.5488 26.0264 27.5547 26.0264 27.5596 26.0264 cv
27.5596 26.0225 27.5596 26.0166 27.5596 26.0127 cv
27.565 26.0127 27.5723 26.0127 27.5762 26.0127 cv
27.6206 25.8741 27.6065 25.712 27.6118 25.5537 cv
27.6216 25.2959 27.6538 25.0362 27.647 24.7686 cv
27.6431 24.6026 27.6079 24.3936 27.6651 24.2354 cv
27.6748 24.208 27.6948 24.1983 27.7256 24.208 cv
27.7891 24.2256 27.8032 24.3213 27.812 24.378 cv
27.8443 24.5772 27.8071 24.7745 27.7964 24.9834 cv
27.7949 25.1475 27.794 25.3096 27.7925 25.4737 cv
27.791 25.6534 27.7798 25.8428 27.7993 26.0127 cv
27.8091 26.1084 27.7886 26.2002 27.8159 26.2862 cv
27.8316 26.337 27.8423 26.4561 27.917 26.4561 cv
27.9341 26.1866 27.9448 25.8799 27.9463 25.6045 cv
27.9404 25.4737 27.9326 25.3428 27.9263 25.212 cv
27.939 25.083 27.9512 24.9522 27.9634 24.8213 cv
27.9766 24.7334 27.9902 24.6455 28.0039 24.5577 cv
28.0044 24.4385 27.9663 24.3213 27.9522 24.2159 cv
27.9273 24.0401 27.9321 23.8506 27.9326 23.6592 cv
27.9336 23.5596 27.9336 23.458 27.961 23.3682 cv
27.9697 23.3389 28.0171 23.3116 28.0171 23.2842 cv
28.022 23.2842 28.0278 23.2842 28.0327 23.2842 cv
28.0908 23.335 28.126 23.3877 28.1387 23.4659 cv
28.167 23.6651 28.1528 23.9151 28.1397 24.1182 cv
28.1338 24.1905 28.1104 24.251 28.1118 24.3311 cv
28.1138 24.5108 28.1602 24.7002 28.1646 24.8877 cv
28.1607 24.962 28.1568 25.0401 28.1533 25.1162 cv
28.1514 25.4463 28.1499 25.7432 28.148 26.0811 cv
28.1465 26.3213 28.169 26.5772 28.1929 26.8018 cv
28.1875 26.8448 28.1821 26.8877 28.1758 26.9307 cv
28.1973 26.9307 28.2193 26.9307 28.2417 26.9307 cv
28.3067 26.7901 28.2876 26.6143 28.294 26.4405 cv
28.3003 26.2569 28.3286 26.044 28.3062 25.8545 cv
28.2896 25.7295 28.271 25.6026 28.2525 25.4756 cv
28.2549 25.3428 28.2964 25.2237 28.3003 25.083 cv
28.3057 24.878 28.27 24.6944 28.271 24.4952 cv
28.2832 24.2842 28.2959 24.0713 28.3071 23.8584 cv
28.3071 23.6944 28.3091 23.5303 28.3076 23.3682 cv
28.3003 23.3018 28.291 23.2373 28.2822 23.1729 cv
28.2808 23.0674 28.3101 22.9834 28.313 22.878 cv
28.3091 22.708 28.3042 22.5401 28.3003 22.3702 cv
28.3003 22.1123 28.3179 21.8545 28.3198 21.585 cv
28.3223 21.3096 28.3423 21.0498 28.3399 20.7842 cv
cp
f
26.5918 20.4776 mo
26.5293 20.5205 26.436 20.5401 26.3648 20.5616 cv
26.1792 20.6162 25.9951 20.6729 25.8096 20.7295 cv
25.5562 20.8077 25.2964 20.9053 25.0591 21.0205 cv
24.8926 21.1182 24.7261 21.2139 24.5576 21.3116 cv
24.5303 21.3252 24.3003 21.4463 24.3013 21.3838 cv
24.2944 21.3838 24.2905 21.3838 24.2842 21.3838 cv
24.3062 21.212 24.5044 21.0948 24.6392 21.0147 cv
24.7041 20.9698 24.7695 20.9229 24.8345 20.876 cv
25.0005 20.7686 25.1792 20.667 25.355 20.585 cv
25.5415 20.4971 25.7398 20.4502 25.9351 20.3838 cv
26.0029 20.3526 26.0693 20.3252 26.1348 20.2959 cv
26.2232 20.2647 26.311 20.2334 26.3999 20.2022 cv
26.4673 20.2022 26.5469 20.1963 26.6069 20.2178 cv
26.7349 20.2627 26.6719 20.419 26.5918 20.4776 cv
cp
26.565 24.4756 mo
26.4317 24.5557 26.2549 24.5537 26.0986 24.5889 cv
25.9566 24.6162 25.8164 24.6612 25.6719 24.6944 cv
25.1856 24.8077 24.7818 25.003 24.3662 25.251 cv
24.3145 25.2803 24.1777 25.4112 24.127 25.3155 cv
24.0889 25.2491 24.19 25.1807 24.23 25.1436 cv
24.3936 25.003 24.5596 24.9073 24.7354 24.7979 cv
24.9307 24.6748 25.125 24.5674 25.3399 24.4834 cv
25.4087 24.4463 25.4771 24.4112 25.5459 24.3721 cv
25.813 24.2666 26.0894 24.2002 26.3618 24.1084 cv
26.4375 24.1084 26.5181 24.1104 26.5811 24.1416 cv
26.7129 24.212 26.6777 24.4073 26.565 24.4756 cv
cp
24.2832 23.1416 mo
24.6763 22.7764 25.186 22.5967 25.666 22.4014 cv
25.8189 22.3389 25.9966 22.2276 26.1758 22.2295 cv
26.2363 22.1807 26.3731 22.1143 26.4536 22.1162 cv
26.4536 22.1084 26.4536 22.1045 26.4536 22.0987 cv
26.5484 22.1143 26.6201 22.1553 26.6231 22.2627 cv
26.626 22.3565 26.5796 22.4307 26.5083 22.4795 cv
26.3652 22.5733 26.1934 22.5909 26.0293 22.6455 cv
25.8443 22.708 25.6524 22.7784 25.4653 22.835 cv
25.3379 22.8741 25.2105 22.9014 25.0894 22.9502 cv
24.8687 23.0381 24.6485 23.1534 24.4453 23.2764 cv
24.3721 23.3194 24.2974 23.3877 24.2056 23.3916 cv
24.1836 23.3916 24.1592 23.3897 24.1441 23.3741 cv
24.0659 23.2959 24.2373 23.1827 24.2832 23.1416 cv
cp
27.315 22.5284 mo
27.3062 22.4307 27.2979 22.333 27.2871 22.2354 cv
27.2832 21.8252 27.3067 21.4034 27.3091 21.0088 cv
27.3052 20.8838 27.3013 20.7588 27.2964 20.6319 cv
27.2925 20.3194 27.2984 20.0166 27.2813 19.7178 cv
27.2637 19.6241 27.2476 19.5303 27.23 19.4366 cv
27.2134 19.3291 27.2349 19.2071 27.2422 19.0967 cv
27.2427 19.0586 27.2529 18.9493 27.2066 18.9483 cv
27.1275 18.9112 27.0371 18.9287 26.9463 18.9239 cv
26.8399 18.917 26.7354 18.8955 26.6187 18.8955 cv
26.4961 18.9395 26.3438 18.9248 26.2129 18.9502 cv
25.6074 19.0635 25.042 19.1514 24.5181 19.4287 cv
24.3901 19.4971 24.2515 19.5713 24.1538 19.6885 cv
24.0791 19.7784 24.0767 19.8897 24.0596 20.0088 cv
24.0171 20.2862 24.0176 20.585 24.0078 20.8916 cv
23.9971 21.0459 23.9859 21.1983 23.9751 21.3506 cv
23.9722 21.5713 23.9717 21.7959 23.9688 22.0186 cv
23.9585 22.1065 23.9497 22.1944 23.9395 22.2803 cv
23.919 22.4873 23.9238 22.7159 23.917 22.919 cv
23.9063 23.2315 23.9238 23.5498 23.9307 23.8506 cv
23.938 24.1377 23.919 24.4483 23.9224 24.7491 cv
23.9297 24.8311 23.9365 24.9112 23.9429 24.9952 cv
23.9365 25.044 23.9307 25.0928 23.9238 25.1416 cv
23.9234 25.2803 23.9512 25.4151 23.9497 25.5674 cv
23.9478 25.9678 23.937 26.4873 24.0977 26.8057 cv
24.1055 26.8213 24.1563 26.8936 24.1563 26.8584 cv
24.3364 26.7881 24.4976 26.6475 24.6665 26.5557 cv
24.8169 26.4737 24.9805 26.4248 25.1309 26.3448 cv
25.314 26.2471 25.4087 26.1787 25.6465 26.1807 cv
25.7144 26.1377 25.9155 26.1006 26.0073 26.1026 cv
26.0459 26.0967 26.083 26.0909 26.1206 26.085 cv
26.1538 26.0811 26.1865 26.0772 26.2188 26.0694 cv
26.3926 25.9834 26.7959 26.0635 26.9712 26.1065 cv
27.0576 26.128 27.145 26.1514 27.2329 26.1729 cv
27.2749 25.9209 27.2334 25.6338 27.2276 25.3877 cv
27.2363 25.2471 27.2456 25.1065 27.2554 24.9639 cv
27.2564 24.7862 27.2437 24.6065 27.2466 24.4405 cv
27.2554 24.3526 27.2656 24.2647 27.2739 24.1787 cv
27.2837 23.9717 27.2725 23.7745 27.2832 23.5752 cv
27.2896 23.458 27.3081 23.333 27.311 23.2139 cv
27.315 22.9893 27.3218 22.7608 27.315 22.5284 cv
cp
f
23.4199 21.4776 mo
23.4019 21.5127 23.3428 21.5147 23.3071 21.5088 cv
23.21 21.4873 23.1367 21.3995 23.0542 21.3506 cv
22.96 21.2959 22.8638 21.2432 22.7691 21.1885 cv
22.2612 20.9327 21.6885 20.7842 21.1338 20.6299 cv
20.9741 20.585 20.7676 20.5948 20.6294 20.5088 cv
20.5171 20.4385 20.5147 20.2862 20.6128 20.2022 cv
20.8516 20.2041 21.043 20.2803 21.2525 20.3428 cv
21.3159 20.3545 21.3799 20.3682 21.4419 20.3819 cv
21.5791 20.419 21.7114 20.4756 21.8413 20.5284 cv
21.958 20.5674 22.0728 20.6084 22.19 20.6495 cv
22.2451 20.6807 22.3008 20.71 22.356 20.7393 cv
22.5156 20.8135 22.6743 20.8897 22.8335 20.9639 cv
22.9321 21.0108 23.4805 21.3526 23.4199 21.4776 cv
cp
23.3565 23.5186 mo
23.3447 23.5245 23.334 23.5284 23.3223 23.5303 cv
23.3159 23.5323 23.311 23.5342 23.3047 23.5362 cv
23.1909 23.5518 22.73 23.1748 22.5899 23.1104 cv
22.4268 23.0303 22.2573 22.9698 22.0869 22.9034 cv
21.8599 22.8155 21.6377 22.7139 21.3823 22.6807 cv
21.2847 22.669 21.188 22.6553 21.0884 22.6416 cv
20.9561 22.6358 20.7471 22.6651 20.6485 22.587 cv
20.5269 22.4893 20.606 22.2295 20.7661 22.2295 cv
20.7661 22.2256 20.7661 22.2198 20.7661 22.2139 cv
21.4878 22.2647 22.1123 22.5948 22.6983 22.9248 cv
22.8565 23.0147 23.2656 23.2608 23.3486 23.4268 cv
23.3579 23.4444 23.3887 23.5205 23.3565 23.5186 cv
cp
22.9658 25.3096 mo
22.686 25.1768 22.3872 25.0733 22.0869 24.9776 cv
21.9834 24.9444 21.8745 24.9327 21.7647 24.9092 cv
21.6055 24.876 21.4395 24.8311 21.272 24.8037 cv
21.0869 24.7764 20.8975 24.7686 20.7188 24.7295 cv
20.6983 24.7198 20.6782 24.712 20.6582 24.7061 cv
20.5103 24.6241 20.5078 24.3389 20.7207 24.3389 cv
20.7207 24.335 20.7207 24.3272 20.7207 24.3213 cv
20.854 24.3233 20.9512 24.3565 21.0654 24.3819 cv
21.1841 24.4073 21.3052 24.419 21.4214 24.4463 cv
21.52 24.4834 21.6192 24.5186 21.7168 24.5537 cv
22.0083 24.6475 22.2744 24.7452 22.5474 24.8741 cv
22.6123 24.8975 22.6763 24.9229 22.7417 24.9444 cv
22.8975 25.0147 23.1226 25.1787 23.2354 25.3135 cv
23.2778 25.3604 23.3462 25.3916 23.3462 25.4639 cv
23.21 25.4815 23.0762 25.3604 22.9658 25.3096 cv
cp
23.5591 20.3487 mo
23.5361 20.1084 23.5684 19.8545 23.4321 19.6709 cv
23.1763 19.3252 22.8276 19.2002 22.4541 19.0596 cv
22.3535 19.0254 22.2559 18.9903 22.1558 18.9561 cv
22.0425 18.9346 21.9302 18.9141 21.8164 18.8926 cv
21.6431 18.8487 21.4439 18.8135 21.2583 18.8037 cv
20.9961 18.8008 20.7359 18.7989 20.4746 18.7969 cv
20.3965 18.8311 20.2681 18.8194 20.2178 18.8955 cv
20.167 18.9727 20.1934 19.2696 20.1934 19.3838 cv
20.1914 19.8252 20.1719 20.2686 20.169 20.7237 cv
20.167 20.9912 20.1655 21.2569 20.1631 21.5245 cv
20.1475 21.7471 20.1328 21.9717 20.1177 22.1944 cv
20.1113 22.3545 20.1758 22.4991 20.1719 22.669 cv
20.1646 22.9971 20.1577 23.3565 20.1514 23.6983 cv
20.1397 23.8389 20.1299 23.9815 20.1177 24.1221 cv
20.1123 24.4131 20.1338 24.6846 20.1279 24.9717 cv
20.1177 25.1143 20.106 25.2569 20.0952 25.3955 cv
20.0943 25.5342 20.1362 25.6475 20.1348 25.7725 cv
20.1343 25.9209 20.1069 26.0616 20.106 26.2139 cv
20.1655 26.2159 20.2251 26.2178 20.2852 26.2178 cv
20.3306 26.1944 20.3936 26.1827 20.4487 26.1827 cv
20.4946 26.1612 20.5576 26.1534 20.6123 26.1534 cv
20.6514 26.1455 20.6895 26.1416 20.7261 26.1377 cv
20.8823 26.0694 21.3052 26.1553 21.4639 26.1807 cv
21.6651 26.2178 21.8521 26.208 22.0488 26.251 cv
22.2798 26.2979 22.6289 26.4327 22.8281 26.5498 cv
22.8994 26.5909 23.3018 26.9034 23.3379 26.9034 cv
23.3379 26.8975 23.3379 26.8916 23.3379 26.8877 cv
23.4424 26.7139 23.4317 26.5459 23.4614 26.333 cv
23.4946 26.0909 23.5 25.8467 23.5103 25.5811 cv
23.523 25.2061 23.5454 24.8194 23.5469 24.4366 cv
23.544 24.2725 23.541 24.1084 23.5361 23.9463 cv
23.5542 23.4756 23.5493 23.0186 23.5591 22.5577 cv
23.5742 21.835 23.6226 21.0674 23.5591 20.3487 cv
cp
f
22.5396 5.9746 mo
22.2905 6.0039 22.0425 6.0352 21.794 6.0645 cv
21.5801 6.0977 21.3682 6.1358 21.1353 6.1436 cv
20.6279 6.2422 20.1206 6.3379 19.6128 6.4356 cv
18.8985 6.5821 18.2222 6.8829 17.5679 7.1524 cv
16.3418 7.6582 15.1865 8.2461 14.0728 8.9795 cv
13.8091 9.1534 11.9693 10.4424 11.9702 10.6436 cv
12.2686 10.667 12.5703 10.6905 12.8701 10.7139 cv
13.5918 10.7569 14.3462 10.7295 15.064 10.7295 cv
15.5073 10.751 15.9517 10.7745 16.395 10.7959 cv
16.5698 10.7139 16.8486 10.7569 17.061 10.7559 cv
17.667 10.7549 18.2442 10.794 18.8233 10.794 cv
19.1216 10.668 19.6021 10.7784 19.9194 10.7901 cv
20.8985 10.7901 21.8775 10.7901 22.8565 10.7901 cv
23.9531 10.8155 25.0493 10.8409 26.1455 10.8643 cv
28.1694 10.837 30.1934 10.8096 32.2158 10.7823 cv
32.3662 10.7276 32.5908 10.7803 32.7651 10.7803 cv
33.1167 10.7901 33.4702 10.8008 33.8203 10.8106 cv
34.0034 10.8018 34.186 10.792 34.3692 10.7832 cv
34.7139 10.792 35.0947 10.8272 35.4653 10.8164 cv
35.5454 10.8125 35.7764 10.8291 35.8589 10.8291 cv
36.1074 10.8291 35.6602 10.4737 35.5825 10.3877 cv
35.3276 10.1006 35.0444 9.9014 34.7422 9.7002 cv
34.561 9.5577 34.3814 9.4151 34.2002 9.2725 cv
33.8311 9.0245 33.461 8.7784 33.0908 8.5323 cv
30.7778 7.1348 28.5449 6.3106 25.6699 6.0254 cv
25.2525 6.0186 24.8364 6.0098 24.4185 6 cv
23.812 5.9912 23.1558 5.9737 22.5396 5.9746 cv
cp
.0683299 1 .852323 .00955215 cmyk
f
10.9956 11.5459 mo
10.7442 11.8028 10.3716 12.1758 10.1196 12.4327 cv
9.59771 13.1348 9.07671 13.837 8.55471 14.5401 cv
7.4575 16.3897 6.7876 18.3155 6.315 20.4737 cv
6.2378 20.8174 6.2398 21.1592 6.2056 21.5245 cv
6.0366 23.3037 5.9878 25.3018 6.2725 27.0557 cv
6.3496 27.3467 6.4273 27.6358 6.5044 27.9229 cv
6.5913 28.4034 6.6631 28.8428 6.813 29.2881 cv
6.9634 29.6592 7.1138 30.0245 7.26471 30.3936 cv
7.4443 30.9346 7.7188 31.4209 7.9766 31.9209 cv
8.5864 33.1104 9.2944 34.2393 10.1538 35.3135 cv
10.2798 35.4678 10.5938 35.9053 10.8164 35.9053 cv
10.8169 35.8916 10.8169 35.8799 10.8169 35.8662 cv
10.9898 35.5381 10.8692 34.544 10.8565 34.1416 cv
10.8545 33.4639 10.8526 32.7842 10.8516 32.1045 cv
10.8506 31.4991 10.8272 30.8584 10.8565 30.2256 cv
10.9185 28.878 10.8657 27.4795 10.8858 26.1143 cv
10.9024 24.958 10.9619 23.7705 10.961 22.5889 cv
10.96 21.4795 10.8945 20.2627 10.9898 19.1866 cv
10.9805 19.0674 10.9717 18.9473 10.9624 18.8272 cv
10.9605 18.4893 10.96 18.1495 10.959 17.8116 cv
10.9776 17.3428 10.9966 16.8741 11.0161 16.4053 cv
10.9849 15.3955 10.9912 14.3711 10.959 13.3457 cv
10.9341 12.626 11.0235 11.9327 10.9956 11.5459 cv
cp
f
36.8242 11.6563 mo
36.7691 12.3467 36.8833 13.418 36.8735 14.1436 cv
36.8491 15.709 36.8433 17.2647 36.8443 18.8848 cv
36.8472 21.5303 36.8477 23.9287 36.8496 26.4834 cv
36.8511 27.9112 36.7788 29.337 36.8491 30.7901 cv
36.8438 31.378 36.8403 31.9659 36.8345 32.5537 cv
36.836 33.6338 36.9585 34.7608 36.7324 35.7998 cv
36.7168 35.8623 36.5776 36.3272 36.688 36.3272 cv
37.0581 36.3272 38.7564 33.876 38.9942 33.4834 cv
39.1655 33.1709 39.336 32.8604 39.5073 32.5479 cv
39.6011 32.335 39.6958 32.1241 39.7896 31.9092 cv
40.1192 31.3233 40.4971 30.6123 40.7183 29.9678 cv
41.1812 28.6084 41.461 27.212 41.6563 25.7139 cv
41.7197 25.2237 41.7012 24.7491 41.7095 24.2295 cv
41.7212 23.9541 41.7329 23.6807 41.7451 23.4073 cv
41.7207 21.9405 41.5488 20.3897 41.1714 19.085 cv
40.7964 17.7959 40.2129 16.543 39.5713 15.3819 cv
39.3467 14.9756 39.0684 14.6045 38.8179 14.21 cv
38.4829 13.6827 37.0454 11.4912 36.8242 11.6563 cv
cp
f
34.4693 38.1924 mo
33.4649 38.9483 31.3789 39.0264 30.0508 39.1885 cv
29.711 39.2334 29.3701 39.2764 29.0283 39.3194 cv
27.3726 39.3975 25.1909 39.5518 24.5957 41.253 cv
24.5337 41.4366 24.5401 41.4756 24.478 41.6592 cv
24.4507 41.8213 25.2168 41.667 25.5689 41.667 cv
25.6699 41.6162 25.835 41.628 25.961 41.628 cv
26.0391 41.6143 26.1177 41.6006 26.1958 41.5889 cv
26.3911 41.4795 26.6939 41.4717 26.939 41.4698 cv
27.103 41.3877 27.3252 41.3897 27.5274 41.3897 cv
27.7422 41.2725 28.2681 41.1944 28.5444 41.1944 cv
29.0122 41.0342 29.481 40.8721 29.9483 40.71 cv
31.2754 40.1729 32.6851 39.6319 33.8193 38.7217 cv
33.9873 38.5889 34.1987 38.544 34.4693 38.1924 cv
cp
f
13.8345 38.5264 mo
14.1284 38.8799 14.5469 38.962 14.9131 39.21 cv
15.1221 39.3643 15.4277 39.5245 15.6343 39.6768 cv
16.4365 40.0616 17.0425 40.378 17.8618 40.6475 cv
18.7637 40.9463 19.646 41.2315 20.6157 41.4092 cv
20.9434 41.4698 23.1782 41.876 23.2617 41.667 cv
23.396 41.3272 22.667 40.4971 22.4141 40.2842 cv
22.1777 40.083 21.8911 39.9561 21.6314 39.8135 cv
21.3809 39.6768 21.0874 39.5967 20.811 39.5205 cv
20.4468 39.4209 20.0943 39.3057 19.7051 39.2393 cv
19.334 39.1768 18.9663 39.1748 18.5737 39.1377 cv
18.2329 39.083 17.8936 39.0264 17.5513 38.9717 cv
17.1099 38.9112 16.6675 38.917 16.2261 38.8623 cv
15.416 38.7608 14.6597 38.5752 13.8345 38.5264 cv
cp
f
66.7159 10.7327 mo
65.0102 10.7327 li
65.0102 19.3764 li
65.0102 20.054 65.0926 20.5117 65.2593 20.7481 cv
65.4253 20.9845 65.748 21.103 66.2272 21.103 cv
66.2272 21.4288 li
62.2498 21.4288 li
62.2498 21.103 li
62.7442 21.103 63.0801 20.9674 63.2582 20.6955 cv
63.4357 20.4235 63.5244 19.9646 63.5244 19.3188 cv
63.5244 10.7327 li
61.8948 10.7327 li
61.1152 10.7327 60.5485 10.8576 60.1936 11.1067 cv
59.8393 11.3558 59.6396 11.7678 59.5946 12.3433 cv
59.2593 12.3433 li
59.2593 9.7648 li
59.5946 9.7648 li
59.895 10.0462 60.4573 10.1863 61.2819 10.1863 cv
67.176 10.1863 li
68.0254 10.1863 68.6199 10.0462 68.9584 9.7648 cv
69.3134 9.7648 li
69.3134 12.3433 li
69.0928 12.3433 li
68.9521 11.7234 68.7011 11.3 68.3404 11.0731 cv
67.9791 10.8461 67.4378 10.7327 66.7159 10.7327 cv
cp
1 .871122 .421698 .518273 cmyk
f
79.5722 19.3169 mo
79.5722 16.0519 li
73.4479 16.0519 li
73.4479 19.3169 li
73.4479 19.9824 73.5417 20.447 73.7306 20.7094 cv
73.9189 20.9718 74.2593 21.103 74.7511 21.103 cv
74.7511 21.4288 li
70.6875 21.4288 li
70.6875 21.103 li
71.1794 21.103 71.5147 20.9706 71.6941 20.705 cv
71.8728 20.4394 71.9622 19.9773 71.9622 19.3188 cv
71.9622 12.3065 li
71.9622 11.6156 71.8709 11.144 71.689 10.8918 cv
71.5071 10.6389 71.1731 10.5127 70.6875 10.5127 cv
70.6875 10.1863 li
74.7511 10.1863 li
74.7511 10.5127 li
74.2593 10.5127 73.9189 10.6484 73.7306 10.9197 cv
73.5417 11.1916 73.4479 11.653 73.4479 12.3046 cv
73.4479 15.5055 li
79.5722 15.5055 li
79.5722 12.3046 li
79.5722 11.6144 79.484 11.1434 79.3085 10.8911 cv
79.1329 10.6389 78.802 10.5127 78.3165 10.5127 cv
78.3165 10.1863 li
82.3421 10.1863 li
82.3421 10.5127 li
81.8629 10.5127 81.5301 10.6439 81.345 10.9057 cv
81.1599 11.1681 81.0674 11.6346 81.0674 12.3065 cv
81.0674 19.3188 li
81.0674 19.99 81.1599 20.4552 81.345 20.7145 cv
81.5301 20.9737 81.8629 21.103 82.3421 21.103 cv
82.3421 21.4288 li
78.3165 21.4288 li
78.3165 21.103 li
78.8147 21.103 79.1487 20.9737 79.318 20.7139 cv
79.4872 20.4546 79.5722 19.9894 79.5722 19.3169 cv
cp
f
91.117 14.4419 mo
91.4523 14.4419 li
91.4523 17.1732 li
91.117 17.1732 li
90.9953 16.694 90.8489 16.3942 90.6765 16.2725 cv
90.5034 16.1514 90.1263 16.0906 89.5451 16.0906 cv
86.7562 16.0906 li
86.7562 20.1155 li
86.7562 20.3969 86.8183 20.5953 86.9431 20.71 cv
87.068 20.8248 87.2803 20.8825 87.5808 20.8825 cv
89.5451 20.8825 li
90.248 20.8825 90.7335 20.8444 91.0023 20.7677 cv
91.2704 20.691 91.4973 20.5484 91.6824 20.3411 cv
91.8675 20.1332 92.0659 19.7967 92.2769 19.3302 cv
92.6123 19.3302 li
92.0944 21.4288 li
83.9958 21.4288 li
83.9958 21.103 li
84.5009 21.103 84.8394 20.9737 85.0118 20.7145 cv
85.1842 20.4552 85.2704 19.9963 85.2704 19.3378 cv
85.2704 12.3065 li
85.2704 11.622 85.181 11.1523 85.0023 10.8962 cv
84.8236 10.6408 84.4883 10.5127 83.9958 10.5127 cv
83.9958 10.1863 li
92.0944 10.1863 li
92.0944 12.065 li
91.884 12.065 li
91.7686 11.5282 91.6044 11.1726 91.3902 10.9964 cv
91.176 10.8208 90.7113 10.7327 89.9957 10.7327 cv
86.7562 10.7327 li
86.7562 15.5442 li
89.9 15.5442 li
90.3279 15.5442 90.6201 15.4675 90.7766 15.3141 cv
90.9332 15.1607 91.0467 14.8704 91.117 14.4419 cv
cp
f
107.128 19.0709 mo
107.128 12.3046 li
107.128 11.6467 107.04 11.1884 106.864 10.9292 cv
106.688 10.6706 106.377 10.5318 105.929 10.5127 cv
105.929 10.1863 li
109.897 10.1863 li
109.897 10.5127 li
109.418 10.5127 109.086 10.6439 108.901 10.9057 cv
108.715 11.1681 108.623 11.6346 108.623 12.3065 cv
108.623 19.3188 li
108.623 19.9773 108.714 20.4394 108.896 20.705 cv
109.078 20.9706 109.412 21.103 109.897 21.103 cv
109.897 21.4288 li
107.128 21.4288 li
107.128 19.8569 li
106.073 21.0904 104.824 21.7065 103.38 21.7065 cv
102.192 21.7065 101.257 21.3521 100.577 20.6429 cv
99.8964 19.9336 99.556 18.998 99.556 17.8349 cv
99.556 12.3046 li
99.556 11.634 99.4686 11.1675 99.2924 10.9057 cv
99.1168 10.6433 98.7796 10.5127 98.2814 10.5127 cv
98.2814 10.1863 li
102.345 10.1863 li
102.345 10.5127 li
101.84 10.5127 101.499 10.6401 101.319 10.8956 cv
101.141 11.1517 101.051 11.6144 101.051 12.2856 cv
101.051 17.9788 li
101.051 18.8985 101.304 19.6224 101.809 20.1491 cv
102.313 20.6765 103.016 20.9401 103.917 20.9401 cv
105.252 20.9401 106.322 20.3171 107.128 19.0709 cv
cp
f
119.993 10.5127 mo
119.993 10.1863 li
123.385 10.1863 li
123.385 10.5127 li
122.842 10.5127 122.466 10.6401 122.255 10.8956 cv
122.044 11.1517 121.938 11.6144 121.938 12.2856 cv
121.938 21.4288 li
121.594 21.4288 li
113.629 11.653 li
113.629 19.5488 li
113.629 20.1054 113.742 20.5034 113.969 20.743 cv
114.196 20.9832 114.574 21.103 115.105 21.103 cv
115.105 21.4288 li
111.693 21.4288 li
111.693 21.103 li
112.236 21.103 112.604 20.9604 112.795 20.6765 cv
112.987 20.3919 113.083 19.8911 113.083 19.1749 cv
113.083 12.5943 li
113.083 11.8844 112.954 11.3741 112.694 11.0642 cv
112.436 10.7542 112.009 10.5704 111.415 10.5127 cv
111.415 10.1863 li
114.301 10.1863 li
121.363 18.9372 li
121.363 12.3623 li
121.363 11.672 121.266 11.1916 121.071 10.9197 cv
120.876 10.6484 120.517 10.5127 119.993 10.5127 cv
cp
f
129.031 10.1863 mo
129.031 10.5127 li
128.552 10.5127 128.219 10.6439 128.034 10.9057 cv
127.849 11.1681 127.756 11.6346 127.756 12.3065 cv
127.756 19.3188 li
127.756 19.99 127.849 20.4552 128.034 20.7145 cv
128.219 20.9737 128.552 21.103 129.031 21.103 cv
129.031 21.4288 li
124.987 21.4288 li
124.987 21.103 li
125.478 21.103 125.814 20.975 125.992 20.7196 cv
126.171 20.4635 126.261 19.9963 126.261 19.3188 cv
126.261 12.3065 li
126.261 11.6156 126.173 11.144 125.998 10.8918 cv
125.821 10.6389 125.485 10.5127 124.987 10.5127 cv
124.987 10.1863 li
129.031 10.1863 li
cp
f
141.425 10.1863 mo
141.425 10.5318 li
140.6 10.5318 139.919 11.26 139.382 12.7166 cv
136.064 21.5822 li
135.745 21.5822 li
132.264 12.458 li
131.938 11.6144 131.657 11.0826 131.42 10.862 cv
131.183 10.642 130.845 10.5254 130.403 10.5127 cv
130.403 10.1863 li
134.486 10.1863 li
134.486 10.5127 li
133.83 10.5127 133.502 10.765 133.502 11.2696 cv
133.502 11.4356 133.543 11.6239 133.626 11.8349 cv
136.379 19.0906 li
138.99 12.0847 li
139.098 11.7842 139.153 11.5256 139.153 11.3082 cv
139.153 10.7777 138.818 10.5127 138.147 10.5127 cv
138.147 10.1863 li
141.425 10.1863 li
cp
f
149.662 14.4419 mo
149.997 14.4419 li
149.997 17.1732 li
149.662 17.1732 li
149.54 16.694 149.393 16.3942 149.221 16.2725 cv
149.048 16.1514 148.671 16.0906 148.09 16.0906 cv
145.301 16.0906 li
145.301 20.1155 li
145.301 20.3969 145.363 20.5953 145.488 20.71 cv
145.613 20.8248 145.825 20.8825 146.125 20.8825 cv
148.09 20.8825 li
148.793 20.8825 149.278 20.8444 149.547 20.7677 cv
149.815 20.691 150.042 20.5484 150.227 20.3411 cv
150.412 20.1332 150.61 19.7967 150.821 19.3302 cv
151.157 19.3302 li
150.639 21.4288 li
142.54 21.4288 li
142.54 21.103 li
143.045 21.103 143.384 20.9737 143.556 20.7145 cv
143.729 20.4552 143.815 19.9963 143.815 19.3378 cv
143.815 12.3065 li
143.815 11.622 143.726 11.1523 143.547 10.8962 cv
143.368 10.6408 143.033 10.5127 142.54 10.5127 cv
142.54 10.1863 li
150.639 10.1863 li
150.639 12.065 li
150.428 12.065 li
150.313 11.5282 150.149 11.1726 149.935 10.9964 cv
149.72 10.8208 149.256 10.7327 148.54 10.7327 cv
145.301 10.7327 li
145.301 15.5442 li
148.445 15.5442 li
148.872 15.5442 149.165 15.4675 149.321 15.3141 cv
149.478 15.1607 149.591 14.8704 149.662 14.4419 cv
cp
f
156.56 10.618 mo
155.381 10.618 li
155.381 15.7553 li
156.762 15.7553 li
157.586 15.7553 158.233 15.5189 158.703 15.046 cv
159.172 14.5732 159.407 13.9469 159.407 13.1673 cv
159.407 12.4067 159.146 11.7918 158.626 11.3222 cv
158.105 10.8525 157.417 10.618 156.56 10.618 cv
cp
156.292 16.2243 mo
155.381 16.2243 li
155.381 19.3169 li
155.381 19.9824 155.476 20.447 155.664 20.7094 cv
155.852 20.9718 156.186 21.103 156.666 21.103 cv
156.666 21.4288 li
152.621 21.4288 li
152.621 21.103 li
153.12 21.103 153.456 20.9718 153.633 20.7094 cv
153.808 20.4476 153.896 19.9837 153.896 19.3188 cv
153.896 12.2679 li
153.896 11.603 153.809 11.144 153.637 10.8918 cv
153.465 10.6389 153.126 10.5127 152.621 10.5127 cv
152.621 10.1863 li
157.231 10.1863 li
158.369 10.1863 159.278 10.4633 159.958 11.0154 cv
160.638 11.5681 160.979 12.2729 160.979 13.1293 cv
160.979 14.5091 160.206 15.4288 158.659 15.889 cv
158.999 16.1064 159.33 16.405 159.654 16.7853 cv
159.977 17.1649 160.401 17.7969 160.926 18.6798 cv
161.514 19.6598 161.974 20.3018 162.305 20.6067 cv
162.636 20.9122 162.98 21.077 163.336 21.103 cv
163.336 21.4288 li
161.036 21.4288 li
160.563 20.8596 159.991 20.0242 159.321 18.9232 cv
158.605 17.7646 158.044 17.0249 157.638 16.7048 cv
157.233 16.3847 156.784 16.2243 156.292 16.2243 cv
cp
f
169.99 10.0234 mo
170.307 10.0234 li
170.307 12.6596 li
169.971 12.6596 li
169.895 11.9307 169.631 11.3621 169.18 10.9533 cv
168.73 10.5444 168.163 10.3397 167.479 10.3397 cv
166.872 10.3397 166.383 10.4931 166.013 10.7999 cv
165.642 11.1067 165.457 11.5155 165.457 12.027 cv
165.457 12.4998 165.61 12.9309 165.917 13.3207 cv
166.224 13.7105 166.888 14.2119 167.911 14.8254 cv
169.099 15.5347 169.898 16.1546 170.307 16.6845 cv
170.715 17.215 170.92 17.8222 170.92 18.5055 cv
170.92 19.3872 170.607 20.1415 169.982 20.7677 cv
169.357 21.394 168.604 21.7065 167.724 21.7065 cv
167.213 21.7065 166.562 21.5664 165.771 21.2849 cv
165.446 21.1702 165.239 21.1125 165.15 21.1125 cv
164.964 21.1125 164.821 21.2564 164.719 21.5436 cv
164.383 21.5436 li
164.383 18.5055 li
164.719 18.5055 li
164.725 19.3428 164.998 20.0135 165.537 20.5186 cv
166.076 21.0232 166.706 21.2754 167.426 21.2754 cv
168.108 21.2754 168.655 21.0935 169.067 20.7284 cv
169.477 20.364 169.683 19.8784 169.683 19.2706 cv
169.683 18.8167 169.514 18.3819 169.176 17.9661 cv
168.839 17.551 168.132 17.0147 167.057 16.3587 cv
166.181 15.818 165.596 15.3908 165.302 15.0771 cv
165.009 14.7639 164.792 14.4204 164.651 14.0464 cv
164.511 13.6725 164.441 13.2617 164.441 12.8142 cv
164.441 11.9516 164.724 11.2512 165.289 10.7143 cv
165.854 10.1774 166.591 9.90868 167.499 9.90868 cv
167.997 9.90868 168.54 10.0076 169.128 10.206 cv
169.402 10.2953 169.594 10.3397 169.702 10.3397 cv
169.792 10.3397 169.853 10.3207 169.885 10.2827 cv
169.917 10.244 169.952 10.1578 169.99 10.0234 cv
cp
f
176.842 10.1863 mo
176.842 10.5127 li
176.363 10.5127 176.03 10.6439 175.845 10.9057 cv
175.66 11.1681 175.567 11.6346 175.567 12.3065 cv
175.567 19.3188 li
175.567 19.99 175.66 20.4552 175.845 20.7145 cv
176.03 20.9737 176.363 21.103 176.842 21.103 cv
176.842 21.4288 li
172.798 21.4288 li
172.798 21.103 li
173.289 21.103 173.625 20.975 173.803 20.7196 cv
173.982 20.4635 174.072 19.9963 174.072 19.3188 cv
174.072 12.3065 li
174.072 11.6156 173.984 11.144 173.809 10.8918 cv
173.632 10.6389 173.296 10.5127 172.798 10.5127 cv
172.798 10.1863 li
176.842 10.1863 li
cp
f
185.774 10.7327 mo
184.068 10.7327 li
184.068 19.3764 li
184.068 20.054 184.15 20.5117 184.317 20.7481 cv
184.483 20.9845 184.806 21.103 185.285 21.103 cv
185.285 21.4288 li
181.308 21.4288 li
181.308 21.103 li
181.802 21.103 182.138 20.9674 182.316 20.6955 cv
182.493 20.4235 182.582 19.9646 182.582 19.3188 cv
182.582 10.7327 li
180.953 10.7327 li
180.173 10.7327 179.606 10.8576 179.251 11.1067 cv
178.897 11.3558 178.697 11.7678 178.652 12.3433 cv
178.317 12.3433 li
178.317 9.7648 li
178.652 9.7648 li
178.953 10.0462 179.515 10.1863 180.34 10.1863 cv
186.234 10.1863 li
187.083 10.1863 187.678 10.0462 188.016 9.7648 cv
188.371 9.7648 li
188.371 12.3433 li
188.151 12.3433 li
188.01 11.7234 187.759 11.3 187.398 11.0731 cv
187.037 10.8461 186.496 10.7327 185.774 10.7327 cv
cp
f
197.845 11.7874 mo
195.315 15.7743 li
195.315 19.3169 li
195.315 20.002 195.402 20.4711 195.578 20.724 cv
195.754 20.9763 196.078 21.103 196.551 21.103 cv
196.551 21.4288 li
192.449 21.4288 li
192.449 21.103 li
193.005 21.103 193.374 20.9687 193.556 20.6999 cv
193.738 20.4312 193.829 19.9703 193.829 19.3169 cv
193.829 15.7743 li
191.433 12.046 li
191.037 11.4261 190.714 11.0204 190.465 10.829 cv
190.216 10.637 189.871 10.5318 189.43 10.5127 cv
189.43 10.1863 li
193.829 10.1863 li
193.829 10.5127 li
193.057 10.5127 192.67 10.6883 192.67 11.0395 cv
192.67 11.1992 192.747 11.397 192.9 11.6334 cv
195.123 15.039 li
196.903 12.2165 li
197.164 11.7956 197.296 11.435 197.296 11.1345 cv
197.296 10.72 197.047 10.5127 196.551 10.5127 cv
196.551 10.1863 li
199.637 10.1863 li
199.637 10.5127 li
199.222 10.5381 198.901 10.6294 198.674 10.7859 cv
198.447 10.9425 198.171 11.2759 197.845 11.7874 cv
cp
f
61.7326 36.3955 mo
62.3651 36.3955 62.9223 36.0012 63.4047 35.2134 cv
63.887 34.4255 64.1285 33.4868 64.1285 32.3959 cv
64.1285 31.9047 64.0005 31.4914 63.745 31.1568 cv
63.4896 30.8221 63.1701 30.6541 62.7867 30.6541 cv
62.1731 30.6541 61.6235 31.0465 61.138 31.8312 cv
60.6525 32.6159 60.4097 33.5375 60.4097 34.5966 cv
60.4097 35.1449 60.5295 35.5823 60.7691 35.9074 cv
61.0087 36.2326 61.3301 36.3955 61.7326 36.3955 cv
cp
63.3039 30.0792 mo
63.8281 30.0792 64.2882 30.2998 64.6844 30.7403 cv
65.0805 31.1815 65.2783 31.6987 65.2783 32.2932 cv
65.2783 33.3346 64.8853 34.3748 64.0993 35.413 cv
63.3134 36.4513 62.381 36.9704 61.3009 36.9704 cv
60.7007 36.9704 60.2101 36.7561 59.8298 36.3283 cv
59.4495 35.8998 59.2593 35.3541 59.2593 34.6892 cv
59.2593 33.5261 59.6795 32.4675 60.52 31.5123 cv
61.3599 30.5571 62.2885 30.0792 63.3039 30.0792 cv
cp
f
70.1171 30.2903 mo
70.0499 30.8265 li
68.6859 30.8265 li
67.5912 36.559 li
67.3034 38.105 66.9859 39.2294 66.6373 39.9323 cv
66.2887 40.6346 65.7993 41.1791 65.1699 41.5658 cv
64.5399 41.9524 63.8636 42.1457 63.141 42.1457 cv
62.1756 42.1457 61.415 41.9702 60.8585 41.6184 cv
61.1558 40.248 li
61.4911 40.248 li
61.7015 41.2514 62.2726 41.7527 63.2037 41.7527 cv
63.9048 41.7527 64.5221 41.4986 65.0539 40.9909 cv
65.587 40.4825 66.025 39.3055 66.3698 37.4591 cv
67.6147 30.8265 li
66.2354 30.8265 li
66.2931 30.2903 li
67.6761 30.2903 li
68.1617 27.9134 li
68.4177 26.6482 68.8354 25.776 69.4148 25.2968 cv
69.9941 24.8177 70.6844 24.5781 71.4843 24.5781 cv
71.8557 24.5781 72.3007 24.6643 72.8198 24.8367 cv
72.8768 24.5971 li
73.2698 24.5971 li
72.8965 26.3699 li
72.5035 26.3699 li
72.4198 25.4376 72.0078 24.9711 71.2656 24.9711 cv
70.3186 24.9711 69.6785 25.7697 69.3463 27.3683 cv
68.7296 30.2903 li
70.1171 30.2903 li
cp
f
83.6528 29.7629 mo
83.9882 29.7629 li
83.9882 32.4942 li
83.6528 32.4942 li
83.5312 32.015 83.3847 31.7152 83.2123 31.5935 cv
83.0393 31.4724 82.6621 31.4116 82.0809 31.4116 cv
79.292 31.4116 li
79.292 35.4365 li
79.292 35.7179 79.3541 35.9163 79.479 36.031 cv
79.6038 36.1457 79.8162 36.2034 80.1166 36.2034 cv
82.0809 36.2034 li
82.7839 36.2034 83.2694 36.1654 83.5381 36.0887 cv
83.8062 36.012 84.0332 35.8694 84.2182 35.6621 cv
84.4033 35.4542 84.6017 35.1177 84.8128 34.6511 cv
85.1481 34.6511 li
84.6302 36.7498 li
76.5316 36.7498 li
76.5316 36.424 li
77.0368 36.424 77.3752 36.2947 77.5477 36.0355 cv
77.7201 35.7762 77.8063 35.3173 77.8063 34.6587 cv
77.8063 27.6275 li
77.8063 26.9429 77.7169 26.4733 77.5381 26.2172 cv
77.3594 25.9618 77.0241 25.8337 76.5316 25.8337 cv
76.5316 25.5073 li
84.6302 25.5073 li
84.6302 27.386 li
84.4198 27.386 li
84.3044 26.8491 84.1403 26.4935 83.926 26.3173 cv
83.7118 26.1418 83.2472 26.0537 82.5316 26.0537 cv
79.292 26.0537 li
79.292 30.8652 li
82.4359 30.8652 li
82.8637 30.8652 83.1559 30.7885 83.3125 30.6351 cv
83.469 30.4817 83.5825 30.1914 83.6528 29.7629 cv
cp
f
91.6127 25.9389 mo
89.4754 25.9389 li
89.4754 34.2385 li
89.4754 35.0378 89.5717 35.5835 89.7631 35.8776 cv
89.9552 36.1717 90.338 36.3188 90.9136 36.3188 cv
92.0729 36.3188 li
93.4534 36.3188 94.5391 35.8726 95.3315 34.9814 cv
96.1238 34.0902 96.5199 32.8745 96.5199 31.3349 cv
96.5199 29.6989 96.087 28.3906 95.2212 27.4101 cv
94.3553 26.4295 93.1529 25.9389 91.6127 25.9389 cv
cp
86.7156 36.7498 mo
86.7156 36.424 li
87.1973 36.424 87.5301 36.2915 87.7145 36.026 cv
87.8983 35.7604 87.9903 35.2983 87.9903 34.6397 cv
87.9903 27.6275 li
87.9903 26.9556 87.8983 26.4891 87.7145 26.2267 cv
87.5301 25.9649 87.1973 25.8337 86.7156 25.8337 cv
86.7156 25.5073 li
91.915 25.5073 li
93.8368 25.5073 95.3739 26.0537 96.5263 27.1464 cv
97.6786 28.2392 98.2548 29.6285 98.2548 31.3158 cv
98.2548 32.9702 97.709 34.2898 96.6169 35.2736 cv
95.5254 36.2579 94.0061 36.7498 92.0589 36.7498 cv
86.7156 36.7498 li
cp
f
103.786 25.5073 mo
103.786 25.8337 li
103.307 25.8337 102.974 25.9649 102.789 26.2267 cv
102.604 26.4891 102.511 26.9556 102.511 27.6275 cv
102.511 34.6397 li
102.511 35.311 102.604 35.7762 102.789 36.0355 cv
102.974 36.2947 103.307 36.424 103.786 36.424 cv
103.786 36.7498 li
99.7411 36.7498 li
99.7411 36.424 li
100.233 36.424 100.568 36.296 100.747 36.0405 cv
100.926 35.7845 101.016 35.3173 101.016 34.6397 cv
101.016 27.6275 li
101.016 26.9366 100.928 26.465 100.752 26.2128 cv
100.576 25.9599 100.239 25.8337 99.7411 25.8337 cv
99.7411 25.5073 li
103.786 25.5073 li
cp
f
113.774 25.8337 mo
113.774 25.5073 li
117.167 25.5073 li
117.167 25.8337 li
116.624 25.8337 116.247 25.9611 116.036 26.2166 cv
115.826 26.4726 115.72 26.9353 115.72 27.6066 cv
115.72 36.7498 li
115.376 36.7498 li
107.411 26.974 li
107.411 34.8698 li
107.411 35.4263 107.523 35.8244 107.75 36.064 cv
107.977 36.3042 108.356 36.424 108.886 36.424 cv
108.886 36.7498 li
105.474 36.7498 li
105.474 36.424 li
106.017 36.424 106.385 36.2814 106.577 35.9974 cv
106.768 35.7128 106.864 35.2121 106.864 34.4958 cv
106.864 27.9153 li
106.864 27.2054 106.735 26.6951 106.476 26.3852 cv
106.217 26.0752 105.791 25.8914 105.197 25.8337 cv
105.197 25.5073 li
108.082 25.5073 li
115.145 34.2582 li
115.145 27.6833 li
115.145 26.993 115.047 26.5126 114.853 26.2406 cv
114.657 25.9694 114.298 25.8337 113.774 25.8337 cv
cp
f
122.236 31.1333 mo
121.169 31.1333 li
121.169 34.4306 li
121.169 35.1589 121.249 35.6558 121.409 35.9207 cv
121.569 36.1857 121.877 36.3188 122.331 36.3188 cv
123.263 36.3188 li
123.917 36.3188 124.45 36.0995 124.862 35.6621 cv
125.276 35.2241 125.482 34.6378 125.482 33.9032 cv
125.482 33.0665 125.186 32.3953 124.594 31.8907 cv
124.001 31.3862 123.215 31.1333 122.236 31.1333 cv
cp
121.169 25.9389 mo
121.169 30.7023 li
122.332 30.7023 li
123.145 30.7023 123.792 30.4899 124.273 30.0646 cv
124.753 29.64 124.994 29.0663 124.994 28.3444 cv
124.994 27.5844 124.758 26.993 124.287 26.5715 cv
123.816 26.15 123.152 25.9389 122.293 25.9389 cv
121.169 25.9389 li
cp
123.59 36.7498 mo
118.409 36.7498 li
118.409 36.424 li
118.888 36.424 119.22 36.2947 119.406 36.0355 cv
119.591 35.7762 119.684 35.311 119.684 34.6397 cv
119.684 27.6275 li
119.684 26.9429 119.596 26.4733 119.42 26.2172 cv
119.245 25.9618 118.907 25.8337 118.409 25.8337 cv
118.409 25.5073 li
122.65 25.5073 li
123.865 25.5073 124.822 25.7583 125.519 26.259 cv
126.216 26.7604 126.565 27.4228 126.565 28.2461 cv
126.565 29.453 125.811 30.3017 124.303 30.7936 cv
124.303 30.8411 li
125.16 31.0141 125.857 31.3925 126.397 31.9776 cv
126.937 32.5633 127.207 33.2358 127.207 33.997 cv
127.207 34.8286 126.876 35.4948 126.214 35.9968 cv
125.552 36.4988 124.677 36.7498 123.59 36.7498 cv
cp
f
137.219 34.3919 mo
137.219 27.6256 li
137.219 26.9677 137.131 26.5094 136.955 26.2502 cv
136.779 25.9915 136.468 25.8527 136.021 25.8337 cv
136.021 25.5073 li
139.988 25.5073 li
139.988 25.8337 li
139.509 25.8337 139.177 25.9649 138.992 26.2267 cv
138.806 26.4891 138.714 26.9556 138.714 27.6275 cv
138.714 34.6397 li
138.714 35.2983 138.805 35.7604 138.987 36.026 cv
139.169 36.2915 139.503 36.424 139.988 36.424 cv
139.988 36.7498 li
137.219 36.7498 li
137.219 35.1779 li
136.164 36.4113 134.915 37.0274 133.471 37.0274 cv
132.283 37.0274 131.348 36.6731 130.668 35.9638 cv
129.988 35.2546 129.647 34.319 129.647 33.1559 cv
129.647 27.6256 li
129.647 26.955 129.56 26.4885 129.384 26.2267 cv
129.208 25.9643 128.871 25.8337 128.373 25.8337 cv
128.373 25.5073 li
132.436 25.5073 li
132.436 25.8337 li
131.932 25.8337 131.59 25.9611 131.411 26.2166 cv
131.232 26.4726 131.142 26.9353 131.142 27.6066 cv
131.142 33.2998 li
131.142 34.2195 131.395 34.9433 131.9 35.4701 cv
132.404 35.9974 133.107 36.2611 134.008 36.2611 cv
135.344 36.2611 136.414 35.638 137.219 34.3919 cv
cp
f
145.591 25.9389 mo
144.412 25.9389 li
144.412 31.0763 li
145.793 31.0763 li
146.617 31.0763 147.264 30.8398 147.733 30.367 cv
148.202 29.8941 148.438 29.2679 148.438 28.4883 cv
148.438 27.7276 148.177 27.1128 147.657 26.6431 cv
147.136 26.1735 146.447 25.9389 145.591 25.9389 cv
cp
145.323 31.5453 mo
144.412 31.5453 li
144.412 34.6378 li
144.412 35.3034 144.506 35.768 144.695 36.0304 cv
144.883 36.2928 145.217 36.424 145.696 36.424 cv
145.696 36.7498 li
141.652 36.7498 li
141.652 36.424 li
142.15 36.424 142.487 36.2928 142.663 36.0304 cv
142.839 35.7686 142.926 35.3046 142.926 34.6397 cv
142.926 27.5888 li
142.926 26.9239 142.84 26.465 142.668 26.2128 cv
142.495 25.9599 142.157 25.8337 141.652 25.8337 cv
141.652 25.5073 li
146.262 25.5073 li
147.399 25.5073 148.308 25.7843 148.988 26.3364 cv
149.669 26.8891 150.01 27.5939 150.01 28.4502 cv
150.01 29.8301 149.236 30.7498 147.69 31.21 cv
148.029 31.4274 148.361 31.7259 148.685 32.1063 cv
149.008 32.4859 149.432 33.1179 149.956 34.0008 cv
150.545 34.9807 151.005 35.6228 151.336 35.9277 cv
151.666 36.2332 152.011 36.398 152.367 36.424 cv
152.367 36.7498 li
150.067 36.7498 li
149.594 36.1806 149.022 35.3452 148.351 34.2442 cv
147.636 33.0855 147.075 32.3458 146.669 32.0258 cv
146.263 31.7057 145.815 31.5453 145.323 31.5453 cv
cp
f
163.539 31.8812 mo
163.539 32.207 li
163.04 32.207 162.684 32.3205 162.47 32.548 cv
162.256 32.775 162.149 33.1673 162.149 33.7245 cv
162.149 36.7492 li
161.887 36.8195 161.397 36.8835 160.678 36.9412 cv
159.959 36.9989 159.402 37.0274 159.006 37.0274 cv
156.929 37.0274 155.311 36.5165 154.151 35.4942 cv
152.991 34.4718 152.412 33.1236 152.412 31.4496 cv
152.412 30.2808 152.665 29.2261 153.174 28.2867 cv
153.681 27.348 154.391 26.6032 155.301 26.0537 cv
156.212 25.5047 157.178 25.2297 158.2 25.2297 cv
158.814 25.2297 159.481 25.338 160.204 25.5555 cv
160.663 25.6898 161.015 25.757 161.258 25.757 cv
161.577 25.757 161.788 25.6322 161.89 25.3831 cv
162.245 25.3831 li
162.245 28.6993 li
161.928 28.6993 li
161.801 27.779 161.384 27.0425 160.678 26.4897 cv
159.972 25.9377 159.146 25.6607 158.2 25.6607 cv
157.012 25.6607 156.037 26.1354 155.277 27.0843 cv
154.517 28.0332 154.136 29.2584 154.136 30.76 cv
154.136 32.408 154.576 33.7758 155.454 34.8616 cv
156.333 35.948 157.437 36.4912 158.766 36.4912 cv
160.024 36.4912 160.654 36.0906 160.654 35.2901 cv
160.654 34.0705 li
160.654 33.379 160.563 32.8954 160.38 32.6197 cv
160.199 32.3446 159.878 32.207 159.418 32.207 cv
158.986 32.207 li
158.986 31.8812 li
163.539 31.8812 li
cp
f
173.344 34.6378 mo
173.344 31.3729 li
167.22 31.3729 li
167.22 34.6378 li
167.22 35.3034 167.313 35.768 167.502 36.0304 cv
167.691 36.2928 168.031 36.424 168.523 36.424 cv
168.523 36.7498 li
164.459 36.7498 li
164.459 36.424 li
164.951 36.424 165.286 36.2915 165.466 36.026 cv
165.645 35.7604 165.734 35.2983 165.734 34.6397 cv
165.734 27.6275 li
165.734 26.9366 165.643 26.465 165.461 26.2128 cv
165.279 25.9599 164.945 25.8337 164.459 25.8337 cv
164.459 25.5073 li
168.523 25.5073 li
168.523 25.8337 li
168.031 25.8337 167.691 25.9694 167.502 26.2406 cv
167.313 26.5126 167.22 26.974 167.22 27.6256 cv
167.22 30.8265 li
173.344 30.8265 li
173.344 27.6256 li
173.344 26.9353 173.256 26.4644 173.08 26.2121 cv
172.905 25.9599 172.574 25.8337 172.088 25.8337 cv
172.088 25.5073 li
176.114 25.5073 li
176.114 25.8337 li
175.635 25.8337 175.302 25.9649 175.117 26.2267 cv
174.932 26.4891 174.839 26.9556 174.839 27.6275 cv
174.839 34.6397 li
174.839 35.311 174.932 35.7762 175.117 36.0355 cv
175.302 36.2947 175.635 36.424 176.114 36.424 cv
176.114 36.7498 li
172.088 36.7498 li
172.088 36.424 li
172.586 36.424 172.921 36.2947 173.09 36.0348 cv
173.259 35.7756 173.344 35.3103 173.344 34.6378 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 18.0.0%%For: (Marc Wright) ()%%Title: (UoE_Stacked Logo_CMYK.eps)%%CreationDate: 02/12/2014 15:15%%Canvassize: 16383%AI9_DataStream%Gb",Kk@3F5Zg`/@g]JuNUd3]h31ZLE+hauYPHY'].(dg>5L-Zd,Ina0RBR">Eh9U_'3Q5f7[bfd'T$A]I]HXj4_NjU<l6IUKk#4V%$7?Z/I\Gt%,dLW=Qb)loEIgce:kKG@]YLjMT8G!o%#5e@"eH@"APTE#Ro6;2g6!m`\!rX%Ei6MfcMeD[i?Rk1^51_eWR6fWLGKCE%nf!C]pC^8UH:'1'SYk$IdnH8uKf&Ccl.6m)j*n<cF]QD%$C.nm(udt#5QOjV4"<uhm5:T5..qm?@-A+d7']<A#NfG[Bq40]//tJF%[o@rf)&<ra66a7!USmA:d`HJm9FF0H])_5bP^5oiAf1;s@q]1>_(Q*U`?\T]!L$uO#0MGC]6!5IhX,I(?<qG3/>tr)aR,kWH0s>-%M.h[dW>=aZ7'0'ZZeZ1>&tT:E6p)&VEBnc+[f3,S#"mmD1`^4,#T<p^V&AJ>`DU]IJg-Y]iddlZ_O*(B='b[9)W$atWmjlm-Jdo$%li.&bdi:kTb"q-BH+tMF/m@oh@)J``6(+/d\LKI;_i3Hdck,`+i;[KNVc'36G+PNOX>[W:8$lG/VmILQjq#Eq&m@K+d_SLZC6djQ%4A$rgM"<a$"9_lCTBF+>Qsgg4(6FU`1Hb(NR0qCoU\:h^9.N5l/eC8N:?s86ZZlfbl(h7-Y.%H^;'qoY3q]MX\<9NFV>S,b`)EO_%K(_tX0d,B>8M(YZ=OYqJditXJ7n)Vrhl:;M-CTQ>r0;hudt2_sOIqeVqX=1e2".o=dGr!6Nb,.pD]tLAA,IYGFP>rrVk&k'Dst)K%E[[BZb%3#L.91\7#Ni?24t6Mb58M+5bW+QZ8#u[jpfjp8([LGl:N1hh7g^agTdB\:qd9BS3N33&D_tNfo;u@t6Z/C/.eW_uSMnEP%fEpSY*Sb*%(OQgG49e&M;<hF#5_M#B#'+)g\;Ca,7g7?hs,MsOZq<C<9W-cr$(#25Tm'rDUuS*`j&/j+4Sh#PHS6MmV,k")"'>IY%TV<<$b)"ul!*Ua%"n:HkeI)#4K@EcP"<75noqf-;l3BM%Ps2K_UJZO/M!^OT`Mjf3ms9KGDaB]ZT4V5De@SFbopSKJ`D3UCBh63-%h4@"Y1XnG0=6h"$>aX<Q:@YgGX1TG'bFZlpdC!"nJQ`L!qt6Ok:e5K4OdQq:^5-V4A"_@'l2VJnTEWP[4r3`g!;HpKX#g/ToV0kK%RiqN@H6G\1e*ui&GGl&PBj)A]rkKWQnB4TUqAn_88)_&b.U5DbcU0EF-1Jup@)?:UJ=2];k\q1M;i,`cTNG._Tr"+kOMLs0d\-i#%9<edo9-)q^85nHMW%-'3.?7+H#[BIqk)qJ.-tYK";2UP=08,TWSkEgP8V'kL"\qkp,^DEgcDgl-6BYF/Z2iJd5[aD@>0%"XCd;DQ%:/_J44W#9";Td>mXY3kNeZ+iDdtU+G<!u-d<e(R!oa3I-`6P"E.MP=fi"T'\SmMc,'RMO[cf&OaPHKG`FtWNnICTnqL5Kd9%hA^q%8nggABo5iG"!)@iWtnXUYZ`C;[%UT*/JP^Z?:\e;JRX1+WPr7KijoF0*m$g5eI#4]XUsi3"$fH`T[e`.Uk#75+\N2O7gqjX*Bqd>%S4Wu/_.u]!f>e;pV^W(;'V/,l/0pDtb0W`_TWajg$sBX"i])Y)!&VMI=s:e<*="8bjNq((C9(7ZV]HTu`MHPp\>5eW_'HgA;[+VF%3,Rp`I?=fo8k:J.[)/%ml][ju*"!]u*kL>FAjL7PBQRbc3OLOi#bJtG"e+$)JOsV:B2]^H]T/59!$=L3$JZi%Qt9/6&&G8@."tnm%>rd_k3H^<-=J/DX@n]0biGpcoBM9hM=B1Lilj"Z"TG!XR;TPh5kfE;,Z>ri_4sakua"rV&8:i,6$O':fE_6%c9rV(3a8)N_>RD`#%X/rU;S>DKR#,iN>!(_Z[<7W9Dj>E'gK"AT%+N:BD"M`Bd2?HV"$fL.s_ZEZA^3BcoQ;";'J7b`4ps$n`O%1>2'1k6=$c,!g=KRYh%YuX^l!'N#.1!CQ<U6%ts:n_*^elb)6bW<+>3Fhm6$&sc191mYu.9[[mTF)YCaZp:gNaYle9H8N.8hlB[YYn"<P][4RPKKg(/LI/l%9X+miDm'TMg8@mZ`kW5G&kZSa'm.-B-6F&@5=;UlE.RL-FbqFn9#[+Xfi6UD*K=rr;M_tBYAtQ6$``a5`tO9r'`J^60VBtn=ooh6%dB^C#<<6#NWE,i471`=0=X85"X&/qGAlVl)n;KsEW%-0,b19.=:9*[^YR34P;H>1[iYWOIJeI!T!s"P7i.<l:l7si3d9om6!+[W/%,61TA!^Q('8uch6>/OBK'TEP['J)VZO:i1X=u4-sm@aTZaUf:>UK3*!Y#6dDO_''s,Fh>e+K?]>Yu.$aRusq:<BM[qa%I$P"ZE&O%;Pfa"DOU.UFe5CJKnNV89Wf*W($,UQ]IG@,:GeuY(UWUo#tf&1WKP,/fKpaF9^)Ni`iti7L+,Kj7C8f##14Nd+;_h*'3$7[,!_hQ%a?.ih9sT"u);o7;=D]W<,(rOTg*^$(V(EC6@b2AJMC'g,!j\@sg*SOp%&,/H'-X%Mi,tHK5Ukh"'QQ=:Xo&;HW.eU\W5IUn/?K!S%rM'GP'cG)C1eMN\a=#J7,sgR+r6-BoV6gKa=,eq6QXeRWI"J'"^(dUb$BqK$KSX'D:F92'0U/=)E1s/+Z)+H9nrtIIBLXkSTG[H(%-TA.:+Jj,sW#:!`Wg$<rZ8MbY)=sLo)%G='c`)!$WjWWd5uLMsM+\Zf8?f0r24;ksb9p6RqIV\h/a!-??tj?'9+dF_9%QF\(ALC7%+bO7bl7,K,M?o*MPU?CFjqQ=V#.Xn<"b6`[TFi]BjE(AEFu?f?<e:[oQuGutb6TM&Zb]NRV(EpC8gS>tcug("8SuEmPDhsu?E7gE%L-2T+J363Jq>_@\`S_lQ;Q0D"a>-_j"HXbBnsWj?aJJqK@%hUQ`LmpB(rN^[X9g9h=@%RsPSd^2//8C#>;_pr5oD6gV@:&_$<3;q%]7EjM!&@YV@Sk;<g+9O;h5YVNUt-EA9Fmt]'+EW_:$M_gUrN*FY$/n\JqlcNXqn%+9sori!.&9,9'Zn-QWD06]N1EH"<U9PC6Sn^%$.cPbo95'Z!/1_bl%<o*M9*!D*DC-9G<uDI!^<-&Zm\hFXWsFcaoi_dXLa\jS1,l%0sjiF"8bI4N.*$T0@dWRX"F/N746Tr4KW&-%-PXD5+ub]p*BHjWl40jFV3'dq*QG*#.iK1o<(02A2d9Au(SOj8&CaiL`=1Bk)cfjVHk<h::@3p3BsQ'eXohXi&\*eN&MHWm,YYQ[%BLWj?Q<<:\W6fAUJ4#IG!J&"i`J/Vko+=s0&@p8Ak6P=)b].N;lbI#T%'6Y%OS_pt>dH'K>=`G_8CNNPR%_>E<Q\\fC4<gGqSY28%0l_qW<M,gn'c2isNgW@(N`4qI$(+.],!r2Zk&r%Ki9`#C!:,;='L#=YmKF_#.ADU\FCQEj-Ot5\#*;5q'mW'bOa'?,TE:=7KuO*F%MN*pR!E+g("/7LRb6YRQJ\dJck$SNaY%fs@:e=t&BnDn/#6;hq=(%&0@N$H*9'IA<.TBg.\&K=So0_gJ.WU9/`iQ>pTm%W@g:P-N%ej%SMMLh:L?WEp0[N@/9!5P(8;QAcI:e-s@<fZ;KJnW1<OCIia")&*H<>.sjf?u&ebNas7M+3cKKudCt'KD^_dGcPmmDO#P!$9OV%@?k<HhVl;l^jVnC%4sDf(fs[m6]2e6"B[D"*5DS`n3ujQ&mu8\_Z86K(e%ND@Y5C^WrOu2j3S>N>$n;ab^uj+@#,X%C_NS\V!@ZJ%6Bd^#-A%n"9<0Bai`I0A`?\h(ROmM2PGj0b"[Mm6GS8M(>#gg6"$2'b$Q1fCNQ`D<&VZn"@H,f<:l5OsFXbin!2r$Reh@)TdY4qi%</s\OYpD5/L/U1o&9"Oo::10-'H!WGW(AjgNFE]meSWaA.GZq:@0nAP>B))m_i*]''nldJa(a[nOOU!P$*[c:FBR-%KiQ,>1ddG(%'ot;MX9[Qh&m.#?"3)(Ren%uV?*_-.l9QSa<6R&[8o^mG6]BS$`hZQmLY"nNaF6i;Rd\.je@62D"2jkAGV.:YWPXmN29T[."b0#m%1nZ0/]OiuESL1:$&QhoCl@$KXf$I,>_LOrM`N%uod@)asOSVYL"&"7B;sQ1QV%Z=@BTP4:<N(bMAoU*kc"k-Qc/(_dBJ$6ZqfJoW%g`_GEd*,NX7O/Fp1U,G5<Iq%bAK=#ZX*TXp`H&/84R+smFW#bRBH?V`U]D)0ZmlWp&3g8Ubo6^]&LTCHRH)d/:a"Wf:o"j6J7>+t%_NpVqR+,7Q($[2DP\.LZDf16`Y]<Z3^epVZ(IbBX5peLnL(-+3cqpBWHNfpM:'[G[q)nF,8I^3Yb5d5%6]D;=jUKp<eXu%:OW*lP%ol)IV<_<o[6V_jc.=L68f6=`t&H!JAYAn;&&B.JR^^6'H>b_=ZS4")J8djHQWiLch"KZ),U*q[kND$Sn9VGf7Ak@u/]$NNM$GL3$%2CRWg/Qa>FZjCAeIoem$AA,\!\&aP0,P1U/bK\+;2b;G<]]QQKlIHX^CTMELC24f65khAL!`TM**3U)$0qh087H5d++0BhE^dOX;%WbQR9bFEJCnJ%mZE&su#,q;K#_DZ+sF%QOL7A)CSg0B;aE-*7NI0ICE"'5g#L,Jm)28neqN2h+M4Q!/Bp;-^9`u4._gZ-rG_Zgbe%<G;7('WZ-?kf&=C@O4PJF*20))$e>Yc!,f^i`\F>%7-E@K`d&QLBH;PI\J8[oqj.E"2HDU\:e<j+U\d\'"nst"NTKbKZ+'f,.g_a%b]WqN?#Yu-0$RVddYtm-02ra(&bs:I`kWhZT4Y4#2,d)c%'<'q/f(5k%NlTb'gCRZb6W3Q<\1"'XaU@.^$ZsM(!N2B;bXCl.qGN[%Bai!DQptk`0GFL6=h90FK$]bQWHbsPW&F]MBLVq93-"'VkjV]W9'B=aMn4@>$V1542HoT!#/f`UbPe$^7D&t4h@XT^.PLHa[3K*d%B#6'FXe,%lrTO2GLL-96;4=4'+:9`)oa2CK'#@iGQe:LPF^Ls@o1REA2WA:I)9/CN?QNjMIb1X6(LiWYg)l=e3BmHTj7;)0j7.mA%O$B7eLPuc6Ra1/]U/f,/O&'[-,A:f_iM`XJT$iVlMtf](i`NCQC^V&L:n;0L&W_j;m.EI%IR@jM,Z6*?9aR_"lfY%r&Nk#1I*,o"%.WhJq4qN:83Gkl^*(,Gp]iMmn;X'%Q,]^UU2u.F2d"3O^XWquc%<B.a<W@$.>&plLmo=bbZ%5smf1(TUjHF1i6R%(d&>;5uEL)&#%,p8Jsil$2^*jb@Pdt:DVP>."kQ9&JNmL[^%d9s$nWS[3.-Y<gCl@(]N7Ch<T83=uYIWDds@.f@]K?rn.nL8ooVYM/5^il)`h^^^d%(1*JTHfKq2`7l5,4=8qA\9WGV^[1@<3[,F7NFTNUrFZ$MYnR-ph*'at4)t!AmbYn<S%*eYGAlL/I:IJ^qhFNF!1^cX],+tkMo->6%POWhl^^nRY^SF?h7BFYHs6[KQ@\^NhX6-3bFnH:XZ%Ze-oLTr8qn.DQIss(Dj[S.J'H;V,n4>OSNnEfDlXDB>i:p;gBjqjXP)I<E%=?G/8E_TR4$rn$q8]I=[j]\c:oePElm8#Ej?\mY[a>ueg"=s6Kbhk(2)agPns"qeaM/)F=\&4'MBhO_?6gS@F<jsHbaB.2*_b\oh%$ArEo^UDp\L;;5Npu,<fT)n6N4#O8e'e<aT"_qa.&bPP-"g+&R^<bO0&1KgrE]05V-t45<F6Asg!oPijmW4<nK$41MEV\K>g*!;6%^"#2DK4LSdO-GO%W]3t;M_ATOIF$/kTn3O0^8DN=a\6g=Vg:fu2G(nW(_A3P=.aGaBd-C(nb%H>=`Qp_YssCOHG+c^n024C4t)m4%Tg&PiYuC,)1o28h[dI3pS:Ph,\1>gbfnf[t+BB#fi%WQLmiq_?W86B?iidB#j@JPu98Ja<a9W-q>i0NRrn[W%7tuc+"M`uZ+o9q6%)+kGb2!.*M!6]5l6_=<YP"8W>)ju^3rJu2)o/iP&U>s2fjW1U0mupPO<rKr![TZ0s*e$VOo,F:n,"JG$N_";_&c$/ok)nG5^S"XR%s*Q!AA0TU=OBDB<_MgT/B?Z(_hbVak#dYWp`cjFi)^''9bW.gg3lO(b3\_sgNRtr#M;.KgZVPCrIEe;\!7G91jVmY_NOrF?4q[_C%mSP+!U<+toP?S_j&M#/fDJ*=p<_I0AV1qqUid2.nr9uRg::qH!/<YVp59*7e,?uQ*$^Mk(=a:V?b%g9=hg?X^Jp<Q?]*Uc`a]EPC%EqO=^+]bD9eES'2m4Y8oRNd8+hO+3RhGIDP00J_SD>BG2C]#-^Br"`NA,[BnR2>4m_/Ycd`0bp0R?p?VbX\,spaYip4@f2ThHU\D%D8oi]&;M4E?2tOHndjgDecMBQWmr&J+Qo@8T.mrfj1"g(a#:.qEDPp(RU`2npkJZl1:]\!If^gRH:nm-O10c)>re(Kj@6<"@!jc;%C)siVc:>D8a'7rL4B+dGW0)"0.()9'SVc!H0JLtf5K;_2`6d*#__LOLf_$O[Z<FC)lG!DYV`4Bq+\96oX*tpCk*#lFc\PT0j;.P2%Tsm8`rl:eXZXdhA8M5kPW].mm],LCDhEr)P9b,("RIaAQ2MY_^1&5S3O3(gtE=)AgqZdK2LkB[`Cu=A3%/DK*?gTf]q&E+h_b?*.%9TI"aNl1'O&pk6uj#B^4D)M%-@D7j5nSO<(OCRk3S>42G(l)63QfBdl^N(;@J>=$+RJ1QY_iSC!eR[Ot3/j&&oVol>!jKqZ$\3/:%*/5GsY9j6=[K#i@:@eTjPsP63PNM?bhAR6hW8(o!rn8q$]fS0e^a/ik!IRf.?iSQoo\NLV?Z>TN/7(YR1OL2X735p+gffBNoBDUH%IFEtP"5T.sO_ESaNW5=k)DUdrM)LK0'8\X0&hW!lJr,?XXTY)Gk&_fn-M$MqQ"La4D'I:Qnn]Mr^:l]cDsBFggP,Z>@Z;6#OmEd3%NBOo\gQ8X6nm>uJ@cSnQo8g4PJdNl]cep8ISd.60B56tqL=X-4&CP:k5H/YV&H=irbN&M4P-6)fA\U)%YBAGi]iC>4oi@VG>2>=p%P1[q]\/`<6ikt<`Y'8Q@gZT7e;S9`l'enP4eeCHY2RtT^#J\Ts15.&^P*7t+/9dt=oL+Dt222Ie$2@)GiSPRO%fa-F+2WLj($&:5%(%M`A`l3]/=RYcY_QVk^ou1s5Qdj(RUj`k[rme@O+7=YQ[UHmDb&nh00]mDX+ue7s(ED=r^(6Q[?($f)E;W$(JN.!2lEbnKRKumc%j/l0f7!t"&R1WlJ)A.#cp%fQcMgT77TPR)NrWGX-:;-DMP^;E%jm+AAJ4B1@X3P/'bu[f:htC*hOm(/qZc+ZKS:6k.7$@bha`auU%d[Y,$J,FJ1YhLr]gW>ZHjN2T9?bl")^*kbi:7c8L45i-O:7c8LPF.hQ6^aY!!h#XD/`b"hnmi,RZA&5,6=!r?$TVVYYo)]%DG-H0%?Yt:g7RR/LMI3.Xr6g5dYmS(PP8H`8ZgljZWn(snITO\7/T?qXjIA*Smc/-j@[5L4eA1P_[RdN[``a^L]<5%ub'-]a!R^]JhWp^8%h'PFs8^M;eF:1!*jG)21ni"4E\&m[>?R,-=\34WR*D("JJTWEDJW?cqbA4lXE^T,oFen;kg_!c:`"\SljSnS+n\i7@W<%JO$HSW=%I([Nk&L/Y%YMSX?I%KCTF-p#.e)EO$3d-8hO`pW''/;Md5rhn%lk`jrjR6Z'gJS2CBd[lT@^+f=kff]%k5T4LC)R.HUZ!R;4[+>m%2[H]`6;V#7"JtY+GU0/FMn#=rD'j7l8_dnj\!b0O-?5MHgh&\/2JSIGM;+sp*#u\\`,4T*FCHV;S+jj<5!tn>[@QQ33!`M`4g$FT%L&0*hB7.$"i$&$p8Z:Xt%n07]cj5-X*?+!pN;4J4jG8cj*?+"*JP>LYpd>9(oGHW@/'j9%f]9pZqVJ2RpY.0ekg&^_e75XC-hgDr%S*lg%5P6=Ek>6W]\EhJ6Wog@\cH3aun"]ikW858\3Os2\a8eE'o<3Z,eA$,\;t3;Xb.muD7t-8tUmg'k0G]ti,U7g*Ht_Mp2625J%:M]n(KXF7/LlYjr,P'`Z1Wd-_]NhL[V&j*&N`6H5b.\ekT3t@m%0p;9=oFAP^pqV2pO5ncigP:,f8O=@#jIM"Oo3O#R?j[MrSqDD%*'$d/ldZ!Uf$rCqN_ta1&7\+G7"'e!'a,1j]Cn&)g4(lVnP<LLbtip0mk[h\fO+Mj?Hj8qC8AR::kKaM8PnFT\A)C1r?jmjJ(9;q%QW]^Z2'tVKE=H[\A$/s1$uh$h4$$u]N`bP&NFTLoITfri9K:'r:EP#90i!,R9Ng^SKoYfVQWb,Ee(N=;_\'!J]ou&1NCg@q8<B@i%Z+Z=$eSh#Zhu*nD>Ae=6`cEuD47M5'+;B1q?H":BD%975g80*?^m&!UHmPmK\a4!Mg!P%LG!s<+?eahej@5"($)i73H^i*9X]e54%P042;q;^L]j9FT(eg;L:54@("ae__mZXgVRku.XRjB!/rQ(V!Rh^S:=_!bVZN]=RrjiaI7"n6NH8=VV0Ib5pql5VDNL?HSYi:JnP%O-/HYhP\E8nX,ge)kRQH__-6*\L$3]Dc?;Pp=VCYUnGHt/d:cJT<B"A7gj>M'*!KDpr)!X\9hT.h$YDI-4\qOi>Y1/ip]Y^^59c%%:HNsBY/,=(pqH4-1u^S;^8Aq@N8DM5Rs9;oO)O%J9g$.Ha7jF6^;Mu&p]BCG2*ASirEXfb+IGj8^@CaiY%5*>g_%[$rHEAZLcpNs%HUl"5HTr]N!rSGKmS%N2(d%J)EfHt5,*Ns!hJ$D3pHX*6nMRkl@r0+dXT@"Dnc\`&\KP![f>:.Bg_MF5hOi<u1#[$=:P1dLXk*LH%e':7N4!/[l$A?W)A#9<2LgPt)^1Tk+4kK=bHXJ[t//WGtTo6*pb^Lr0p?rh.?h$"hJBpk'.q/MM^s_A_(Z+VI!6P!Fok!b4JN,Am%BQ*V7_/a#2:O+WO/%>"ho]0n_^"p`lfb3&BrD$(g8AWlU[F)qOI0VAjhrGf!`>&rT^Sn9S79T,uf+1F^p`iW1gsk?DKd]SFA&SDt%S,E=kNdCX77gc;o^N];"-eVV43`\V'l;mUkS/Qo4@)6f\lMg6cm:fA7"u[8%)h,Y\nXs"Hs(fe0Ba?8LL(ilr@f$&@VV_q\8l+fM%M7k`hp<pla)Z:M1WbhH^p<r]j%JZ7PUPI2]';[_rR1D#(`(L!YB@krr&ZG!8Vhu'2ic?u9)%h%n&L!KMYFcuVM#HpHT:0@[kYFH3%m*pA89e!m4#@C&R"q>[8^%2)eLPHiAhPjWOMs<uXkBKVa1"VuWP'Y>p-TNA\XujalejO_2U@'#D:E+NV)-#-[<9H2:SR3`S4aElD%*,VCa/i:;X>l;89I%c8`?*>IKp6X*S_fseKmgF35^c+AO/m4WJZ8@0tBo2nJpj.e#+P>p4V>fZMRpJF=1B*8\.;IDJJ-6a6BtjaE%]DcH?^9XNcO?5rN"+CuAnIJl(nu[kJIj)AiMdGoc,BcAmrJlrk\%1S[6NU+,N75m5PNDZ&Y/g=/L\QU2E9"^('%e`UGNjYO)phQL%52qI_YIpe(d>fdR]@('6e/i5TI3ho<c>NPp]_"XPm;FG_YA7%6;"'?1Lh'cQ\L3]bkP-P11mp&f[KjhN10DKCdcU/(ip+!&k?gcK%I(NAo:PPk<^Tl(--L:"3f,=OjLpP<<*APCU%a+]&Fi7=i7du;RpoO5Y)%RT?Kjib(+i@ET?braCVJAlll:F*+SJcfq0&:3"_46Gl%8VUHNPI$]D#4P3T#C?@uP2;t5VgPPF56HUs&uamU=DjZ2#^fWI9I\7Xch3V"6g2%>@;sAeih'gcDM4bI;Dek=/H9#^;;jA0]D`i9%LQ(7Mf72_>IJDnO'`AM_iM5nu!u7u5Rcg@]_oC@49o!F@:+&"Zg^GnG.cL&`6bOaW'^>"Tb)E&1*m+feUZ)@Q9-msgY=;6bR&!Y0%kVYiK3L3AFS6gAP.WZF7'rNHP81#q]bbHm"&OZi72@nQ9bilP@"$R5m!"+i#O.6\%!1X!0qk84$g?GR==PI1k]GI9_'?I,D72/7`%U.VoaIjPBCAC?`8^NhI+oS@bQ$!?L"@sqVln_r[uq"b=i*"[ll#Lq"p##::.-hPZ+A*1po,VT\E\^W`tek!kILSO)L.KLHt&=*[,%A7W4O(&)D8'Qf&YC#rR?,MVJ7X,>2Y4=*t;BW?.a@].uHi%@[&L]fIB<^`:CFa?Ll4>K3l)-mY#!c/\kQr:Yg2Yuq7"M_hhMPdFp%=UJe&rU*>R88O./;C?k?WIfZorYANuB#R67riB6%C<[BQBdHGOiH?jq4or4/U=KLBT!SLNQSA2q0sG,Gg*I=n(_FeC<V!3Od(iU^%m1P&%IfHK#K]<Dc5S"6C,:8Q]XpaIc[Z2p8$R$&\T1kpXO"p,/X_8Ii+S_>?3meGWB&N/k!QADI_A=f"F/q"7Q*Bs()X0j2IaHfQ%e[)-Me#$H-"<WtQ!SE.H:nnt5?lBEq(Dq?.]t2T#XW4_/h_"a28-W(5X;o,KZ.TC\j-QQi?,>Ag^K&fkY`*1$`-Nr8<%+]B&/t5!%=p5jHQh>5:6jj&U#bfla/$AsrAAiB!@W%2s9\uAW*uZLI[GeFArWgs7hRQUJ5ql9c8#;YHJM8tgFPTQ(@*sj<;Ja-f-lb)Fe]^At%"5&CfPuFs:)\4dmQB*9!b[81E/%;PWHB/2+%k*56!>^t;I<9m_d?X:;Ut/+;\P!i`@1[:k`cYQ0+@.S96PV10dfI'WbQI6+6Y]Uk%K_GfXAme/cNe)u5hA)1"9)_&SdRRf_+4Q'dX`CCsT<stV-4cCg?>?+OT'r;HZ!_PKhr!L34.;&+OmC*UYf6mS4.9#G;5k?JlYU#I%`FseUP0,ma$`oUk^#r06/OiY&Ft1e%M),GJaZ_&jZUb4>/CGRRqWg;ol;efDF-*9SB]5rLj'4(HE\<3.Y^-WDE[X4f,uq5AMFq>O%*8EK\n3udC:BdRgG$D'.G#TGT>I>)imL7/-9FZJCSY!S=rmt]O*L)H[7dn/=QAbEJ]:k-o43)$SPH-_&BKR^O!b]'5#(qn<Y^R$[%f%1s,'cRcFVg&cNjUeQJh9e<j=8RM[k.2M;Q\J6c-=!9HpuZBlLfSdN8^e(M^MjV+$Rtis6)U(q)igMeO%Uk@q(S"A_HCHuYG&M7%(rMA4I#;L?ad#IP/;'=GU4bpd0qcmFhulIt7Sli93Z0bjKD5P(J?X<.Fi?F-DHq7]fHk*h>p;!&cP"%#`<MP6mN&84jQ&qJ.CFI^%YpZ9-L\<ZeG-'>j+%Eb,#ku]sCKp.ujR;SZVd9gVli0mn(::%^E(3tG44UQaMn(-k,)"^lkC^e!I_uk]0aCnGE)diW]dlH%.9o?D%=@]jRH;o?1ad#r<hh0n0rO,VSNfk0XJ^LHL@s.%d():CmlC]SL?Zd?RU2F3'fkQA'\f(lIC*]jglZ"eTK8(7=pNprU>jR%Re&dn`%3%!`Z3cGtZC@Iadl>oIY>(h%7j&TpcM$0;eY=Y4WqURM.lW[@2J?FVle4S7YWReZqFYK$e+q%"&h2t+EP#\D[gSYpZi=mSgDo!aP%E/IAeiY4m5SXdj<%e)V$4mt>*c:Or5>]3blb14,kLA9q&eVTEdkV!coqbPl'<j?.Wb6"jU"c:_#\MaQT#\#V<`!)_F9LCe+)C>2a%koLAu'^]*+!r+:@/kQ3I70eH1gD8sY2m(M8PuboGfCT6Hf"b6bZ/XFNX&#H:-F.+HQe3mY3T%c3V]D`eFacp@P4W*7S?LLj@_(?o%pG@u%&cSTD]&Y;4]m`%j.(5`Eij0=_Q.n@k)Ole?oBa&DB3cO-)8lg=]54nnin%nV%G'ZHX8DN^lu^ia2V!6oXG"d/5+?Ke8@k,%%^*n,-Em&<tdnH,5W!pf:a](A0XlbETk-0)qlW=bI"Lu;-!8^W+h&ek&m1E(m4"9-rh$dbR"TLO:WZbO?^9d[XN*bamHZJ^rZ2.Ob%@]R8"O[E-jQh'$<LT=\mH$dWp"r8FhNdmTQMS=qD+$#SS^nol@mkND5T?IMq7_SBCA[,tb/,$[rU+[.q"#+s*>0YBY_*gimY#k/2%6G>FY'gEQ^bqF'(V_%R-T-B=pEs2Fr)f5,V8B-h7,ipt'IQ-dF]mi'm.@T8V!fG>"i:D^,T0HhZpT_M4::"QZIa4iAIS`h44bT]^%'<>LG]ltI543'(N71DhSPGtiNkWso<%<R]4-$@(A/c6dlOudFoII2>>W&3f,E(*7)iIBgHoF0NP`=Yg7b02Fu3.`"E,uo83-X7E+%,/,-.2+_eh*quE)35sRg?Dg[+>mHCABKMc2p$!I\Sl:.^AYhj@s'JPl:lC+>\%l3%34)WNM*4"0(J@ShDmp@:qu2`c%9`+(MQM4!%"fRLJX,,+^JB+M'8V*W=+]=KXNdt#45X62<lHQR.UdeWn+GT!2?;a=-UEZ0TUi7<O.57H;86.d^::Cf_h.p#es,']CDH2IfXkrdP%Bh>oie2ps.-?r7q0@46mecni,M+U0^E":_#f9(1A5'hDu<U9Tqpg!+,NP;u\Ae-FS"\/s3!5Kc/?J#s?2YM/gXSk]T^?GG&G^m]^%S'lnb/1jWn]lq0Re&E<)=/O=YWb;"nG)DqMCP7V@1`*(Lk0plEl+KEudEqBrK]^W1Hr[;'KIc+h)+H-cG0MA@h+t7'q4cBk'mn<V%Tj/0KLk8o2]\B889XE7%bF*.75F7K'ML&8dR<Lh7"i@ec6$1-Tf/m])'g6I&.?64\,]G26R$Vs[2iq6hT<b2LCM0appNqmG9+(Eh%s&?@--HRXK#-h\)'=m?g%;H]OU?N.:7>f52D?<iAY#9%S#rf.4FtJLb.G];fk`3QrG1")BZkn\75\%+P@&)92+ZT,%6+]HPglqt@%;T12L&lQ(A`/Jspbo%^kR+`irAingTd5[if[2L_YJjk]j..\?iGXgR3EiNqZ@D;]0=<`l"\j=;89jlc^X3epMg4VPgiJBL/Bofh2%0q7!1P-V(k0fXs`/#[FQ2kB8Z'A&)C?9KhtlCuF?`X\N3.2=+_ch\j6<T-=0QdeieXnB-OOMT4)QeMC-f>sRL?hKU@2T]`!Lu\@m%3iE3`%#8]]Vd,6tHcR54ok`A)[TBTPNJ>P%Ffs3p9KQNO`d&"/cc0:tqc[p)6)VJD=2XaGfP&nXOF_^+T>Ek1&"JB`&Hu-X>1"Lc%IC[#BWl\[:!?!7>TMkcr(d>48,%ek^WM(a>PtT)maI$6?lT#=]:6jfb>rU-5Fc'd&5?KLqS=cnJr1'7I+7!B*Fjk"AVpR9Nc[`MB%;\gkj2>&_q$rSe<oU[G4E!8R+.DS%pAZ=Z]-sV[p:?[e]0P&%kGZ2^D][N#Qk;HR`@HUWb]-cHW-YBG:j-njVpKkM"d8[I#r:=Z'%=13u?4@qIDU)3?/4FAH?JW(]gWo<hgn`o3-INeX4iBi-I0'-9MiPDWmV^Y[P!Y=EC+L\k$AI!.)7,[&#@]Ldo.n>`@"-k]7hsJ"5%4/HE$<Um%4iOlU6&7<Bbj1fcm#b!_I$WQ?`gLpr+^X8`?\a;R'W%5?XI@gjP%j?ua<+P`KK*k.2MACATWJCU5hA,)e3r>oo\"84M%CDt2MG2Sm*5'NM:2lE)bHVIddfd^/,7ZOOLXfNu?'a9jf7TeuE]LmP$(D2n5j:/:Y,>fZY4=^I"HMCTtB:UAU@V46BWEr5D(6.or%/sXS%,g''h>m>269MRifXWFS?Z9</8Y>T5E4#P\20Qa:+L`5-4gs=6sGZ3tAG3)mZhD&8FK%`AI+UREl^iHhcV$!"+a@ruNK:mD6%,T$CD>)"ak4/abqF''2>?HWl0l^//:qc$!2>TN/`^RdMn'$`a1XV5=[XpA+*)R:&N>AHD@"LeFoZA2<naBL&Rb0Y@8"7L!&i]ZR/%oSMU=<]\bj1+*uL48t/BhMZ`aW*6C]n.b#`::F,8Gql*mVqn:bk8'UWRo2ss8D;^Elb3)PfQm1g"4VVD>r9U,\(0N3hAF+eC28YI%TWjVtp#Jjg*)n#oW&-PTh(StMWUf=[=4<LQ\`^erW2:a-#eWRC!-.W-'YgYPY4nBZ#C#H59u`fh9r$;jWuHFm!39#,rnR(>,ZmTW%I+[:k+eVF\Z70VM?L9[S2=jZJ%q$^jP]h9q_'0#T^+gc[QAY:ZRK`!,RikYiap,Hn2IV%"RhQ6)a'$^"[]W^<l5GO+`A)71bp5pf%cI1H>1IkRS<N=3`D!sss*/JL9TiQ*@X7!h9<E$N\lOcC:\qhjU`oN:>6<k^W=p*WjgOPObRQ"\JU%7d+j@2MR*pBl4,Z$mZh/Xhr%3m=Xh^f3'jGJ`#?]\eupEWnu.*()o(XeA,/k>:O=[$1E7\\T+K_UqmMXoBb+:8L][dX_NaS8[)*;PFFY*O1Kd79FA+eX\+l]dKZ(%+UWe9Y]1nX3+-Z8m7@WM"RSfqjklD3V"/E,dHG(%;=9+pYp`nZ4Z(U9>iD[3WAdZmb*>Q:3&r*br@E,`lBZ5oO6SeTe0F[_dS%>X%DMe$UQ\^^MPbI5"WS=I(MJOu8juba[_K5;:Q?!Q1TWW,V1C;pA)0uJ6fKo/0N\3`G)Xa6FMj"FnE4P1)R'TCKL829m-VOe;VsLjd%`,Losk"Q$/UQl*;pip`:&IqW3k5=7$Z1aH%.Q?X]`U"ug211YEVF!dj![mu540Kr)0aA4MBeYO[$mg@:N'>ljc:o(.a-7Rc/\1ER%bp93`&?O&Bh:)_]0&r^.["_a^<Z:n`ZIh5Qs%"1!QjrSb!02k'N\"n-l1V7dN\GF40f*n&`k:X]K.^Gq[8;p*]ZilCffNd_-`>.a%Z+XdW;<LWP!3Ob!4;(&aE\&'!f!]`Y"%bh$^7s.><J'So7[pZUZ"8a@UTl98eNaiZ,uY#Sa^KC1<pZ.ba2tI?3Eh.9_GHd4jOn]n%!n!h^fjV\T<6JS_#[=L_]s^m2c=lu%6eCG_5q-rjpKA:cVJN(!;V!OUmC'_t;0i8b(5<,)pKjZ"l8OB)c;<)=2uNPAC5':Z017M!%'fI"KW:R7G7E*EG+TPcn,EIVr-9r^4V\Ri+\K>]JTFlu*#uMQ_UTP>NcfgCT\tu1`0Qa0ND1PP+m`>`&71.Z:#+?BHLjr7H3ZnV`%:rHYK?[4rTgM>niaM7eNo[X)K$'%>SXr6'I]A\5)(#:q`-T9s6SU0&2p!IC*FRG&T/1F49h=9'mGT=[D(usPZO:L9s47m?gX'6?G%UXci%#t,:p\ii4IlN3<ge5`&!J!aV_+]1_ED$p.4Q:Gc9U)5YW;/a(I5u=rh9)2(/UXNbL1I,VMBh!u:GOc)nA];*@6sc5(<_FRa%bc]bA\&ZQc>'mA`(Th9bE8])19uTlPlFrtWIV.l6l^9A;p\%LAS:h^sIH7h3k3ePdY;YOp`9ZN5G4$WAg$\2`?WNe';u;9Jjlh*#%0#kN0r5EQFT3:!af\&CH[T3q-kE!&5rCXAWB9#k%RcA!.WgimRHX<R]\(;\]MqdR@mI#/lJ6<1I[au"e3a/BY?KQP-lu7<BPD\&i%`b$M5O3^$$FEL^!Jc:hC6=_s!]@4t%I)p99Z/p(+54#0@MS5@Q9n&sHaDnOfR@fK7X&('CU\;lk^h/cs/U;VbGFpL!j-T2)Rd7(>%Cp1Sh*k#.^n`E_e3RTQKGH/&I";@j*""#<qHal[[)V^8;eQV+3Q[MH^dM?m$R*/Ln_mf%+XnaIN%Lfn;I=-L.iO?A,gg5,A.MGJR%S4sf01G*/Hf4)-0M?lGA99jlNE>Hg5E)198km0A[PW<(LZ*^'m^F3Whro3)%rliPhV'<XJhs*l1g>Rt<1JP!-a\I9Xa(kQm^RAk)%[cV(jV>G`<YW2B3`kSak[f=4!,5g0V_fiUkR;X]p*3H=gS+dlpA9+MNA(.!k*kh3W9'[$=\c(qBO=`IG-*LFN\m!F_LbQU9d7,t$%/7faAe#%`5c!b-E]=0tFQ!Y:>?'ptl4+:ctR?\k\eh=(JX%[g$!JB3E70'#UIW5QdaW5lMT=#6$2D_NEHq[h7QdnH\I[E.<Xbc:a%KrLp'%dJa<+!*-N>U:)Xb0t\WrdALeYcdu6I[*,oWb7[i587ML%C6:4pR5:>grqE-\ZP$((!b@LqHERTnKXVsID>jO,a2&OJP)>Y%I/jet!9iXd3N=?E\1BA"aZX'1K1aqYpfm`1-!e[l>ftSt%c6cN3'Wnkb84gW]=FiaFQoXM9:sL1Nm]5.L"T6L+)Y\`:%^DorF;n3%P=SiaQ=]pfC&gmaigj@l_J\F>XdH;$H3.2g@;0dpm7Nci"?@1<5LE,j)=DgcYheQV>]?`6='Kp(;Mf^TLWNb*?HU@+URdWM`6EDU%kbLm'!YpTo/T(-TKj98U;#?)Lpp!3:'f_\1=l*I8oqp37rEau8PdZu:d9W7:lcp1o.tJ[eMq?F$3q^f&W=YV904\Gbo@nY\>$oKF%S^&u:SSkOn"&[.5'B=$ZrNoA\e[?Or;*^Xt&C9bB9Ss2G.he@$^,6GL-]a[j6FO=pU?I5M[?.LKDm8_QR"Lr'KAX0o@.V(LNSDZp%BkG7@L/8"B+e@\;?6^))Fgd;U$qo,OYN3OIg?Vbs\)lIAHb(a695E=fN?W.b?+H9'GO%ASQEe&#Amo:if>),q>+KF1-_E&bj`Rr;%Z%'BhFo$IrEf>^UOi,//hG^hM0)jMLXjf;("U./.I[<isNo]BjbL2taaJ[=d6]q$f.Y"XcURbbXO.!j)^Np?1hA>aJf=*cB"3_ks%;%_#nGOpS4*]N61kDf20\_`aa$fZ)r9:imL`mY/O`E"Br'&hR=VsRB&mNd/S<h_/q@rX,&9@#h+FMN0qn?anBK$aRdgQI)`&nTg!%FnX5W=,Wq1[9`t^\g-C)99fsZin5&#p@[e#jp'/kYNb';Ft6e#T2cJ<;lE;;GAsc*/$.nI$hu6hja",-<%f8/7l$'P.ZWZVcJ[#Z%C9,(iD-rT1P,Go^kB-Oi,0eD-c/tFJfuGYWP<I\j^MUh#V`-$']XgNb8$cEGfk)XAD55V!Aa%GK&rKiI&HBig&",6GFT],(434/%%MukKB*\/KLZ.qA2FPG*9.dJ4@;0>j"e%<bq9#h,UV&.XR'u[OEpeAH@)QnZ]F,Ga+`rNULS?t$cKVj>T)AJo@$'hW$?q)ddKUkME%aA/;c5?3RaLd`gKELSiX'r/$FOA`':#,b;&ot5IFPG!`rWV<]9_SqnT:!]dbSd=(-KHdj]:td%$)6bh6Qqg\&Cga?'5;=S"k8e%@%TnmhD2k?8)kEIA^`kUb?.@hB,.Vm7J@1Xst<;BA2b#g.e265Zp8urI*;p76?3Aq;9;<8H=U=qRa'[]L^@7*tkaf6)oQ?>#eUFlI[%lVsDkKC;Ja`\OTa`i@"C&LGj8XKn^an5L2Fas'i).:>2GYb\'QNPT\L@$8Fo,<G+o2k:'o7SRO?@*9*WLdJ@h]`UC:F$<#GSD`9=%o';Yiq9+!l"SbbneU'WoPs2B7++RL>d'bB^FQr@h<S425f2-!*ZL\2U8ORifD:1Y,X;@ISV8_gZl?$biIsJ`.WNt0Xadb%f"a2Q@%>RsjjEXWZR"]XuSaYfgsE**T*r&g?q$[8c1<-%C"Y`NI(BD8YQ?q"`83s_NN9&?J/q:K_Ib8kE4ETUR_:K%&%<P1j=H[F$8dc!gJ%qR'2Q(*[V?WAn6=S1g^k]t;]sqBVOj75g*>>r=3e!=olI@9-&r`^Y!NEcI[GhX@*"p,e0sS,f>u]+98QK<$f4PLYe$6sb)K-W3Gl%r=8W3W9sJlmQ8A#I0X]:!Eg5-msop7P8=bX6*>C^/[!T!n%`bb^L\.,Rq8Jc]U^3I=""b;4%%!p7AqXVp3$5-OSa=rPcauH=4V-2%a>;JXM_rdko1(Q]?Brpr@YT<,R^'iOK)l<[Z3oq[Go$=P*Y6oI4i\>HPRc!kbo^>lS]k_RQ>WuYp!&IrFfqffZM5WIYjCBR_\!)5%AtFY(>tf_2Pat+VK0s4pX,GF`&3$LrDGs^$"p:C`2ScXQm!l)/D]5SD.NN%#U$>P7a4$oIgUTo,^`C`W'XP[tftj7S/_o*N'P39c%[;LJaj_>T)4!:F/3G+tR=#^b<W^m@#MVrecT6k_@X(:2Z@<&0+DtST6&YYUjB7G>TG3(?AX;pY@c;(hLQ^d-BlJVDT,3cGoiaj:B%:t7`HMd;pLP-=iT.<Tl3DAtdF4m'Q8^;@Nn?gagmQSs&ZT!XdU&;M-^+(S]=QGBjlXVj75MBXX5R9+!1b4qV7!iXXaZU#`\Ef?rF%CIC8"j)aF2e3,=Jd]o3_g[VVHX\81Yl_'Kt?9>Zb#5@Y!apS"k?/2FYKR)870\[CB!hKKV!uoWO,G?Db_]M.(D7t&gG`mb:&?=+#%UBhu7h>C3@/oRq!bf<FD1+(D9?E<`pJ#5jTiXL"6g7SfIgFS:q2l95\HN59)&K1h`k-e`4]k0jr?8F9%mUaWT7;r1%(d:*L.s"V9%Q[;F/6/;>G/%Mm'g/old'"?*5k0:g'+@H8ahZWZ"`4_SVV\`$&R$UNr^RpFV=(C!ca$3pR'ij7k$a$KK)MH'GCVS!agrf<D[RSSg%C#qd0r.4(b<<p!sgJB3[eOBV>Gp_!&f`Wm=0g(K,bXnG?"]Ct:o1P!hc(qV'Fbc7q5<JJ&g0VI=X0:&sbKnqDf**rY7:Id]]2/u+%Yf:!V^>X8jCm49fCJn%!dsDgs^Y?/de35n2jodniaN^A5-?i9IRPq`Q?8`9dT]igro1r?O+]g2UC8"1I=[),K'AMc`I-%`??o+/!%aQ.F''a1NjSa<L!?`$JOgP?;mf\k]>UYD?,cqg:*Y<8o;+&b%anZ,*G(R'->W2#=e=>>Sh@%c:^'V<l^<pZA4Rr;#gjQEN0\#kNu%HpDc':T)A&k;^/%\ZD+5'SAPLRXL)/U9_"2qa?b]pD=!cY$]S<O(4SIPH)HFH+i;u=&3_Bf@g9hLmhKXbmW#pVU"6kf1NQqC:.5o%)m"'!b>H.DHm($1YN\q[Ube"[9T!;Fhs/ss-YElN@3u::Y_qrL`(&kb%[\SePWga;^C@?*R;TIIER`fN/OW!UMne,j*bR.8FR,#i%oh0>=?Fe8H<R+Arg_J9WR/"^i.8V)8=WtAkFXZV5(OE(nXA34E(>8f(FtfDgjdp*+\E%BdScs26^1`&6<Z_BDP@V&ama`1d,>Vuq%YNO(Z[r&2-Xc+f2R[YlESn@,BJD\e'rpaX)Jn'mpo\A]mbF-=_.'e0+`87=`V7A%u@bKJa_&fUR.Wnl6.RI87oA4&0m*6<Nkm&mS%\+d$kNocR"#sDn!N)k0tk=b'8E;hD-5;Gqu1./TQ6&IoqY0oY<[9V/)1[r7RQWpZJl^R8ld$9S+2<Os+b.Q$op+tLKoYp7<4Z?/i%WG:QuTL@i7W0c,L@rO['ZC11VD&I'*I2(uMF;+!L\-TQq!Fh<h9cY#cDGGQCK,_C:l?)(E\=0HVKk9kI"cOu>;Z>bMfoWt+&=.gY%,YX`.mp7CDGNi6/RB$YkNEgb6*YAm3FOgia7V`ot6Z),mAfkmOXWD+VmW/U<lRRjl`gdcRKfiY!(08oIe(TI]77$L2<qqY@H8EH/%g54UVfSBsWT>p*sd,s:,ajPG%?uJ(6daH9'lc]7US&.)6H\+7rPm^NKb;?`5(T<>/!9^RNJ.8tc-EuiGF?sn!PGR?8[Wf,"Z0o?*%6s(s-pR5gTjo0M%O?5TT(*[T*KZfYQ]Zk&+3J/,J1C/Fc$nT&HQVJ</Z>'*C]=f8D00&ZW.a@@R@.?BZb-Q^_2Y3C"U7$peZs.uE%JqUQGMs;qPiY_a9NSV,<;EW/W$al-B#^Us7MHo:r[/=sMB_It/3#+)nc/\D#pj2H.%dsIl\RKSgET_cuZLa00p%$fq<ULkC*an]N%B<`n;pF)/pb\nTbi[6DFVH(7M0?]'gKk2=L+>*_u`-)6$2QfV<j\jodj7b4NR$pAR>>/IBH.m5q#M,8FD7?RR6M+YU0MaH1X(V/_%kX-S#/@TDP\&e'fc^Ep;lDMa%g>6\]Bj>B9(Ym1K].PG^c;%-``Vp#sW)++tgg7>D"gsV0_?_*.iQ"e`E45gB<nGZK@Rntd)<^88%Cl4H"Y>k((GrOkaY;CIrO;EE59kTnfF!_'mXYH%4Z#tF'1L2s,gY77Hphg(1Uekf%0T!E"Dd[VS*GZQ2MpJ#dq<Pn&^Fa$,IKhnT%n?bnR3NgehVEfaQo8Uu?T;UGS^$8`R[i^SFco1*ZZ>YtFLeV\(ja2&q;d.NEIB^]rNRpNF$W],p4#9mDmZu=7Mbfuh.o"_KNq`E6%C@?%Qh8TsT/mt>O8up!njaQ1/,L]%rN7Bl9Dp:ph6cte75N6a<%MA"!%[=kR1fp/^cg\W#hF?J'&RVg8;L_r#L=tcC-<D:UMJ,4f%aZ_BE6Al#"J.pDer4FT-<sL8?e5!K.NX^M)[jPL#G8IE[EsMRQD`MP1ES?d6D"I\b5Xj;Y+?o3ppsnrW*,03<<WM;tGIR(kH\`EF%kG=>a1QKM7U.?-G0fT?e]H)>j6%@'>41D3;ID/rY?fdjmF*3uEdKPsaZZIe$a=27(noucR&\J:8ICWR3/#5tMgT*j#^2+5fo)'FY%SEDA)nMRdX?`>=&ft<QaXmP6Cn0G/7"HG,NODY][WE=Nd`BnaPfYS=a]hOfAm&h%CrA<As49LLO5*d_+dRTrp9+.0>[Ioo%T\(AN%K7GKG93($1L*@(,TP)`A`'Rl9jB-O^pM?"YlM&_c8nF92([6#:n-?`([d\$TR1YE7oBV2-jbF9>q`N=aK!UhHTR6.n5dASC`Vj';%=uln+gYCVqH#!Ap1/_a,(Wu'-UW*U!5_-l^1OSA%G7.*:/J-;7D](Y_/NV%E7=/]2Xn*@,eJ7#lMrd9YNe6/9G.sL$T;kb#%$\nO%R_O6NV6NW@6k5E]2V<=e=C[&qgZMV?-9j'?d#hi9=r$^u'T*BeG5Cb&A,>,,+_Ak]3W_"-YOn_7;^]1n8RRnZf*Y<sQ`E#LF?$,0%CfB(h3'X^p084\Yl^b<i=U3=9GLH%dG6OQ*36=>5De@5*eV4'+h%q`*%/_\poGQ;r7tpc087B!,]1(X#?-UB1qb&^OF3fj&Cq`eR%Y+eht=3Qt6g74a%'E<aP[<5-<q]WM`p)*+n9A/A>Gb%k(YZG:C>#%]o@rMbh2O[t,?@03',[5UA3qr.A^js1,Ci$:g^d)4r<e:;9%l[Z4Y'[7HVFq39HEMWBZS8cUAqt4U9'YCnenl)g;b"Jcbc3hm!*>n)p\r\C/BBrK?o>!"PMj:ak2&g=>oq%Pn0%/Yk1oJ1F^F8QD%aD$<>s)1i^Ch(gL7c>#.&@EJ&iO`N8R;57]QZU_qo]kguPdXnSPY;G<BtsaO7E5Y5CoM8gZ)-:6T\jiIE8t0GPUl)uj[K0^>Luf=%NDmg=3Brad0.XrGhnESAZ#Kd#-P+HNo:k)fD01-pMK(j#ms%#pXU"mD`bQUZX`#28pAg,PpGud<FCgd0D)Xod-B8_ONN6^ilI33<%IcG)-j**O$C9ET:DqkulPYc"rD8OkB1j#tLd'h=]V3fqP#G=4!OS2X=g/GhlV/4dFSY<IC2IYn\S@&ClX'P04(J+?R)-^D8jX<$5%Pt$NP6d^#<gq,%1?BpLS:U5>nTJBc@KH#H[#'iorI_&CN.^ckM$V\5O7i;S*2C%MC&S.rf;E9'WOXj>=)p\Epbr>X62>4aZ_FtsH%Qq5Tca=mn(!3#ucH:rb2EqSO$K6Q?I5KMF?O!fA,$QWooYZ:gGNg\B4[P[D[-(Gnu(1r0&YXLU8?q1Hb3CLMI#?n%,'su7K2c?Co%s7U"GL7!DQ@>$2jjAQ(+T,M*2P,1M"aE&UjU\f(ZksLs(j+de"";XZREn[e>.!PI])B%Tqct491N?-$5Cj=!YlHBN<KSO_X`a7sg%N#oqq?'MTPBLj*2,?nNp73Ig2F3uiWg:%Vg1GY:VB'Lpa-@R5,[P#`ReB63:Ch`43a.hH.DZ+C:eN]Sg^Yo]=lrL*Pajl'8fA2kd%%1t_<Rn`i3Za=_t^J$5`],O\RQ21#JA85iMFa\#`pf<bcI]:5_+1:mn;Lc)6[=!(eRu1'5%(3B\'?/d[+1?..Fd_Y0$nh8]^=eQA%2NqTKr%6g=`M_nh&M`;r[JM4\6]k,VF/,73DBJ=c*sg]IeF*05]HH*PQher*/X<q"glr-bl&?%`Qqk)gPnWB`m>NjNron]ogAR.9%@=Co;T$Y[P0:1gPE6IG.[gY+*:Lf:D?8mSofq5\RFJg2BF3OREFO!o5^=#aC0O$?FO7;=-K<!5Qj>;0(Fuu8&mUbRqOZK.9\=u:k%S3a!&:$k?Og$Q+Z'H5CO1mAZ+b+4=Sic^hT9_F`1GGaL2ZJeP=q7P@#lgtc;p@.]P1qL):](%$8[b.Gs4+61.:Ye(fSS=<iDN.Cg%jP/mAIHmssF*Vilh!*M3r8qbfDVqGBV6pZ>ma>h/,nsLPh;XHbETM)@W<0JPjOi^=Tut\.cPMV43i*1[X.7Qdb_s#9IO9)=9W-]-%rB]hpgg2sa\eEhih^caNSN;IM\c4,LC:C,4o<qe5f6WE+mM(st3H(J=S'D,BIuHEo(nB(M*Og$Q?%Pg33><?58rr9Af1m!=PNeZC%Vdeh//op4+Bda%"$PgB5ca1,cH`,]l"7+P&/goQ4aNg?Z:Ii%gaghoL'^r2l]C#6?d#j%Gf%ksWVb?>kkAH[X1G`tJgS@cG8A]=)%G?!O/rR?tFdtOY1iJqtl:7Y8d\\@Odl.j[C["CFL70[_mDBru[D!';o<faG_aQpu[&NWXpD4Pk5GFgY^hSc-XVkFCa2Y$KE4BHLH%hnKpXS_e6^LO0)\3aE`@FSGG[a^qn?VbX5/Akg.5,&(cU(3c3.b!23J3dmf!)CIu::(QK*&)qT>A*XhT_;,lffVB1`\C8>9mXTBC%oT#\=Hc6/T:A_`aiQb^a'QM(aP3US'4"X%E.kbe2mST=3o:*0`TbjQ[6XfsL3d&*sf]cE&EmD)AX)rH#`i[]NFh>9eP2@//j#uYi%<+RfLf]bbKqT-(nf@@n=^9(>`Mph"k(A7Hik+"Lr=dj4]Jp;M+oET^`FmX;Ik&GAECLdZTf;GK,S\jVAl?$`jBhk&_V<QKU"Zfq;%Zcf..h7?QII2*N;VlJUoh7c#uRiU95B`%"rKtn(o9<3(dO#gPfjODUMjJ76H%\7K]m?m$sgD"V'dVWo<aX.?>eEiC91sA=*Fl+Yi%cDZ-iU4>:a%gp1pe@ZJihE[um540,lQlueq<ao-&Vd&dZbgu$#BtpI"#BoFmnBfr>dq_Z4fj4i)8e#0Sakhds5Hf.oMpUkjPb#U\%:4>d`Wi&SGf-s2AX1<^k.sj#2l[TaTg>%c/Y,t"^c?3C,;Yg"NZM(]Y)O)q2gUh[`pWER<Is>:Go(ZDe;/uV^1t?j%BA_r82]Hu@%HI@<Al2J)8.1!rF!K'anQ[HfdFm3-pEW+VU/MihngUV<cad3gc2spLUS^FCZkA9&Sldb@dXN+EA5&*p<iVW%9cMd'Giblm:lbdN1%`:uAaZ,\8:mG@^0q,)22$Hdd<e*3o*0q,_5M=.K)ijB0gY8MoOgqOnKZEa_Sk``L+2:o%4F)C`pp$:,_;Dt4sIHh5;ChiZWo2YZo%[`cB6L<;BU?e[IL%#LBnh$KWN]qipH_Km0^dnraQ52piWrU%Z)QL5d[DNo1FF>gJ2J!HLcp5?J`V.(kgS!rZ\D`alO/%tapiVL8b%27tjJ0JdW\0p;]%ZVo[/0>KD>k<Yh\SQfW3B:>7G3/oAq(\2W@Qu:3Ro)O-PM+&rcF)K4qfZI'k2%O$_FW[Rp[(L/>:7Zu)?_q$i%`I<h?Vu04:JioS/UK^Bh2tsJGJn`tOh)e&SNb'M@]1&=:Ze"A9_qaMQe:P50XuL2DmqIA.F]t?*RkZr-cN;f"HFKuPe&2X"rYs.R%EXNEGSPC!>\A]MqG)NJPQVP@="RH)C9;a^EY+5VHdlXnK/$@P$GNff8"0a4B[nb8/:)0hU6K$mV9D;2D9jq="Zfp_\r``&RQPMM\%m'H.YPKcu.&?-b0X(h$KWjK^aQ6@nX&;a?>$q@D^0m/GZbbhUcSRprmW'*NaefO>7>gDC))#THc,9'k2lL$](-$JtjQ(8lL"@Ps8%/7mo1YqcOY/Vi<iH/,`#0L>FLVsrkS"P`kQ7BH[2#Za#@NTYDdX]6ffRq#5:oVh^V,\$](Ce(NPeRHNpbV:EB%KkO9;^tr0H?dN!%Pntkc5sJt'l7=tbjoC%G*%fI]n*1$dN+`_?nn(([r`D@ISH`XC;PED:U`"LSJmLo2mSoZ_NObu44#%=q/"/]l-G'%@]ZqC$[1,@I%0*jpgG4"57^sEr`oYYVHk,4d4&'_h""qc>kR=,tYr/gFeB`?KeM:2l2dSK*_#dN/$"3R/%^0^U9,?jFhSU]kk370l'$+dFniWPc]%UUu@l<m!XL7`.5c/K<;BndraFM4XYDk+YlJj:0M3n\1$5^tH5#mT9an&(j362#F3@3Q3BcUg5$edsItCp<c"qk<ZNu/aKcbg^h2*%q3Ye9qO%Fu_<o=/8j(B"[Fhi"C'.`*KA+oAfoZMS$4e`4@3.0.@[36<bAEfj]Wg*MQr@YT@Bo"aF"nV#B$!i-&9?sXlWe'ib;u7_%5L*:-1:YCIo2L^@^'ROO)d*S$Xi)inH9)^>Qd*OtMMA\Te8Y\Y\J=gD<5&\h'QF@ij#_7,B?A;?"hVp$j1:>Uas]&oDn]GTc`AbZ%+0#af4!U&&TrqoCkgQp=KLV142+>7beja(5#3tf3^Md%Kmp]j9A7]r#EP[O]7uSs].kgJAL1,]P'_@\)`DX':ac;u.Ae@1`Sa7bP%TR(a9?Hi<u3#`"3Z05pW>-uptWopLO#j)q)L;?+JS^\;Eia=ur>#.5'3B]p77C1]JpVe*W,u)#9b&)P`6pj9FSZAnU3S+FbO7L*X%kAATAgAIi5Y<ld@q6TKk.E&fVNGL=S.L$FW?Jc90`Htj`5es<q;N)Y;`L'M#N-uee<4/e[[,jToom)n(cAQsdY9ZMF*Aa,LWh\Wo%12,M)=Dqu4fYD[mb3*'2-iP0iltsuOFHl<EXQ(5B>k]H2Tai!cS8C+.p6[d]-qSft+ES@D?#b/\iFJ[6=<'G6?2+oK@3@amCE&(n%D$`S7fp4u7`5JY?*hSL3-r0M[*)tE?%UB`!'kCOK.t,OuR#q_q/"5c(Mr/)?UOD>ipINo1@`(0[21R_PpKX8)B@g<s&/tWNQ\Y!u%X,_DpLY[aH.KFR?T25N<Xl,t?SHOJ$%J.r)cA`#mG3cGUUs.#oL^k\[n^Y_S<U4,;n)7!S+n7@\L;Fd*[J@;t!:^I6T,cF2cNl%9%T#L3;iWp;eLlb_,/FL.fJAEi7@U&JRf>ch:XO-D44)$n+,oe(BmTWhALfa^?],I5_*DIpp`2VCuLLcqX!<XKJ-ct9$[p&:=TuKM1%e1=kh(>s-MLg;TZL,X3ZCs/C+mos)?Tb%jn=ITK[*2W7cqs<@f?%TR^.,mU]g1p8G+9pgGY<b&T:raeij!4s_OTqj8]eX7n[gs%h%bf7#.#;2l1]61A8j23PLMlM3`Yp\Y6"t^G+Xjsb'K".qH,s7";lMLCRI=QG_krO%>a=rha9nJY^3^5=jSkcPa&@/?!2ZXJI\48Me%R\m1@BYt)U+:B9K&.lk=Q9?']FD`USL;]BHRoS&2)eVd2-eF'.q$m_iV'/on.;ju_!'"oM8#kqfW7<L,^C\=f&[78O]4LPUEQCi]%gT7)SScDC/'om^?cjD'5+biA*JPK%KZTSYcGOJL=."chAcP[%^q,CbTp`6=H`HpDd/<7/aUGdH4Q,UEs`tkU?\@BJj&27iUl3=Aq%T@0I+,.-h/\WX8NE[%?t]U0.):Pj6D%n\Z,F-()3)@KqE+Ps?kid"0Ra5-%I^nHYE,oV:pm"Zea@YdFH_2$L=G?[\k([mK"#4KIB%NBj3]."`/WBoVr*#qXJG9?@D$r=TQ*d3P/%[kr$:S/M2`cF/7G_Rr!EA`HUJNB:>nD)86j=BHIukcZWG2IHj;>j^=Rhr@1AV[-Zs%I3^'%joPTqh_'')htIqn#T-2aB!g$q:@+Lc^NXmL#atKd[4XoL`u<AEKG#J^'CZ9\;]H"Z+`aQ18)o!daL&kNAWkf!"Ueim=jN/^%[Gh)=TJhJ/^g=FTa+ra.b'Q:c/;TGS^5p<)Xpt>*;hW6"Tf?=!Q@02?Ed]ePq]9@o5o0aW@L/!\I8?l^!7![mHSZ@1(OD[,,Cj:3%n(i)ZgFePT%Bg&ETslY]md^6XLcK.dCXV66Y.DuaPb'oWg<b3WMng+<7Y/-Vb>+dWA7f9h%-\P4a?le9GDjo-m8/Id])gOl!COHi%[Q1>f^g>ilkX!/\[>i">'FWu,5';Zt?N$+WA'>666eio.*T1HLp+'QJ*[[r&WG,F,jfV<0iEj[_d=ck/9Bd:L<38@=feqY9.<dq,%J:l(B`0=LCbKU;ggB+V<G&JA@[7)/WN[@(jmLmL&[@'Fr\=>lRF1FVZp_EsQ0eq%#!m2_lCKV7pgD..?\ZQ3c*laP['ZO/+!_pUA%db1t2ABQ97GI:uL[W#@X7CH9DRDXF8ET?:H3HX*qFLKpCL<cLacCe*ZGi,,\kFFnoo.*=m6g("+B?_235)7EFK.[iU9b*_<#2MPQ%i/fs@hALDX/OtskkFFmtQn::&%\7eJS`LR%4*'Pt1[(o%M<]"HjO!_j=2$nSc?:=U:g\!Ni"si]D1B%HCtH41@,8bECdYLC1#G92%6cs`<'?sXtHa<$ZMI?$tXui)iYRZe%Ilb.8[Q1t.[n`J0Kd3<jdJKH%SPCeai[D.WWos\K(;X\*P44>\lQ4r1es"uO/-S9<S.VsK%3E#d>Qr7fEEYX,g[NRXOm^)>?&/3kIEokCr6'CBcb\"oW3cNdg@.2d4A:d;L*qM;;lB#:EH78V:2FY29(\.kO")9atWC/qKKd)'X%K=E5>q/#ta#a=*B,/sbJ?BjgMmSMHYEnf(*-RXlML4crSij=kimK[V8HlD;_X@:Zk[29Kb_9XJV&e>/8e*@Pg+`i##O@W;D6bZ-h%A`h7\80SD2):es&bMut18`7h(M8ksXpUX%I9m&p8:&n>HG):(]((?K6k$WACcE;(,TCqK$+[mp,itHh2?dR5\&u;C-:HI4T^^!C_%6pmD_*Ki."[eY!hj0M3/]rku:R6MD%oZVS.k0N=QG>=*+>6Y)iI1(W7.&Z[Y#ak?<#XQIaFNVZQk*[q;P[Y\<+i,U>PA%doZito*%RrA'qY9eNBF8Zs"E-16ChPM_JgGrcb@!3=tIbAa"!"Sm8]e.::7*HcKYA*pP7lk:che'"&U-h"h]ACi)[[Z1i6J]'<@Cj)ID?'l:%&U;O,CKd*$Jdn:pFcXjcSTI$c`2tAG1P_Y,2h0]Y-O5bAkHW3?bEDHuDf0n7cb$uX^3mXcBLb,MFoL16<hsAgQ.:n:ch-b61Q7Uc%PCDSV*bUa!!sYQMqckuHY0VaR@h68/SNT[?=<NX],N*h4rei:tH;!kuTp(U!(5`5&mgPO#(Q&>6<3V1;4sWds<uk85LlBB9m!#JB%K2+fH)&FsJ)NeH@L"@&T6tSY[6q4q2g+hc+qRp<qk.\sD(a;,`49tMp**MW[+?a@\Q(B'128cV6m_:h-K@8*d!tW69;q`<K,%Jee%7;6H(NQC&E4DR@)m>a7m_B]1/kCb$sLL'VedrPR:k9+#1:ODdte?+XbcY4:1@i9*nRJ5ki*fut(0V,apo30iQn%L_Sf>t"*dJ'Q4%\K0A@&OjPO\p?8'FECr1I@<qAUH'\c%.'6\2fNH]dCShlWsa5sIF(VRKHWr2nNDe]BTj]Fab7^cUCR1"7K<8]aS*bIoAP)blPi\b%S?eJlc\NN_5$[S72G?<)dg9$=aYqk#\G)Li--qA<b"*OY4rj.g7Ze#FSI]@uQ>XLpRh)FSW^3#P0jHo4b8L'ekJIaTik@qZL<,/A%c`AMJf#\EW=$1<5fK7AHg2'EHHo@u\OV``kr>sh1PY(7dY;<j7L6dQN-YuW+91JB_ecNbZcG0dL_g+b4^#m'P3.tL]^3>_!j>mY^%g2>@HIcC1#4ii@SAn=<,;ZpWI)!"ACl]'@ArFcm8P;+K8bGa(_dckFc:hq&uHUp*LP/df2I/3_WLnNCfE#A%DJJ0:@dOgXj_0PKL%(Dr$Z*/;\E=+Ihu]=Qfdi=VEJGIS8&V0F$WR*rE)LKu]6n)$TtO\/FH>bXQVO\/F(rPj%lUsd^3W>"Q^OXa+!"A(Q/k/,Z)1/b;F%P`^8LU5[U&O^t7o3F)`(o(WL]f;oWt]*?u0@):f`d6KUFN=?o2JO[1P(Z#LXoX+"!;rJEqG$VK-W)DT/\-mV=<&jjT8k39a8qk0&%97QF/SZ-RgIc\XLiLHVLUJHSBFJ[MEoM:/c1CT79KH5-7KA?foCgs"UiLOigp;djcnj543Gl_:tH?]L&YG#_?7q0AHj%5uY,Q^Pr%[ekL@"EM1&fT_AEj/M[&.0h[Tdu(B$L^8#*e_jd+At7n%<bF[Cm?d'$:W6LM:K,H'O85bWRXL]`m0e43S9YnKFu-Q(o!=!uCelW_%iqlZt\aqBKJY(@*B(bDYZOL%8mAVn$XZe>IVb9N@B!/OP-um_[Wo0Ck[QZk;oit`ak)j)][*Ce+\TH!?bZqLoGAbN?[iQE1h<DdP%Y7/%sERD2C3I:_)imqhoRUKjT`l\uiS_B7_AmQ`M.,#?M2W&,93i;TZ4)X#s[8S4;L3nXq<=l*=QVR'tI-45dd4Oh21W-B=\TbWk%r8Z5hFRVFW.@PX(H]KiJe`l&*CT"s$h2BN,='VZ3+(?P>X@e)q4oS0HLkY24[HUj*o=e8sZ/9Bn6KDe9*qRu2^@`*llFPI5ks\06%pM$*GWbp]_#Hos8o\EkGE]S5&E0m$DJp#]j]$'nTq`h$_h;5CtSM-AN3;fOYfFAC1k/oipa(b\QT",cY96*eYYA#Y(6ncZ!3kQ[r%C_SKlIRMW]4:HNPD:-nqE]D\6rU/F]*g(M,4KViJ`$p=S^+ZJpiobDI)*QR5rRLuEOB-2pa?pW3i$]m#^T@7FUZ-6e=l2tQXhGBZ%e(I6Iim."Q_[L))3V`]EB/-u63i@LpjXnc?ACEPmS/lL=HtP@.dfC$W)9)>_dlHO<\_VBaHo<!jeG;>]F:Ou-pY?D?PYL>*9BU^m%EL:Q'VgTI0C-B^U3[_\qW[gT%9kPZ9/k2E*?Jh)DkEJX&Q8::D2P&f,S*qF<FZ,f>ll,m&W3YZXEp3dO'Af9SkEJVp--Sodl($lH%o?0\2l$P%Y&S9EOJTBT**BK\8$'bIZ_EkNm7Rf+>RkP,eL<HH8U"G1-l'ueYLi]YRZg""@@VFiUFABAg+l?oPK4`TCkDY?TS'EJW%bN-?s.%ANFf%CXHdlG[7DS_>aRuYk!HtP@.a3OPfZg"!ih")""(S_ZR.1p6J1csB:U69fcQK)!NE%g/"9s.e8^hujM&3-hL:O.<H%XH.KY`-ZW%#*5*n1#.+u0%PaFHZc-+RWfd8BeP<r:B$!%it<2V^[e)q66)om)3QTZSF3cY>F3naOYF*j1W=-+IMRI[O>I7GK-Fo?%^EFV<pOj1!/2F=Kd72IM&YZ!M^\pd10\H8o\Pjs>rQng]PMG\r4.g^dgrLT,R6-beZE+Sm%@Qj%Yjh/FPCku=kA`]=Gj+Q9BhHN(%GOLP?&j::P,!(JLhIl9KZZ'Xua+s*>IFpolq@;k3K-;#JlBuu1/7>%Q]605]8:It9glD8@#HgRIK:o[2EE45J,+[9T*pTgabdeG[%)LeS@3r9uUO:Tj'AAJ%PV&d&e3t-4e%,:\.bqQp@>CQB9imYQb;-)OG>O]Y$9[TR+5SpR2F?9B-3Ps6A!,PW4Th_)1VkLcP4N&V1%[il&5*uEe)gmc:9*".\nL-spDNdRWK+e7X;7q6lnEIm1n14k]q#ZR<b=qW15/e%$Yld?&W"U&4dq'I8:N0=mJ0Ji#I.k*(A;Oq<R%hT7K4P+IL=qGkc%?D)DjH[Cf)oXAmU];Kh^bS3ll4uiG1]!2;]H<QX$"iKc/q_;.2=,ZG>*Y4h;(r2Y\5Lk$6MToE8AH]IF?oS0#%)4XHG?oZGmCCQEIYaAb'^B*;[b2C0lKBF^\-=4.Jj1c/2U#-6%AGMMZIGrJCqaSLaJR>o+ef#(m_OY?%j7$kuJV%pC7fgX`T8<-9%]_CM$))(*^Zf1dg\9!lgKJ-Gk^Ml-MXl_&/l($[P$pQaq27g`[.r=?Mpgs6=g+.*FRe3`FqmZ=T:M%[rN/\sb(8*WUZN?`/;W%\<%?k1,p'fbYXX9C#DpVI*WDb&.8\Sjm:7r+?Q.YMM0:Rsd0KJNS;<[^;ML4IgFlU0t`8PE/:[MgI)2OttIl)A0bQ_?((_nc3+p(3qX%rmW(u;nL%$XVBecj&a)k?H*'APqI[S3`$HQg5G-ehLC[%a\/(81=nH>H]G0*U>qpU6hR:gdH.mp3+]T<Sjh!Gf?EogpRta=Nf?(Q%mQ%HD;]A)09r6]f"i,EeQ5P5_F5rMD3qQ'jUsD2MhVNchU`7EsO'5$<-urQ%K,ku94mY5$+]7VtPc-FHGd'Zt,X%CC=.EHCWg9Lt%95,IGG,j]u*BYXHQ0[%tWd$G_=7b@Wk`V&gKsCm6VkWU?^SO\,-o4#gceQdkb&+JZZb40k/^L$'RQYY+C>-AQMfXq6f1r;3L-K\C%1_`e.\neQd:MslkNujk[9I8IUh:_&JQm,W*1q]58^45U;Rc]_CQTEkb2g)-uV?+YTQK)0/_CZ3MnZoZQ[FfXq_K4'$"7eWS(+j.E%rHm1>9/u!F,-NM`A[bE'VbV5D4XMkjl@c4,7/FP\j4`bIr="277c%_3W@<JSMX0,hD,q6a`c1\I2_>3>?R;WeMKDcE1D1#4l'%)U%JpO!edqcl95>bJPJD$p,0!nrFg/Ou:qfHlHT^?PK)VD.Ae%)>m5A20_qMnY$g&[6C\S(r0Y?#^l`JjGS0AdRU[#H\LQcD7s.F?Hl%=%a@e2a6DG^m$[="EZ\I4FlR='%2t=o=f-%&8.gC4'La.!4LsTPnmajXY"n[7s_TKV7=&Ufd+AZP%+ZJM?bN?o8kLN5&<0d"X?&c%.Xl@uVkjd($g4k$2IUa7g_tDn"\4tN&7`FW[cbC6&VJ=5$>t.(rUcI!c+^TK>rtd=Zhg?WH'\tKI-bIUrLUNbp-rfr5"DohlhdEJ%F(ErL/]k9uLUr/iW[iWSUUm`CJ^R>.3Q,>sTB+R1TH(TpY$a=HmC6@p,[nXUli)]fjMGSJ=i></P]Gr9C+`U2T\so,^A2n3JtSZW%]5;9O!'tbJl.-#BS=_XM/`lt(0@:dPVSgIJB]\`?A:sW;]d*KseT`n-UM.U84L,WI>Pi;1NPHIA%a$!aI8U)/'*2bEoCn)?3En[-%<,-6>.$`7-;28O6fJC$]QE2_Y^FM`M&"pMK0,=]CNVE>+_'nH4b7f\@5!,)sOAmO[BIG4<b(sp+regj%h*,r&![Mo#0u"-f"\>'a%89Cne)[PF>p%8!@LWTZ,(/Gu0$W-<<-O8#p!di9F5ggXf:ujcBJ>>2UTm(&KP0t"ZjIrm[8TOn!5'!kY5S%APFna-B$W%kg+BAW+%o%@@NpcFQ-=]_n)f%/3/nl\)5^\0(J@h`hAO7N+[o0/U5q="j\\Xq>/*VlIXY#2]k50E&U1G\Mkq*sq(V=11,[en(X#3B8T/#2XJ%)sZ8JqK]j@2hF`+OkgK.s/mI>h,*Qcf?Z^!"F!5D^?ar&'scT9_nPI"rMncTVsVa<]I9(Zi@!i5!#:okS-MIoRRtJ$'Moc_3U2_m%&_?pK5PNjGN7^4tlIRjEdoe;+h9hLQ=ZJmiYTr.mE^T4mfC**gg%42R?ad,p_,^G?A1,,'AF[I8If!_kIYG@^Y8bUV-I@X/jEa1E%8C+@%pN#pWT3p4=-1$r$;:f`-c!R\9_b8VSH[1;0X46gs0-'N>Z#D@#fC.U?nscWEGOS&1oe3JU(Tm#t!`<ZMTWXp+Ds^o^Dm,`3%<U9Lpr#U3M\pjO1,JK#%pW^9u#J]BXlg_Z+.9ijnpEo2%*?=i<4]\ahfC*+7g\t>h?G<T"_4')a=R0%hlaQnN[]4fV*r#M?Fo;fA%b/KS>H?K/r#$c(0USb\-?,)__8paKV%stAR4]f(>agur)F7rtRY2=e=Osa<CWNYudK<og86p87C:rhkXCY&/_hQid.C2->D=kE-#%WdZr)Y@#oM?sCIuOZ-4jms1BC<W*Dd(j_%MIL#b>pZ5ng:tP/I:^!t.f5HYAI^Z96X4QBYRGsY?e`2"9A%6iC*5^=OhD"9l*FSnN%m[&Ppq\Q3spMq-o?F?rn_$]kr0X"X2DoQ__)dou&?=22-]jG'[K>ehL>J>["IKrsIHSb?ir[eKO7I0KWSi(;_a7jn&rTl-58)_/r%k%^O"IP2HF^TVMP($bW9*"7mS8ZuLQml<<cX84u?O1f@8^OrT`XZZ'U<S-\I[=/'tH25%##?USF%D1`aN4g&@nhob0m2,Bdr0YE(%Xm<IbOJ_aMDqX8[['&;mK&O;@hfE9r?a?il4q"u3"^=KgMlp8[jhKC>4#e@+O$*-YFoD#l79e!V#?hgKU9<Cg8(YJ3\palG(Y3kY%?Djs`4J2LOom7b:nn%.`*OI%lf$OSX^-8$<G\>BPH[\pQ%dl`4XLR@5e#qHG[/9efVVM?)pTRk>"tj68K+d$DgTZ,jEe!-%Mo[e2%`*gfZK&b%]W%Re_ULcphkb8^eG-.<!r9i%Whd-0Jn=Y4.(E`J;hTk0%+,#R8DVVdFm-p-m2'"mWT"B%<`1sNN4<35TqU:Yshgb+S%a`AOd(-MVV:OYOn/q<RrFBA>#&)EL4GHSKWVk/A!Y1JTh]BeA3hK>H^ph/?0rVk42^AdBp7<de,GCObm*e!gqqt@W$gO8tNa7$P,%cJQ=rmX5#s-go9Dm@3OAO%qo]5G.`9M#7#7O2iQ\o!?e8+9-E@:3lc`UN\qKr:IZMhuE<A?PiaK*NurMN9pK0d21ugdDMU5\9K:K%A%s"spVknEhYuZm3tEF*\ajW/5CI_IkHEcYDgh6Imcfqm>l!CC\M):c.jnsPi7=$cfC&TVq/j=LmXN9?S@g%SDl4+1ro;:l,G5#+%kuTA&mrRjIdA=n`\DIgh]Uupn-inVl+0?`3o'G&Ymu:Of^WFpg(a&[Yqt\]N?QT-A-f<fUUTHV-c<^8.].<=7gQ0'nr(m4X=,eJr%&ZP$i2^^gLF'>VA^4hrmbEr6Uk4(Z#4F1@JDsn:jECuPWF7+[qNiXe4l33igom5NB?hTtG'6gTAQ.hTa;*OU$Vr-;mI-gJYDb5cP%a7@RR;H!+E_l(hnqkHj>3N9F^K+uc#1:W%m^ME'*HVZhA\lomk4M(O<KhoG[m`1NX:*"V+jk-u%4rP@'K-.8oFSu#3`gOQ+7H/P^%36Y4/It%8O1oGEjLO\C:1ZZLMg<o_[<+e17jlq2u#"_sgCF9\f4)XC`o'7b(]!K(%^M_APB22e4p?"4Mbn'@B[sq]=q;[ethOQZn%Na9185*Z.uEdSb%8:CHY0-@oXrU==me&g,VS@X/iGQ-Rnq@>gAHh.b\epmI1kI:6l^X:6TMgro_I!/ulpsg>(mb6]nSQc'P\+K"a%_m[jC^\5s.:1qs]4+/Et+$;@<>eL_[(/Ll8q5!V7^XtOq.H=0_J*OrAlURk4Rlj.'d\'n'ejm*+c1pr^-QLm%It!YiDrS1pr&5.q%Z$saNffi.qZ9*-n,@/L?bDq(ES_j3j>C22C>AWccqsjH2G())G5/2?W^"l^.EX$%5<L__.1Y(R,CVMq%AmW+>dMn3ET>%bhpu&iV%$THpjs6#s1lR.0fpu]H2n+:.EMr10%&Nfg`m`dt4?+u/:U]%j^BQpYPRciXrECdRXbB)h6=5,K5V^.qu3.C_cX`%#$:Lj795(T=Y%hN$4Kf\[S[d+OKPVta#:n792i\#^rID]a2ccPtVJ!V'[ug/7g$=qiV0e"=\>g\HB[q=Bq,a)cHHE9"V0iO<>Fic^pNE]9T)ECI71%T>r%rmF.EIr,VMepO7I6oZ!0&Qd^H9q(?mq?bQ7]m</3eh$rt$\:/V7/"_3=7Reg'm_T;.FSU]Q:ZA94C72=S^I=uRMmlGfhD:aD%qn]];Qi;'eT5QnUHi@WgnB"B`QtO-sa,0T^R-rN"mN4sU]tF7*hu1)%\`tiXb&'rPnopS?aCcGm._.=OPBRNZ5PnS%4S%^F_D3bb%IcjTj4#uMMq8:7.:]:7DkOOE"_GGa<3\ksIc"i)1r;H?LB9O1&OVrNCQuT<*+(DFFq>B(U*4`U=PRC#?GmU_#:1"RYIs:])h3uE%%X/te-cGAG.V`+A5R;hE_pF"dbr4sgdphQd-.N5[bD%VqKOtg>Bj>cO6q9#,Mm+I;Z2h0n[=ag7di3e^UA_[00m+?[)J)A`$39Dmo%ptf/KIAe,RFLJ@W+$95E)40f@Jt2P,CiAlEGNn.oO5,!DF2(s=OIi[u=$JZ!GiXA#$"lB"Ws2_plAs\OKDk/Dc@`n.f6`[?qm/*,%9E"S<cHguH\4;R'orHWTa#Q-WFE#&,:Mf=MJ*i@\`u##]?$+Xl2oB6UZ+Y9pF]881iC[^.2a=mZOtDsmf$8uY7^K:iaMZnQUjBfa%Nb]Blq2/+#>i,(0P<86'LL@2]AiS@[`C5qdg08Kd4+GfZHK=%]+_j2%Z'MhRpc0V'.n=jQlf7Ei>PZL7=5:Ia`J+,F5E;j&!YlNU%cXdP<s7$$Pq!S%:qn^-%SWX_>`i_-eVgl;flCEERMCKt*LAgAY`lu2GF=E\B;fLMp"KWc7IK$49VRQ8`NJ=6NFFK<`SbQbr6<_[/%ro*XWoAAFC"&2k;+8khe)KPDBXio22dck2A5l0[@EBde*kqJpIRh5"Zc$Y(-?d@<Cj.B#mpY)2*\,L_AAR;JUY+!6Jc2Bd;Mj@B'%m%o3GhT/&>-fO=aT?g*=\X=u/jD#%9IiRq2'YNU1;m:??f,r'3_F`D:aC=^]I=1N0N)!0]Z^QL;4+BIu6fX24HAj;7:7$jd[Ntl:%$%T?sVm1^M-`8(Lp!;G!RoRW`5<h'riC@N5@hKhi]_24Y$'P&ELZe#Vj!Rm6Gi\5MT:&\hcW3*r'dm@.0.pBbNh>$D'JD7se'EHY%er^br`V/U;.HK]9YIPRLrael@7NLp^kNqG3Vk3L;(S/]IgM:^&gs:cuIX18s?h)>8cSo4i?XO:H7h4NSVh2UV]Y1Dd5Asj+A7sr5%1FJLO,gjsTQ=]2EfXo1a^$Zq'rq_!.bj12gHd'7m*]sAtHgJ\eYP@i.S6kTfkAQKB=7#mE(R`FJ,6uMIHd*RNjs2PJ#LC>>YBXL$%\(kG>?ZGp"=6%NAq6"QTH)45Xk2eM0hCj4_iEl77p7;]T\U'[i#VSDs9jHT%BB$[ucYMct:NoRn'p$]&\FG0TmiA&Wp7a>T:;,X(%(2b!rG>j4_kO+-Bjd+joKU_/]6cq!ulQ5TS2h):+^W%iu'mArqDh_0fiBO?<Y-$UE^A?m42s9)1IJNDogUAh@/"^,%q;o)Hs"!es%]JaL54VeBm8<Jh@?K"Ug-_L=C8qs`X5FN>Mdt^l^qe<=u$k<(42RRE>.W7JIea(>^D,is%Vs!HBp6._<=j6NNLrCrIeT_7so$Lh@%62KooDSCUZJ[47"1K,<<CSgdhmgmou0pLO@Hk,b.g=s&rQk')2ajm"aG+Wh;VjBWLVeE$^b9,_*n,IRIrieo#5&t#;UnLjCe?uFI%lHZBZ+'(O3rFfDIil(W?+4RT;I->SMIB*.OfHF#dCZiHq"9'U*Tj(%V_0:Aj.<GA49Y5cJSbaD8Uf3mLJhk)fq?&`<?_1+6LYk8p%O\FMrSh7[hTs'_DHY;5:j.ms!;g7st6a&V$3lusNAnB-pa3T81^@^uF4TEZiY:e\hrp@XX06[A:rR*&8*WCBTcHPPm4.G+%rA!dX%_sqMDcG%-Hntf]"s$0r&F[TP_0gGKnSU4H,ghsl4q"j5:IpB_dlPFS>^[]KB%X4NDpn8R<IuLh`^.G@S\9,G[483qQPCuS9m\kgb%Is8nm^j"hpGOL@Co:7geeTYaWHR(hpq,>-\0#.EOS2n(S`h.G)C41FIqes+2Hd0$$`q&V?pi0J?Do_Mm0)bSU:W/n*c-po?TZ=V'%mkbjKIspDKWIB47E;/`]MsWt/Qs!e?`b#1sO$!k2G?2/Mq!R[uAQ%uUIr9Z^ddJ2@IgYN)55d(t\(jRPN9AA75C\#qkL.Iqr5t;J%T75O.[!M9c]6ebZ.r+=-n!lQ<ZWQg:$X9Zi_Zf`IE/P6E*<R5FSS@LT@5IcQ?[V((^J>fp9#h^=2;-2NA<==qhg9B<?98XTiI?me%XhTmGDEZ_))&qr-k_Fr^W/4B!/Z0<OUW2OSJ)#FWNG\O4WV9.;miL9Fo#LWYdGjt?5PkR'FT*M7\=pTl"^qq";\$Bo[j`7:C^i;?%49++7oA]_X*a[NAa1,j6qfT0d.j'-,\EnlEF`%G6C*'^+ou8_kq>U*`8Thnc8GHDP)&(V[r-Ib$&'rW#GkH-U*,WqZfD_,/:D24I%kl74.WjTE*/_%)nRe)<[I.d.2]uQa0ro:IP*ZdAMp&<O1$QjYDj5I2&XusFBn!e\(hig]oG+Ut.p[H:upC<b)nFb's+16L\hX7.G%miBhqfDP6G.8FphdJ:&%2/IO;PQ>(&oUgU*cYIHKot`;Jro7megZoe@qU[ZUMf3P?Y2\q4,.Vp45C=qcq>0TcC]Bof?Z3cfU\"$!%4,:$7X#n(&FT;1$YiP%r>l:u?c[PdSf_jTWC`Rg#:l`S3+,Cg5.l!up4ac=^s$T?M[JY?i`phTB]pOG;\(k6SlXYMqrL>B.G+N$O%IHB>195jk,o^^:uX'a[6TC)RQeq[n0SGi6#1]RCLrg!KVT3kk&m_eh[qmWan4EpJt[l8dRd`17Xj"90f]kPGKVUEE6OoM[KTk?Z;%Gm!WU:\0qn?iRq^TJ4%YDd8rn"*F2+-=*9j5W@a1F1M9gjU%2!FN.WUSsTh&pUg2Zmee5!!7LJYhIog**Z8GQaT"YcfHWasEjI\X%7I6-[L9UEeO<XD>&6h[(-W7l().K-7=-Xs>7Zn=rGYpW*1P!Z].r4P<Hp.>_]8o:ir8#?,^E),#`2/Y\VmFB%s#NCDnEIu[T)S<"%kMm'pSA3M0q<HS&4!24cmG-Uf4LcGmSpTeO8O0B9[,I0rr.$nFN#)`rQa].Zp\7=,jP.F\@rKO1b@DJuA7@YL4q)>.ZLmqTK>7,!%bHI,D>JR"`F5c_GV_ssPUh[S+pqaG#9eNDXi?eKLNVC0E(Mif<+$]\^g!uER$&:[M%s'nE%p(n'L8o(Pe8HFrG]E/op0'E@Ih!2%%6I+h>55K]u_rGP4k4Q3ll.E]GiQ4O,)<0V1Ns>!oBrGG/Z!P*R+03&nOa38Y^Mb-\mtPW3hu3)dkrh#:9l0.-CW)i__e0$4_V3Og%o_Y1n(]g;sb^UGP`.%^(,O)O-?^a4Ln]<pHaiBIgT)X-0Jrb@?[Cm&=<27CB)aBn'4FO+dp@4]f^%RuQ%Nk00S@ZmV5@7adjW4Z$%^>eCs/$?R4D%.ma?R+I?Y//b(T*6Yd-XQO_-fq8n8NS_B@pMiXrO7Rej$q%CFiUq/n'MAHh&<%>9Kn98d_jObq#5oLb[m]tdcYm-%'kd-D?H]GcGR[[F?H-Qcl*,NKl$R=`434^nrgo>Cj5RJB,FMJLHT_OB1`P];OG!#[8bhE6B?MR=n*g.^9EDr6#C<RD0*b4gb2E1i%k2m2Hl4f&<qY@;K"23:l8B*4[Yb&i,7`#Q,/c@AU.G)3%-2/U@_/TnKfKEUVc[!K*O'hN8k.9o-KgPfHk;.R:]#TfU)11o(pu7(D%?@G[g,R$7'`D=f?(,%_6?ekNk5;^1&.piu$E:/WSL];c2qbEtRhp6`@fDm_leq<'!mb4SJFuRba5Ks(QCUNZ$V*Y6h,/!=bqtf8e%n$.48?Kr9O^>T"LfA:#p5()`\G3dQAYhno%]8u]5_>'=URCI[lBDhb/;n;8"5G,[HC>A[Mq8[XDaG[akmbb3(##1J7Dr8Zan^Y/B%qn=HWV*Ik,^?3GLp$epb$,4\t4PkECp,a-Oqp-5#e$iY%%(G,Cqql>QnBVWg.h3["p@kcBYIJrRL$sP;,OZMhh0XYOgJ%Og(k,h/%WD.:+U,-f`c[T8f>Maf'jBi_q^jG;5hg5n/^2id1qss1(_s:ZRhgTA$f6?+15cK9W7@kJKC,ZWTW/Z8'MYXZ:&bPqYdhcpK<Vs]O%5ODqnrIEO^lX^Shqmf!2k&bt+0TC^;1k`cZCm`5:!:R`7YC$A?+QBLJ.o5?Uo@M=AT@V`gg4jb<\m)/eX7!1*Vq-X`l^il4XUgJ!%eC1tnHRRLhZte5L1i+!dY(#fW-?51SIWH/B*2Kk'aKHDWEH%#Z3q2*YGR@U-kJ^B45^\==/me412r'=GArN;Y)Sm:E)O_hRjAul;%GgXlsl.1?\i/AH]bubUd]h37`MhYh[*I5KZ%#MI+GOa_ql$aN9TVdBg8c.Gh>6cbDl"04605hjfT):A;_3_V@WZC4Jm=PXG#;?"i%F'J)DhY<6-5@&a5le7?/Fl^W:I!tJ*e%aspr6rW3^]!]lqChmChW$2;#lhI*TDVpj+WoF3ORr5n$haAPX^h4o+b0F:onQaAIQDQ/%nWQUqlot7*dDK<4s5-34$0gTMf5H%Yl-Od4nE`s2g%Q!t)l%C;NMjghNf3AuV_Q&\[bRPaj8YVKB?RR?n]UqQ^O/.mq!T@(T0qki%Vh`"$isu#;c[E3D>!9AZPjOo33V6^['d&e"YAYHYm.d7fHn>*\/8ecXA\Zqd5,E+'lH14H@+%e/n&fhJ^!F_dkh@i3]^bnFmaL+Y%R*l@lD8jr3969-a532)H]!PZRA)DHYr"O5.mQLG58q">D&eDr9Rc``!PI.q:UYd\DI*_)gi3n!TEW*>"AA+##$djasP%m1fHCON\%]stfEeOZJ"1:m;:ndY2-c[P3Jf#'3U:Ua(]Q.>kLr:B`O(Ur5cBGJMt.JV?Gp`]MhZglDI0.qYGc0(^)4qq0[Zu[4Vim04F%XgB%%+Dn%Hn9DY(G0raHb!G>W((eMJrV60#m8EA"Y4SY<n%CW%gU3oSo9$M7:Ia\N(/NhSHkKo@G/7`&a1[i/`nmaT@OJ9il$![o$+[[F%PW3sk.CFtLa5\T`F?A?0*b6E\`07H=,Nd?DCj?FSTCXLPGeFh<p!OaL_6]&k$D33]RWt=JV1L[?eVN87q7`3tM.)A!5$,L9OC['1%8n2jo'YSp".t`MHA*/S_Nua:hc35-HbXtLDhOda5CtV,]ZCgu:NFVSt8aEt!K:$,bkI/qk8>.mLY(b4fo"!LG>-dn54I/@k2n!HX%@L+h10mHKg$lVN_SJ&8VadAc&3_6NOaLR?WNIC"LHQEQb@^.Ml\TdL\rFbH7%65<s\'f@gpq#iuaL\YJG&]NpR)eaD\)cr5FKGeQ%7bud0Hu]ZA\`B"i0]dqO`ihG'1=dVSBr_)Q3N#^nO0]dM"S-^F*OOV7[g,h^+N@O[+gb8+0hAm4KG8e%kbF2-e;iR4nr6'#$9f_Q%b>8GG?j&6sXVOgSN_rE.Pp=kT]o0j%Ol,;9%X_K"+H?a8Z\or])FPGOLq`/r(u9kM!tOR:^'Ba/X!![h1.Z\,fj.mZE>U\S-bKf8%'!!e2d>.-&/i=-7=,p\S5AlG^@OYGAkooW&dToaKm2hKu6KdtiRg7>B^+<e8nRsV:)/5614cUuQ`/FqL9PEd=WQLE@>/j>E>cQ;t%*`h$lA9=l1Re1a_b@@UrjsI^DNgW\5q4)M+P&:iT8P;%&\e.)4(V-N&/30UgQ.ed1j"urZY#l=K_d&2g0"VdV"1O@",q19S(XS$,%9lTnJo]/TieJ[i4F5kckYmkl2'/d;VO<4$R%\e"V`)mADG8q0@DQNg\+f(V98Z=3dK]k^!DN<Bu`>@=#_$//OQ&'>uLVnm>@P'PT%A*8TF0-"%Z2i@3!lF;,Zlak<8oJ(SiEui3K,6g84Wt-JeSn,A9WTn=\"unM1<g#']a6YV>=$kiCV;u_c7#.Of`f5bJi<IaCl9.P0%:F*C&3f0g@mTCNe0r%M4R6er$)?/PHa]a_@1iCW*CZp!oN,9U()F#NprKM<oZa3HtV'r<T)fn`ES"u,ta<fpUGC+GSoA#_.^nWiU%Ce6Zu2gUrhf&2LSA$kCKZ$A"!iO!P]a2FgI'^$Da0ff+jh-i>_=`h=$fT3*R5Boj2pQ67`FI?f;JlfKV8BLJh>\]7^l9+o[Ema8h%e)2-XK<$<4DU2`nSWoM^qEZYP?e37HH_A<54*qOZ%NJD280"OCR%G5E=9[N;K;9<I#e,FX\O9nJZ9@6X4e,+rK9T8n8fH]463eOC%1Bqm<+c"+pYW5.&o.%l)[4.GR<(WpL,YVB1i1NcbanEiE;Kf3h!X@'J=SY.G?aOfhfn_NMdLW'XX+Qe.DQuJYH:EUA8K$9daOZU-%ji0%PK'R9$>E4t)C3sh0Ru<ehZ)oa/+m[s_djL)[B!c`E>kaW51%S7R>Zm#*2<nY0MkYffA+q*G4^s')>2i_E`TN&4FG15E$<#4a%k/Prk`TS/Zke7GF)jD8F.2$MXHrm:%Z6>TtDLp*A_7)nn&32M%d6$YPk>4H<\Tn'VSqfT]J_qP"]9'^^cYpNfb]/CH'uu1YgHIur%OH16a^lTj59!Kfo-(DF&T`th.(TpMT@*ta1)HBD]-0pu;4XX`^CkaS-+kk$j*'7Jebof'&"!KEn``U9U"m%X[ClD8T&cJNap5e6Q%KZ7kB_Tj8RbJU<@qbTh[Ocm_H<m&d&m%LAe[HN`=`<LT=nnmEk2'\FDK+[L@jBa@K%4N2M$uR\nR%(cc^0%"bWbCWB6tj&>#!KED%f^j9Ha)1'@S<XU+3m8`jNI)t&1jGcsdU3n]l9**2Wd2rbZBl^r]bguoLniZoEc]]i'@UoZKc'1oH]]+0*4cO8l$68S\I2@SF<\'r%q*&6`NhhgY8A+ZXWK7MN\j0hikCRh]MTX>!(3?r.%_g=U9VR/l(lKUn-]uS`J?;s-EnfnYh:n=Y7bQI5(Tt7237]*d/a3Vc%NX>M%a@jPQ"re;?&"K:D,)]8Gm0c.s.25sA`XX$=dF#kA#o\Ys(bJ`GcGeIhae%N/7aW,7ne=L`&5k3jd@8V8Q^3*GGD1,oLt"q+DT<e2%aq.K%.*r:KOJ?";!X.0Yo"%,gi"DbL#<eae6F>2'AeO5G\b(>)#PQ?)12*Zl%nb$RBqgtfPgjNue3)CJc9?$K?DkWV$P-*uBmQGZ%,iT#aPdSsOX,CWjD-W2KQ5mI0@NWIEOE.Zn%@5D,'T1pL5/RjV6l6'f__YDgN/$Z=R3XMeNiAWWj2iEuB#Gfno:Yjm\1Ym]+\*UE%S;SO%CUYL:'qS>/KAO,q`a.ZH+9iKZ>)2d*VdT!.H-GDjS/(jpOG7_lY=KCs?;_idVW2"DlfpTENjC);3*U".jZuR[G,!18kN*>\%#!.pAihl2kYsIdDZ]qM%cI$013NFnq&!U`Dfk:EC.l=2mH@eO8b,/q"1R\F@2\5Im.4.5SrECWbRVZ"r^OpBY$AgHp6,uL-*(7T,%kBtRpnH2>$J`Z*U;FZ`M32R<-mnXf1G&+q9'h[ka2l`sWIXfZ0Zc'#:EtI`+("$D.ho<tZRjVVtA2hF]%RobCTOhJ%*:dG[ENk:3%:WeAO8=dDo:g+^.2In'c7Ve^NoHc1'Ok(WpAj=P;E[N0W9;c#LL7cCh,?%S^0D$EQ(V\5*4k<D8-T\p'[\5OAKk"'qN@O?E+]<+f%H-(j;A>">2ZBu-.Qk'Pmbhg:*S/7bGlmZPL>KY'*?l*X#oXH(-EV`<Nmg19mS'p_XR)DN<$ecWq0'l/^U^@ZV@!.TIS76,0Q27]Q%G8f%&Aakgkqn5t5`%37=ka/&b+#`L_\?`i+I[5cI*)0fjW@,*sNu^MH:t>Zun=^p/MLhL4CTfI^:u-c:XNZT.e@oqja!&cLNmqGb%Y7!@1,^Y8nI=.)?F@i,!4]#6$N']tP>]B#&Io2Et/$W/G@M*`L7o7!H`%KH&UA*S[d7Mk:YbU#E?93K?>n1);g9','Hrq0r_n/I[%;8:lH:/Nbs4;gMjjEDEf(,0;GFFNuBZN2,.AlGB9Hku+H2Z'WW^=4:qK0OVB#,:[UjqN7(150:jHfnr&.Bkd811g%IPk<*8*kn^t%B00):coP/UQsqG_3,RAA1_r5LOE;]D]M[*Y[X);;c=JK2Y3WHN/Pn=m25u7"[6or=4*nthR8!o"dQqMJB9d/ME?Vd7jXmbsd.:A,%`&2IBUD$PpVJ9VP7al08W5GG%lrL_^:R.-W=N&G?BJUL/:c!5+k6EQr,'Q'g=UF]8GGp?eCeNF?A*XQ:=%Ti2SUQJ_19nR0E[2nP%4geIY;MVmmeNb("fi?JMR=T>hZZIfF\oMo*0nU0S02ZEm/UK>6OBp7bf+,_;jMfe,84/-0<CQ;=BK8gAm;B.#jrkC_QqN&-&qprb%V#de1WLoZkj$Ud:jg:ii0ed[*h*u\9=R.#EZoPC&9oY45Gsb-!eOad(jkf0U7dDmd_YI#TLhrg"fR23-5oOWc+a0f61;;[;Cfr'B%/k.C8X?s<Qc.reBj(?Yu`Lb^A)YK7!BhUR#V5JiT%Bbdl`^b',#A9P2<H1G:P-:.j[TL%#-<G;VSC#cp87H`S4!IM*k]1ErP#AL=%2m+K3f[^ZoS]Z2g21t)CXBn&_Ibq@NQIoKtqV7V1-4H'XSo>]k,,>3#XFjo;Q9tc!Ua=E&Kd=+$9i@c@e)B^\e)\W;e[p*T^XKd*%,\9N_S,cmV.3@T.j\2msiJ\Ou/YIL5HTO@t[I_m+fLaWNJbu4@OE:cj?Fcdqo@8t*AMHK0d>Z&hVRe3t&uUH[Z_`R8>@n^h9/PU5%/_hh?PgL[UZ`IZO$rY&4R*0TYlu$!fKotD<]mCg0C2^/ecstq*[glSuAlgqcD%W+q-a@3SZs,>nlOMM?7pSf&.+>f7ha4DG8L1`>%f3X\uI@s")3%Fh465aud"US(b4HpLN4n("^kNMJ5djGuTO-Lb'p"3X'k?QMPhMX%a(stk>`2Oo.O?rt\X7SdgP+E,".aBO.<iheQ%S?"=_'fF1`;e%js&]9"Sel&u\OE._1V<]`Z%kF_D<QY1E0p/?]"^]gE!#_g^[jsP3:,d;YPK<,F(0?/_O;u<8[MU=djD?HMZ/ZlG%pSt7D8h/:uLJ+^B2[KX"bY.>o5-5u^j4K<)K01I/SFhHYL*a0rQ/0OmSfZE9PY6G\+EhP"`]h%QLb=Ng,BNEED+f7d(8i:2b&`gR%om;c);mgLBKe>gMIMfAsjc-KRLe!_2gh1j!H<\iM#Xj1_Q3V_fk\!_>KF`B\\/uFa+PN#AjT4`S\0Q9D8g>JuH4BI664OX\MhgY#%P_kOTW%uPIG09Lm+X'a#TgMjPC;%TpbP"m?PbX$kYGYVd_#fLq+,DW7oEQ(uB3_Cq"qX4(80nkeO@@;jMY"bIKJHW:dSW2a&U/C1%1l`JV8%5L7J>fcc&euWXU/R-D+9o5s8N2??LK%B@OpG;1QQ[rc]$dUn/'c&Ymi^,5=#Bf)(KXY?l)-ACNu8?OM0j`6<2Tg4-M-(,%i'9,nS>5CB":#_K7O99sU,I"JPOjXLZ/[4)7Do][_)3KG%2#"M##"$sl2i-fVQKQ7C9P:ahnE>WKqjILo'+PY_hcs?#es%Ik?S,j%_W0L:a%?IS.7QHCd6mQ&=$!=+.Z0a`feSc>>n-(dGAmc*Q00rlkTI%5XFR3geQ%kSj>f@b$=;/51>\mP3IrVSoi?3]3A_cC[pZjp%9V242>uO3-4;%CUM,V7c0aGk.AbPV-C)-k7VcS>9/i/"tjQ#eOW_=n$6XQJD'a9%P)5heGC,Xk5>?ZpNW'4MK\^CRV%G@hU*!TSm%.)[lCfiunB&FahSFa0MOq97Yh77a'o=Q@6"9<[+Y*.*C?5i2u[BWSFS!.0i!arPMX[ab1O*$#oDH]0+L[A/[EE[%_USE.g$e.EE)%qgrlMBRle57o&MRTnl18)`?A;RHd&1h.mS@F%Q,7=G6A.%V!KZ'33gPi_,Nh&/+@PiiPkiSCU-JMjPnUKkd!Kd;)r/,ge%kN,%/P%.DRblF-iasIHV95J8q>sop$&q,P/ee>Z'$8Mtul9<=/`Si@:GY3o'V;F!Rb@i)>E.&D1j)cW='_euVr#/>P2o3I)/CE-+sl`P0't%bXIK'=VN\-poQ$GJ670Z$`cRJ$BS-?"$L<V6QKSoWD5."9iNOFO2sM?Zn.E&PMo_(GNdap0DH8nRjk@"p-<=ZK(PiN(Djd<%E+C'%JrGe]IZ_3=4T+C&hC'LlftP(U$Q01JRte2.&H;o"JlNA#9q@*)*$*p=ooKGJGF+>nK7n#1>To>Dj_P^oQUr19g$gD)oN%^G`.V*/%^^!FmO:b!JPf,<,3+@s':l.3K_Coc,/k\gLhZ],%11s3T22O5<+ZH1hQ8rVI!Qo'%82qtRFSJq&jPYM)]sam6EUnDj@P*?"dm-j4%&4h&8!,@4U8^"!N&oe\E%g0"6gCf<!TunAh<5M5dWM,)+5U9C),'cIJ>rS;cA%*hBQ]^EVk6oC?*s?UL!G+O59lfp8$*A_T/r=BZ%Ct[b(:B?=e4umqjAH_K8`!e<09Q_VXK6!0;MK\@*n!2Rjr%<lo+kT6nI<Mo9)"sV,TEE9DP8j;uci`-ET;W(n52FG(gBecs8Qdq6%Pc=;qa[oFIm/ol[9bQIQ&k%]NX)<>3W=T8MLWVjH'?fYpM@$ba'(mdD"/2DN16E.uW.qo_XM55.Om"L/!i+T>I\/^(ciQH=SZhNG%.IpXb*@\<F4lZn#BfIcbjrk'gNXlSZT`^?&9?Ui+dIN,j*>8I,pN90:3%':RLfI6RK2>*2NcRo\:u:Bn5`m!d=^VlXN<2N/[SRpM%XAX1cREpEhHn81X]TuI*HW#Bh?&6=?R0(hkfrZ2jc\@NBr-sQP+Q-LP[Oi.*!ASquFH<hP**/D+)GPhN.)8l+T^S/EVA=T?m';[F%`5C=Oo]?]W_7_6b(\j@&-<X^t78;5$[Z68ILeZEn6*,[A#'"Ud]'_M7"/4ChikQ@.me0To4;KuTi%H0ESKTT/4&amtkA]D'JWZdj%pXQG3AeK*OBF09N#Ka4#8SsuFR5YJkl]`",J5.USGD>l8r%L*.J?L&j_2,URe\Sr*hbpO=n-)_":@+&M!9P_LL4EC>+V1%1I!6&6%h(T\J2e&/mR'Ni.lBA1;A<PIS:S\u[VFF-s4"J0B/jgGTObd80MM_gt$=eqnXWiqHV*'To7,$-)>EQ!'%0oE2f<iRdAQ0:I$F3)=%Cp84:.SjXaEumr4g^t+K[>R^:&JW/99\O(42S_X0c+'5ne^,)W@qQ<]L?DQC"*gO-iaN`19"]M,0V/Vuo[SI(j%csuTQV\##!tlA%-U$e$CH/GKPQ5o/iZ(^`SM]Q"M.#F:,T!ls8U#a1KGWLD43S`RiiZ8gDsma#`QioOEU=K`0Q#aN(s835dV`6PS1c#_Z5c69P7/Jl%^(Su!W5PXmI.<-hbkk+Y\2].sN5B^[0Sa9I-*_#\/#Bi'SUI2dh5E-dAU]^)kg'`anVR\?(cPt-R.13Ka"D3_Vs.^!EkT'd08-*F%1+dXnn)uS>,UfRMp+Scm!&>j>&5hNWX*:'.G@:X>fZF8cWSD0-b@`Qi=1c-jh:Q20Yfk;EC_aR6eHq<4$_0Fm>!"bT,0PWfg;\Oe%&g]$^7?+SC3[!-fQ\^<f:I-k&4W3L?'cVhh;@XI6L]`6$;TAO\\\oMX'j&$MO:BF5_Oh8G-U,)\#:n0;17rldJLD/?0W\ZO9(*J5%aT)Phisd[W5J+)(jGln$]?R"8olr_5LPZ6S%"cT([NS<_3YU$^X'1Uu!WGuNVEb\_M<o^U7o,R)H/ZCKG;;]LGIW3p3&p`(niWG3%lAFD[hK,`AYRu`%;)c2+MpZ<+&CIiAH[Q"V0IDm::CfTB%a(c8W)6,QEX3eO$V?<sip!m7VKRZ!obeD\+u?*rVKfML[4L<f'ur/u%$Gr3AS*V%=K`[Kr?::7C49_;Z=Gb/6ahS\>HmYl/!J2plf;Y6BJ<m^`IABO_p?1aW2gJ:[:a]*t5mUh<VM.DcKj9q<$4CQ%1MVRM%9>ql=fVfGAW:[;qcbh,r#'H*H?]tiW?"?Fl:'u);#u[MP!Hk,2lLH&q7a=dWG_/c?5r+[uoT2*u9S\:P0Q^5-)F-<[*C4Y$pb7hn%3)-baWUmlmmVG`H!fZ'u"b?&-/A@Mb7L3uLHV($--_:I;!2bq]6i:u0GS02MGQZ&%@j,TD"fS4?5"tZ%%TA"9$5-HU6RW\Z&&!%9%q+0>2i5a#5X_>`5BIeQ*E3/LodF?^E+i9jRiZG+K=taV:WX\R6&sK<C.Y=YGg;,,f),D@bAKZZ&V//,9O)p\:^n'Q1X<s*EY(]RP%[=#BsmqAU>Y.V^JantspH!Z0CbmT@ded$^O`5jn'::h$,\frmtl]1+>V*=6S/5SPd9a)T86b"O+^gGNS8DOp@D;_<1/C!-JP\=ih%ACF9bJ!1kT?lb&LradRj1H.PsORe7b:`^<`*0B/@Z&$Pa"j#7m/`')uN/V4"&kp`EqQm8B;bNft*YK0nZ\>O5BV+]MG@WIXI'"CO%qqQS8X=rW!eP/Xe:gu\f+s^j+O=43ZPJmRtLLVgC&Jh-^L#R]!W6Pf;YWS65G)HVS`r#*P6c]sHkc$T9;/(Lm,+P*:bUI9I(rSZt%*2)i$UHV"N%5:]F=@/`2-]@A"GJC8g(EOjQc9amoRDm.CgE!DeMRF.\W[]]Q#.f(?<\]gSB5YCVqeX:g;n$pHr[oJ0T4K66O,e8"%p.@`):4j/k!FF9PdkNm`:Xo.,BMR,A!@1*e?V\I!i#W7c`3:Z-PogEf,=W@8%><+K`g^rWJWr_5=`-B:b(dLhXC7kIhLW"i,MbAg%[(ooI4=!).3]M%G(D;QCQ`'#NH8^Ke6BEJ/EH0Kp9Ag$6_P5$)(.'9SLlR.loUqf/fVXrZ%UQMY&-gYmgDUkPlPU:i)YT:EX-e"e%0os+19+O8sAD=l(0(.<K4eGWI.<\*pM<!u&rahSo9\VaAX?cpG>U^7!!ebZ6qTd]<Da#+A]=E`S)crdUYr'R!k;o;%hTBLSjTmS:%+:&FOC0DemUfQ5_.d+n)\N.O3o2L<hpAAb'bVdFp3k0;/4og0WHFa0Uj1>@[$tirQ>Tc(TB7rsT,gKr99Z#CT5Hk\l2X`7UQUp-O%L^l/I67h7<2ZI?A!2Y`fc]0m::LOG]er'9b1#:ii7q>J%A<`7-n&H5;4HC\"I.&uY"qncYbk$\)$*:=V:&W!62>BO%Jn77?!;]?e%i6j7n/hp_6qb3X"@1:@H+R9F^6]C/qLpLn)QOGn&X"8FH6mo75mM)i+hk6ad9"#$BdkQ9(Ci-kF`=DueB3>Au?&[:!h;6DUfj0X3%2PdeF#[6;DKa=M`^pVFhXa6)Io"'QnM*r%"9-Suu!6.M6%gVe9SSI/65kotVgL8CYYGD>-A(`kUKl`*N>Y$V0^\I6[S<VIuHs`T=%]J8PH+:Q'*$S`IPP8.1.nIYa$.a_eU"g"kIKkGp?GbARQj(OJ!RE=UE'?B-h]Ik@2\6^RKU-(+RBSa-]X9Jib7g+^E"NY!iXPW.I%cQ7lId*sRQm4#7J-2#q54lO4d]E=r.oOS;]'(;T'?DY[`qEdKcL2/DPbI/O'O7QX7+55ls`=]h&ih'_YAbY9@o'o([^4,YJO,(Ij%3d1&QL#(R_&&*A^j;3)bQ24#&!P'4-Ig+nP,pI1t@8rl'&-r:tIi0(K6F`85llj4QF'-hSe)5oEb7oS,B(D0A?'S#MdnJk)?^>QK%e8qgaf!$@W!'&U8PaHut).RH0>9i'<c_nLV=hM#i%im`\kiR(n9WnQYR)IU#F7$e#OJ^SIJ3Qt43E+/hU2d5':$]KbppQ\$UaA]#%bg8,U.n%NMnfgA1Y[o)c;&!c`fd3L^&G7m3.JY>J*1TJ?Ek$.5WU+rr4%Ki*8oZC],LeNKH>',:AWETl/<2_N[9b@o+-B,]aU$'t%M?]c198Sc4cLWb"*`Wj*;)4NDOF!QpW!WQo<^aubT&SE,6%PalMITC50s+8m<C[g(jPU,sC.VIfPnIT)O%LWOWi7clGQZ?@$^db:%`fUf<mn(C\&Uca/_A#Zqn'7NQ`%ajcFC%LI_a/*n4lmO#.Jcqd'`%fG'NL^^ON%qV\rsCtC@m6a+3R_705=Ad;4o*chZcc3!n:Wr%Q>gGUCd:XoHn$NG>-RTU&@VZtI&M8'Rf8uL"mFAH)LOB;X8pXRU[!Dd92QIMD,`nATP88Z6noOs3l:&'.taBPr2+ZQ<&9=./OVmU%.0eUt`2_rX^t/Z'&_$VG92#Od;2YLW#`VBFBl0fo`)+_XK;PO3AA]1oWH;]r!`YX9#V?-QJu7TC64AE"'Ac[sj>[cMk51p+[8Ua%%:efqo4lVm&g8HmFRsS$)RZ?E+W+rBsfRT%WLs8s5%QBX(#a/Y\ckM3hEF8U!*Xj<YQrg#,$f6i\F/*:m3/MNSeU<PA9E\3U#=<0Z%_PI%=THj-XLd9uX&gW;<8X/atj[Ba&PWMsr0\VF3(-Tmt-:!:gNJfu2&HrhQ&u'HX.JdIM71DnSXKn5;Pa!0(L3&[U#je^g*EKs=%4&L]hjRso>M?pouG]uK/ZOVs_8XM>+-%edIVFClV78PjT3aSO^UTapqb.%UHC==T0e,Lsj?\E]tl&]dDL]BXF$1S"JUu"3[+ljfn%3l%Tu1mI&O!o$\;nee(aV(J!taG,C]>>Xf!$/R.p%OoLeDQ@`@Jcp(o_V<,.Yg,ho(0L)N0NWS2lb\:mlX'6"[PXFB&$[:34u&:R%&kPq()@`)F-d\!X,`7N5_BU7&NsnpTG`Gc7&b%kU)Pj@R38G2V!#cXJ<f%Ir/*;_@3=:T6&tr61U:[+&Z8Xp]]<i>_.)Io(pUju_%276noPm-prh_8hZ8cOK_5S`RhWei1EWl.K4JnZJl=mbgB!fPtUF^FV!A3Pb7:`@Mdi<lTEJhn,-BE?3+KXeAj=i91fi%r/e=34ED%N#c&EZ;>7FdS*dDmqX&3n2:8j1mXlhE&EQ3&kbiAcF[a-a07>Ur7[U+/=H=;-[T3VRB.EHA4_I)$Fk<_#XD:[`G40L4&n%Y8^^,:%SampuB;"DMc8Z)(!/.tgFc3@u8Qi5eJGU#M!-4"+DP9G*Z=*rf;%eil?D=E$8;8qD/@3_pr/V+=BM,VBjt_kYF*sVA4B$=*(j17>%kYP^A)FW.24dO6E8rB3#[%JCPYT;UC48>0K)U2/sL#1aXT[ue,$;6Ig4.u$>P"J(EQ]`5X"PC8HI,o>K1Q01M/7(nXFjUnh+:/Cl%QSrA;nA,7C#2c;@1kKWNEa35M9nfF$X;;g#NhQiD6Vt'r7'YR@@<'gqJ>nZ;,g:./bGOHa0u4VKKr4KDGn2W&j]VX:]goe'Q%%[*%Q?^OV#`V=&<m+I-(a#;#a>-;4#K/J)P*E^ZVRI[CW21E2g)'hBK7fQ;J5ZbL>U"5@pQoC^S9R)#B=]Z`YGmQn\Q6@IHUMpH,c40S%8+/mbdim@@dO&O'KV+r:h)e5.=L4/WA4r`JaP!_#8Jjqm;%tNkY`\9[b':3]&FjTe?>1DLN6L^1U3GfEFVY"Vaqb.)6pHQjUl$>*%Y/K7E#g#s=+(Gss*'RlQ,Y0\[X#>'XF;40qRKd\=isNd<Qp^>)dGR/4eV%KN&>m`P'>`II&ke'A$Kd9[&op0,jqSFaML5X_$J76W%RD2'DZK$"/1PnY3JmtFBC01\#K(?On_IoMC>-KWBE!Sl9j;C*4iY%[qVAin],60F'KtY*QVC?&i9uD2%'`*P0mY\TMDFQe<#UUhI%0+j-`@G8g9%I4n*h&;aqAL\sbitgiNXs@^bZ!F.J!=Em[!Y@m,I(M^CLkd)c@Uf,G-Hk.D4@`k<PffZneBC];62?s89X'n$OqNGC%<%U:9dqVnDDda,INTVs.8lju>!<u7cR)uX#5oLY6]+U'/784=9!Y`LOjF70n.E=Q-^(;8qGo&;L;;la*)cIC@X\@Z>&EUnH>Q[f>%6IDhdPo7k?qt?%:]GObR6kRQEf?t=(C(q9nh2k7GV3pgg,T:P?'j@2AL5Cd-bi;Z%,A!YO&hCN;]$nkYBfjNq.E-ine4m\%m37#k%U[%#`&Mir)M<V$2f`CZ)XJ""&-7$'J5Qt%=jnYUp=u,9%O=HDO"h.0\#O9XO?EU)'g!Y0#$u1XN`(R'7>H+>2b@SPt5s(O-M.-9J%e;RVs%ulbu7\$hrnIptZ[4EK)BL9h[HBdJA8o^/e6F@pmUo-qDE]XRVc>>%tY)qiL<`4onb(Q-ON!dOr6W<q8=`fq#%*ku"0J%JO%r&J5k$XApHheB(<_jCM[XjWL<7:Bn.9M9&safn15m7-<!%;ELQU9:A(4>fS?1]&.^Mef%a,!-.&V$0JJ%M7C2*P!LW7$-DUMYVG7%RPrW_Lr?JNguLI5$6*&/FKdQpE>^jR#W$BHM4.tWfqo[(0+k:%HWt!7d56,15=e]sQEtCT;Bm_-+q;/fB$]s&BAVDcaJC+>Yo^Q?%)G,Bi!D,=BZ)s19#YhZ$Q"p$t1:9'a7kN>NB+.J?oY*YV>`(kR9QU_7?m.P'.lBg)I&R`X6ntF8QUuc$SJU@SX.g<>C?=0IrZ!;A%esT`+(/r[M@S";boA8eBcd[RfZPiZd%0DhK)8KHe)3GmqZ"5=W>EEHiK1^b-dIc-/3tATI43@pL+_XGLod\Z]O9-V'Kr@U_eEh11%-r=Y*cFD$NCN?>!:FYW+g(<'o<*5<8C@UR;"X2,YUa944>\%u;bjG]*=r0c)1Fn["L0g+ZM_?SL-6#K%0fNgTCa,B)%s\irKB&DF%#V.$T,UVA"/?e7U8=SmW<f[OR'J4_dQ?66t/WD:O,iS#'[i!.9AcUUVd7qSVPUMSp.if7e0/_U"#Z[N]VMo_c@9QX2ZiL6J3n6=E%WALK\1#?6mjlhruG"lYp*la9YWit+5Q,JCa/O`#sI4PsW+T\4O81LQOTNS^&fU@D"#9djYH:^c+WQMigeeuaDZ^$p!&8:Ge,.c-?%geB%09>sOXQ"MEFc*0jQ7)AYB&5b@7TgR-B;Kal/!6cl;3"XS-cmkM?&5,\'U,ZnZjYl/m<T"?&AM&`WBT<`N*'g.QKIJ'!@5LD9%9cXXtR2A::?49P6l*Q0Zb=YK:MNIHg$Pb$!-CBZB-q:m^R0VYN&<_\1TNP-ICA92QGT`H8o>0T$$R@!9=m;(0:ZFpLJkWG/VV+72%CGV?Bp,B6@WJ)j%"*^f:$4=-O1Lp72,_;?6@ZgP8(IMB&<'UiB-#POGq+&;B&P@Z:"]0;?QjupL-O<s.M*S"4V$[Zp']n#*0*#L\%JZ=Z`f<_s(V#QHU]8CH)/<hLb-K>[N]FX#lm7S(,6kNQGI>s8@1_gi?U*R<d,EgsP15[uo.;\oSdW$N_a\a<Ud"A-fQPcp0T$K-c%^&V'2UnftOogUl(PpnX!&TO`^E3J4TqOFHP<?2Y:\!?1df1p#l`f1akTaCm#=t0j3EFa:eC($g!<`lC;kGok1X6CU&;Fc=m2M$E?%l%oW7(,=SY1(EjIqN#4-n!/9oR,TRgI"il8-d\Q=LIN[RF"+&K%kVM['^i#P7577F%,mRm7C27mD@r7c<0Qbig`f5[8[jW0`'[,s%PVU*I_e./,RL)oVS\t3^=5+bS^X9sIN.\uQ+NY5FXWp?[:UlC&lf0I]0U&DKQLn]Y,1J\V!m0IbS-945,,(<98cGI0T1YCO[8`q-%`rfNX[3<s&ZS0FLW9/*Bi93k-,Anrp4IMVkj/U*c6PMI!?OF(Lc)PlAHOPT_)Q[UkUBT<!68M0FqUQ9=3oh4P^QD?*/3hsEH95*?%9o]'CJmp;Q^;(,Oe4Tb4)CKbWH1M.oo7Ymj2E%?c&Q38>H4cerP>k#+M9+N:>\$JCP`[M#(>j'*FWo33a>ca7n\Wo9fuiV>=K6qn%i%r'D%?$"cV]&c'?*p=tWXl2Y*G\s^3H*2@.'W29?_R6/6)a@l%.@7"(n1.*+0?u)E@-Ilg]/\-Ur914!`%6-?(_3s))X1f&d[^D%`!$6K@5i^U;c1Y-`.%n/4(M'9j'3h]"Fc%-=/&BE/5-)kR292?Jt.3)l-fki>gIg"V7Bb\NnZ\rYfk/q7]mY`(.@<>YJ_N]9aD1C%h$E4rRVtV97M()`A\(ccndTE=LMo\:lf\u/&Xo.-WV5#CjuQNL4;e!#H\,AFK<(u_'CtU9#gJ2CEfoi3n9'T`6(eK;gQFlo$FC<j%r_r;X6<!/AMI6slI3bVNf)4MK8jr(O(K%gm'UMFf]B6ub7=6e27tmHhNd(u&pi8jVbLK`$c`pY(iZ=/@aI@un>tkD_&N\FT+G5Tl%00_bMRXfXU'f6rGoa1PW6oZP%>gP%a;!s&@6r8t_&L!.QAMeq'C=,'E8D#(D$qUH-]?\eWp('%0b9;%sTd\TFdX3a)HX`H?3^]Nl%73tUXhb<6[7th"q[72A&m?g@SpC%Gh?EJ/n!0iPh-!&dGL`-Hhm83&UL`3cYKZ##48?@mmZ"c7Hj[a'"!29aS]c%"jMEb+<RC_+h%B4739(-;u4eJ]!f:4g0ZP,0E.;,c49do[Qa%2]H0C#5"4.2B2M5iikEA^$joa?WdH62GrSVLYN,Z*8I&KhoR5df;G[aSH+i'%>X5%A?!PermZlpKg9f"O]V0eX*kA$CXqPbP[]c1$(,_be;,!.a=b.h;j`-OaeGX7XSj7r%tbeuXAe1sPas^Bee!ufq^gH"MGQUB9K?V)%mpX/A.FIH&Z-1_!!?d':oh)/gKP^;"T$%Or-6+k=GucdL,]H?e32Nn@_/bnG)MB-XnNtAP(MMD!A2H<I15@Ti#CoJ.S!1NmodAId%?*/IBVJ<03M,T(lRHPqk%8jF7/6sZFJ`V77L"OF/Ea]?T153M;bb[_83GYpX3FLZtP2<i9e$>9Qj&Jp[)"2g>K0st^0L*>fEt1T;%UJmnB>9V_A'O.NM#Fk-l_8O<U;X22"\.r3:D.?#X2C%"E_df$Iqbu8%DKU\?-,s5KLF1]EKgZ0'#^)]/#.92BHO'BBA[N91,f.(#%!/aD'6*+s5UaG)a,uthmU4f>H3Jf-01PW28CKUWJd`Mat?Da0N%3bp?*)sn?MR5]o\N$mRXWZemL:^Wt*:PA!M^?OT,fiG39bo#Y%fgK>jX)Yu8&Q"ro7njjLnYi0BHU^qJ_ET1u5+;"A)T<Z5jMjRic5MPV[1tD!B:mu\)Dm_m,u@9k]:dW8.j&2VJof@HL5SR7RbkQZ%QqcQ(%&f.11k6AiS4j#KeVtP"Mk#NCJS>LS9G"c(28d.H)u$.i?o\g^80;MZGEK^j`1tM/,Jb^3b:eu%K$Gur_;&mYA\5ln9GDCf%\58^?hEj_4dFa!T]%<?Ba>$eA$3Viim_q#t.0MLpf,Uj;rje;ibc#jFU.r#MdO9Q2fRsi&Z=(78b.WNE$(Pp&<"/XFdU!!gqT?m,%>7m-b]?)umX'hiqRr3G5B"$]<!A.V-ZfoBJ[m^L9#Fl)W-!W_O%X1f+jDPC@C8.4)LZU%\aI+cFZAJlln%i<YGA>X1qUtog:`g=W%n&24EV\)ZrVce$UMlO",Fd]e[%_RQt.fBHCQ)r]?L]MpYCF[J)`._qL^(p\qEbR6;!'h0N^,lD4JW!UG2c2#;XHoQ39;Oi"'IPDo%FglHtWene%ekDW"j7(FDE^`!cZqX_fecL46!3:BYJd'*@Agt%;&dSn!^9^?cBqa*lOlTo#&lLL"eq./Q1#OcQC_n+h:MmrLjoupV%li7>S7%f:Lf3n)F!RKVSF_MXh.DD:s"d-3[9fP-H]=!#%4#O-I%1EHh8&26/2#nj8W>)XZZ6[,Xr%0eeOQAtI_?(`I92hBf@.pT2%_:lfFg<b;CB?OcLeX-lIP-!]0D##9U,XPXDem?m6*L+,N*T)TE6hJ$)E.?,Z6O+@"adkAIWe_Gc$;?JA&5k,rKZcgO<2OO`pJhj9%FYr<BOFhnnC,Jt)OeK\NrMo_j$/=q<D:o`4R5?[60G."[&<gV./4uWh[=H26`!rZ-@]J?H(t'Hq7WZa56M\GPKTn%jUZskhqm-HY%(?k0%VHZ_5$C6H,(1a2KL)0N?XOTXHctfNW>=akjeQpi`<>sLl.8<.5//'?sjl26A'%NC*PnIMU8.7V:_%KaGh?*qfQDR@n4j^j?%VSo<>"QNk(I7^jYK5$fieaVpu)^HG4b=]'b8'Q+jVCg7F$_9l?^a4p4Rq<F&TDLGo$]uQGVPsV'-MPNeSbfc[)nDEffG$h79Y6M&%c)g!VMC,V2"[uUe'bmH6M?#mS0O>,9LAUBIG!P7<M2UbW#\ei9H%((IVZP9@OgUm=qp*uo87!JUF(kJeP'VR3]<#ZX/743:XGf"'%?\[Gjn1:mpi`O`FdJ-tP!'.HSJ^c9!/[kJW@%S2;\/JU!Hr`gmTkXp"@*<#(F6Kq+199]#],C(8:WDZ^0.0g.Tu4/^T4#tg&mIq`%"%\66[95hio>Fn%qH__reG,;lplIf4nQg6._(<3ebfK^kb%IrY&^F63`SQKr6Dc8spbK-N-1NE!.QCZ5m)5q/)fMsnPQHn)4/>1:%C$\0a6kN!gjGLJflBW_[=)57-OPeg1ChPC.dIqkRF(C]DU@B(hQ&O>=>Lq:[6api!+BTFR%gr<kk[\K6g6`eu+F<)8&YAD#-"t9c%`L"`[Zq<.X537\[.68N)$qliCoLIZhWB$/(G<*"(.<_=6@s+=G1K82f&e8SDc<"?q*pccb%N(Q9\t<CmJn)nfq2K`_h?*5kHX]#%%D0_Fg<am0`R3.)]kkXu6Je[":.R7B)dH0[-mT$p#&0d1BfLfl]-)a>]qWoIO,EVV%LdHkY:J$fsF3hj?l4T>9(;s='5m3]?C@sWr%<&co$#Z:5G"0)2N/!V_4Z;mdUn5KeCl&_GBn<hdMO%_62fGUte[)12kR?U*Q8qn(3ZU`t>h+04:Vchf(BpiRYOGHle+tk_L^aOfl%E7Q6g?lA<]mo!:KRfk/c`Q<thb.s#CI;&r.@9IbDL`%&0jQ9ud&=>GG#R#r;iP:`gn]T7k[ahCe/tLu]O91W9TY#/ZQ\fQ[8o^8l%Am+Bnl"J2nFnnkMJu*T#6E5)bbhCr*&Vk!38[V>=XflnE!RC;I9G.Da<M]!q9%<AN+f3@A,V$-SeJFmX,+7S&WBq<j>[j![V.3Iq%"Zf=drWMZ1(9)@XS4Gn;3mm`b<sa[)`b8CO<FU]C3,[cjnM[L-Yhnrt9I'&gg-m-?[*H.S<tVd@!0.(a6uUArB#ta)ipPs\cYU5e%ot*btR:aMIe4VO%V:CO'nil#;2FhK9)[F_6j_>'g-WUm1/g^]IKk]CWFagsbVbFG8\pS+FWI`Un<r>?`KB9Y_ol):Eh^&T+?3U^^%L8CT?"W,Dib*E@TH2r9GQ6d/;UDZPeT#YO2?!athQX=l=/N8oC54Ru]F4bPCB$D`5DVKdZg>'Tc+uEIFm<#!PBUB$ue'&_Fh)O8[%Y-k1X.L8Ue9.`s,C/`]aSVK5#lo`U2V;]tLfaYc6V,U2L&Bt2YkBmC;qeW`,W5-gi'(8Y`%QXr'qRS@d>#,CDZDL9n6t4d[0nu_W%Mg;tSb.>eAVF\$Oc8@l1@*+(E=WGY`MR6WSAQLITC6_uY?=H*(G#lK'(p[R?MRLqeR9O*&eW-qoo6-A@QZ7JRYQ.cfXali,)6J=$%fM%emZ(L`892nB/ab;n@\"b7oVn/F7@@WCP0[4CDe-X[#cqkRf=5t]d7FuXAo8n8fc6TI(Wl0c3Ul[-,%Z*q+T>^X/4\]V4m.T:f%V^54iR#j)\7e?9;P\T1a@uG(kdU9#!I7)#?33"EU=T1HXjle'nd6Kl%N=Ron877q=$n5f3"0jO*k"lVZg?-$_K4<T^d#pH]17?*:%kM+oOk,n@MKV0d;Jh&R\pa!09fTZZ@RCo4"(t"LDrCSV3M_T<,RnQhtF"o)!-V+8443[KVMQ"U;bs#,.A0BR.WD"8.6j(Olpe=-_%mY'?s)Pg.T#*Z(USkTfN-"'pBZ]h'$2#,9'<"1`U2NZ/<$EFZ(OB+q,a%30a$MLOZ)WZ'!%,MO<2%-M1ZXN#q$"XKuA4cncOa3gI%(2RjYbA]2E6Hf>-K?D>uR\#hfME6!m0$\3Yff*oP<R&(!H(7u@>L$8DV*R"_I?VW)\"5--1D:aDOQpYlJ&0iR"S?H7)tb(sIj5Ra%jgqA9AiX<.Tl:(,Fj,m"@+#Yn/T!5R?/ifLg.(!Im1]VE/)r]Q/8o?n0oulEiR4Ws,YML*5;9"#/IBiH\CI&"Cs$V""\(&7(<chl%:5ROY0oKpZ8clJdqc25d0Y2rEN=0JL6h;pRNg\YD,87n>BHCo]bq<48Je&9bcn#/RR(g?,AZ\[-e0`$KZ1#j_eT+C@p+=F1"it$$%[.CgbpFSTQXB$3S'uKTYC_2`kCH7Da4L)$3:8;!52uB+#_t$qWFK_QC+?",_;<HUiE@JAP6'N+G\FD>tGHi''KQ0IQ+jr+\lj+2l%+'9eK*u\jJRO:fm%5<P\ana`(@EEqlSU-ad&?2mMkJ/M)omB:]nXLdrf;6R%onR.P(=ju^,tH*?h79`l3cLGQSB]<jmQdW4NS-1B%k&S"c@NiM_mBgJ?2Ee[=$;I3ZTWM7DQA@1b)b5NpML2d/[@4[1nUk4cb<]r;eW@%l/VD`EK-_kQQd+UIb8RbP?dS8YN&:ASoFm`4%ZIN0Q*B65ocq>M`%2LK7.aP\_TeGb!D[e:L<%%E^QA/tR6FH`=E84+3#]$@FV9uNA<g*a4E*]QBPXRUslO?suEWDu8,+_($f[U*6%U8YJGLf3Fp:bd`264$Nd+tj(YO+VdF4YZ_U;OVn*2=&4BM]PFYh1Xm-jEJTi1b#bW)&sZRiWtII8(3k[1m53i'u(DZkMfgKbRf:8%O*&4A7[Bp.@5YN.hCb)mS]N38K+"@""N.B3OVrtLUrZ5%/FcslL,_sboP/9MiE)<_b(Pa,F.:Rj9ot?fM6Q&PhB:=]OAmctPuW#B%+prV8PoN_rPf9quJ`Ua+q.-[s/j%>GWK]A`[E^F5B!XO<I9B=U'fh2\(RTY:XBiib=L;E+_qH(b5$)aN*BbPBMAWr,2ssLG$V5UC%nY&pS`S-T%N5odLISGf2a]bm".-OeB5bu@o\9,-c%D;Dpj:cg9SSV\+BZ^Z0d8D/[qM9$<BttEN:Pn5`<G2(:njgVlgb\at2Op\T%E!+S\CT%J/Kiq?;Yq.W8V$<3a"B#g'-7YFUg#Rak/H0D<!tjOOppl$f^6'ih!nRFM\L@W#ma]Sg,9b#o5<%$)C75HM[hkq)Lbi6b%M5p0ec5C>f08hAmf>36i1b]?5)fq$OAr+Gh`F2\*8*];lg>9/]oN</#0N$YV"jgNV5QN!Mb/qKjlRa"5K3:Wr"PAnt>9/h;(9O9l%/44J<Cq0P!"\=akMSp,?%W4`mNQ!Xp_Y:!RYsdXWlZIjq$q.E]_(N#=<C`W90pN;cmH?a!PS\>&MV2I?AtGd#ib*62B@jFJ6]$nN%1W5b_!$b>kWAMMa+<!^?hGP\TD@&?j2<54K<Sk/qU+ib$UcC4%c`SaHOJmo41uF&C0+MFD+IPMaJ3UJo0O>)90O)[jRV1CY`jnOu%G6Wat@R\,$"go"O2D`^Y>I8Rq+&aOA&aPgMb`WG(ZJp.I!X,g8U8^U]P?t\J!gj>5n2J`NC<2#NOnF9<5"dJTA&D<7H4AhTE2fKZ%X2$)UI3UYkDL2qt7g4QL_L;kG=[>PLeFY$&<XX^"_48N5[hG0D`:2I5&70CNUcM'RKk1<P:6ItU=gTG):h%:\XlQ6%,8?;8LH<so%0m2$4!G2``,pT'Qk7"Mh/p19?$0QHLqIj:W6\>F(YEdSJ4[i(I@(P/,NtO)#/8MMP1o6_.+L9>;<+r[gN,]a=c%tVp)RCOd]M4Kn%_ek1+.JLJ!$7Qmb%H=op]PYI.W-HDg1\#GfJ2a8,g-Z4USdN)!drE4%'i@QJiaYeO:a"*'(9\RpY6'Wk&Cp7[AOf9ppH_?!P/mc)%2:40^-:K((4%,1?K]J+%=?b'LUk'e#E7m\]OJ2q&EXaKYRFElX)E8rk.G;Qd]2b$#[oHbnM<S_F$ueu6AgKp.W`]>`K]Y@l(u/-#%7ZA(lW#,lXUAKdce5Q[)=U-?@EJSLY6m0Y\;0/":.CDG!-BQF1?X^3,%l<2t!;=NdI(7KKGF!pa!WF?XI=TZWmIt:/"\>3'.^4Fi%,+;s_..5A"6N0TWA:I-Kk=Lh"@45F`fG4/u`dAm*ikf?cI/_g\6NZW/3N`A@Rt#=$V\%fr0Q^>bHb`TK"u1gg;JRZ)o2liH:h)<6%AI,^E4W:%mR0n=91N>.:?+#pAjI<bcRsURka_&(Soa20gge8&-,k$ZuXKHX]N:kis6hp$?;CTR&k@$]NAGM3B_3Ae.83#nF$76]d%ek@?Sb"r+D]thi'WT3!<MC*e[DF"@uVD.P4H.H$$UroW8B5^^CGZUB_qIMW`Pn+]HCuV1uHos_e;\7*m_70cH''3d>,]\0fT]Jj4%Y>ZdQ.bl%Y>p6"HDJ(YS]Th179?+pN4cM_V!r:,@V[f5j9!YR^Ui7)?j-g"3dQLl4@mfkJRBAVHV5OKSL8MV_'cH?]HadD!Q%:s4%]e^BJ3.uU7lR1=TGcMQKF@p'M;K_1G'IPY),FUBoPA!aJUW?(nl;Y$UQ9qr7VC7]<IJhO5`892<_CO8iXrD9o^9):[BS=ZgBQO,a%'RsYn#ZW4B23#i>.RYdm5+OG@efW:\,E97XS"S<U].(u:7`.3$*mS$PWgD0OBGt\aHRW0&j>?OpRF=GV-nUTm:DGBu[.Kb&*M6IT%j2u%K_dIp7ldUa>rjn1.[o*X(RSc5#/Ra!,K*aViKi?sa2FZ;NiTF&OU1%S0p,gU[@g$q,!ha[&E1Z`:O-M`4q(`0Ock6Z6%b'_n%0bC@#l/<Lq(E"4&8Q$R;GAB@,BtAAOY<j;]<M+9n\]r)CR0c>Fdl_PA3hr=7o+`T'QH0VH2gfT6)[d`)=J++U8R#K-Lb!1QPuFR=%C]OVo&UXU/=@mBf7=)e.afsKb@DNPjq!9F"8<C@b6XmD/!O\ACRd7ic_9ab(CW=n=,3PB85I&4\UueFAh;H,7&V!C["RDr(%;SP.%[8\eM0\Fu'[m,Wu,VppoM%f*V0a8sMSXDdN:DiFKDG<$["#3:Nh8(m#oW$AlclMF/&CHDTL"3Z!\a*1u3ZKJ1X_,%=o$WMdBk+'e%gt5+>."9cM$=*_%&R`!a!Xn7p^EA.@DpD5"q-/>7Ae"*<[fogNZ)3LGjllafQ91S:P6i1]i-^u7CE=+7rInd]?@nRp)%S4"'a?j?%4Qjt']Y&+X`Y(pk,T,i`"(lk)e4[(Gd"EsURj<VfY3%.#rF"<DEOEqc&-K7Om;<=lDUW'bU?1=l(l4&]p0kD(Y:26J+d\%9%q^@A%.`1>TbKIoe?F)=?m8A4gk5MedYZF;SYpjDkC;(k&.h!17(c.;t`4q(a(fMVLG,-n,T<k2dJ_L'#@<EHA?^q\I48a,Sg9L/"0")?Q%Rj+JrFrKSImIP1odqro@+A0T*'*si37>YhAI>kUU(Y]1,P"=hoc<sX\nZ:&rJ8YuQEY#Kf,k@U_:ff_EPD%Vr@6OfA;&@6/6k>HL%$qAcVb*Pn^A!X`2E6"[Ha\W'1W'r5KZ8<S:j5t<KLO8'gpmIY!:AH6YE)c/#PGh#!(!!UG7+KSaU_r:LkYIQMH6I%W=>@Gn6OhFa%P0JqoDaRGt.g@3G%4?sf(^QpT"tbqdbuS-t*(l&;mC#TCYe0(33%`<H.AliUq8uhL314V_8ZYZ[a\tEt:(5]Idt^?d@\B?t97B34%!WIuP@O%&gP=T@in9KJ_K2$WcMtFa>Ku#jpfAR>PG!q":!m)@,1n2oD)C.ad0OfXReXOB!H'"iCW$+(DlCust%=;48,kl@!nm_YC%1i-/Hhhd,RGdAhDh6`(Ge$,J6oMr*?fe+]WU#8=jGSJk"lK7)-mt+`3]cjf5'VK3?S"Bjqc-?1I&S7r7%+Fq:/TP.AWeT'K[*d<N%B/<:?\h2*5<n11/C-n0G$j9_#=AZBq30uqo85,Hc]Nd!f5_D1,Ug6q"\$=2u(fRWun1ag+3%)?C1]8m17$h4.IVo]8)H*ihCn"LB%O;$*$6R`dAs3*0a)o]PI/0f'#&5R)t1*NWJ[/0Jqb`p]-bZUpZYJe)1>el@>%[ML(b6L[8n]R5q`GOU^iJZ:8gL2/)R;jGD35=?N%Jro/pCj__0Y[j*-E>C&VX[Iq,)IpMc4#0um4^1ofSId+jO]p8X@F/D#EC1[#&>,%96*5P:>$<W+r2r/'P?L9k+o*r4D7$fr-;9i/%/#@NZfeoEFos.p$?%oa@=@R896r(MrHB%Ka9tN:-.BI2R>b*gf1n*d>T&-u//'jN1*Y3C-BjL/6?E5)WUoqnZW=a&<])-/A64$Pl%HPhq.6<\(!P[F2p5pX.%4t`'?jG(rs*aH^g[lW+Sq9UEXe$CXlZAApP85CKfd[,iR[tjW'7EYj;NI+"OoB.U^!'.+9Bma_58V6):%f%WU11+''KqQjp):\2I98#I]bYkajLm$X#iqDQ;h)LYr:5FU$+W^KK)4d!]>P7hBrNG%Wr+cZ,a?/>+@8Z?Xt?*U$pq,GP'KP>*=%@D-5/cdUYV+Gi0.Vq"i&6%8%.%*1gfBdDkP#"7]0jeb1oL/p9E[M8YX>^:I]#gB$hbCl(T<j0&JFQ[Cld[GSt;D..p@PJY4=Lh#q%TTA2B&9[Id0mP@f<eLWIncb8bI[qgTmY2M?E$[C)_T%sV9siY(KIF/CHWcau.3Kd:.t+hCG;Rs1Q$mN$.l:nQ9(c=AQA(k&9Q!=>%JbA*$m3U:;&eV#V<8?oh\/+4GK5"A;fgB-_!*2?e0jQLEebNJ/F"<@]j&JAAgdPr>Z_%%3faT.J'!0,(>g0^cNu"PDB52$jCR."'%N)A(I;f)e9SgY+C(o`ST+J^;%F(e&PK2_rUP+"fpQ<rQe)AsDqHg9slni;D%j!bABF>!=@FN.X!L(5j^NGANnP,(NtfG%IeI&8o-%8<g)f,mGe;inIVCCId0i-O^UYQ43ra(h1\<Gu>bW1j(^9KPC<kI270g_19@:RV3c)?m2Qd&6C%RiFNj1AN$\./4[Fi`@38eYo5U7%11$A[+9`bA)#B5N;&6?N/L*"20F2F=JO2?*EZ?Bf>;6!Z^Qd@49W'%Po7V0dM^W/9<N-cMiqub2pWcC?(`^rXMH*hS\WEhPRnXXZ%S_#YA+E,1Jl?J0_N[u<K7,k=+Mjd,?!lQ1nnX3d!cmA8;Ea/eOhuYa;$*8943pe5q1EStS7OPJ':_)!P_19h&Mf8C[W.m&NT]DHZ%ZNlEZ2DfcVY=_BW^gq)G-lBNEegX(GT`Yq$M$U'tJ/LdAPuMJ$ZbR"AHAM'")r)u:CrlnjO.W=702C1+R@lK#.$b60CfLWQojP)d%KEsBKA[$2n!XQdt*0>7TB\bY/.7^GLB(6SP;'i9E)ULcB+DG:J2FQQ>5i`;DL!R$2^a*X>f9s"Q1#[pu6>.ZJ9lN@_Q.21ZfkT_?%e&is;^R[pHO,0lOW?f'TR/)9mFjV02<ck"/-t>Z60i7./K^=[=/]='jA8G"e/.,2"nug\Z"T@PT?At2<A!M1KZm\%^EAd2T?hgeS%>>55CkfY1K.nI:USJHfuIBXs=8CM7l<Zrc$:e(;]\A7nQE4>a?f(Vor46jutT0)Y4&.bW%9T,NA1om6l`niLY^S$0/(YQ%2H-HC@%Z9)f8<ZY09KPY*.e$$U,(Zpmd.Wr+ueE6CSG>PVs.4J%7ip>.Aq$?`(0#AcS;&0?"$,jCn@PtI*[Dq62nQfbTLrMJEH:8U,A7Ad0%9<<<BU5qrNUEg$dbFF6M06/#$]3;OmmAaQjfnMaC8GtsOSPVA*PrKIk;ti=_kR5$(+=`aS"AL.A'F0(pEnR`@72*"4'h\]g&Z(rG%fatA%"sdJBj/6(+Le&$k:^Do3?Sp"3d1?eNrK8jN?;1kE8J&9NU,^3,JVT>n?G,R>TPEV0;ZHUsGN(4i-iH`A"\DOk%iDg?-6U88%(fCWaD4Oa\X!&*J^<k4RKS9K]@3'$Y-\[r+%D8TJ#n9;#G"+<b7:1nB.F-p@G6277b^?H:)S=d>Cd<3EQ=r;.huHYTEe6@jFR?1Y%KgI"I'\H5pU$kO;[MbaaE]u.QOqu]Ea$m]H,gJdXL*8t6`Z3%Eo!3QA<n;4O_=60k=W(-i$"ZJt%54+6TkZ9&crPdh=TOmHmp%#:%f%[JURuX^bZ!&ts33U[["`5CAdrQ%7?=QKg=,nP\&LJ%\e%[4FPnj]*@Y04l$bC]9O4J]qfcXb::F2cDZQ.NFo@$T*?9u`&T!1&7%3X[^$V'oG88u.2?j&';A98LrXPQ8*W[=VGc'XTBb7Rq-dgh(g?@:E/[5Zj0$F<SNd-oq/\P9T:'YG>u;*4<4%RMnrR_XSm9!\+TA%eqcl!^bXb5@X].cL;;$+hR6jaacX7;XVc:OE$<]:Q>K!;<Z!=n:6;TS;Yr6e[PnAlH`Cd;2cFGu2U4$X=.P3ZSfr,J/!Aj5f-EoL%6M.LZO9k_t/UL'r=Dp$-<M@X8%\^*V9f<rh7@.\pEA8soZRC[MR,Z'YE>Yt-.U5ig9cS,r/=;`r?A[R/cp4WT<2?JS5*PW9<^`+@%.X[=$]Ep"S#=po"0,7DSTp<9%P#u%n,%IsBe9JEs9pr:d_nZT8/]kSS^JN/Ddm[Z<'T1CWlpCAgL%lk.S7go>Re:=9UrfbtM!/<#%K]LZ&,jGi<>((T@AtXrYnFV!hj&W3>9,J:h$)*_D!nlF`KEUj\H3f1?1)WBtd*Pb@>(Ke3r+1>$IBGGZHu5eHWJ2A/lrD._/5%gF%A=S).(@9;G?e$-/Vf!,YQqB^4(&:b[=tB@q8@H^LHmO-\/J<nTjg:Bo]ZqcS$/*,@11\[mAp*06Rf*Jiqe%hGRfr@5f.0mW=u?i[%))EH`F#OfSmJM&Ia9W5N^WAtu6#<mWF_#bpF8/<^FM1)"AQP.XMWR8U#effQCld*(G$l^^'h\i_,iUfs6OpNj=i76m)e&=8`@,@K%[B?bp.[Z]4[\)58-cmaZRB^LA`0gnDU3hhN-[b,ecr2C=]OcqC3Rkp2!>FUWJ<3W+Zl.I0Fl81D6n:!=XcTVNpuKD*%S_"qdEdP`%qO1\6R\S,R5cEq1U"uW7JoBaa98$m`C">atT%B"]'!bq#;jjfV$k6Agb^(Ih!`Dk+67@an&D:9Af"#?o<EH>[aR-eXkR--:G$>E,%L<jT$`_@)gRA[>RJKQZb]"SumEYquB/UlBBU7(R?3%PZ@6=d&Q''U`:HV&>LD_u$f.Hsj-6T&\1'WmjUo!t'r_[Bq(j/#C1,G?r'%&EZs3"?u(]c*qJ3>Wa__N/CRI1WgsYV\'QAnS8':C0R$mh3G28rXR.2Q^B<%=f1bedZ<Epc;k"i':AWHRB_^<C;=#@O(4KD&-KD4%(/8R3Ts<<GWp/W01li3t4/o30BLYe).[jOt8@b&p]uJ@D9@G,SK=3JId`i`D?l;#+,M7^VU@_U8dFlWDdHoqr8:cJ_=/7fO,D3C_%\;-m![=pI+HmUS6_+&K4bSf-(^dc&N:;6p_gd6rH03*pg;6L-L#,WRpfgI5?--3D)p_Y-!i^/Eg^i"RFeP1oY?!mQq_*D:oB.+HU%I40Fp>GdiZ6S0^"\g$9;p-+hR[8s)&D+Pbs:6LE=BqqFC/#9NfJToe3Y>a&W;Z-HGaAO*4Yb<D2g>+^rR0b2u`eLS<9$50)]q9^R%5F2CH;-m&\I"1:W]r@3sMXQcKp#nL<EF.)86h=Nf20MN0@a)4O:H_oW4]Xu&_rHT8BQ^bb:gV>He2h/V-DKX_:\iA;S@BPgGfBp]%kNiJa1,W'bXU>_Q("rG2%%2V]*I$W0e&U)AP/Q[ulnQ3BdAJ_'\]]Xc065+GK,HPuFV@1.jRctqW%$6<mBL1o1i)+7%HmP\a@n6Z%eMIA)EQQrd\%\BM8[+Ye9;@3:Q(dr6>hhuX4HO8'2Sd?ZCJO'_]^6uFWQEK",6tReSZs,eIg@UFKQ`TW'*Cn6>G*`u[$FRW_EC44%=jdH-!+O#*]CsJiL]Bgq2k>TD*t7fn`.0%)KKOT\,m)'X%85b7`+0jQiIYKq.HWGudY&!1L))A#@^lu8h[l<b!QJ*!?<+#0j+U'`%_$"\Yh?8MYgt.BrU[0tsP*<;t`L4rs1"Bj8;$qg$ff+3#=bW[XeXnpu_=hK6&74)%jO*]#9M[)PG&1*r\M^='AZNQXc'bLh#?=JA%g;1o)=?$&B8lIS8QB8sO<RiPU<Qd>$:f`Zs]gaN4j,$+_*6htpB$h.+`=d7K/p0F,R[N@5&8<S!Oar;D,gi-p5u]B1Suipc1F2_W%CbZ:(.[C1Ff)e$mT=O*Y77$c!_2E]YoWa\t2U-1N[8ORbmq(RE%Ge0N%I$aE14b']p1fq,b%@CCN"-\s.3t;PQdjArengWr/sNmo%(R!gGc!#[%ERWU;P.A&:BhZ"0.MH!GSJH$k1YJmOVO(t5AaJkS31qlLH#f*cq3H96Rk];kZ6>P&(qA*m6s,H-Kk`tUn%RBOCN_Ol%2^A&nKe;n(+Ua[g6"HKa(6CN4DKuM``o!4S$N!5qDR:\h6F!<dd3A=DW'`q',p=So,D11E<p@SlP+2"hMq\A$Au,&!41*>B124Q+%4bX.Z.r8;a+=86;.ihG`P%\P9NNEo+llk4^);/DKE4!lf71.Bu<&;_)iiup>0cl/a!a=$uYI>UB\n]Z>7C(o,`Pb0b\<9N8Z*a.D%Wg_a/`2G;U8P4[rNl;-i4KAWGHQ?K!l2[:>$E9)o*&gZlq&P,(Vtq-I\2+29(C'#qVit=b6Y3QLZ*?!E9Z\F['9^JOW[Y:=S.Q3&%;i%?>m:^ZkL)IZR5'LM;+$+TCd*;$fSjJ&QijZcFr.&NV,ZY4oEDaV,PGB<=U_>HC'<=!k<_Dus;P:.t5?H&"ONgG^=\g)R6=oH9%8nYYKCQ/oc4_MO'R5L1dPXnOt`P/)jSulV;2nMUI[;:,gcX*B#rO<&&2>o8q@DLRaRH"YAm'<X7]1O9H^i-Ed,)'S'5SINF.9j=g%!J9;(aB#[n=+l"jZS$1aRTjlAR.RWB"l\L1/!Y`recZ$!;&*05(+@D*-'Q6*Tor'pE=,'@#6`6Y%k;t,f_q0<02`u%<+\dijGWR-%7?9#kHpaIQ`YL-D\Ta$c6gUil@4^$r.R3`tki1I^TE]4obX"\`+,F$=\mp.s^7^^'hJ*pFYt[+j#_%BFNrdFBkf!Z+e+WTh.glfU%ZUD:$hRBd*(1`sNMYDL`6CrIk:hr`O*5!\(ROfW4H,/!8iCta=T(XsuP%_(sPIJ>#m&^b[)SmtY/HX=Bd5)Hl[Y3ou&tRrPWsT?d%*Fq0H1QQH>YrAADAa'/tm9Ole8[@H^0;sBA8HTTV/;1doLK*7?&<J(rTE*8j`_kbg;!4\%=-TAmf=#7&*Zk2h'f\aY-XE%m:O%-Z%A,1G<8aQp_dniSq.gU0N52<KN^[As=pK_Yl='Dn`9!P"4SDEiYO<\Xpnkque;/fm>VgZ*0*U!'1(C/Z`s4T=mKMpG+>HlUfV&:)6%_P7J/5R1)A>0=8TNJT:JeQ_B?NG.W_G<USP\q@^[MU5u(lF]/.aIl7OMrAhtVqQqW;l^(9b_Br95qY/]1ZeqYT[:]3RR>sTGI[s^%AT=4G3^!QA8Ko.jIRCY'HmsfG5(1gclZhhk@HA(UMdg82q*fM/b\*Wk(F+\&P@T\8Y28g&[(Nt=_sfIl5m(RN5+o>(=a+.P'Q**.%D0@#aKcq*7gY#kdJa1d(N6"*MGfsH<_SpD_I<`KM3Y(*6NZt]R(p)LI-u]jHSkhXLVJ&Bh0Sm3>1S<beIMgh\5-ir)VA>a@Wr0p+%Y,_F].'V"$813/NSuQ5dY27ihaDm0]GFuM5O)a&U3(u0f>tN=aZXNoD):p2g^r\1B<.&"qG5M2Ao2%p%fM>!2fBnfY"mmdUGVsta%oQrS`6C681ad7adHBj@QrIL+/28ULmn+2,#Krf^)6?PSlVZKN_2LnLA5I^QI_lJtU6cD5gqDD7r&6!!*1K>pRDt!Mfk5P&^GF%mj%XDnDH=.(Z`An5@7>]N:qpS0P-PFM'aHeq_i/t&,<;*L[Nc'47-`3I[:g[:+GQHKO;jPniL\>N!A4r-]C-iLH>daUiJf%`0(Q,@r*%=':?&X):jOfODG*]H*8-I&M9D;J.br:9%j<!,\WVh[fVC[eA^?_n]%@NQI0mOZhXKn+&!DGZLZj#Qooj4Au7uQkb^H$=L^EVeihh%ZGqZno1p?88_(HFCgWXI=-h=b.6E0%&@id9^C^j)_NUF9:V&UeRNlrboDMcrSD[s+m+f3o[s'^oXm5T]m2tFm[Pq/iF10f-.T0_*%/r)o\l%n5.b:#(Y)SO5gP-tb=Y.TWk7j#(T)3K2K0K`4i^WWf<Xq=`AqFj0jqEs1tZ![Lq#?:6p.26fTOi&7=hb_Zp<(1BKFP'%L%)QkOGr@1N'6;2I;-a:!l$CRh<0$au1iJojqp]3[3U&^/M0A<lq_lmn['567WgY0,mf/^:_UdSfsP0XI*5C=O/?aj@"'?$+0\UOmT%-cd-[c[X>_6IXdq<9OS0.=$HS^&P8"PFPITpJnSrEDq)/G.!/m;&9(%gVb5l426*tqfW<a%7&UEJ/#8G;pIbW0r\_&[em?t0Zm32%p>888UrFX>=glPgPUkFjlu9&jgHH/:Y>*S!>DQ)KduS_B;?60?7*YUZp;cLRo%Rm3[e.21KPT9/bYG(FG!;l,p&!lp-'&t&VQ^8j%&+HA=c=7l=#HfOljPHQl;_j;*D1*u`^T,mu[KGNL8@]gjNZF3rc)(Vh$1M:#A*m0Ql>:oujh`P)U4_-k?`nKT,iiYA[-[`23uF'-%!LVJ&ZJ+F29dM&"(E:=>=m)FJ)(/Ip@sXKl<eF#5;+^.5PpXYU+ZOase"Y%"GLiU^>rG#ZDe+sH:`)t8QsS6)>@'Cnq!,M6F?W4Y%f8]`7EBIoQ1?`P>XC:-%Fb%G[k29Z/\/N@&f;s2,nrUk;"GsF5(Ko-MH0VRoK23l+SR%TG&,5DGOP#oe81sW52`$ttHtt8\5q1t/%+QIUhOW-R20PeWO*'nU;=4[mVQR//`%/9pn_hsLI=Y\"qWOdRl+6(l?YcL]PeJ]K-.8Qg*XLHM-Wt=`cm"pWf2aaAs+(_@9W`nKQ%$9+$KKS#e'lM:C&8TZHfFOcq/V#dO/r$]nW*I9R?Q,cERog0'`)c"9&'1AgnR6l1PR&-D=PTr#Bj6eDk6?-QPTugD>V4^\]'C-fA%Q&s:2YG@b-/4,P1oI#gup!tb"r:]<!a$IbURt#b/?g0'PrO1s"kpoTA7.=oh^d^'d`U`T-3uJe[JnD^aAmGVmlqgXB,F)[VZgSgR%_4ibH9p3In<%uqk@1G.1q0bs0WI$FjlAQ1t%Z-e>).kE,,/l.0V"d9K^D\ku3@ZKFR,LL@aDS$#Rp5-H/U,gnP^S/@0@3ukLCES#%rV+KadG]]-[N.cb;Dak7>FAbcmO&GsD/g-S%OI0r/*dej:R.l#)2oiIkobs[P^08KBn(KkqWtkAI+,.NKdLgEJBT*dKphQ6GAYg`%9_t$<PQ[(M2n0U&\gi!Am2Y?AOXq^2b-f`%=e`SpG8IpQ*037d].EX3/s55`D5;*bP\ZM_4N$uDDlU_J<](m/T.-DmrO_3-g\t]B%Cks%XZ#F+)a:B[JeTU#ZO+k-.H.+/H8Ea7Gd+-n6VAiL[!:la']99Ju38?[a=BeFEWPct?LX/^WH&JAiRd'mZ.=kbo+K&T"A8%nF%=?929d8I=9)2e8nqLk'B\S4nd1TnrTZ<R/f/^>TZM.Od\'a.OcM;VIecHdIZY61TPVl=b)U)?)X2Ci8*qDc,>G^CbF_[^X([fO/p%1F.b4R(WW:*u@:GPH6FP.lT8@BB'qqm@(OI;6/_G2qt^P76@ed.Y2LFG?peYXopm1<e``1SN*ZeJnp0+_g>B4gf9`HBBquM%2,QA%Qt4BUE;-_0qTmmBjWjEu0AS$oBKH5)aL/,2Y[7HBC>[87132H8jtAcdS%,/#[p*_6*@cEMm!P\gGWI3s1#nQI\@_s!mL^q]65FW4%7ESU(n$6]&<?N%JHY55/\L29+Z>#UUhYq#AUt2'ZQ:=ErO9b"(J^<Q>U5J<cpQ@HoaYD`L^16Eq=-BBMC,'YS$]7V9hNk,X;j-gs%ldchEU'IWc_dA%kgPRpDpG+Ikm5q9eOHQe/4mYH%j`5m<IF]@c`7;Q5Lt5;4!co$9^FsmMG:`HOTbiS11cbCY!gc<pNQl1)+=1-P%@Lj^0*6)VK)t>N!NUm<3f!m[#Bit`sXs"D*#IB:e^8kABj-rS46S>Wo[+P7agM-tWGi`!^[4`<9.`r'(ND"qh:!<Rh2W:(\o/ipd%ZAuXHBijCG*QF\nCoZgq4hld.@/'Y[i5n/>!9q]D43.?VIHD=N*4A.4mObMEg[/ZVmp/+:/7:<3[b#\BnP;`jd:o5fM<'R#i]e;>%^WpXf9I9PHFV^7!9;0dCV<Q&BmG`I!rbH,"EoAhZ*4UU4`k"TN2pXPn/r8L%R=]Ju\l/o;9cTg)K8P/eFRH0Ed?&Eng@!$n$_[Bj%T!VXt8@uDhqnZD[(\L$gQ+:RA@c2u>oC5dT[$fYQX+.T%Eah5+Cl'C+,!.(cOS[^6nTlB-Y5V6b[A-JS&:2m",>n)$ER>oKZHNG5%[jFO]W_/o.\t0W("*DjO45]19A*q"cZ=n"t_f@OC?%T'ce[R)YY\DWTQ+8gk'FIBb#\'jo9=\6urc:e#`:6\(:?$->AWNK#U,5bu%/H.*Ca4/l\kiSr'A2-G:bIf,3d%.c\bF0HuX^S*TM6bTq!F=e-RdG1>NE,@?CK`T<=UF>8o^r=G2sm[A!W7?)F-")>qK=>>#!tWD%W/&)KVE=EZNof)T^0.l_05\;T8COrV!3;%0p`?(L%b%Vt^3&IbLocjN.]/j3.kOa0-LW=[Mb\Wirqjblo4fPE<fJ<WEf?%\lHQr.%`j&F5?LM%AIc>2flD*HefCc5532X8<!t`XHlCeHhRT$2+9C8698h*$:>HD-Q5H;.BQ!A!af&3q`LOpQ@rjlM7Yj#r0HO^Znc=;ok%.t1S\&Pt4&Y*]E;J$Z1YmW["&%R(\%L93EVS]fc%EC-c(IPt2_`VG=Yf6I"aOLXc4h/mE5nXCkl;IaIH"q')RhUQ+45BP=VX(R5'%=@GZTnV6k'j7(ZTP**Jfq6Vd)3Ccb.jB:!c^d_Qf("^sp2?BAIp3;Z-26<m@*/A8ZV,F'3%DTGRFH4*oXcbY%);MSGjk+%ePI\5=%Wl'0UMAHhH3WZ5[$unS%G]$s)Q-otZX'=Zd:"KBbh\pQSP#j\06</G4I8=BNkRAa%Nb=I+c%CI]G&P8u,=;"aKSG(KHY8qEnr(7o%NFWB.:si/$C*EMOQG[HFAE5h4Wb'Z;dq&6MWJr(mCB_8)g\_=RjIHK(H][(8OSlY5J43JiDcB'URW"@879Pl48W'YEb$L$"Yc15#%%0BGY9W0^B55"2.S9.V*n0&)uX"naR6bc^ZP,1JcLaXhQ0phJ4UJaBSm7F(U=%b'-IBQ)UM;I+N:&qa3>[2A!K'/H9!"^Wp#,Ic\%TTeB,`>&d-AR[nc'd0g6/V+]s"$SJuEH6mX)B''m+&</n#*sIC%V6"f.ucct62eR+4D&]S!brd8fE8jACdZ/2D_Rsh01uOffnS,A%WLgWU)SFM%^#f&4`d:MN9A5&#2Ab=@l4I_+ArCS#ZfBd6ZXnClYl+;AGH%?o:\8='fA9DkWSs.QR)+Y>/GqSIna.fW`D292ZY:po%a1L5LNQ[MOS6G6&1-lZHonK(,[@q;OMd%[$Ki-$=HL\J?b'UCV.5l`gD%!Tn"XlB6dL_0>U\LDB1qhtO>F';grAu>B9jSnIfl!te%+&fro\X`Mj.]Jge5N4S8&PY\D-:`cN<"M8Pih`8Eh&-bE,L`?,m,43S'lsc(9o;2*fC#"lVX^79@g7:5k.Zi_,^WQilpC-f_$W7&%$J-u&RDjK+9");?k<W/&\-5V43T@74kd+s`E4O5tN_H-g;4-,oQ3N`ZATQ%'f51Y6dtO#l]@3%g;>P]iD'#CF]Q&\_WrABCS2\%u%+L@`r0oU!f_?'LG4i6%"<)47GhU]gQg$MJ&AoS>P[jhnckA?HU<!ic4`p!/Q:F_ikb$T9p$k-a6'+OHC@U</k"m92nc$V0c#P'0g%k,54*e\@-D<U]`7Tjh8(D`(RPhVe*qUl$0-A7'81"ZEJn)`-,:[$,W^Y/og`*A8f=N^a>JiG\"0\$>M<3$B.9mdQQPDkXk.*Hdmi%Vd[m%mGtAd#8;q<@S06qhIkt]60Lh/_=i=OCH?(KlNgsc:^aRF/P+b8>O\V-2j.KPPTaho\p.K=G%$!V7.1JeZ,KWj70S!_+"(3S%Y]"^-02%!*;^'G^>XCpL#;$:^Z!!Eg"c6h<e7]JkWh4q\RRU!%?Re&NM*@&,]5WN4lXsQ#<><ieU$BR;et!\e<4>C<GA3#QALY1Z%-@OqLOh;G*EZFgY@[Vj^4gMJ"YoY7AjfBk2Col`/fuY?L>(dalC*H=Ya?5G8n?j\L!Vo0]-d%4,q"sVMDjsp?m7PXSG5BQLgA<5D%=fgTdUobTCp`^u9\61S853$AP?!DbGP?;;ZI'&=G]-#EW9lo6Z/eQDdOub]VobfSjPeZgf5uW5fQVj'<RPNt,_iuFg.(.j#:?fM]%hV/lUBtG\R3b1f#o;Pb"N/^e2LKX,7'bF)p^2oAY76e@II2&f_jg($l:ZS8mfc&&)m'MF69HHp/rZ8DCO8$f+-sjV=O=4;5^b2aL%X%DU+K2b89)@n.KJ(],)D+A`$ZsU\$.P\c&ll'6-]]>Q\P2FG&rS/"R%p`0P*IS<n9WkI4ID0Gr^#/@R.tcc-5gcdPU@M6hGl'.P%"8``i54"eom8Q,?SR#sP&ij:"q7_F3htd?Z>J$ka-cJ9^6deo$nT__GmE7RtXHSo++M(>>5*ieAINTeqY4nio''^J/^6OU>]`r=T%ci#P-+[-J%Yjoc8-6"sfkJn[WqY6bS@,k9[o`,M:<s:uPd_V0BpSUdSIJ7*<U-C`rC6A\E:EB;fQF6C7i4>\.5ZZ@DC\k"7\)a\/%)Y168i'",0B<H0J;4gPMMP'F496;N$1gJPFps>2a6^MW'A*G(^Ws<O)37b:UYJ4u&?&)90VY;0</%;=&Cs7o*d]mks#:M@oBdd$Z%M\YlF\b#rkKG[Lue5Wp(?&OD=BM*V@OI%UEVNO,CPqp4OHf24%,N:'9QI]HX/6VBg,R$`uXdW^f/klk<(3HiPiq?3<NuF*BrIXf]%6j\2>%\_FUhc1qX!`I]!*h`'5BPC)WrN\=+$7WJ,/1#DH@Kj:Y<%-g_6_;g*OQbW#.2Ha?`1aDR1$^![(H`qJ_'fp,%?N+k0<tjD%0e"K?H&-GA=(XM%/Nbe*>%XfH!/detY[oF]IERhiJ1B-Q?8PUH>$C[:3=l!fk#3X/dKa%jqIA?$?O.!X:MQaB>a>p&<0K`kXa>[p%Zuu>mEm)&cLPMKo/]uFq/gUV[\ZsANL:t$>l5j;f2KU9U5hk)m=d@3>`g89P*.I[-US5SBP'[eE5(,\UW:Y`^LYRD>aCmZN:9bp9%<O<%i4r2&h'UOEYoMEfHAGUt,o@&ENWU"br!p`CL)#A$r5>Tqne@.F)H1+SV+W't?iEi:85VBLjhQ?0PQdUnUSpB;3B)eR7UhQ'Y%KE-dL(ScqpH7.,c9PH%e$90?U$56Tl!S,FP>4(VmAupj$S1^8dA9#0'@I6+sb#9Dc5ar('U<83dNG;jQ,T$U_JH\[]Ya^F1?A+a!%FB7_d::jWZQ3pW`HDlt%"8[gbED+8&<nXZ^P$Z?>YRZ6>l$%R3K83IW6jp5hgR*/UqXQcaONXB'd*-_uqo/H6#qHBNf!3N'qcD&A%_:LtZr.r9KF=SuHV#,2gI!-,4hgu\mI;UcD^lP(j=D.(%O>;!ba@Uo?5$GK8;mEHeFs1t\\gLTYg^j-U@KBd3!uec4I"Po$gRH4O%P`PW.e;j^#AaYl_r%,<eqZ1PFf!FHB=\fI)DrsdNA'Ti^9@-&#@d\/RWG/W%/>ll@rcm0C8Xnb=MWbWk'XJ=TN1qp0?_Mc4>/CU'%oJ0o2"Ymm?CeCt:\798.>:?G^`)Hl/a:*Gqfu$c@DRq-HFl8d;IL&M%Oj3C8"4(h.q:'S.c:pkd[NB8F>67TW&RA>76X3AM:=6,$%F*kD)>t(O\g4=Q*6p;u_1!O"TICZ=Mo>^0e;c6&KF_:s'Ot(Q?Mi#_UPC*fQ`"&]L"gNb[YHk1,_Mu['$@\boaZ1na1RmgQYhVj4%I-dB$]C's.-CBt=-:tn-b?%O)d\HWDDEBS8Wjf+j\k"bPAtXtN6g_$m*KbArh$1\WL&c1d]B&809O!Aik1dIq"&1V"6`[(CW*R#U%VI/T-`3D/U&1/nlgMKVel47QPidgIBd^a:X75tnXGX?+lDH_dE=2][.n5[2?G)!&P,8_!)\\#UTK:>m;,aMeb"D<j<"'miaDmSa=%@*/BNp**5[+&<7nmP=(9jhu@"W#a0\&25D3<Dq;Uq/Rt+qR6]e;h8MEb=+RR\qgB@@"W'R[$M@V<>)jq;!Ib6,W/S9audb3hGk@p%_':ts>YNA<C"u2bjm#HklajIMF:@oGfKF08s0O5,U,;d8ab>13j:JXC_UXLF<CS!VHHbkYIoA[D1Mql)AR>)ACFP0>lD2g^4l@[`%=#*%p6(Mnq5<qXe*g7bATM='4s!sQOB$2"WX`B6Xj0dZ#43oO)YoG3?%8*==4_\sU$l>^Q9?^Uo7EO?;@[C"\Fd``<mR;0^Y10Uu%[OC`nJm;p&e1U<pP0+WAlO?lZ2O&pIh(]J[/@1Wk+fj'D&=(@AIAb]P&+Jt1/u@d\^C'+CI?\N6.sD/d7WFQpendRL9"+)Mo3H>Q%VP.o`c&1qZ_jBJ#]%aU`drO:0#aUq*c&rU;e/Wgq2I:IWe4d!h-/B[]\X?5HIa>G2D4RB:;?5DU9.@k%Uh2230MIjmpY#qES*j4#%7"[,7YLLj:AkUhb)b?h#:j/\G3%&dO`tk#DbW@lVqG%gZ\]N2K%1m-4R%miJpRa''^[,hQb1a<(1-+*On8b#+_.AWdO'&o3"[jO=%i]M&sH\q"=&]51p1f)3IfI$@l>O<bf(K7Ea(V]<q:[!l&h7(JV$O+F"mo$(&r0Au^8m[0Pb=^e6b06\D=oqqE7pjd:.kFC%5T5'9%ZFI`.Xj7cLrsct!]68o,/n)>m5jERiLo0`8ga)UXctj831F2+!1^Arm8#3ASjt!W;ZsM@DEXN^Y2SCP7UWDjBZer'<-RtemRQ*%Y%7V3dbQ1s9X8/H"?k5&YR,fjfrU+IiB^Zg6;`AI/JBl,3Jb3&$CK^fiL95WRHJ.8"?l>GJFVFP[#"&=hJ!c5H&.3Kpj<ONTBG_-#h%Opt5kpp].P58-+iG.D""9;pLphbOuWHr5`TCgrL=Y:eXQ4;iH9^)a:k0(.T?)BmBO7""-B59SYOn2]U1K?TL3YI?uEA758V:eXJu%9qXdNeP0?6YA003(Z9)Dlr-\s4u20XYGTd6r^rKtH_G?B_6"4e6q3Y<?s]_O1%4ejXKX]\%bt;I=sDJ=n[6p]h"@Cp5IbHknmsE.%2=G:t@ZS%P)9I5BW^eeWqclIJA2\!l'ZLaOU=Qk.4cEA`pU4$??HuV'S&9IH;M+`W;+9]#"%j%:DpI;CW1j+E][MY4B"hM2<B#'d%,3RdkhoO5%FBqL;q8oVjp_>Z-Lh[2&&em6PD9%[XQL<8b.:^%pBu>%eb(9FtU,5eB6I&g]Nq-P4@BP2J$,\EZ?)XSfjcQO<i[Jr&%/i$,k=71!oM/:luh_p)&J2LT\[utQA$=@**5)giUWuk^XP'j^)pYL5OQg=gV2tR'4s/MB%C+L0^?oD9Cj&TE$(dTMZ3_SRs+4,*5%8R?55NK+BuG'q5Rc(mHSXu4Z9:/[q,Y.[NCPXH^a/6`Vi]I:M7Zme/A7Z)-KZ\]BL#=[AUP>n/O&XbP=`1t5R$$n:@e4ScN],P=#%c)UscSiFKe;\_=#3r.AC7YmNR/;.X7FR&;0N_&<>GC;VJONVYQ&`sAR-#^fpM"Mq]pUYM!Uh1*tYB;EhbWhoH,h)LOBY:#-@bF#.%4#V,E[k\EFc2_"SU%%4<fs(<a2-\.$>#U!`#UB<S[;#:JdCZ?c8*1IV2\D=5>_]O%@>f5*5GG-Q$kZ$ge.C.0e?%q&<W]%*O!,JW%#;QJbc#cPf^G'77\CQ`2Z.M&ZXBh2VQ+*1g5gjrs,fEO;#r+X;f(90GFC03CGh/Q!Ll>Pg8p=3ZU!^LA=U*qg-*^H88PiJ"\_P;#%$L.)[9nCI>Xar%(g2EC%J5%08+TkpE1sB&P>C@eJ"&f`,+e+gPd>K"eH)Xc%r?)^m%;qRR+,oQh;S60W+ItC(Q]R$NZb,IB#b=9o%pDY5Y*c^,un#Hk)G?;Ohq*FqdWUTo:W/3ao!IoOH9CY=%,CqP>B!Af2m)C09Pb1OfT#<_p3OL$[=,rX44/\!(Sd@k9'VVT6,aCd?%*C9(_DU558nDO+C>DF9kF=Pt].4-dkLOtkgPWmr'"PR[\'_MmJ0n#GU6lF!#@VP?7<gAaO[.LE!_QA.k3lcu9BM-S7H\,ein7:WF%7n`%70Zjm(3NME4#9C.l9H#JYMViQS2+?p9TK:Vf=Y^"`8qoDkWhT2XYG.\;EC'[]ZR@5//81F"@s;>WAkkt(Lqbk/mF4S1\=,*Y%4)B%]j\iqSnVE)Kb3XqR>/Ml+.[q^U"S?Q$2OCcuGqcGh@#7Aj9A2`rE0iEZ@Y!c&KY$>bdK.(0eeLX]BVito++s5@]>&+&gZ5F3%?#@%2,$tG;bG)=L9V^VnPck1;/$ZPBdcqX.FS2q"+tuKtVJi#F$t]2k6t*t&?9GL6>(WrP)\Pn(k+CXc7LgS:5c/uQF-1fm4-CK!%`VC)nV<Z=3PXPYJZpINZp967W`+Hi?9$#7K]2l7%9U66:@9o<KF%e9plkF7E0[lJI-rLWk,m;;Vejn%C$/)[dB6Q+NX`V_k+X)p'%P@<<iXAWUoJ=NMs8WVXlaBPi:$^W\[0Q>`@!Dih-o'o9e)#48j<gjKa-Am_eP[TPNMS<@SdYHYX)(=u_[X+5V8O1E[BWOmnRtt)H%p/Fe5S4QIR@u(R@PW"uEM9KAPnSe[L<d3&t(&a.M)DK6sqpDmS5ub*(jcqQ-/5i:1:(NLBU'>!?*B_`3Nu6g#XOV,Bp7S81cfh*Z%:G[+jKg2)728kAsG"+jG1(E?:O]/*4iqP$FD)Au$Gm]X,V1:D7VVEP19=Nq\ch*hL;f;-F(K9$JAXZkrm)WP5I&B]kPnu`tG5QPh%1pZF$Ph:TiWpWaqo=Ci*GWTHD"E`n3l_9cJ&ecVhAZ&TT`%^GH9RCLFqeW:g"M,J9_dmV*nN0hE87![3`B>3)dNL(ijBX>&OI+7h%9>&+hb@^j\YZYD>03jcFrr!'m]p^<*5;dTU(jSF;L]H-!FluV*]kS9848])$M%3lD!?u2YWDp##Oc8Z_IB=[LpaUE^ipXi&]GQsb%bK%Z7XFM?&&3%[Q(Um6IYcM+WXe@9uIeq3M=(\9s!E\-SZ&S`njX(ZVJ&MnpqnQYB]P`Y-Y?B"jLe6P!icMu]d9N.(arfsi9&3_G%%[/MH'8AS5DN!$cfgj0:FkqrcU=`.oWrbjI!@GJ=;Mb[tCKDVG0Ip!#-'ur_Hia+@]Bf6LS*&\-Z7Z^#e(hojRC?B<Z%60:3nF:`%i>ogbFZ%c<L3aF)+bg(!-&1l_)QA)."O1Y;$sb)LLLG0O@Mh_kY)4_KANb1I%Gr9E@@f&0QJ1)S+rfr<M@t,`eQNLQfa"'4rM\)&%P%a:H1:aYq<5"Kp,?<#*]/"YJUQU@/<K(+$JT;`aZ10?NF[jeaN&Jf%UL'E>9Q>lu;N@1;;-dc^#RY&g>d!@PgGS/d@VNfE>t*IK%g+56/Rn?>]a`7k?b:7[K*cN?LK-$PC@nuF0i=(o=6/$V.6CL0%r+8\jSm0Bu[jYD.@Cc(ihL0r[+<PR)=JX_\q%b,NL<(B(;HPp0%jF-U+Q1gaM/Kuer_rjZ2AiLIS#Vq*h=t9%HLI;k)fi=Mc?.kD&:o4nEE1"7=H^n+LdFKJG9Z\XSa@+?t]YS12RgU[]5pm9nJEFu3%aoFi)4A+d7d8MupcIuSjQbYHpQDVpE[HT-Ah\ReUCBesIfQCu&,B^'pg/4nJWi?3>$-f?9D#MrIFFn]qc"(uYF$P#+O-2L\,uU=a%B:p=PX*0Em,7H",A.B4mr&^uV\l<ZGHW;rT`:ZC?a/52$!"]aCTperC%qJM<R]b-KAD&j"_j#])HI]Ve06f*%/\R^QOj+^bLP5di%da0^IAdf7T\"`#-3.-so^7.%#<0C"Cj0-.aA&"7<T45K9Dl&k3s.Z,%TSH3/,HrJ[F=idD)WB1\*R;rFKeP0U\g`%Z5SgD[2oM_'%>LZ]LY6G;urXQ2Hor[Hf1<o%iV>1U\qk<\;hKgp3fiHt!*EWuehU+#TAn/!>H9`AjEZ*]Jg\SfrIMI]oE-oF)Y2\BfWZG=MPnn#]%fU10lD#O%_Yk`N%/Y=J.VN'QU2'4lS>2<(07I1uD+e@60`'9.n\q^!iO0Z%@`g'3-.ou-"\KL\2Q8/#o]#eW(.dH7dcUoGW%FT*'%;D+13I@3PWMHusOCu%c0.\OO*0GgprCg+-T,dp=\C\tH3kJ19Sk-f'<[r_oB@`Rn'j.5)7=C!;"\SN%eC<8VkKZ\Ol?IhC;eFWsa%J.QIqq5n?T;b&D#ibrla5@R`THS76r59h7tkS89/"t2%go^=%snX<_O:#@jo?`D.m;9H"u:.+sL]UltYTS=]T(Lps/2/l.F6"GLr%`m+!F<m3Q"06'02["6,[`41W8%/mSrG;N28Xp3!;2<H87N6l4df-Nsn&K;o@dA<_0WE!8j0K5GiVOZ-Ng5S%R.UITr9gL3n0d<)^%oDl3s&Pf:>,>M5=kg$"M;$=-W4eYX\Db+uQ)_a),%Fhg*m6?"jfAl)1%IK24:$:UK`E651IZ"d'_RJ6X,h$rlP6b8,Q2<^s`5RDN%Eml9-h&S6GrCGf8lgIN.YBF?05*k)I3t-_0>0BaR&t"#,GW4eg00UqXP91]G4s-RU?(%M/2:o7rFI"d>\Z,%p_qU8A)LM!$`'W'Z%*?3&uAW!g/q8,)uc&]H*QHc,7q\Hmr5P5Y6R;f]L'<KupQ,OR*SW$E_;>AuUA=2_ZmI=IGor>\>.*pVV`%37s;=1n*""Pk`I:5l7%JrjR*>GAD0gEsBeO$]Wi0--*n5(-peEm6Z?b`&I:^@RD^mA"ZO#V!rdo>moP.c//a>g"_ta(jJBcM94%_p489T@25(QM\LBnb*2j%M5fsVl">(`g#e+?ke*BdpU!c]'/QMBH2D`>nO[?k4/Lfi`rMAeg,qVerA/Qk"PF^.V>?S8K%#";DK9lJ3Zrn5fctZQ]])uVPq[0j%DZ(&:6q?ZROVg#U4K;j^*!t`7#$CZ6j&.$k<<B@*e[gcCaYtQ3Zc:C#n=uji"4[18U@sGY2R_].%9iPcJ0L$MK\GPcDWWOi>Z#+C%BF;Ws([q5ac$"PAk9SZ]^rc0%L2O,]I_Hl`b<\0C:Ff!Y!4!<]o?7'@:p9[JiMDXo#JppP?p=q&^*+]QK>*8q`h8+l#s826#=F6U%RIRUV;.ss3X.Yr5DGHehpWK7lXP2OpaAeg%#K:i(S4.*!BIJ$;AJ'CT:o%=+jEEg,ZP_>UUkj*Q"R;u0!@Z>R>s%gec%UL)(I3j9%mk&)]?TTlI'm;]o\$@Dr^T,0);Lu?$5e+%%JKAM1^Wjt6^T1hEW(us?1%I[(_<VB&B<c;\4&fQ\Cj;?K0Gi3#?ds:3Cq])!G*sEU%d</?8?1O^6Nm;1[lhBJtPiB>bZVk>3Pi8/cKu02>_G,;29^.@S<`)a4P9;.)F=B?55tJ@&='+&O%9*VkJ8!4jU$NXFk$gHI.I\I@%9^o:q2<@,diOcZg(=aS`Uku*FCV85cLA]EC4Gp#]5EJT_RB&*_9ki@`'1BL!N'memk(9L_7(%'DHflTF%mQX;DZ&p7!*\Ymp7/\k%8L4_%q4SL[pmnC@7,`:_\%$2?EY`MP,d#n.AP[<,LH&-(r0teYW$Y;)pT44CG#:AiX4t7FGCX_KV<WL@1esM1rWLIbmJR&(Mhh41%QM.E'4j2/.S7<uDVWXm>H5.%OY-11&*YSpcCX1k+jmI"f?;f8Q&ZUGY^ar6<JAPIZTr*OrrDk+:RL6e5nW;4pONjVV`M)3`]t;HJ%i=R*m'Op'D<m6^9?T2\M)VIT75_P5WSf$!G$mAiMjV"+*0M4jNCZN,[VWV9/+TN+b)7BYhRtrOMh=]L`P1,Z4QW$u:>o7m+3WdVZ%m/a'Z\`jRoo(@P,hKM5%n$i7M\1+WRNn!X!=`Rj'hDRdcMP4XM!?dGWo/m(R.R>bOn;&ja"^.b_,V(sYc*PIRpi'd>inH6K5_o<-%Sabr3o5\h+2#oFr-:hZWEH&R)98aLVS%6tW"n#=lV#G.-&!%4\TWnl"dtFs*pp*s5O>TLj,p>"pH$RKDi!<5'JVc9!R\^7s1P$I;%h8BXa6s>9o.<our<AJu"^Zg)9[1W>il<7^f"S)1`_g/afl#X[k0N(dh:Vs=nq2JAHL:k\s"`uebPN`pncOWjY33FZ,(8E&Do[L;5%?m^Bd0=)LGil0O!0>$d`bD[:6cH()t\k@E"Y_!A2/U<SdP>"R;(\P!RhSh>@-9BMHQH?jOq666qTS5oa1#b#&,gFT[kK9`@6!Sr0%l>i<O8YlArf,@H)%5CIb)g#;pI]uG0&5u>Y(g1AGQ1nj2?/Bo`Jt_VfY%&R58e[sKS%^FYGHRl>O(:_bH'h'S<?roQ6H`)o)>eG_%AUj+8Y/Up7G%c7JORqu]\OHFnb1E!rZ.OEZgh4;a1EU?NC#.PjU&]X/ShrsdZ2Yfa#UM4^EFkN1R"*Zh@X#.LKGIK7@b>F%Dbs[8%!Md6+;Iq'W.IPVHI2hK,buhI=c/aXW5t$7'?<6Jem!>+d0@OsV6GKRfM`W;X<a?gMd8bHgCrh*u/_fo"mY<hRD\#aTqR>+JfM^eV%_KZ<g7]OsJ9PgSZ3aLdR(7$h;gGZ:%AR1cUI/u@@+qYN@G)#Wu19+dudc7/t%-)`WFh;k_np;j^e)3Z!L6en=9/#B,\Z>K7j?A>l%an$a5^uZ9"*g&L*NP@]k!j:9HPsqH"hcB:qSNDq/R.8/:.-5*).O1*jnuJ1MF^_(f%KFrKcMK@r26i\C"*"!%[<10HHhXsd,01MC%%r<]gi-<R"[dM*X\#c=)!UPuU-+d`,p6LdBd\I[<lMaWQG-Qtno_@6*3M][3mr%g,$fmQ=\^-u/RUABL"\Y%:F*ZTC`qe8F!bB-C%:VWq!H/G7,eh%n>pH_k\6^YJ]gb$SsGEF%P)lrEVR8jp^)k<OgXHqe\p_GHX4V_@9(7sf4mh`\2=gdIfn6KJ+(Af\0X3Xdb=jQL5%/eS+i#8jlgF*RhMEE]ZW`0tMnhH6ata%.78[NZT6Dhd2"$`DUkZ"gW?1;7Y#dN8OK.g3p/^%TDi],2-*<a!2k=YT(2e4j0;\TeQ@%AU19-ncHA%M;mSA#=]ntqemeBAH@sZSp:94di2iGc4^g.quP>cSn[dT-3mdDq"P&94)E3>WYijX?=)C1aA+KW2HAAu:?MtcmCp_$%fl43:p@pMi)^aR56AAE&o]k8*C%!^T^;9>9RZJh^Ko&V.[%FBWIT!#:_R5^-[r0?".k=A\GS47*YEop-=HaW2pSEm=Os-q9kDg?#%B%-ZRG_%06gV73<MrX7V^'H!`'Cog2WuPRcDjdT89YB+jF=gMpkA58n5Y2Hf:oDo$Z\oH`epV`e.8=2RfDp^b2WlE$9WlX1cLV$(%AsI(u:dET=;Wbh*#"0r1#?3V@DfS*k^AWl)`"-Br@ro9[[d8lNe/hHW_E470Gh&IL'lQdL@so%G:r<I*[Tu$u`uVQU2NIOo6#IFi%fDa/]b9iVoDifX#CV3$gocHmsSqil8-!A+]:0TPKYtDZ-P/]:q_L>?2dS:$$iU/7c$>nHl)YNTGB(a3n)$7m%/7b'`rLrNrloR.@%-2K6<;0Q4_p68mPOH$n41#QqO4HNdJVi`Y6_p'3<Z6Y;PjP3GaD+sf-6ZDH+P=eFn6<12)nE6k:1=pPP&cc#\>2Dk4Q&<%!0c=a?%WX\h>-,EMO8dM&`7>-'!m^KN>DA/e7SnqTT&Iq2\]INYLb$3,b;Ifr;S0gQpWER,<8C.../JHKI^$\C6K=&;[hN"'EZ;*J&QOVt&%3848uVR6pEBQt/8,_qdY?Jj]>^WGd2Cj1L-qZl1gSC$]+=FAE'o'AF]&nns9eM/r"3]%^8k3*<B@$9r/__"m7Tr,/4X.%@_iTr2=%\CXluW;rjX'scoaq$?kkMfk`i%aB^R8#n^52Q(fD1^@,^P%rN:&_d162ROo*4A=PMVQ-EbI=!YkRLdZ(l!2$Z/L5U[MZ*6"N9[7D%Cg,/53>dePbj>X&4i*tT0Y&.jbHaW?7&D]bFcHrp'&mt8F&BI]riBkGh+F#pp`V^oAQ7IPP8kp[mVPCl=1=gaG(n/RgX#7sXS:CB%R>X118B?GUEd'+*1RAK2UC^'mVb<-G<[JS#XF%_H*,`>t3Rb8cH/+1BY704f3ZR_II5ZGuFFk::Uh)Wa\6Nq#hhi[*p[^4IpD16K%@qFX>F%J^lQuSiDO134,h5(cRg0:^n52X(o_RlY&Tk0mgd$A]T='&Y+844X_B;T60AeAl6h6Ud?*`-_.Hk`&iF3Fn*V(35jBYLlZ%Y"=J*2AsKO0s=JlZT<-7o4F*`R2n*0(3FS)I1Ea8cpmYdm9FgjSKLq#`,-Sll+uSQDf)*#R-lG^7jkH&'tO[!Puna^O41C4aX-GX%:_+h`G5b,%^2jn+QHq<D_2r+p5Rppf%iCDAm8r,WQ"=anr>;hd3otW_R9JEDWM/17XJXu-\SjfuDah`2h,pgp>#!^8)'W@hT70%H%HtoX=Z`8$)C7)ELa@9AZ>N1YEF%P!2l6(e>Me20fN5npYhGOU'j&Y$Rht',_;P@Y^Ph:;(f+JHmCco;CXKBaP\"7/Gh,%pL`gHY#%NCQdPE5X<=#JL[RSL9t.06]YWm1!3/CAN7pB%IN=F=/Ul;_#aeZ-#5B!q/W9>CG%G<+Z)U?hj=3i$S<k(c^t+,&^^eQNO$e\DtR^%;Go]q7F)TuNT/8N-q;,qY3&gL*i<ZiP'3\Bpsr`moDh<)\T[dgENKG<k,WK=qpWV.>^YhR;.Aa4>!*fTE8Oo`)'*`>CTPUD0)kCn%7]3eR9fu:\S)6cA@N&jm_t`5RR\g;1b+KEDO[iiSc)42p#:u;SaJ58BGRY<eKJB9g9%p9=jX]s,!kQXdiN/^AKY+2s,c7+5XdcGA%>eZ<QR1\bR0A;1e"Pk'A,)Qf>W$Fo/V8C.&[`HhaHpb.*<#rLRjHko-T5CL"Rh2VNlfMQ5$*+)VqkX#@1o]ic_IJ(C_K9EO+;VIL%Te3=s[h'/II-Q!h*EM1fh't_h<pUm^q6j!38P#n'T=atp0<nR0LQ10\/QAr_O@OLfmnbsH8O.Ia32LG9U=^'Q`+23f1JEJ^!Er=`%0TEM'OW?UM=s7=VD$\HK0c;W#&-8N7G+#$6ct_Deb[s]uV\ILTH=6j/Vbt;>pc&5rm9p11_55g"[lk4r:E59>!NO*i&6AOHXL-hM%laccc@Y3A1qp$Wg\7t@?1>dE-!&%%X;$>mPc='XPcJ0e4SA0pt(41A9[!]%%mFlbW#sI@=TF'Q=LXC<<bE?L!>3=D^8Ba$S1TaW@%lm`]b3E"<_ImfEQ%(8(&#c4(n='C(4'U]qDo&Gd8MekBb2U+7I068$?$f_7CjfL0Y;@Hu5FD0FD*6m2rmD3A_)(9@8*lp.cI5*`F%U8QIN/m;+V^+s"<R:!M4X:\@9<&7f#`[H\$]ls:_,C[_tRgPaO^rHS"qn88ChtF?HGDU,l2fnacc$5iQ?)WVqOZ_e./luN5I6G[6%HEX-\j(,3M&NL..@[=Ihl54<[PacR<HUmV.]jfgP(%-0[PQqZ"QX*TVp?GIBnK0!F73nYrC7]QNMbM)7p%PS2V@)C1W5aLu`A`d$%"kS-%_3PCR9F2G1p7\NJG(@h-I<)0RRl4=("uNon3%:i%-Uh(0(r#HfFSd9`NLbj&pRJs.%f^.0b=1aTc;<b0lKS*"YUR7IB%F/\%p[DPVmlA![aB5Pd6Yd,dQ>#^&*b6VK9/;&=c3d#hd>RBai*^JPr.B,tCq9bIk-pPE\!HdkZ@.Z]Dl9"^b"-ZW^417RkkF."<<uCj%Tn>cMO\hgk*XU&.M)43#aBfKl!#Kis^<bku\H^$c1TH0s^5ehRbkTgBF-BCsp[36,R1;EU04PS3@ahaOcac^PDS^j;eW$gY;j0ZE%g]5#h37i3;KYZj5[B\9W!*rg7U=`<fUOTL'Oh])^0j/4Kb4T0Jm</4\-u=W^[d]P?^hG9L(q;?q1$Uh="`<P[6=&X&.C/O&TYJ;J%N87$-AntS:IWd^SjL!-+l:IV%G48)mHA_>Q4IKrPQG#mj68+BaVkT>GWKD^q]f*@`<9FtcS!jB(8geTp%VWHqD,iD^XF0<bGNVe?%`A``mV6k[.]*3t.X(O:1\ZbmoG!P=AI^Y6MmE8Bh3Y^>'WcIYg+^(#_%m;Obf0c@X:h2>%3PDRdgUp]p:TC^\Z@j[HI/,?Dlc;%O%rOo8\;NS1BAXOtn(5*`M);;Il#=pf='2hT\!P,Q=XKH-I4i5EA<V0Ms\K`76^pPTE&.F(lmTZisb#irp(&5clFZI(7gf5D,YN%W*%_FYt2XCSc_]DM;Amn5\7Vt%u7n!iXP15r0FDVFfT(=&!g@s+M%Hl,k5Cn![Ls6MF9;-m24Dfb7^q2cB_b[OYUc-"]>C!jA[d'0(!%D6k0R@Y@IHL"RFkCFiI#A.sdLo==6t&4dWt,,VtmgIddVA0mkF4ti1*C*C)B4')R18o4rq'&-nXT=P^8`tk<3]ZY?>V+i""8h(Ys%h:pCZ!9u$kl?>+7h\:qpG/HV4m1WJ,<\ktd3SZRq:+Y-)5DHN>gs6V`)2?#7Ts8)^Gl0S1;m,Z[Z>BCZ1&+%Nl?\BE?#pRYRld9[%CV=Xe`S,.QFI*^"W:i_pFB\A)n`b6ae39qF?*i@piRku%#1in(IUjJ16=EflN'6^C"#%PqH*HrOmAHB8!QH&HVVi+Pbh/'?mb&>!%Q"KV?0kN@nmuG$I']6A+\E@FCV+r9FF'dGVX:$>+UO2--C_D@LgCk1Lo^%J!L&lU,MIn:S(o=VrG!8fKB6><-P+$,lp>\%]f*S/u%qeeN[lOdE-<*W,G%XCJhN\mVDI&.3i9-/ou4c4g%b&j[-IK$Zng4^F:1+\?i@?ae'W6KO"Ha_4sc+Yu^Z*qR4`Dol.'_PjOJiLlR%ID$AmZ$b$OTm#/SlPaR&<g9n[B/U>g5J@p_bqSssb?qjK4oVjc3gHI3?Y<P\SSZk#e`/<r?aXggctqJ"[3Up5Qc=E?CHD#L\oY^V%l9!ZiA"+uFd#bg6H8@],<!d[G-7cSRl3n(O*Wfg,cEPN'A/?\S12d*E:G$sopX)[[ZCe4fGL'.BR2;:!5X,=O3q9Klq5/&GrL4:5%e1;#6d_i?0]2QkLi74L60#5B=(i:kI)>d%(_UVUr+Y#@Z+(c<,aCR@j9$c!p9U=RF.B"3`q=^eh-7K7tKjA]iUb"sgY**8"-jTQ$%=/Bf;T6seW!GR9WhO*9?Ga&utV\4J>BX+GH45(lA=%t$_*DHjPM6ujW`OhC6nK4O&OLC\NF_?W.*HVFZUM.\a3[O(H4JCbDS[9oP%P'qXjfD&rl$_(sb.rEl:p=*nn7mNEL&-]bqVY`j%Cbr>moC;3s:V6OLHV;2E+]C/lr8461@:(o!j(uWDp.,/%];!S#r`M/dViI!R%9/Z+8Atp?P\n[-oKu%I>B/TO?NimP9@_5q;$"!PmGDMSZN<)%^A;Q!;raWjsGM;,[iuZdPRNHtDJYAHSl$=bC^grQt`"FX,jR$]D%='btjgf0V<4>lT.E,L_s9HHmbIQKdjA?#VYoLpL%..`WR[q(:h?Zq/;4#X:6Co2JVk`n4iA#iM?lq7:/C\"l]-("S$GVQfR2K]"0%g:NBIWqmG_]rKCdq(gTEB)fQF8?Bn8mHL*;VT8#gp5OI<T$l*BOCT'[(ttE#bAN2S\JEA6!b<;p@T:m,)\SQI6Zk]N<]2KEg<7r(%W(ITa<u,gWDWAG6c-=?-"Ij(1:+3SqaDQmXgpsUY\R5;`QXakbU3cVk`-n3^`VipmpK-@TH'k<;<>^a'[q`rrmF)9LphT0KG4cOU%NK;J9Hi*,(L$MEZ-aX\sO#in^&tn6B>/e/169-\,7m#5+U5Vms\s^Y"kd5'#UfQuBD+fs+rhkDDNp2k#&Zeq_o'H&/SKbUdZ';=1%J/m17Pa(pNULH=TM%aFE:-Qh)Vs3bgr6M(l*cN3i?t-FW-rV)Nlg<?LfXRGFf;mNAh%)MGP''6aF=16`n!j$0D#-_Ro<NU8ERr<0%3CghBe@k$inoTS>2@3u+eS(!kCPi]eo#BC0qpcAso7:_S[B]H'Rc7eje%BetW:kb'prPhNR*GK$X3eQ;FIR>BD=2.B4Z2hnTj$^8%biZ%Nh-rlYJ]q2=c%NOGesoo&4hJYUODUVF5J,%Cg-5/9B9_dClaH8aF6/8P9cKA4qf8*gFC/N1X-P[.W]]^T^q8N>0HW?KQ1jJ+%NG:hM\YNCK+\JpQo!ikCWW(VLQ,_QkA`5!Q5DG@kZ9=e%ar\hP#ABFfXZN)Kh8BJ>(G.La-.dIQ2g(Vm19b7:0(`i&^P@8.ZX:(q%d7sIj6.mBcY-RAOX33e:><<+n)qqu0.&b$D10&R%.C2dM=n\:BrK&e=?g^)`*I3f3=Ph1>eN)%0)!lh?NngF9m8-LoRRkQ!^F&[.%jiCRMT$t33?8YDE\qFK0fMO*O/gTHRn#(N)3C%354s=c+#@tFPGH9`Q!T!h"2@?K6MTXesFqgREF.4]#X2-uD>fr7&%oo(PmUZ!*%Slj2KZY:1:cK,W51j-QY7X'XZ[m(%\Q,DMkZ"IlsK&"'%0PS5<Y$PGr%Ru>%W8(p[CMb/G,DsHF:-kT&\SJ\^6rcfkTjf2(0R".2%J`cjVOtaR*ULJu"(sdD7BJQ4?*>?GZh-o:iOYh,tjSMs+Y1CnDW_L6H5=$%)Iqs*=bETA0L[H'<bqH'\7a&aCi*=$Ef,*=UNnJWM%]^,JN'BOHQn*>JJSsjj\a$)off&i)DP7Oc-`CT!-fX4Lq6QuWWn"lb[/SCD]p[ZMGZ6DiK.25FFs$Q;kCeC%bFeSfSVG[K>q9Vo2%Xu0)C+""3b!4Q3VfdY&ned<?JDbh2*3hN;K2nDEFd`"HNJ,eW>i!F[g9_s@1GqQ:+%RlNg][6]7J,$MQmQ^^JJ+l`GE9mPthg`1C%s8,UlkATV]niua-Ap>#n_&R>rEq73NlkUM96Nb\uJuE_4Y(s#h,?$eA2W_Xqkl;ii/W40+RQ&tIk'$)4f-CA>YG6)-"16!UU5=9V%p<bJ*2b>?D"fVS1h>>Pdj531j-1UFKlaK].DO=`."\&M,3VBAI#a-'?PA$,UCTBpTa.:=Aa`O1%,G,%@Q*N@o!hp5L<)0J_Q;e!Y%lo]s6OlZN4/aXfE+[B(:f\ESX>JQqLh-`6s6RtF-iV?M36e6)ADAon\0Wg+l,,(U[&?DWVOh`-3=upt-/<b,J"(CH^VQ!e]VUJBU%@&(5dPV;#.PmSDf\@s-1LW`\i0hUF:H_%4f*B&1CYC;8hI8/0V=I9M-(#-enk)OU_d3^b>MRf$;l+EMl5e7Ll:.nmD:eFm-I;Sko%iig0-edC5mKZ&>kMBbU4b[%>))Qhn*)f@WRY'N?H>/gC![q_S]noUW7Y\i@<kQ]Lg)D[4oh]dW^22@FVO5UGpRak<qR4Q?pnkYgk%lbDn[`Dr`$E+_:sYt'>W'*j?*DA1X87P0.9e[to>6V:(%rha%O7qS*pDPlEX)8kP,1;1?B15lZf@[up;UlO&8*`,HjJ$^BY_5Zed%:lGRs=]/_':/bnI+B]V>9bo1eMQjs%3#`2J:0N$(IG]qe2k#=q\S*K#BgKrmEEQ]L)p2RQ<+![84M/LD3hl`HG1E[u)N_fVV3elt%?^o`=Kj+PHZC^.(^:&XaVdn_IGt;rE>]Z/09)VRGXf8X2kahM]TX^P!?rY^Cd(/4T;!BkB,Ut@DVHQ[TP0tsN=CVo9-Ukl+VNhIB%M_Cb+X2<kpSZlcZ"52Y*b]8n'cQ"mJmJr<Kc(_GYM0ie#$HRMb,e!m*G+n\AXT`U3i`'S8]Et3dmuo:RYhShd&F(Num/^JSJK`hp%j2g56i"[OjQDSGTq_+G=&/PD@iIeI`2B\=+OYmR9qASJ>%6:6'8Cj84>uea?7]h`IkoS,;!1="I*8\OPM'=-15]WrZCb,50]^*^Z%nkDSl6<5pGLEo3sOHc%&7(8m`EZ.uhn)ign?'ipWTNiLX4T.?5`$P^t%"8#4+Ea60S;g;mC@[rmk*6eD;"dgrh*R*%RT#aXpjdVa%PeOI+6h,:j1ksL'(4i;s$jAo*c!HW*j/,O<(SW`/StoIbQL)W]bfnfea(TKd.$lE%U:]P#WF8Msc0.,)'i<*=*"7\U-9<Nh1;PG?%5n9\M#:%%]C:55CYUa4=pHTon=,4i;BnT&qb0\F6&8b]/],uXa5l0Vu.`0/OpsBW"i"=uBYrI>a-k?rS.E/G)F#B(u+HRYrE,6]l%4BbsXRT7u@F_s?BXLt0^;KJ^3@R+$1R\30u27t3b8O\uhc^X+$g6NZ\@Cu\4%/0umhKb;VDB!1O/[kqLp-je:kc+#m'Jq,,-02c:%ipS/EPfuK2cuP:pV*cGqAoi3MV^N\`R$aJj^G"bu\/a>1MslB<]mqBh@Bn+iCLp_%m"i-K1>Q5nnOQ#/+=7K3/=5j.r/NNO:&1#j%32P?g5(G[Onj7ZcnsdcH)B2<-Rl9O/:&0))/,H=UTdbq=;TA1_/^qX(?R^B_D,DLI>E"_gqW/PtBtX6Ab'F:,7Uap9QZ!CZf8IS;%*J\J?0]]7N0ASp19d4sbW,u-)ebf4$M;.(WD?T3kmYPi.p^V9W"OsF3)f(O\"s&`g0"rlCq0TQ,(&H@_8UK=5@tSt@2XO8JAiX<2%=sp5!-N_QO"+0%%?'k-rGHF,p?/+F9kdkNV-.^2-`0Qq*A@"O.'kYXp2=O)WJT.M&pZ/XT&A5u0lcJ6"$'D=+iGPH$`XX6F4['r>%oZk\cLbr"mF?F&ZYQ,6X<0_>Q#d@hjOe<\X=(Ze&j5j&pLL7LW+QGA_>@8c](ZCG4Gc<Fh5.N:M[_*'B@#&E^99KheQ:%f\>;RNQ%mA4*1=A_&3JY,@8!(,hZ"BV<d/dgVFh<s^Bl"31F(D#&ergQf\(,=4Xb9J*j**bJ`WT6pbgu7D"$l('coSF\II\o6&f3XXOLc5<>%$R._!]LJog!Lh/)eT#D]9ja7DlD@1a]mn&?q+*DC5N3gc`mhWKrE<2i4C+[E`Tg.7<!*/,Y)g0Z'WA+^aT)R>VLliL-q[EUir80]%>PP1T99b>qP$H-[4]"MYV8'/9d57m,["Uhi+TrT"&4u:jq#rL8@$\_\@)u`qNP&3]0HC,N$]DX*Vf*B".IPp/&gFEVN2pG'&f0Hh%M>taO=Oi1+Q!2"bOHdJ623VRq2TM`#Uo50g(eE]Pd7D'^7-6)&MkDhZY2.GKA)sV2QdJ9K_\dD='c,*1rte6IA_=*j0-T`/\OCEl%Y9b8)>,?a=QFnqADC&""<=FG78lN)V5b(Ze1QKStKWq3HUR6$t,T\I._2RXa.)K0Sbc4G#_mH3H;eGhc]tXAFU=P-*6B0YjiXoc_%-CjRc-=U'JrZ^pj#ZL&59(Yn=%eak>6c)^4?eIFr`SWpaP*\&-!TE>9&UlW,#pUU/;!(YEX&XaE+_#4e-E!ZTPK-&;$:=:UQpS,<%B#p`!bCDS".+H#$AfFH#a:]iCMF]`DKI%D)$\RYqb-!!!#G5F,;c&alUs_QgZ-TcU(TjV8HCoR11u_6Xl_OQ4D'jh+%L;^nZ<2"Z%4:^0$043k7+%ji5&daZkATtNK7gAbe"Hc]>-27TTf#Qo.;+%R5Yi$c,A5_%W]+4jtAUFegT^Ms37AE_!,iF^eM+g"(O5HO:_7ki!%?t%b"nl%62'/Z'MIS@01DT#Ime!jI9Q7hCD5FfghYr.5F$qNe+@T6YML\:qc-MpV4J`i,h7efTJ^l.g-i9QNpgXulAiakB3;a94e%8/X=*"/Z#7DI.R!?;RCM%F2*F9)rGd;-^2i<AZ@Y,(nbp+P_Zf#^#YC34C:8_N#P*^)R/E#d!%916jO&iQ4W+ZR\#NmfA.^nSAX)%fTmV?#_hSaFQN2i(ARdi>Gi#$I_@%9n`Mu$E1:0`bS(h5'7/,5:kgJ6:aR%mL7alfkVH_.iP!9&_\H2"j&:D1Dg+Zk]s(b4;Og%Q%nDaXYG5-bS$XF8bAH!h#c/6@(:&91.Ka]U>5bVfmUanS_XH9s=Y"4.@5]u$jGhqL9+Wa9h5r#:h096kE!503cNZ%#srY4u3>sVp\%*fnE)`k2Xp`._%^Q6>G)`iN8`cM'eW4J6i-IXQc_k6ZEbhI)5BQ)]i]KXKP0gmJu`5q7%`l:TS8Sh9j.<TXT5`8+jXiO+gn5"mZ?%?f05NDbn_1iZ?N4!i%bAIAH`pqboslE0^$YUXP$[nrkS#'5Y\Ub;msXO-K<f0N-sn3C)*3F:@%eFajauq%J^&62:S\Aqh%1TF'_g%pVCeX!kW+]guAf(l;8T)!+MAg50bOS+an3:Ls_MQ!B&0+c0_p]rT!qZeZkmJY<,6>H$O%m/<g@+QrJ`_HWe*K6?&@q!3c&%Bh#D)%5gS9TDr?65s*-jEI_;bHUF3=fS,](+*%S)\-0@s.M:Hg_s1QLGi*O`V9`GCRM]=@#a$ZLDo'FI%g7[9^8E>hWTet*>pu?GQI(b%*%nrp3JfOlEsa#J'O/ETHQYPWB*_!_df(kn/=2a>+INcsj3*DpB5@o[BoY=hq(k]O^Blpo:K!(FMf<)3te,)oodo\e=o7e#iG#DBo!%FbUS-IY'8rL6gX%(0"`G7#+j>r4FpF5]^,p8W6%PR2!c8@Goc?'M_WiUd3c>:tt?b!TDRPV[[[Fddl:*itQ#NY(VD!S-(fg2!,(M%@d(./CEdg#UC:IN(D/OkD3]qfB#osi7h*WjRn+>ZZ&5;<D2r(1G6$`@SrLCW!#AsXqn)q(4i$Bd/"9^uLifOZ`\dGU"c$c@/hr#U%SSY.e&*)Bo97+LL(2WC&*t,^L6,E18q$kJ^%Q+uG+)rY602:e%GXV;OM_(1X$9q#H]YQoP?1-0%'Cc"@Mc'!0h@okepWiZO]Z8k2%qK">aoVM4>FYZ(pTemPg4]dMTckqn`H_=TJSr7MFX$s/k^tSpM3-NM9QJ^=gX-&D51u-C<[gi*G*3T\%3*d`H:u4HR9g1B9"Jknc%'QHODNPSG&6G0R;bEsNSFja[:=f`E[)C2+--a&*2II>_j,J7X+n:E%e`sEfBo)XF_%-o2&DjdC7$&KrN8Y4o<XRM%qcj;3D+;euR%ZAl1<";7acWJ14jN]]SQ#6YOYrqo9Z:ZmNmQh/9&FHOj\T?[_m<9M!jF:RDiWue0[#ZhFi^>a5uT_iiF_;fWdJ74#K'A>M7<;+7G%S`Xa131&+\NRqpCAUM/hEAg$HmmP24s!`b+Cg7nJNNQdnX=/b%LpH`N`Z=MP;43^j>4!@4/2bo>lZ[WP>"9@f$V:U\q3XIT$8'Zg%j;Q3A1!&id-J/.&\P<EmMUgM3i%](e0Q\o"\F*'8`Tfe,7G0blB0]"XV*.a`T+"L?]>L49&P;?L3Gfk2B4qkH?hmJ_:KsHqa($el%lJ?emlRE*\VkM?Nd<0ukCjn=-eRFm^SRL9Q4s6([WTaj]b`3?HK2I00oHENIXbZp;qJ5\bVe+pD:JKPL@KJfg`C8f;hB3X_nr7V)%Vr^jH^Da_5!-4<+YFd_T@n-ofhrB1YiskY-8##c9rWMlfLtKdn*,+j/VXnlEAc)B@Ohg7L'u*1sU@3)NMZ^Q*`=3lH1kaf<gN#bs%FP,=]=0i,K>kmd&N.U3Dd13*N-OX!$joASsp2sWo8.[n&P4HIH"OtkGmQhC5^.s"Z9i#_P)KTBe)/'tg5cZ*Za($;3UqYd*"u<4S%p0t=U7*F1oWSa!73qi&\=1/G=DN7L<(%*;*R%eC?C\/#N*o_F]>kYmc@8RT.Z)r$-nBG$H)t!Q+SF9"rD8)NqQ5uXHYIE!L!UbRm%3"OjuXRP7WXrEuU@"*WFD8DS;"OUEnCf.=#HkF>W^IEX;9clA"C=IlR6RRh/('6T6`i&KR/l%'_+9%0?Dr=rBa?prn^Dn65G@L10%MZtKiZF<R*2HVk=[H/;[31ZD?:[S=r:[T/a:@8A.HhI>jD1:A*3R%--a4m-!heQ$Oqu)Ruo)SLp!+Mq:HhA'E\d9"6nlVL"jPb5[%)NhGL-MtHcoaG@8phBh2Aj&QEI'n2ant$l[EO@bkH-c8AC"!FGZfk$+[o8'3Y?T9-?Cc>ELH0RnrNU5]?qdoAs(q+O^F*V`@E<Ln%*`*]PYBT6Q)C+!Om?%h&=39CX"B*=fPMf`AWK*3PM9KH+.^;0A'R5WsY_^:T<DnAKMrPqPa$tts8'C\-fR8jTd+u<*4\C6]ZuWEb%YSrVr4-t^2q7M7#:<rP]5!X$CL`2U=8,X+n$BDd[p@q`\X4S60JNMTm'pd'nr:U8giZb&[D6'Aa(=;@W.`b(e_o9Kg)KLO"%T8Ls%nH*&+^?(&WF)/]k"'SVB7n(/O'?WJjlVA'L!>BAeW@a0T77MF&DaSi&Ss\tfn!KF$!pc0cg[([R\:`3^]mWibGe9`2jq"]]en-#S%$S'-0-i0c2BW`.<p/1M75gj;OI8h4E/7!ab5,o)Bi49C(9u.?^]!B$lf\rMb0fl6o88`Ua<B-p<G(G$2.[H[QRWgPKW*[gfk(fXk%WIndA3dk%V0D5*Z:qaZLG=OP4&;o@/X)LmD1`6H]*)m#N."3ch<$Pl$IZ$0I#;R98rlRMaOSCX("?NJN@O9miTGg?'2MJ4Q<$Q<9%KA/\G`_t[,:Q->$iVcP;+!\HY'5J[74bS0+5R;"+%jH6;q`=V#Pf94aA?U>ZI#L01H`1iO3(=D)*i`PK*O@n.^%uLa*\-eAD>-DB%W:4-S?eOc<IfEok5!\R[pR(q"]\QH[R\S)&?uA1,kbB%eE2Y\1_NZ#_,j$?<Tu(R42Z2d4_M#S11F#"]*EbpoYl/))h&`R8]7!O>%KMUbYnFa#*J?_1t?Y2Bud$<JLZ]]qJM^-F$7K:knC^K2Idm*MNO#mci!>T,$]YNFXiaa)AOmW)I^RsF)pO%Q)pB4GaTVK:MT[)9!%47EPq/71I`n;5GdP0P?TW,E"cgMRPKlY@WHXlhnL^$%prfr)l#:s`]q20B,$hcOff7VPTeW^ABiTNTMI^7[^_KP\<W+BDd>;dGf8%[^Wm>>2f1QL@L#$9NU$&G`+2XFW,1CZ'!<VnJHddeNL^]^k-Fd*F(!/40XTYL$TGRMM+\h48-*PW)M4aXp^^4fM*\J2lb*1N-)ZF%6=g[OkQ:si7/SNs&-Vg5pors_=+3:^2\p&FqH`@L_5gem=7UE$!^FmPjAh9U/;7+)*uWaOb0*L-7_hAYE:,5TFU+Th.4lf57t,ZQ%#XCH\V'G"/cq9ns)5='P_HXAB!LZFZE0kK=W!EE,S,Y\#HR]Y=T(d<54@)bcN8%&%'A+oRInt$V`QN/L^2PaG3,K`Or1b7V`k8VH%al,iNTM+4JHaT@Eq(nfBVf?;Q,EYZc!cno'Fsr`N*T\Y1&%3eR`SmFqgS"!]W'GTF8cg+3:I63lkG1O[@,s6X@R0/\nVV$Sc([7.%"X+1@;sh0mdd0NHH.K4iJ<]3mZe+_1hk1*B#$W!64ZG!N$.IHajj>h2ZUetB![En__gf'7cq\!h@1K2X%)>XClJC72l;Q;G'e]\B%OD"/'ab9h[G.k][%hRM4<u@$4Sp]KZ5S`u\d0`X>(\G#&'W=9n3foSM#Ui]5a.i7DmY6!GTb(d&Tg07PFUR0BE^OMt$5DB6oK1hr%HqV8WnTCUWqq@X7*\7^"S$EBc_Zf7H%f.4J_tXP?3L6*P6t0:MDA^2aT%s^qE^5gn%4UMkh;:UjIM2Ni]Rll$5tsE#<F;VVU.Jj8%lU8Thp#]:Vj7kCc3j&WgMoY"4kT<McUpS46KrL(1DP7uMGo:+4*=s4`]t:8[\<ZW/#:&=&HGc*\g"*KhnJ>:e9%\CJ^4RuB]$?ZH%?F;SJH%[na-tDnimkCSnn*E'CEKkIQiZ_WKr&/,'g/-;)!D;)^^JKmuk[jP6"%#p;g,0te6enO(Y6D6HT\c5neQDDGY\_RI!5Cb6%CFA$[c(Eq(FK^M+Zfk*EPm?S!<HE0VaqJkHS5<9FA]:+C%>!ir'r[g*K`U!R0nF;o?/f5F5?j?oiWt)*+D.1t5<?kGpgn6L,\o\N%##NWXI@R6`IR:U73dQ<!\9r_OphO_\7&$i<]7^Q$(@@P.o2Kr!##9eq""Gq"8cBX@k]LIoW70IYNl_mcj(!k_H;tpcja)bV36V*u%#.*PCd;3n5'PbXP?j]#rqG93VW%!<#2?r"V?=6bE].j^5'4Q,:rg1%B+&KIaP%W6cQJ5%$$cfWZcTAlGL]-%cDk4;)YpS%^j$WGf%<Xqc*U(Voh.j\Q2+YGg&1A:1r:8?hD"eOD7&%g=TFWQ6=l9"/ZLT=fOU1uhMApesVOWGJ:6HRkNDnd67PJt8XUW'-;Y/MujmF$Ar%&l'phUe(4>jE`oON_@YarSBNYfH5%)I;0.3eB_s;'a/!,CpSi3J'U#W_-q;/`E-\@dF[,'IR(ADr!!\8p]I<nr-lMso%uSj49Keg%[g1l@YC5NChuBo3+/"V7"omC_9'I#]c"b)#J#&;1CAV>f#`P;kCT$rZi6?L+`>9@p`ks8)J:+Q3_8Da^J9Hgj,M'a]^>_'FjqNjd%gX>#nC5!eU@oD[&5H[usd*B\XF749:[L4J;cL#%G^rn>s,1u.$pjRg=?,-cH/g-hKPd..p!0k*PFm7'O(1)]u].O*1G[--R]3O4P%NDEB7Tcr[*^!2WdW#5YUe44cGA`\O)eda?8FF\CU4B,km!,HTJ>1<]UC3e,;fUGZ-F6!>I+[uCJ=J*C\L2mcQ6]r[JN0<H-!2U_,%='`W-(5co>D#dEL!2ruf!)XO4W%$><f*0Yph6`lT*;L9'.J@EG#<8(;hFQ?j%r:nT("3YrQD\dS<#>$Z[9eUIH7"KV+Fe]*o)Wu\%+S:>tX5eD,^h]FVS(C1):2msR,9b3W""+F]FH;6`!'h_-qK8,.!%PBi-*o.q"`m:ZK##Q-#?'YefjF=!Ek;j=Q9s9Y2&n#TI'(B>%3M3parC7/ifE'j#YU:8c@":jlWWec@J:PbbHXDaIPn9e';fXVH0MM&47]442TYE(u#O$:H+e>q<"S?/VePXqG49iN)4"jq;AIk_V%#.;`\'u7O"D3V$-0Pmhg(5c^"8GU(,G`F4^1fM#2gq3Y7CY#3VYLV)GA'ei6Jl)`nHZOSLO(amV[9[8Emrb=si66rY<5p07#Ye+A%lf%'t++UX=>'0`U/T$V.ZC/.oT7'$;JID%R-^^"d'$tY!Y-`G78<0pDT&QE16!'\a?5M+$^;o"OB.h8J7N@>Rj69b%qsZW^!Ti^"%/?&;m6E`i#mbM7jgROFB4Yd)"$$hQq$$uB.2`>aU'@:4r-BGks'c%jLS^rht#5\X%hb/=GcC)+i0;c-\fI29GjJ:P^?"e]_ah%Ls%Vs92W^Sk/-r-:R?kj&?L#Z*A2##VLhH-\/5s$_bWjIXG2K-Qc;HFTH-p]O/J_%mDWT;dXfFFenh$%WaGS9$%pK&S@'nM6X;!XVHY%;m.)O#aFQ`Q1a+>ORWR%odEA'nC_og:FsEmU5"VP-\ft^,g$#T1Uq%d-n9fV&]J`H,D*:3\a6H"\d<X7r_>n#kSm-R%KlhrXS"`l%(.C#EHEJIU#TG+*i5eVtJl7iZ`%@bKCBa>(N7.:epf*kLWI9kAhs(+nP<:K_U8Y>YZ-=Daam;#%4sQUQl5+6[W$lg8EQNkT<1KWV%4u8Ws`O=HNE)N3&`<1_hi;iC%Yc>o^q2u@!%P4IC]F&%-V6LCP7FZnUOZuM"8jGRB%"&)^cao5LQ?4m7AH*!sl_u8G/:\Yc7@cmn%LuAd#,\c<kMgRL'>el]_bYYV;`Ir=[rNi1O-lt7SX+R#_]^0#:RE9P.0pAKtjmj[ESR(Su*prco5(1bTWtb57=#X2PL().a-sg0%%ZRG0b(,'io-_91;i%7JKf+OHrf*UTW``cTGI0P*'MW\quVfGfLH#*Dr4^M)0hmgTJ[9(<nOgn\mRiqk/Yad:f)I03hM7LZk[,?N$%S3Rl>kmcmXe&QS1/i)Ke1;E>0)"'u\Rin&"7E\C.F.m)!q>*DU>!ISOFu@SpVJc1a7'A=C@K04g&M9^Mp^mX;LWM%(>Dc>C7C!7'%G0)]J-W&Jbr\,>n/]qG*P.nqK-p3"f-r[jafX/&ohS/V9C\SReAY-5`T>*1Smf_V>2M'V]7@8bj+i:clF?;B<q$9Fl3+'7N2I<8g%lYoo[V>Ge;Gn`/KPH-X/F_2sj&Q'/'Q-LHd-\alA%3,qhcRM\i==r5AUcu=tF7j<Dm1"]A@aWCt/q[0'bn%&B0d.X[o$=]moRjf(%j[17j9*@HJ?Inp&*"HP@)YccuP:VjV`PdWEY2J8U0g<h=J$o@tM*`"<_P]r%`p6Pnd4f6!Gk_[ErW#;e+piA_#?[BJLKrPPf3cUZ%f'tu!l3Np36P_t'Q.8G3;,i)]`)2']2>"?blLk6aUn09Y]"UkAVSV^3&78hp:LKEH"iQl;G2ElX:iI"Jr@0:,plJOCN.BPN!"C9Q%",]e9$fdf/!V+^qBn7fD*I7ZJ2TCu^11R&=.Y`#50C,X]2,Jqj@d)^j*95#=#2Z(B*Ff2&[NOjO!XfV[ZMm9rnHEMIR5#N/=qkU(%iWQ#&YuVVp#PNce9@4Y&d:"G//D*A?Z*-@m$a,9g(F&tc?gHc1RkO`ZN0"aH8j2b?(*lg\&XV#Q$4e\\6&.p+.n6f;%<_5LZ`-2(%f:ZOAqZE@a5iX(!D.*?+I>b170`U"qU9E)b!V^iDcL!,1g\R7H!"=;Rp&ln%\/p;!F)W:Umn,i`0b5s>b6q*phFe_i'*6&jF(Gh3%'ZEmg:A&5@RtN1X/5m/79a\I?d^mVR*m;mfF/:$Nhim2M@6"8nc>+G&4S\Kn"t6cdBeW<nQLA,aPuS&XKq,CoAcF<tK`&q=GL@gg%;rKcMl]3u$ZP>?tM7'&^!S)%K"g^Fd:'&UI%-fHsSWkeCClREVpk6(aQpFYu6CiZY2ALJ_ee=P^AKQthYC(KrT5tMB2-4T)nl$U5%jb\8qr]O>TTVl?($L"EQ^^<]<FFY)iUL^VW:8CEU8:%P:W)F%Q>RW`t819Qc9b]ft6^GakD[8I[Bt09t9<L$7<HjV]&Doq]g*T)0%Ki-/e`4<8.Ae78&l`6k.b_E&?-.0&mO.X[cn':L>h4<o'YAG,*p)gAHc<!6GmjABU<?+9mi'M$#TOup0fBTJh%'e`"X.ObYUap`R%9HZ!G'%+8c(Z@32g<[e9cJ5[Z[&"';ngg$f)mpU%#2e#Hf#2`\#55OsN.IU^P4DJi'AipKU$4@-A6#65MV/jH5/>,4)h1R`9I-2T%4uFdl]co4jQAtDn)I]Q`a"(DQi?8[-kHFKC=V<d:kLBJ#`*tTO%nqfeHe"cc/Zj).6*lH8SRVsqcG$.0U.u:i^<L1@joa&+B1%7,%*kjj(*-ql@h[f5(G]`"16LXpMUci%!mr80[NI:Zt^bkd_o[m<nn40.\;,g4D4m@D$3!r<&=$!%hZ@6q%M*4VM;5H40gmIS')iBjG%K^N^L#*3Wn!%3@Fm0b#0Dc*:X+F:?dk<MJV5M'qurn,h]h^)I0pPdbnJ*`p@0W*L[IkpC$)]]&iBq82i`uF6%[mYCfq@h6)[tH=.%\\eMA;@*[d-49@q]QFXNRp.'qhU@hQCY`6l(r`(B,g)J0YkP&p#d!*&^<N+F-.!<+dB)"DPT\-G08$J>L-%FBInm6+Q@SgHg;pFu%3=NVJ+6FG1<"4<IF/h`5Fg6)(BE&;+5!qeIr>E,C5;]P7F,ba@ddFT'4VU^;eHZk+$\o;/_74/`?'&Z>f?K(HmSQOt.N1DmD_Q(l%9HAM2;7$oMpE\b:TJb<c1T:FcNFI,2[3QKZ8TfP%b&hu;%BBjO\M_&<&J*5E'Q!;Mp,]*'XrE^.EJE8j"%3`KX`(tm7r;,hg$HSr%Hl+S0RgI5Gnm5#Q#r]M6dlm+m;'oGg@qC$kJ7iR?A541I+KWkBN3TkJn,[hr5S'`VLJ\@]:$1d1NOe',]0%+@Ig:U6HgL?3:!>Q.%Hs.'Eh@4DmfF8?f=.jekFZ/7a'Ko;[h7`nYO/E42DF!_um:fSWmse#e#O$)5PumMZ?ZnfB%7R<1aq<HI&X\n^kLZaf2Mi=$+YoTF%)eaXu.c!$2PY</qTpQ<o)G;X\B/sM[@?A]:_Q581'XY1fncU*oc0EGnffp.j%J7"Vk5`7#;XeH:4#5V>1@Ba^2TpJ_Oe,mAA4WXB%Cd6dLeX5`LJ4R[b/>Sfs/:e<377&^ubo=d!(G81@7AgEk+@(e8l8bKcr?j+'B0:ftQ3>!Y0mnUm_Y<%cSqetW)he05[0$Og.$9B+%+4`i=[&d>j[5JPF?Q=Nn>=S9;W]PJ_,]5RhKP\t2:Hh#pN[WT#7.[k.*@>=T]eMF0%Xpfq8%3OnV0FCp_)Hb1TYUdocca,EcUJ6W%!.LtM.kL@=Nh=,U%o=.>:CsA/naOn)f576P2Fl#=?OBZjY5U6bcGP+0>pKQK2qf(">.4*Rh^3rLG1HcFlJ5c$2$ScAVTf:e'HeQ)%qt9G[e^""n^;K$#WQ]ZSQmJn+#LlRORll$Vq"ii)IeW]eP,'LgkQb:-Ea^.!eb&Qk6Z!oTNNKT4H@:hMkE#4XQY>@.PK,5Q"FckK%CqZC)VDedm,Uu/I<oI7K`U'Wkc>O$RS63KqR/lW>.pNVpN]eIm1IY:mXH*!:_OdF0fcJl2j%hqpOMS9l-Zb1N6%@/jpHfSAg7n9]%#\C3ogP.dd$Vm0E`tdf-mMjNmNXO3nfo6Vor3C)l[eo9AYQ&dgKUP0^k:B(4Y>f-u:ZM?&%ib!=qKtLkpJ4(SJ[%>;%Hf8"Dk`O2%V9lR'"q4qX-s]TVQim1mRCB:gr=$nt78V#2dLmB[]U*7dhmHiKp-;'PI7)CYej@O+2a!dgP_,m3!m`<BKD8tONNM_V_e02Yq`Nb`%:ee=USg6=p%$\c;Vc$eI[6J9i"8(YjiDQb,!d_k\*rbDV"k60!S]NF<hq&CrH;G)9`jUP"2Lgi#Hs_41ke?fH+ABt]BlSdHm`4IF%kA%2&5oPF51+*:(2!\fD>'03/?@Z`6eM0bXGQTq1[_bMZ>3gIZFoD`)j1Zs"&<cs%_`A33e9uLYG7A#!+?O8>4#Zm4!G[79Jfs2A%YbNG^gm=N3ffVN*Me0"]cN#f.r<9_Hen:nP+"i3_o\0#rY%eKo/$as)Gl7q^gUn?co%f?5WISVo&>F4#ATo':5Ll>4;!n@Q@tuEs%1Nc$nD17+GIdAP"K+kY/o*ZXK9:W/B*`P=p\b&knco^H_i"oV/id5V!qu)T+p&Oha&A0"O+>/HB@@R"FnaQb_o/LC`FG`=.o<(h`%55HTVR$V>X:of@Q]qGK;0%I)]+K.%q>s+=p7G=V%[R?\SaVFiS[\+(_?"/tWTNj\Mqs9LT"nDnO`-*[V]E7g["?[:b%h]!pVhS0e%<.A''%QbZ!>ouqY/N1fAPU=uAYFSP>iYF:G1Z4bZSDj];Z:].:OOa:8-+BH>&QNnnid!r@5(7j1T'`Hq:[)^&7#A=hQ;rSHX7,iJ%'t*h?YIa)gbno\/3iXLjE'n@UlHVFQ/KVQ+dh)uqqTub(9KFM02EC`5UZ<Q=(E=:+`7j^hna-,V\/UZ@E8N>:S`Xn"5;oOBYRDA0%,#uMe_DRWS&9!bVI-U:8)H57L66-7=:1@Z`1pIrhYY6+LM8dji"Ckqe=p]jh"2^Msa(.do.U^1^0?$ca<AjF#Zo@D1emtd//"bFO%T+'2<V2BZ#kps`+_ro&BK^Cj1:IHcfG9)<d3gh"G$?uSOC;a#%M.MHMW3K=NLn]`/9OL[r?M]=9o`n8H->YYo5_)YU(4^CZ,-@cs%JNY5YK'^3fDtU[s/!MXoR/r6p_n9[H+-mWkYM4n]6kSi,?7,MO[fAR/ak-sc5e2IWZH.s^;Hum7.`"J-\7?It`QFUQKF\?@a?#Id%%'aS+m<"*t31a:+Y=3lE''pjCkrT1T_n-f@6pi#lVG-<\RImU7IE-HG>0ut++KCupP2IoT/^uhTf!mc4(skbeq2T(M14M5M]10QY%@;I(.ZMIWSdAM]%`PXN&'d2i'f+'Nq'Jg55="!PNZ_>c$EW0bgpU@7Q7E:p4JkG^s9$EM7pAMo:fJDa*R8M>f5Cl1<]HDZ+I'0GD%(:DGJ=Vqqr(&qUk"2q40]8To@F!pRu3PkgegIN@KrZ.O%=bl<YnnDR5c>eEMLeKNo0$Eg5/Y48UHV#T!:;JZ+6`>h&\Tr_(qpo:m%=n?i&l82,b.9$gJI:dfNLtIY[,gJ^r;0fd>:_8FsP8noY87U.N5CXKKQs,&O%_<8-!L"jn+=N*mIaj?c#qX@fnH^6efqO3XUk5-#%.0dDOX2TMi8G]&j;u=_o#VW$d)<"b$-(Wug#H7%`mm#QZNu/F+dH6U=-VWeI%hM-\bgSoG0e\MN_esi!`b^Y[X)hVRBT>TVV7$>>%gEQU"f^tgG*/Y^6@?@8XZ9PM?+29s))]hOo]UXNN;pY_/P/5`pT#`D0oXMi7c8[g0kf\F>bBo8r.0.>SZ()I=Y(Hhf%ItH#SE1">%cs]%'pHdNn;/#EHeHU:E\Q>nQ)W^Epf>A`Ghu>CO+/!K>HVFGFo_%tX9(uih\(h"GqjS[YP'_*5JBFHKNm\r(g]S_^1ttTukIga2%GW6QNd!':kQXdH=%)ROtlti'-CIR;uH;iuT0*p15a!`TCGbmPnq#Pe,f<BYl++YKp'nTm*-c:him/>$FCMcKQI!A+]6i*JeM'rcQ%F1VUn/TsCg?gIt-a4LDR(:=,@%N+$X3!)`sGBX&PI]:$Om[$-Rp]L.l^'F:k5VI)(U@LuC=A^%,Lkal8Q[Rh1/oT"$'/i?XAZVe4%$pag_PATqj;9\e7iO?T"g]+8OYQ+5Js4d:_rdTFpa4IN0rT,^4iNN:Z\,Z5a^]#=)s4]beqr`J-li6Rc07WqeIt?V1hu9h2^O5k?%J,J\@s6p!cO2$,=fDke6s1^g*:&OUtr8jRMrVuZIrssAB/M$~>%AI9_PrivateDataEnd