%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: UoE_Stacked Logo_White.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: Marc Wright
%%CreationDate: 02/12/2014
%%BoundingBox: 0 0 200 48
%%HiResBoundingBox: 0 0 199.4866 47.6800
%%CropBox: 0 0 199.4866 47.6800
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2ColUncoated</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-12-02T15:15:20Z</xmp:MetadataDate>
         <xmp:ModifyDate>2014-12-02T15:15:20Z</xmp:ModifyDate>
         <xmp:CreateDate>2014-12-02T15:15:20Z</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>64</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAQAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:c31b615c-f9d6-4550-9f79-ec59ea12d1dd</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:c31b615c-f9d6-4550-9f79-ec59ea12d1dd</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0ba82473-2494-469c-8345-ba7b810e56b6</stRef:instanceID>
            <stRef:documentID>xmp.did:0ba82473-2494-469c-8345-ba7b810e56b6</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:07+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:18:29-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T12:59:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:02:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:47-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:30:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FEE440664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:22:44+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F85BBCD703EDD11A8D1DFE8FDCD79D1</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:30:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:676AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:43:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:81784906200A11689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T06:08:19-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:07:10+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:11+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8661C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8761C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39:19+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811AFA6A99C165E9A27</stEvt:instanceID>
                  <stEvt:when>2009-11-12T11:05:09Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F1174072068118083A1CB6CF26EE7</stEvt:instanceID>
                  <stEvt:when>2013-01-25T16:36:38Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068118083A1CB6CF26EE7</stEvt:instanceID>
                  <stEvt:when>2013-01-25T16:45:04Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068118083A1CB6CF26EE7</stEvt:instanceID>
                  <stEvt:when>2013-01-25T16:50:39Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F1174072068118083A1CB6CF26EE7</stEvt:instanceID>
                  <stEvt:when>2013-01-25T16:50:46Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c4cfe589-36ec-42cb-8ce8-d935c5f65b9f</stEvt:instanceID>
                  <stEvt:when>2014-10-01T10:39:50+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:871b9cfa-8fa5-4f0b-8068-7568d16b02eb</stEvt:instanceID>
                  <stEvt:when>2014-10-06T09:27:25+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0fe2f45d-a41a-4d72-a398-a754cbfcf48a</stEvt:instanceID>
                  <stEvt:when>2014-10-06T09:27:57+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0ba82473-2494-469c-8345-ba7b810e56b6</stEvt:instanceID>
                  <stEvt:when>2014-11-05T16:39:07Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c31b615c-f9d6-4550-9f79-ec59ea12d1dd</stEvt:instanceID>
                  <stEvt:when>2014-12-02T15:15:20Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>199.999995</stDim:w>
            <stDim:h>48.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=68 Y=67 K=90 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.020981</xmpG:cyan>
                           <xmpG:magenta>67.968255</xmpG:magenta>
                           <xmpG:yellow>67.022198</xmpG:yellow>
                           <xmpG:black>90.164030</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>87.112230</xmpG:magenta>
                           <xmpG:yellow>42.169830</xmpG:yellow>
                           <xmpG:black>51.827264</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -47.68 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 47.68 li
199.487 47.68 li
199.487 0 li
cp
clp
66.5653 10.6974 mo
64.8596 10.6974 li
64.8596 19.3411 li
64.8596 20.0187 64.942 20.4763 65.1087 20.7128 cv
65.2748 20.9492 65.5974 21.0677 66.0766 21.0677 cv
66.0766 21.3935 li
62.0993 21.3935 li
62.0993 21.0677 li
62.5936 21.0677 62.9296 20.9321 63.1077 20.6601 cv
63.2852 20.3882 63.3739 19.9293 63.3739 19.2834 cv
63.3739 10.6974 li
61.7443 10.6974 li
60.9647 10.6974 60.398 10.8222 60.0431 11.0713 cv
59.6887 11.3204 59.4891 11.7324 59.4441 12.308 cv
59.1088 12.308 li
59.1088 9.72948 li
59.4441 9.72948 li
59.7445 10.0109 60.3067 10.151 61.1314 10.151 cv
67.0255 10.151 li
67.8748 10.151 68.4694 10.0109 68.8079 9.72948 cv
69.1628 9.72948 li
69.1628 12.308 li
68.9422 12.308 li
68.8015 11.6881 68.5505 11.2646 68.1899 11.0377 cv
67.8286 10.8108 67.2873 10.6974 66.5653 10.6974 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
79.4216 19.2815 mo
79.4216 16.0166 li
73.2974 16.0166 li
73.2974 19.2815 li
73.2974 19.9471 73.3912 20.4117 73.5801 20.6741 cv
73.7683 20.9365 74.1087 21.0677 74.6006 21.0677 cv
74.6006 21.3935 li
70.537 21.3935 li
70.537 21.0677 li
71.0289 21.0677 71.3642 20.9352 71.5435 20.6697 cv
71.7223 20.4041 71.8117 19.942 71.8117 19.2834 cv
71.8117 12.2712 li
71.8117 11.5803 71.7204 11.1087 71.5385 10.8565 cv
71.3566 10.6035 71.0225 10.4774 70.537 10.4774 cv
70.537 10.151 li
74.6006 10.151 li
74.6006 10.4774 li
74.1087 10.4774 73.7683 10.6131 73.5801 10.8843 cv
73.3912 11.1563 73.2974 11.6177 73.2974 12.2693 cv
73.2974 15.4702 li
79.4216 15.4702 li
79.4216 12.2693 li
79.4216 11.579 79.3335 11.1081 79.1579 10.8558 cv
78.9824 10.6035 78.6515 10.4774 78.166 10.4774 cv
78.166 10.151 li
82.1915 10.151 li
82.1915 10.4774 li
81.7123 10.4774 81.3796 10.6086 81.1945 10.8704 cv
81.0094 11.1328 80.9169 11.5993 80.9169 12.2712 cv
80.9169 19.2834 li
80.9169 19.9547 81.0094 20.4199 81.1945 20.6792 cv
81.3796 20.9384 81.7123 21.0677 82.1915 21.0677 cv
82.1915 21.3935 li
78.166 21.3935 li
78.166 21.0677 li
78.6642 21.0677 78.9982 20.9384 79.1674 20.6785 cv
79.3367 20.4193 79.4216 19.954 79.4216 19.2815 cv
cp
f
90.9665 14.4066 mo
91.3018 14.4066 li
91.3018 17.1379 li
90.9665 17.1379 li
90.8448 16.6587 90.6984 16.3589 90.526 16.2372 cv
90.3529 16.1161 89.9758 16.0553 89.3945 16.0553 cv
86.6056 16.0553 li
86.6056 20.0802 li
86.6056 20.3616 86.6677 20.56 86.7926 20.6747 cv
86.9175 20.7894 87.1298 20.8471 87.4303 20.8471 cv
89.3945 20.8471 li
90.0975 20.8471 90.583 20.8091 90.8518 20.7324 cv
91.1199 20.6557 91.3468 20.5131 91.5319 20.3058 cv
91.7169 20.0979 91.9153 19.7613 92.1264 19.2948 cv
92.4617 19.2948 li
91.9439 21.3935 li
83.8452 21.3935 li
83.8452 21.0677 li
84.3504 21.0677 84.6889 20.9384 84.8613 20.6792 cv
85.0337 20.4199 85.1199 19.961 85.1199 19.3024 cv
85.1199 12.2712 li
85.1199 11.5866 85.0305 11.117 84.8518 10.8609 cv
84.673 10.6054 84.3377 10.4774 83.8452 10.4774 cv
83.8452 10.151 li
91.9439 10.151 li
91.9439 12.0297 li
91.7334 12.0297 li
91.6181 11.4928 91.4539 11.1372 91.2397 10.961 cv
91.0254 10.7855 90.5608 10.6974 89.8452 10.6974 cv
86.6056 10.6974 li
86.6056 15.5089 li
89.7495 15.5089 li
90.1773 15.5089 90.4695 15.4322 90.6261 15.2788 cv
90.7827 15.1254 90.8961 14.8351 90.9665 14.4066 cv
cp
f
106.977 19.0356 mo
106.977 12.2693 li
106.977 11.6114 106.889 11.1531 106.714 10.8938 cv
106.538 10.6352 106.226 10.4964 105.779 10.4774 cv
105.779 10.151 li
109.747 10.151 li
109.747 10.4774 li
109.268 10.4774 108.935 10.6086 108.75 10.8704 cv
108.565 11.1328 108.472 11.5993 108.472 12.2712 cv
108.472 19.2834 li
108.472 19.942 108.563 20.4041 108.745 20.6697 cv
108.928 20.9352 109.261 21.0677 109.747 21.0677 cv
109.747 21.3935 li
106.977 21.3935 li
106.977 19.8216 li
105.923 21.055 104.673 21.6711 103.229 21.6711 cv
102.041 21.6711 101.107 21.3168 100.427 20.6075 cv
99.7459 19.8983 99.4055 18.9627 99.4055 17.7996 cv
99.4055 12.2693 li
99.4055 11.5987 99.318 11.1322 99.1418 10.8704 cv
98.9662 10.608 98.629 10.4774 98.1308 10.4774 cv
98.1308 10.151 li
102.194 10.151 li
102.194 10.4774 li
101.69 10.4774 101.348 10.6048 101.169 10.8603 cv
100.99 11.1163 100.901 11.579 100.901 12.2503 cv
100.901 17.9435 li
100.901 18.8632 101.153 19.587 101.658 20.1138 cv
102.163 20.6411 102.866 20.9048 103.766 20.9048 cv
105.102 20.9048 106.172 20.2817 106.977 19.0356 cv
cp
f
119.843 10.4774 mo
119.843 10.151 li
123.235 10.151 li
123.235 10.4774 li
122.692 10.4774 122.315 10.6048 122.104 10.8603 cv
121.894 11.1163 121.788 11.579 121.788 12.2503 cv
121.788 21.3935 li
121.444 21.3935 li
113.479 11.6177 li
113.479 19.5135 li
113.479 20.07 113.592 20.4681 113.819 20.7077 cv
114.045 20.9479 114.424 21.0677 114.954 21.0677 cv
114.954 21.3935 li
111.542 21.3935 li
111.542 21.0677 li
112.086 21.0677 112.453 20.9251 112.645 20.6411 cv
112.836 20.3565 112.932 19.8558 112.932 19.1395 cv
112.932 12.559 li
112.932 11.8491 112.803 11.3388 112.544 11.0289 cv
112.285 10.7189 111.859 10.5351 111.265 10.4774 cv
111.265 10.151 li
114.15 10.151 li
121.213 18.9019 li
121.213 12.327 li
121.213 11.6367 121.115 11.1563 120.921 10.8843 cv
120.726 10.6131 120.366 10.4774 119.843 10.4774 cv
cp
f
128.881 10.151 mo
128.881 10.4774 li
128.401 10.4774 128.069 10.6086 127.884 10.8704 cv
127.698 11.1328 127.606 11.5993 127.606 12.2712 cv
127.606 19.2834 li
127.606 19.9547 127.698 20.4199 127.884 20.6792 cv
128.069 20.9384 128.401 21.0677 128.881 21.0677 cv
128.881 21.3935 li
124.836 21.3935 li
124.836 21.0677 li
125.328 21.0677 125.663 20.9397 125.842 20.6842 cv
126.021 20.4282 126.111 19.961 126.111 19.2834 cv
126.111 12.2712 li
126.111 11.5803 126.023 11.1087 125.847 10.8565 cv
125.671 10.6035 125.334 10.4774 124.836 10.4774 cv
124.836 10.151 li
128.881 10.151 li
cp
f
141.274 10.151 mo
141.274 10.4964 li
140.45 10.4964 139.768 11.2247 139.231 12.6813 cv
135.914 21.5469 li
135.595 21.5469 li
132.113 12.4227 li
131.787 11.579 131.506 11.0472 131.27 10.8267 cv
131.032 10.6067 130.694 10.4901 130.253 10.4774 cv
130.253 10.151 li
134.335 10.151 li
134.335 10.4774 li
133.679 10.4774 133.352 10.7297 133.352 11.2342 cv
133.352 11.4003 133.393 11.5885 133.476 11.7996 cv
136.228 19.0552 li
138.84 12.0493 li
138.948 11.7489 139.002 11.4903 139.002 11.2729 cv
139.002 10.7424 138.667 10.4774 137.997 10.4774 cv
137.997 10.151 li
141.274 10.151 li
cp
f
149.511 14.4066 mo
149.846 14.4066 li
149.846 17.1379 li
149.511 17.1379 li
149.389 16.6587 149.243 16.3589 149.07 16.2372 cv
148.897 16.1161 148.52 16.0553 147.939 16.0553 cv
145.15 16.0553 li
145.15 20.0802 li
145.15 20.3616 145.212 20.56 145.337 20.6747 cv
145.462 20.7894 145.674 20.8471 145.975 20.8471 cv
147.939 20.8471 li
148.642 20.8471 149.128 20.8091 149.396 20.7324 cv
149.664 20.6557 149.891 20.5131 150.076 20.3058 cv
150.261 20.0979 150.46 19.7613 150.671 19.2948 cv
151.006 19.2948 li
150.488 21.3935 li
142.39 21.3935 li
142.39 21.0677 li
142.895 21.0677 143.233 20.9384 143.406 20.6792 cv
143.578 20.4199 143.664 19.961 143.664 19.3024 cv
143.664 12.2712 li
143.664 11.5866 143.575 11.117 143.396 10.8609 cv
143.218 10.6054 142.882 10.4774 142.39 10.4774 cv
142.39 10.151 li
150.488 10.151 li
150.488 12.0297 li
150.278 12.0297 li
150.163 11.4928 149.998 11.1372 149.784 10.961 cv
149.57 10.7855 149.105 10.6974 148.39 10.6974 cv
145.15 10.6974 li
145.15 15.5089 li
148.294 15.5089 li
148.722 15.5089 149.014 15.4322 149.171 15.2788 cv
149.327 15.1254 149.441 14.8351 149.511 14.4066 cv
cp
f
156.41 10.5826 mo
155.231 10.5826 li
155.231 15.7199 li
156.611 15.7199 li
157.435 15.7199 158.082 15.4835 158.552 15.0107 cv
159.021 14.5378 159.256 13.9116 159.256 13.132 cv
159.256 12.3713 158.996 11.7565 158.475 11.2868 cv
157.954 10.8172 157.266 10.5826 156.41 10.5826 cv
cp
156.142 16.189 mo
155.231 16.189 li
155.231 19.2815 li
155.231 19.9471 155.325 20.4117 155.514 20.6741 cv
155.702 20.9365 156.036 21.0677 156.515 21.0677 cv
156.515 21.3935 li
152.47 21.3935 li
152.47 21.0677 li
152.969 21.0677 153.306 20.9365 153.482 20.6741 cv
153.658 20.4123 153.745 19.9483 153.745 19.2834 cv
153.745 12.2325 li
153.745 11.5676 153.659 11.1087 153.486 10.8565 cv
153.314 10.6035 152.976 10.4774 152.47 10.4774 cv
152.47 10.151 li
157.08 10.151 li
158.218 10.151 159.127 10.428 159.807 10.9801 cv
160.488 11.5328 160.828 12.2376 160.828 13.0939 cv
160.828 14.4738 160.055 15.3935 158.508 15.8537 cv
158.848 16.0711 159.18 16.3696 159.504 16.7499 cv
159.827 17.1296 160.251 17.7616 160.775 18.6445 cv
161.364 19.6244 161.823 20.2665 162.154 20.5714 cv
162.485 20.8769 162.829 21.0417 163.186 21.0677 cv
163.186 21.3935 li
160.885 21.3935 li
160.413 20.8243 159.841 19.9889 159.17 18.8879 cv
158.455 17.7292 157.894 16.9895 157.488 16.6695 cv
157.082 16.3494 156.634 16.189 156.142 16.189 cv
cp
f
169.84 9.98808 mo
170.156 9.98808 li
170.156 12.6242 li
169.821 12.6242 li
169.744 11.8953 169.48 11.3268 169.03 10.9179 cv
168.58 10.5091 168.012 10.3044 167.328 10.3044 cv
166.722 10.3044 166.232 10.4578 165.862 10.7645 cv
165.492 11.0713 165.306 11.4802 165.306 11.9917 cv
165.306 12.4645 165.46 12.8955 165.767 13.2853 cv
166.073 13.6752 166.738 14.1765 167.76 14.7901 cv
168.949 15.4994 169.747 16.1193 170.156 16.6492 cv
170.565 17.1797 170.77 17.7869 170.77 18.4702 cv
170.77 19.3519 170.456 20.1062 169.831 20.7324 cv
169.206 21.3586 168.453 21.6711 167.573 21.6711 cv
167.063 21.6711 166.412 21.531 165.621 21.2496 cv
165.296 21.1349 165.088 21.0772 164.999 21.0772 cv
164.814 21.0772 164.671 21.2211 164.569 21.5082 cv
164.233 21.5082 li
164.233 18.4702 li
164.569 18.4702 li
164.575 19.3075 164.848 19.9781 165.386 20.4833 cv
165.925 20.9878 166.555 21.2401 167.275 21.2401 cv
167.958 21.2401 168.505 21.0582 168.916 20.6931 cv
169.327 20.3286 169.533 19.8431 169.533 19.2353 cv
169.533 18.7814 169.364 18.3466 169.026 17.9308 cv
168.688 17.5156 167.981 16.9794 166.907 16.3234 cv
166.03 15.7827 165.445 15.3555 165.152 15.0417 cv
164.858 14.7286 164.642 14.3851 164.501 14.0111 cv
164.361 13.6371 164.29 13.2264 164.29 12.7789 cv
164.29 11.9162 164.573 11.2158 165.138 10.679 cv
165.704 10.1421 166.44 9.87336 167.348 9.87336 cv
167.846 9.87336 168.389 9.97224 168.977 10.1706 cv
169.251 10.26 169.444 10.3044 169.552 10.3044 cv
169.641 10.3044 169.702 10.2854 169.734 10.2473 cv
169.766 10.2087 169.801 10.1225 169.84 9.98808 cv
cp
f
176.692 10.151 mo
176.692 10.4774 li
176.212 10.4774 175.88 10.6086 175.695 10.8704 cv
175.509 11.1328 175.417 11.5993 175.417 12.2712 cv
175.417 19.2834 li
175.417 19.9547 175.509 20.4199 175.695 20.6792 cv
175.88 20.9384 176.212 21.0677 176.692 21.0677 cv
176.692 21.3935 li
172.647 21.3935 li
172.647 21.0677 li
173.139 21.0677 173.474 20.9397 173.653 20.6842 cv
173.832 20.4282 173.922 19.961 173.922 19.2834 cv
173.922 12.2712 li
173.922 11.5803 173.834 11.1087 173.658 10.8565 cv
173.482 10.6035 173.145 10.4774 172.647 10.4774 cv
172.647 10.151 li
176.692 10.151 li
cp
f
185.623 10.6974 mo
183.917 10.6974 li
183.917 19.3411 li
183.917 20.0187 184 20.4763 184.167 20.7128 cv
184.333 20.9492 184.655 21.0677 185.134 21.0677 cv
185.134 21.3935 li
181.157 21.3935 li
181.157 21.0677 li
181.651 21.0677 181.987 20.9321 182.165 20.6601 cv
182.343 20.3882 182.432 19.9293 182.432 19.2834 cv
182.432 10.6974 li
180.802 10.6974 li
180.022 10.6974 179.456 10.8222 179.101 11.0713 cv
178.746 11.3204 178.547 11.7324 178.502 12.308 cv
178.167 12.308 li
178.167 9.72948 li
178.502 9.72948 li
178.802 10.0109 179.364 10.151 180.189 10.151 cv
186.083 10.151 li
186.933 10.151 187.527 10.0109 187.866 9.72948 cv
188.221 9.72948 li
188.221 12.308 li
188 12.308 li
187.859 11.6881 187.608 11.2646 187.248 11.0377 cv
186.886 10.8108 186.345 10.6974 185.623 10.6974 cv
cp
f
197.694 11.7521 mo
195.164 15.739 li
195.164 19.2815 li
195.164 19.9667 195.252 20.4358 195.427 20.6887 cv
195.604 20.9409 195.928 21.0677 196.4 21.0677 cv
196.4 21.3935 li
192.298 21.3935 li
192.298 21.0677 li
192.854 21.0677 193.224 20.9333 193.405 20.6646 cv
193.587 20.3958 193.679 19.935 193.679 19.2815 cv
193.679 15.739 li
191.283 12.0107 li
190.887 11.3908 190.564 10.9851 190.314 10.7937 cv
190.065 10.6016 189.72 10.4964 189.279 10.4774 cv
189.279 10.151 li
193.679 10.151 li
193.679 10.4774 li
192.906 10.4774 192.519 10.653 192.519 11.0041 cv
192.519 11.1639 192.596 11.3616 192.749 11.5981 cv
194.972 15.0037 li
196.752 12.1812 li
197.014 11.7603 197.145 11.3997 197.145 11.0992 cv
197.145 10.6847 196.897 10.4774 196.4 10.4774 cv
196.4 10.151 li
199.487 10.151 li
199.487 10.4774 li
199.071 10.5028 198.75 10.594 198.523 10.7506 cv
198.296 10.9072 198.02 11.2406 197.694 11.7521 cv
cp
f
61.582 36.3602 mo
62.2146 36.3602 62.7718 35.9659 63.2541 35.178 cv
63.7365 34.3902 63.978 33.4514 63.978 32.3606 cv
63.978 31.8694 63.8499 31.4561 63.5945 31.1214 cv
63.3391 30.7868 63.0196 30.6188 62.6361 30.6188 cv
62.0226 30.6188 61.473 31.0111 60.9875 31.7958 cv
60.502 32.5805 60.2592 33.5021 60.2592 34.5613 cv
60.2592 35.1096 60.379 35.5469 60.6186 35.8721 cv
60.8582 36.1973 61.1795 36.3602 61.582 36.3602 cv
cp
63.1533 30.0439 mo
63.6775 30.0439 64.1377 30.2645 64.5339 30.705 cv
64.93 31.1461 65.1278 31.6634 65.1278 32.2579 cv
65.1278 33.2993 64.7348 34.3395 63.9488 35.3777 cv
63.1628 36.4159 62.2305 36.9351 61.1504 36.9351 cv
60.5501 36.9351 60.0595 36.7208 59.6792 36.293 cv
59.2989 35.8645 59.1088 35.3188 59.1088 34.6538 cv
59.1088 33.4907 59.529 32.4322 60.3695 31.477 cv
61.2093 30.5218 62.1379 30.0439 63.1533 30.0439 cv
cp
f
69.9665 30.255 mo
69.8994 30.7912 li
68.5353 30.7912 li
67.4407 36.5237 li
67.1529 38.0696 66.8354 39.1941 66.4867 39.897 cv
66.1381 40.5993 65.6488 41.1438 65.0194 41.5304 cv
64.3893 41.9171 63.713 42.1104 62.9904 42.1104 cv
62.0251 42.1104 61.2645 41.9348 60.708 41.583 cv
61.0052 40.2127 li
61.3405 40.2127 li
61.551 41.216 62.1221 41.7174 63.0532 41.7174 cv
63.7542 41.7174 64.3716 41.4632 64.9034 40.9555 cv
65.4365 40.4472 65.8744 39.2701 66.2193 37.4238 cv
67.4641 30.7912 li
66.0849 30.7912 li
66.1426 30.255 li
67.5256 30.255 li
68.0111 27.878 li
68.2672 26.6129 68.6849 25.7407 69.2642 25.2615 cv
69.8436 24.7823 70.5338 24.5427 71.3337 24.5427 cv
71.7052 24.5427 72.1501 24.6289 72.6693 24.8014 cv
72.7263 24.5618 li
73.1193 24.5618 li
72.746 26.3346 li
72.353 26.3346 li
72.2693 25.4022 71.8573 24.9357 71.1151 24.9357 cv
70.1681 24.9357 69.5279 25.7344 69.1958 27.3329 cv
68.5791 30.255 li
69.9665 30.255 li
cp
f
83.5023 29.7276 mo
83.8376 29.7276 li
83.8376 32.4588 li
83.5023 32.4588 li
83.3806 31.9797 83.2342 31.6798 83.0618 31.5581 cv
82.8888 31.4371 82.5116 31.3762 81.9304 31.3762 cv
79.1415 31.3762 li
79.1415 35.4011 li
79.1415 35.6826 79.2036 35.881 79.3284 35.9957 cv
79.4533 36.1104 79.6656 36.1681 79.9661 36.1681 cv
81.9304 36.1681 li
82.6333 36.1681 83.1188 36.1301 83.3876 36.0534 cv
83.6557 35.9767 83.8826 35.8341 84.0677 35.6268 cv
84.2528 35.4189 84.4512 35.0823 84.6623 34.6158 cv
84.9976 34.6158 li
84.4797 36.7145 li
76.3811 36.7145 li
76.3811 36.3887 li
76.8862 36.3887 77.2247 36.2594 77.3971 36.0001 cv
77.5695 35.7409 77.6557 35.282 77.6557 34.6234 cv
77.6557 27.5922 li
77.6557 26.9076 77.5664 26.4379 77.3876 26.1819 cv
77.2089 25.9264 76.8736 25.7984 76.3811 25.7984 cv
76.3811 25.472 li
84.4797 25.472 li
84.4797 27.3507 li
84.2693 27.3507 li
84.1539 26.8138 83.9897 26.4582 83.7755 26.282 cv
83.5613 26.1064 83.0967 26.0183 82.381 26.0183 cv
79.1415 26.0183 li
79.1415 30.8299 li
82.2853 30.8299 li
82.7132 30.8299 83.0054 30.7532 83.1619 30.5998 cv
83.3185 30.4464 83.432 30.1561 83.5023 29.7276 cv
cp
f
91.4622 25.9036 mo
89.3248 25.9036 li
89.3248 34.2032 li
89.3248 35.0025 89.4212 35.5482 89.6126 35.8423 cv
89.8046 36.1364 90.1875 36.2835 90.763 36.2835 cv
91.9223 36.2835 li
93.3028 36.2835 94.3886 35.8372 95.1809 34.946 cv
95.9732 34.0549 96.3694 32.8391 96.3694 31.2995 cv
96.3694 29.6636 95.9365 28.3553 95.0706 27.3748 cv
94.2048 26.3942 93.0024 25.9036 91.4622 25.9036 cv
cp
86.5651 36.7145 mo
86.5651 36.3887 li
87.0468 36.3887 87.3796 36.2562 87.564 35.9906 cv
87.7478 35.725 87.8397 35.263 87.8397 34.6044 cv
87.8397 27.5922 li
87.8397 26.9203 87.7478 26.4538 87.564 26.1914 cv
87.3796 25.9296 87.0468 25.7984 86.5651 25.7984 cv
86.5651 25.472 li
91.7645 25.472 li
93.6863 25.472 95.2234 26.0183 96.3757 27.1111 cv
97.5281 28.2038 98.1042 29.5932 98.1042 31.2805 cv
98.1042 32.9349 97.5585 34.2545 96.4664 35.2383 cv
95.3749 36.2226 93.8556 36.7145 91.9084 36.7145 cv
86.5651 36.7145 li
cp
f
103.635 25.472 mo
103.635 25.7984 li
103.156 25.7984 102.823 25.9296 102.638 26.1914 cv
102.453 26.4538 102.36 26.9203 102.36 27.5922 cv
102.36 34.6044 li
102.36 35.2757 102.453 35.7409 102.638 36.0001 cv
102.823 36.2594 103.156 36.3887 103.635 36.3887 cv
103.635 36.7145 li
99.5906 36.7145 li
99.5906 36.3887 li
100.082 36.3887 100.418 36.2606 100.596 36.0052 cv
100.775 35.7491 100.865 35.282 100.865 34.6044 cv
100.865 27.5922 li
100.865 26.9013 100.777 26.4297 100.602 26.1774 cv
100.425 25.9245 100.089 25.7984 99.5906 25.7984 cv
99.5906 25.472 li
103.635 25.472 li
cp
f
113.624 25.7984 mo
113.624 25.472 li
117.016 25.472 li
117.016 25.7984 li
116.473 25.7984 116.097 25.9258 115.885 26.1812 cv
115.675 26.4373 115.569 26.9 115.569 27.5713 cv
115.569 36.7145 li
115.225 36.7145 li
107.26 26.9387 li
107.26 34.8345 li
107.26 35.391 107.373 35.7891 107.6 36.0287 cv
107.827 36.2689 108.205 36.3887 108.736 36.3887 cv
108.736 36.7145 li
105.324 36.7145 li
105.324 36.3887 li
105.867 36.3887 106.235 36.2461 106.426 35.9621 cv
106.617 35.6775 106.714 35.1768 106.714 34.4605 cv
106.714 27.8799 li
106.714 27.17 106.584 26.6598 106.325 26.3498 cv
106.067 26.0399 105.64 25.8561 105.046 25.7984 cv
105.046 25.472 li
107.931 25.472 li
114.994 34.2228 li
114.994 27.648 li
114.994 26.9577 114.897 26.4772 114.702 26.2053 cv
114.507 25.934 114.147 25.7984 113.624 25.7984 cv
cp
f
122.085 31.098 mo
121.018 31.098 li
121.018 34.3952 li
121.018 35.1235 121.099 35.6205 121.259 35.8854 cv
121.419 36.1504 121.726 36.2835 122.181 36.2835 cv
123.113 36.2835 li
123.766 36.2835 124.299 36.0642 124.712 35.6268 cv
125.125 35.1888 125.332 34.6025 125.332 33.8679 cv
125.332 33.0312 125.035 32.36 124.443 31.8554 cv
123.85 31.3509 123.064 31.098 122.085 31.098 cv
cp
121.018 25.9036 mo
121.018 30.667 li
122.181 30.667 li
122.995 30.667 123.642 30.4546 124.122 30.0293 cv
124.603 29.6046 124.843 29.031 124.843 28.3091 cv
124.843 27.5491 124.607 26.9577 124.136 26.5362 cv
123.666 26.1147 123.001 25.9036 122.143 25.9036 cv
121.018 25.9036 li
cp
123.44 36.7145 mo
118.259 36.7145 li
118.259 36.3887 li
118.738 36.3887 119.07 36.2594 119.255 36.0001 cv
119.44 35.7409 119.533 35.2757 119.533 34.6044 cv
119.533 27.5922 li
119.533 26.9076 119.445 26.4379 119.27 26.1819 cv
119.094 25.9264 118.757 25.7984 118.259 25.7984 cv
118.259 25.472 li
122.5 25.472 li
123.715 25.472 124.671 25.723 125.368 26.2237 cv
126.066 26.7251 126.414 27.3874 126.414 28.2108 cv
126.414 29.4176 125.661 30.2664 124.153 30.7582 cv
124.153 30.8058 li
125.009 30.9788 125.707 31.3572 126.247 31.9423 cv
126.786 32.5279 127.056 33.2004 127.056 33.9617 cv
127.056 34.7933 126.726 35.4595 126.064 35.9615 cv
125.401 36.4635 124.527 36.7145 123.44 36.7145 cv
cp
f
137.069 34.3566 mo
137.069 27.5903 li
137.069 26.9323 136.98 26.4741 136.805 26.2148 cv
136.629 25.9562 136.318 25.8174 135.87 25.7984 cv
135.87 25.472 li
139.838 25.472 li
139.838 25.7984 li
139.359 25.7984 139.027 25.9296 138.841 26.1914 cv
138.656 26.4538 138.563 26.9203 138.563 27.5922 cv
138.563 34.6044 li
138.563 35.263 138.654 35.725 138.836 35.9906 cv
139.019 36.2562 139.352 36.3887 139.838 36.3887 cv
139.838 36.7145 li
137.069 36.7145 li
137.069 35.1425 li
136.014 36.376 134.765 36.9921 133.321 36.9921 cv
132.132 36.9921 131.198 36.6378 130.518 35.9285 cv
129.837 35.2192 129.497 34.2837 129.497 33.1206 cv
129.497 27.5903 li
129.497 26.9197 129.409 26.4532 129.233 26.1914 cv
129.057 25.929 128.72 25.7984 128.222 25.7984 cv
128.222 25.472 li
132.286 25.472 li
132.286 25.7984 li
131.781 25.7984 131.439 25.9258 131.26 26.1812 cv
131.081 26.4373 130.992 26.9 130.992 27.5713 cv
130.992 33.2645 li
130.992 34.1842 131.244 34.908 131.749 35.4347 cv
132.254 35.9621 132.957 36.2258 133.858 36.2258 cv
135.193 36.2258 136.263 35.6027 137.069 34.3566 cv
cp
f
145.44 25.9036 mo
144.261 25.9036 li
144.261 31.0409 li
145.642 31.0409 li
146.466 31.0409 147.113 30.8045 147.583 30.3317 cv
148.052 29.8588 148.287 29.2326 148.287 28.4529 cv
148.287 27.6923 148.027 27.0775 147.506 26.6078 cv
146.985 26.1381 146.297 25.9036 145.44 25.9036 cv
cp
145.172 31.51 mo
144.261 31.51 li
144.261 34.6025 li
144.261 35.268 144.356 35.7327 144.544 35.9951 cv
144.732 36.2575 145.066 36.3887 145.546 36.3887 cv
145.546 36.7145 li
141.501 36.7145 li
141.501 36.3887 li
142 36.3887 142.337 36.2575 142.513 35.9951 cv
142.688 35.7333 142.776 35.2693 142.776 34.6044 cv
142.776 27.5535 li
142.776 26.8886 142.69 26.4297 142.517 26.1774 cv
142.345 25.9245 142.006 25.7984 141.501 25.7984 cv
141.501 25.472 li
146.111 25.472 li
147.249 25.472 148.158 25.7489 148.838 26.301 cv
149.519 26.8537 149.859 27.5586 149.859 28.4149 cv
149.859 29.7948 149.086 30.7145 147.539 31.1747 cv
147.879 31.3921 148.21 31.6906 148.534 32.0709 cv
148.857 32.4506 149.282 33.0825 149.806 33.9655 cv
150.395 34.9454 150.854 35.5875 151.185 35.8924 cv
151.516 36.1979 151.86 36.3627 152.216 36.3887 cv
152.216 36.7145 li
149.916 36.7145 li
149.443 36.1453 148.871 35.3099 148.201 34.2089 cv
147.485 33.0502 146.924 32.3105 146.519 31.9904 cv
146.113 31.6703 145.664 31.51 145.172 31.51 cv
cp
f
163.388 31.8459 mo
163.388 32.1717 li
162.89 32.1717 162.533 32.2852 162.32 32.5127 cv
162.106 32.7396 161.998 33.132 161.998 33.6891 cv
161.998 36.7138 li
161.737 36.7842 161.246 36.8482 160.527 36.9059 cv
159.808 36.9636 159.251 36.9921 158.855 36.9921 cv
156.778 36.9921 155.16 36.4812 154.001 35.4588 cv
152.841 34.4364 152.261 33.0882 152.261 31.4143 cv
152.261 30.2455 152.515 29.1907 153.023 28.2514 cv
153.531 27.3126 154.24 26.5679 155.15 26.0183 cv
156.061 25.4694 157.028 25.1943 158.05 25.1943 cv
158.663 25.1943 159.331 25.3027 160.053 25.5201 cv
160.513 25.6545 160.864 25.7217 161.107 25.7217 cv
161.427 25.7217 161.638 25.5968 161.74 25.3477 cv
162.094 25.3477 li
162.094 28.664 li
161.778 28.664 li
161.65 27.7437 161.233 27.0071 160.527 26.4544 cv
159.821 25.9023 158.995 25.6254 158.05 25.6254 cv
156.862 25.6254 155.887 26.1001 155.127 27.049 cv
154.366 27.9978 153.986 29.2231 153.986 30.7246 cv
153.986 32.3726 154.425 33.7405 155.304 34.8263 cv
156.182 35.9127 157.286 36.4559 158.616 36.4559 cv
159.874 36.4559 160.503 36.0553 160.503 35.2547 cv
160.503 34.0352 li
160.503 33.3437 160.413 32.8601 160.23 32.5843 cv
160.048 32.3093 159.727 32.1717 159.267 32.1717 cv
158.835 32.1717 li
158.835 31.8459 li
163.388 31.8459 li
cp
f
173.193 34.6025 mo
173.193 31.3376 li
167.069 31.3376 li
167.069 34.6025 li
167.069 35.268 167.163 35.7327 167.352 35.9951 cv
167.54 36.2575 167.88 36.3887 168.372 36.3887 cv
168.372 36.7145 li
164.309 36.7145 li
164.309 36.3887 li
164.801 36.3887 165.136 36.2562 165.315 35.9906 cv
165.494 35.725 165.583 35.263 165.583 34.6044 cv
165.583 27.5922 li
165.583 26.9013 165.492 26.4297 165.31 26.1774 cv
165.128 25.9245 164.794 25.7984 164.309 25.7984 cv
164.309 25.472 li
168.372 25.472 li
168.372 25.7984 li
167.88 25.7984 167.54 25.934 167.352 26.2053 cv
167.163 26.4772 167.069 26.9387 167.069 27.5903 cv
167.069 30.7912 li
173.193 30.7912 li
173.193 27.5903 li
173.193 26.9 173.105 26.4291 172.93 26.1768 cv
172.754 25.9245 172.423 25.7984 171.938 25.7984 cv
171.938 25.472 li
175.963 25.472 li
175.963 25.7984 li
175.484 25.7984 175.151 25.9296 174.966 26.1914 cv
174.781 26.4538 174.689 26.9203 174.689 27.5922 cv
174.689 34.6044 li
174.689 35.2757 174.781 35.7409 174.966 36.0001 cv
175.151 36.2594 175.484 36.3887 175.963 36.3887 cv
175.963 36.7145 li
171.938 36.7145 li
171.938 36.3887 li
172.436 36.3887 172.77 36.2594 172.939 35.9995 cv
173.108 35.7403 173.193 35.275 173.193 34.6025 cv
cp
f
42.439 22.2878 mo
42.4143 21.9048 42.3263 21.5269 42.2874 21.1539 cv
42.2434 20.7599 42.2126 20.3674 42.1346 19.9927 cv
41.9171 18.9557 41.6286 17.9383 41.2633 16.9743 cv
41.2116 16.834 41.1314 16.7062 41.0738 16.5708 cv
40.9545 16.2832 40.8216 16.0151 40.6831 15.7421 cv
40.6381 15.6638 40.5919 15.5838 40.5468 15.5055 cv
40.4315 15.2665 40.3535 15.0072 40.2271 14.774 cv
40.1485 14.6292 40.0563 14.5081 39.9656 14.3678 cv
39.8953 14.2191 39.8239 14.0713 39.7568 13.9219 cv
39.4931 13.5143 39.2217 13.1143 38.9504 12.7155 cv
38.8449 12.5951 38.7427 12.4765 38.6399 12.357 cv
38.524 12.21 38.4114 12.0606 38.2955 11.9111 cv
38.1856 11.8013 38.0647 11.7101 37.9691 11.5864 cv
37.9114 11.5139 37.879 11.4403 37.8208 11.3686 cv
37.734 11.2749 37.6494 11.1813 37.5642 11.0906 cv
37.512 11.0423 37.4604 10.9945 37.4077 10.9461 cv
37.2785 10.7975 37.1549 10.6459 37.0192 10.4995 cv
36.9033 10.3899 36.7835 10.2767 36.666 10.1668 cv
36.5517 10.0514 36.4385 9.93745 36.3242 9.82206 cv
36.1671 9.69925 36.0078 9.57728 35.8517 9.45616 cv
35.688 9.31248 35.5254 9.17211 35.3628 9.02821 cv
35.254 8.94742 35.1375 8.89083 35.0277 8.81915 cv
34.8898 8.71643 34.7491 8.61561 34.6101 8.51452 cv
34.5024 8.44037 34.414 8.35795 34.3113 8.27553 cv
34.2371 8.23047 34.1618 8.18434 34.086 8.1368 cv
33.9844 8.064 33.8838 7.99205 33.7811 7.92116 cv
33.4465 7.71678 33.0883 7.56106 32.7411 7.38165 cv
32.6142 7.30255 32.4884 7.22098 32.3609 7.14182 cv
32.1423 7.03195 31.9258 6.92208 31.7072 6.81249 cv
31.528 6.72681 31.3429 6.66526 31.1588 6.59275 cv
31.0698 6.54358 30.9803 6.4925 30.8891 6.44248 cv
30.8204 6.41992 30.7501 6.39658 30.682 6.36968 cv
30.5721 6.32136 30.4627 6.27135 30.3523 6.22296 cv
30.0095 6.09937 29.6469 6.00873 29.2926 5.89993 cv
29.1255 5.84969 28.9503 5.78016 28.7816 5.73183 cv
28.4091 5.62281 28.0405 5.56649 27.6565 5.47991 cv
27.4087 5.42337 27.151 5.3522 26.901 5.31046 cv
26.7362 5.28762 26.5725 5.26675 26.4121 5.24396 cv
26.1401 5.18765 25.8385 5.13904 25.555 5.1036 cv
25.4479 5.10197 25.3397 5.09865 25.2309 5.09646 cv
25.1551 5.08577 25.0771 5.0753 25.0012 5.0649 cv
24.8546 5.06158 24.7068 5.05994 24.5584 5.05663 cv
24.2266 5.03412 23.8761 5.00746 23.5256 5.00498 cv
23.3893 5.04537 23.1998 5.0204 23.0509 5.0204 cv
22.5092 5.0204 li
22.4598 5.02945 22.4108 5.03739 22.3614 5.04537 cv
22.2356 5.04864 22.1092 5.05111 21.9862 5.05359 cv
21.9197 5.069 21.8527 5.08577 21.7862 5.10197 cv
21.7225 5.11075 21.6582 5.11817 21.5912 5.1261 cv
21.528 5.1261 21.4642 5.1198 21.411 5.14231 cv
21.373 5.14726 21.3351 5.15361 21.2983 5.15688 cv
21.2165 5.15688 21.1307 5.15525 21.0665 5.18928 cv
20.8907 5.18765 20.6291 5.211 20.4918 5.28464 cv
20.4556 5.28931 20.4177 5.29426 20.3786 5.29972 cv
20.2677 5.29893 20.1204 5.31266 20.0337 5.36458 cv
19.7435 5.36211 19.5045 5.48486 19.2425 5.54613 cv
19.104 5.57853 18.937 5.59451 18.8189 5.66731 cv
18.7052 5.66731 18.5799 5.69555 18.4888 5.74804 cv
18.3069 5.7464 18.1492 5.85217 17.9943 5.91366 cv
17.8998 5.94831 17.7855 5.94994 17.7037 6.0057 cv
17.5185 6.0057 17.3581 6.11146 17.207 6.17768 cv
17.1032 6.22296 16.9993 6.26476 16.8955 6.31005 cv
16.3324 6.54656 15.7824 6.81553 15.2424 7.09732 cv
15.1501 7.15639 15.0605 7.21462 14.9693 7.27178 cv
14.3191 7.59892 13.6788 7.96071 13.1055 8.42743 cv
12.9368 8.54776 12.7679 8.66973 12.5992 8.78922 cv
12.5094 8.86995 12.4215 8.94911 12.3319 9.02821 cv
12.1688 9.14933 11.996 9.25262 11.8369 9.38747 cv
11.5106 9.66302 11.2038 9.97233 10.9008 10.2704 cv
10.7184 10.439 10.5294 10.6077 10.3429 10.7775 cv
10.2792 10.85 10.2146 10.9228 10.1522 10.997 cv
10.0685 11.0747 9.98358 11.1554 9.89953 11.2329 cv
9.76631 11.3686 9.67264 11.5331 9.54431 11.6656 cv
9.43118 11.7787 9.31883 11.8853 9.21717 12.0114 cv
9.17183 12.0743 9.12351 12.1372 9.07901 12.2004 cv
8.88205 12.4207 8.69139 12.6363 8.52188 12.8753 cv
8.40734 13.0547 8.29252 13.2355 8.17472 13.4156 cv
8.00741 13.6313 7.82007 13.9073 7.69096 14.1433 cv
7.65225 14.2191 7.61568 14.2966 7.57613 14.3741 cv
7.4657 14.5614 7.35251 14.7474 7.23881 14.9331 cv
7.14182 15.1284 7.07561 15.3369 6.97783 15.533 cv
6.93277 15.608 6.88748 15.6841 6.84298 15.7591 cv
6.74515 15.9352 6.66526 16.1121 6.56524 16.2849 cv
6.5191 16.3985 6.4732 16.5126 6.42707 16.6255 cv
6.36912 16.7419 6.315 16.8581 6.2584 16.9743 cv
6.21306 17.1084 6.16805 17.2416 6.12271 17.3765 cv
6.06775 17.5204 6.012 17.6622 5.9554 17.8075 cv
5.68019 18.7038 5.44587 19.6051 5.25465 20.5547 cv
5.2393 20.7372 5.22309 20.9165 5.20768 21.0956 cv
5.18354 21.3024 5.11153 21.5285 5.09482 21.7337 cv
5.08025 21.8936 5.08655 22.076 5.0429 22.2262 cv
5.0308 22.3507 5.01871 22.4765 5.00577 22.6026 cv
4.97753 23.3699 5.00031 24.1033 5.01871 24.8477 cv
5.02861 25.2043 5.09949 25.5614 5.13021 25.9119 cv
5.1382 26.0668 5.14726 26.2184 5.1544 26.3723 cv
5.20222 26.8519 5.28295 27.3381 5.35794 27.8161 cv
5.39254 27.9359 5.425 28.0567 5.46044 28.1775 cv
5.54033 28.5545 5.62607 28.9192 5.73346 29.2774 cv
5.76587 29.3599 5.79636 29.4423 5.82798 29.5269 cv
5.84885 29.6121 5.87079 29.6961 5.89003 29.7829 cv
6.03236 30.1807 6.1752 30.5812 6.315 30.98 cv
6.3842 31.1289 6.45452 31.2789 6.52484 31.4294 cv
6.56524 31.5272 6.58611 31.6371 6.62898 31.7377 cv
6.73806 31.9931 6.89541 32.2206 7.02317 32.4656 cv
7.12646 32.6661 7.24674 32.8567 7.3484 33.0589 cv
7.37917 33.1298 7.40663 33.2023 7.43661 33.2754 cv
7.47121 33.3205 7.50694 33.3622 7.54232 33.404 cv
7.58024 33.4886 7.61816 33.5742 7.65855 33.6578 cv
7.75306 33.8243 7.86867 33.9858 7.99064 34.139 cv
8.06237 34.2313 8.1206 34.3346 8.19559 34.428 cv
8.29336 34.5527 8.40487 34.6659 8.49612 34.7934 cv
8.56864 34.8983 8.63648 35.0033 8.71091 35.1065 cv
8.84328 35.2681 8.97656 35.4279 9.11304 35.5878 cv
9.22376 35.7268 9.33419 35.8669 9.44654 36.0075 cv
9.58471 36.1531 9.7226 36.2998 9.86408 36.4437 cv
9.97615 36.5745 10.0731 36.7327 10.2055 36.8525 cv
10.3937 37.025 10.578 37.1997 10.7508 37.3755 cv
10.8428 37.4678 10.9348 37.5601 11.0277 37.6535 cv
11.1779 37.7842 11.3549 37.8798 11.5002 38.0172 cv
11.6422 38.1545 11.7837 38.2897 11.9257 38.4259 cv
12.0298 38.5078 12.1325 38.5852 12.2333 38.6633 cv
12.3594 38.7731 12.4685 38.8984 12.6047 38.994 cv
12.7704 39.1072 12.9239 39.2379 13.0976 39.3369 cv
13.2104 39.4028 13.3316 39.4368 13.4398 39.5093 cv
13.5681 39.5983 13.6958 39.6885 13.8233 39.7785 cv
13.9485 39.8599 14.0922 39.9247 14.2207 40.0049 cv
14.7037 40.2994 15.1913 40.5576 15.6986 40.7982 cv
15.9222 40.9059 16.1337 41.0421 16.3752 41.1246 cv
16.5925 41.2103 16.812 41.296 17.0295 41.3817 cv
17.1108 41.4037 17.19 41.4267 17.2691 41.4476 cv
17.4844 41.5311 17.6998 41.6136 17.9135 41.6959 cv
17.9717 41.7135 18.0295 41.73 18.0866 41.7476 cv
18.2728 41.8201 18.4558 41.9047 18.6508 41.9575 cv
18.8843 42.0047 19.1172 42.0486 19.3513 42.0948 cv
19.699 42.1673 20.0622 42.2761 20.4182 42.3311 cv
20.549 42.3409 20.6764 42.3519 20.8105 42.3596 cv
20.9813 42.3827 21.1549 42.4245 21.3346 42.4387 cv
21.4708 42.4475 21.606 42.4585 21.7411 42.4662 cv
21.8318 42.4794 21.9191 42.4926 22.0049 42.5069 cv
22.0993 42.5101 22.1911 42.5145 22.2823 42.5167 cv
22.4982 42.5486 22.7092 42.5816 22.9223 42.6134 cv
23.0294 42.6178 23.141 42.6233 23.2509 42.6277 cv
23.3152 42.6178 23.3816 42.6134 23.4487 42.6035 cv
23.6432 42.6057 23.8733 42.6277 24.0705 42.6343 cv
24.1931 42.6398 24.3101 42.6299 24.4321 42.6365 cv
24.6738 42.6486 24.9084 42.6003 25.1369 42.5684 cv
25.2397 42.5651 25.343 42.5618 25.4462 42.5574 cv
25.5852 42.5387 25.7347 42.5167 25.8726 42.5036 cv
26.3824 42.4585 26.8713 42.4003 27.3625 42.3036 cv
27.5274 42.2596 27.6943 42.2157 27.8581 42.1739 cv
28.0652 42.1321 28.2734 42.0882 28.4789 42.0465 cv
28.586 42.0157 28.6822 41.963 28.7833 41.9201 cv
28.9514 41.8717 29.119 41.8201 29.2871 41.7707 cv
29.3596 41.7443 29.4315 41.7201 29.5035 41.6959 cv
29.626 41.6608 29.7359 41.6476 29.859 41.6102 cv
30.1062 41.5246 30.3523 41.4377 30.6017 41.3509 cv
30.749 41.2795 30.8985 41.2103 31.0446 41.141 cv
31.1896 41.0861 31.3324 41.0191 31.4687 40.9543 cv
31.5104 40.9323 31.5489 40.9059 31.5885 40.8839 cv
31.7362 40.8125 31.8917 40.7433 32.0368 40.6675 cv
32.2054 40.5708 32.3752 40.4763 32.5433 40.3796 cv
32.6301 40.3367 32.7263 40.3104 32.8136 40.2664 cv
33.063 40.1357 33.2916 39.9632 33.5306 39.8126 cv
33.7355 39.6885 33.9399 39.5643 34.1437 39.4379 cv
34.3288 39.3028 34.4947 39.1456 34.6826 39.0149 cv
34.8804 38.8732 35.0771 38.7308 35.2732 38.5875 cv
35.3145 38.5501 35.3557 38.5095 35.3958 38.4688 cv
35.443 38.4446 35.4892 38.4193 35.5331 38.393 cv
35.7023 38.2644 35.8726 38.1139 36.0287 37.9688 cv
36.155 37.8502 36.2495 37.7194 36.3803 37.6002 cv
36.5105 37.4843 36.6566 37.3755 36.7907 37.2546 cv
36.8461 37.203 36.878 37.1464 36.9252 37.0981 cv
37.0352 36.9915 37.1472 36.8909 37.2461 36.7767 cv
37.3131 36.6943 37.3823 36.6086 37.4543 36.5245 cv
37.6966 36.2921 37.9186 36.0317 38.1229 35.7702 cv
38.2911 35.5713 38.4575 35.3713 38.6229 35.1746 cv
38.7328 35.0197 38.8438 34.8626 38.9514 34.7093 cv
39.0086 34.6478 39.0657 34.5868 39.1239 34.5253 cv
39.3014 34.2764 39.48 34.0259 39.6574 33.7776 cv
39.7123 33.6885 39.7437 33.6028 39.7942 33.516 cv
39.8316 33.4611 39.8722 33.4006 39.9118 33.3462 cv
39.9475 33.2721 39.9788 33.2007 40.015 33.1282 cv
40.1337 32.9216 40.2469 32.7161 40.3601 32.5062 cv
40.4529 32.3447 40.548 32.1848 40.6414 32.0233 cv
40.7205 31.8601 40.7694 31.6888 40.8414 31.5261 cv
40.9238 31.3563 41.0061 31.1817 41.0853 31.0108 cv
41.3605 30.273 41.6314 29.5296 41.85 28.7687 cv
41.8665 28.6786 41.8813 28.5863 41.8995 28.4962 cv
41.9588 28.215 42.0357 27.9292 42.089 27.6435 cv
42.1082 27.4963 42.1225 27.3491 42.1407 27.2024 cv
42.1807 26.9634 42.2286 26.7052 42.2626 26.4624 cv
42.2775 26.269 42.2934 26.0701 42.3071 25.8745 cv
42.3225 25.7987 42.3357 25.7229 42.3544 25.6454 cv
42.361 25.4822 42.372 25.3174 42.3785 25.1548 cv
42.3884 25.0702 42.4126 24.9944 42.4175 24.9087 cv
42.4175 24.7944 42.4143 24.6796 42.4126 24.5648 cv
42.4654 23.8236 42.4763 23.0193 42.439 22.2878 cv
20.0105 6.28097 mo
20.1869 6.28097 20.3204 6.20429 20.4726 6.17272 cv
20.7336 6.12193 20.9841 6.07574 21.2434 6.03236 cv
21.4115 6.00159 21.5994 6.02111 21.7818 6.00733 cv
22.0296 5.98786 22.2856 5.92249 22.5383 5.90381 cv
22.641 5.89667 22.7344 5.87715 22.8311 5.87799 cv
22.9553 5.87799 23.069 5.8821 23.1762 5.84007 cv
23.4162 5.8417 23.6585 5.84502 23.8969 5.84666 cv
24.0453 5.86094 24.198 5.8659 24.3579 5.8821 cv
24.465 5.89746 24.576 5.91366 24.6848 5.92744 cv
24.8485 5.93042 25.0122 5.93211 25.176 5.93374 cv
25.2529 5.94415 25.3298 5.9549 25.405 5.96452 cv
25.5143 5.96778 25.6232 5.97082 25.732 5.97492 cv
25.8704 5.99827 26.0055 6.02246 26.1424 6.04525 cv
26.1989 6.04609 26.2505 6.04609 26.3055 6.04693 cv
26.3687 6.0565 26.4176 6.08727 26.4736 6.11146 cv
26.545 6.13644 26.6198 6.15185 26.7005 6.16643 cv
27.001 6.22133 27.3433 6.22133 27.6471 6.27849 cv
27.6603 6.28097 27.6905 6.28423 27.696 6.30212 cv
27.6702 6.34881 27.1752 6.29717 27.0906 6.32052 cv
27.0208 6.3271 26.9483 6.33261 26.8791 6.33919 cv
26.7401 6.33672 26.5868 6.31967 26.4357 6.31337 cv
26.3901 6.31337 26.3137 6.29469 26.2725 6.3172 cv
26.189 6.3172 26.0846 6.28918 26.011 6.31337 cv
25.9396 6.32378 25.8682 6.33261 25.7968 6.3433 cv
25.6132 6.34246 25.31 6.25182 25.1402 6.3433 cv
24.9353 6.34246 24.765 6.3172 24.5672 6.30212 cv
24.4749 6.29385 24.3442 6.26971 24.2574 6.3051 cv
24.1629 6.30431 24.0959 6.32957 24.0096 6.33092 cv
23.9068 6.33261 23.8091 6.28755 23.7157 6.33261 cv
23.6569 6.33261 23.5959 6.34246 23.5508 6.36586 cv
23.119 6.36338 22.6883 6.35843 22.2543 6.35759 cv
22.1757 6.34797 22.0927 6.33672 22.0115 6.3271 cv
21.8148 6.32462 21.6181 6.32136 21.4209 6.32052 cv
21.2983 6.32052 20.9775 6.28097 20.8962 6.31888 cv
20.5945 6.3172 20.3176 6.29796 20.0105 6.29717 cv
20.0105 6.28097 li
cp
17.63 7.0045 mo
17.691 7.0045 17.8283 6.90037 17.8932 6.87702 cv
17.9596 6.85508 18.0261 6.83336 18.0921 6.81086 cv
18.1487 6.78009 18.2008 6.75094 18.2585 6.72017 cv
18.4558 6.6427 18.6849 6.58532 18.898 6.54656 cv
19.0458 6.51911 19.2095 6.54904 19.3535 6.55399 cv
19.5447 6.56034 19.727 6.54026 19.9128 6.54358 cv
20.0172 6.54358 20.1473 6.55399 20.2391 6.52738 cv
20.4039 6.53863 20.5731 6.52985 20.7489 6.52985 cv
20.9725 6.53283 21.1994 6.54358 21.4357 6.55235 cv
22.2098 6.57981 23.035 6.604 23.8299 6.59438 cv
23.9552 6.58695 24.0799 6.57654 24.2052 6.56693 cv
24.3914 6.57188 24.5771 6.57981 24.7628 6.58532 cv
25.6759 6.57654 26.6121 6.54904 27.5323 6.5815 cv
27.8383 6.5815 28.1449 6.57818 28.452 6.57323 cv
28.5827 6.57818 28.7118 6.57981 28.8404 6.5815 cv
29.1019 6.6265 29.3052 6.81384 29.5645 6.86965 cv
29.7084 6.89958 30.0606 6.94323 30.1534 7.04157 cv
30.1293 7.04652 30.1089 7.05232 30.0864 7.05862 cv
30.0501 7.06272 30.0117 7.06908 29.9727 7.07398 cv
29.8447 7.07235 29.7205 7.06908 29.5964 7.06604 cv
29.4821 7.04652 29.3662 7.02784 29.2491 7.00945 cv
29.1349 7.00613 29.0217 7.0045 28.9063 7.00287 cv
28.8382 7.00287 28.7514 6.99325 28.6943 7.01823 cv
28.592 7.01744 28.3767 6.99488 28.2998 7.03116 cv
28.2207 7.03116 28.1218 7.01907 28.0564 7.04652 cv
27.9416 7.04652 27.7889 7.02402 27.6943 7.06025 cv
27.5109 7.06025 27.051 7.0207 26.9252 7.08855 cv
26.8401 7.08855 26.7197 7.0553 26.6461 7.08855 cv
26.5362 7.08855 26.4472 7.06441 26.3494 7.05614 cv
26.2308 7.05614 26.1094 7.05311 25.9901 7.05232 cv
25.9083 7.05232 25.8132 7.03859 25.7435 7.06604 cv
25.643 7.06604 25.5165 7.04652 25.4325 7.08112 cv
25.3259 7.08112 25.1946 7.06025 25.1056 7.09654 cv
24.8178 7.0949 24.5463 7.0773 24.2519 7.07566 cv
24.1639 7.07566 24.0431 7.05614 23.9733 7.08855 cv
23.9134 7.08855 23.8453 7.0836 23.7926 7.10475 cv
23.7393 7.10475 23.6739 7.10312 23.6294 7.12073 cv
23.3646 7.11932 23.1124 7.08855 22.8581 7.0836 cv
22.5751 7.08197 22.2894 7.07893 22.0059 7.07814 cv
21.8994 7.07566 21.6631 7.03859 21.5807 7.0773 cv
21.3522 7.07566 21.1225 7.07398 20.8929 7.07235 cv
20.8077 7.07235 20.7012 7.05862 20.6291 7.08691 cv
20.5984 7.0935 20.5643 7.09817 20.5314 7.10312 cv
20.227 7.10064 19.9188 7.09732 19.6139 7.0949 cv
19.565 7.08528 19.5133 7.0773 19.4656 7.06739 cv
19.3513 7.06604 19.237 7.06272 19.1205 7.06025 cv
19.0579 7.05862 18.9684 7.03612 18.9107 7.06025 cv
18.4739 7.05862 18.0547 7.03994 17.63 7.03775 cv
17.63 7.0045 li
cp
16.326 7.52618 mo
16.376 7.49152 16.4236 7.46244 16.473 7.43003 cv
16.8768 7.16191 17.4614 7.29844 17.958 7.30171 cv
18.2415 7.30503 18.525 7.30503 18.8085 7.30807 cv
18.898 7.31296 18.9843 7.31791 19.0722 7.32342 cv
19.2238 7.32123 19.3831 7.3097 19.5469 7.3097 cv
20.1655 7.31465 20.7528 7.33552 21.3659 7.3196 cv
21.4813 7.3097 21.5961 7.30171 21.7115 7.29209 cv
21.8681 7.2976 22.0262 7.30171 22.1856 7.30666 cv
22.24 7.30255 22.2938 7.30092 22.3498 7.2976 cv
22.4076 7.30666 22.4696 7.31465 22.5295 7.32258 cv
22.6092 7.31465 22.6943 7.30666 22.7751 7.29844 cv
23.0657 7.31791 23.3486 7.35667 23.6596 7.34925 cv
23.8123 7.34373 23.9442 7.30503 24.1024 7.30503 cv
24.4925 7.29844 24.8546 7.34295 25.2331 7.34047 cv
25.4144 7.33878 25.6039 7.30255 25.7913 7.30171 cv
26.0868 7.2976 26.3934 7.32123 26.7093 7.31628 cv
26.8703 7.31628 27.0175 7.28883 27.1856 7.28714 cv
27.8608 7.29209 28.5382 7.29541 29.2173 7.29844 cv
29.3349 7.30171 29.4283 7.33248 29.5431 7.33085 cv
29.6975 7.31791 29.8513 7.30503 30.0029 7.28883 cv
30.1919 7.27921 30.5149 7.32753 30.6754 7.27425 cv
30.9116 7.29844 31.0808 7.42778 31.2852 7.51161 cv
31.4577 7.57945 31.7094 7.64179 31.8549 7.75717 cv
31.8807 7.75717 31.8687 7.76595 31.8687 7.78958 cv
31.8461 7.79588 31.8269 7.7992 31.8033 7.8055 cv
31.7 7.8055 31.5967 7.80415 31.4923 7.80415 cv
31.3681 7.80083 31.1984 7.77968 31.0968 7.8338 cv
31.0501 7.83959 30.9995 7.84589 30.9523 7.84921 cv
30.7979 7.84921 30.4216 7.79757 30.3106 7.84752 cv
30.2436 7.84752 30.1391 7.8338 30.0831 7.85883 cv
29.9304 7.85332 29.7771 7.84426 29.6255 7.83548 cv
29.5244 7.82339 29.3645 7.7709 29.2634 7.80719 cv
29.1591 7.80719 28.9459 7.78215 28.8695 7.8217 cv
28.6844 7.82502 28.4987 7.82665 28.3124 7.82665 cv
28.1531 7.82665 27.7905 7.77669 27.657 7.8316 cv
27.6251 7.83548 27.5922 7.84122 27.5598 7.84752 cv
27.4175 7.84752 27.2746 7.84426 27.1334 7.84285 cv
27.0725 7.83959 26.9922 7.81844 26.9373 7.84285 cv
26.8208 7.84285 26.6027 7.79588 26.5115 7.84038 cv
26.3934 7.83959 26.2308 7.81703 26.1308 7.85664 cv
26.061 7.85664 25.9616 7.84122 25.9017 7.87171 cv
25.6957 7.86868 25.4875 7.86868 25.2809 7.86704 cv
25.1946 7.86704 25.0727 7.85084 25.0012 7.88162 cv
24.7771 7.87914 24.5612 7.86294 24.3299 7.86209 cv
24.2485 7.86209 24.1519 7.84921 24.0832 7.87666 cv
23.8937 7.87036 23.7014 7.86294 23.5113 7.85742 cv
23.2926 7.85416 23.0739 7.85247 22.8553 7.85084 cv
22.7943 7.84038 22.7339 7.8316 22.674 7.82339 cv
22.4894 7.82007 22.3026 7.81703 22.1191 7.81456 cv
22.0389 7.81456 21.9351 7.80415 21.8719 7.83216 cv
21.8323 7.83796 21.7939 7.84285 21.7565 7.84752 cv
21.6994 7.84752 21.6219 7.83959 21.5758 7.86209 cv
20.85 7.85883 20.1303 7.81456 19.4123 7.80083 cv
19.3156 7.80083 19.215 7.7992 19.1195 7.7992 cv
19.0354 7.79757 18.9359 7.76763 18.8546 7.79757 cv
18.7277 7.79757 18.5404 7.77006 18.4305 7.81292 cv
18.1239 7.8055 17.8174 7.79757 17.513 7.78958 cv
17.3833 7.77804 17.0471 7.7426 16.9372 7.78631 cv
16.8164 7.78631 16.5738 7.7588 16.4793 7.80083 cv
16.4359 7.80719 16.3914 7.81214 16.3486 7.81703 cv
16.1782 7.81703 16.0368 7.78215 15.873 7.78215 cv
15.873 7.69754 16.2508 7.56353 16.326 7.52618 cv
14.6559 8.47992 mo
14.6729 8.47992 li
14.6729 8.44695 14.777 8.39199 14.807 8.3692 cv
14.8814 8.30957 14.9644 8.2739 15.0443 8.22473 cv
15.1317 8.16977 15.2157 8.10766 15.3149 8.07857 cv
15.5789 8.00358 15.9698 8.03981 16.2478 8.04476 cv
16.5222 8.04943 16.8048 8.02856 17.0834 8.03492 cv
17.2943 8.03981 17.5267 8.03267 17.7399 8.02856 cv
17.8223 8.03019 17.9042 8.03267 17.9838 8.03407 cv
18.4167 7.99368 18.9217 8.03981 19.3633 8.0415 cv
19.5776 8.04397 19.821 8.02035 20.0496 8.03655 cv
20.3331 8.05601 20.6006 8.10192 20.8852 8.1044 cv
21.0555 8.1044 21.2252 8.10192 21.3939 8.10192 cv
21.6137 8.08651 21.8318 8.04476 22.0664 8.04617 cv
22.5443 8.0478 23.0333 8.08184 23.5102 8.08431 cv
23.5684 8.0802 23.6294 8.07694 23.6877 8.07362 cv
23.7634 8.08431 23.842 8.09146 23.9167 8.10192 cv
24.0442 8.09478 24.1711 8.08651 24.2947 8.07857 cv
24.4475 8.07227 24.6013 8.09146 24.7551 8.08983 cv
24.9117 8.08431 25.0715 8.07362 25.2287 8.06895 cv
25.5424 8.07362 25.8682 8.11233 26.1973 8.09973 cv
26.3308 8.09314 26.4681 8.0599 26.6065 8.0577 cv
26.7054 8.05905 26.8033 8.0599 26.901 8.0599 cv
26.9384 8.0577 26.9758 8.0536 27.0142 8.0478 cv
27.0977 8.0536 27.1724 8.08983 27.2604 8.08651 cv
27.3884 8.07857 27.5109 8.07059 27.6372 8.06316 cv
27.8037 8.064 27.9877 8.08431 28.1635 8.07857 cv
28.2921 8.07362 28.4075 8.0478 28.5427 8.04943 cv
28.7267 8.04943 28.9118 8.04943 29.0981 8.05112 cv
29.1925 8.0536 29.2953 8.06068 29.3777 8.03655 cv
29.7392 8.06068 30.1067 8.0536 30.4743 8.06068 cv
30.6226 8.064 30.7918 8.08516 30.95 8.0761 cv
31.2797 8.0577 31.6291 8.04943 31.9835 8.0536 cv
32.1445 8.0536 32.3302 8.03655 32.4736 8.07278 cv
32.5367 8.08983 32.5817 8.1368 32.6367 8.16814 cv
32.7851 8.26344 32.9323 8.35795 33.0773 8.45162 cv
33.0773 8.52768 32.8389 8.51699 32.7829 8.54776 cv
32.7021 8.54692 32.5867 8.53072 32.5203 8.56312 cv
32.4444 8.56312 32.3362 8.54692 32.2741 8.57932 cv
32.1719 8.57606 32.0676 8.57359 31.9648 8.57274 cv
31.9082 8.56312 31.8549 8.5535 31.7984 8.54445 cv
31.5709 8.53235 31.3193 8.54062 31.1072 8.55817 cv
31.0336 8.56475 30.9446 8.53893 30.882 8.57274 cv
30.794 8.57111 30.7067 8.56942 30.6194 8.56942 cv
30.5809 8.57437 30.5419 8.57932 30.504 8.58568 cv
29.954 8.58236 29.3964 8.56149 28.8327 8.55817 cv
28.6772 8.55654 28.4756 8.50242 28.3415 8.57359 cv
28.2382 8.57274 28.1339 8.56942 28.0295 8.56723 cv
27.9103 8.55986 27.6631 8.52194 27.5548 8.56723 cv
27.4801 8.56723 27.3702 8.55187 27.3087 8.58236 cv
27.1999 8.58236 26.9813 8.54445 26.8983 8.58101 cv
26.7901 8.58101 26.6785 8.57932 26.5714 8.57769 cv
26.4758 8.57437 26.333 8.53404 26.244 8.57769 cv
26.2044 8.58236 26.1659 8.58731 26.1275 8.59305 cv
25.8868 8.59226 25.6457 8.58979 25.4078 8.58895 cv
25.3105 8.58895 25.1743 8.56723 25.0974 8.60352 cv
24.9479 8.60188 24.6958 8.55187 24.5705 8.6002 cv
24.5046 8.60352 24.442 8.60599 24.3755 8.60762 cv
24.2606 8.6002 24.1101 8.55187 23.9975 8.59856 cv
23.9277 8.59693 23.8244 8.58568 23.7684 8.61229 cv
23.397 8.60847 23.0245 8.60684 22.6543 8.60515 cv
22.4817 8.59525 22.1307 8.52194 21.9653 8.58568 cv
21.9203 8.59226 21.8774 8.59525 21.8345 8.60188 cv
21.6796 8.60188 21.551 8.57359 21.4071 8.56723 cv
21.0516 8.56475 20.699 8.56149 20.3424 8.55986 cv
20.2281 8.55654 20.1325 8.52824 20.016 8.52605 cv
19.782 8.52605 19.5463 8.5252 19.3123 8.52605 cv
19.2557 8.53404 19.2008 8.54281 19.1458 8.55187 cv
18.7969 8.55187 18.4464 8.55024 18.0975 8.55024 cv
17.9135 8.54608 17.7251 8.54281 17.5394 8.54062 cv
17.3932 8.5252 17.1763 8.46945 17.0317 8.52605 cv
16.9751 8.5252 16.8994 8.51699 16.8527 8.54197 cv
16.7807 8.54062 16.6982 8.53235 16.64 8.5557 cv
16.4631 8.5557 16.3019 8.53893 16.1313 8.5373 cv
16.0538 8.53893 15.9772 8.53893 15.9019 8.54062 cv
15.8406 8.54608 15.7857 8.56475 15.7204 8.56475 cv
15.5242 8.5535 15.3278 8.54445 15.13 8.53235 cv
14.9822 8.5252 14.807 8.54776 14.6729 8.51311 cv
14.6729 8.49691 li
14.6495 8.49691 14.6559 8.50242 14.6559 8.47992 cv
13.603 9.19631 mo
13.6329 9.19631 13.7079 9.11226 13.7329 9.09273 cv
13.8945 8.98944 14.0543 8.88289 14.215 8.77628 cv
14.3169 8.73426 14.4889 8.74388 14.605 8.74253 cv
14.7578 8.75378 14.9127 8.7634 15.0638 8.7755 cv
15.3489 8.78264 15.633 8.78922 15.9165 8.7958 cv
16.0651 8.78838 16.2112 8.7796 16.3582 8.76998 cv
16.5134 8.76998 16.6636 8.76914 16.8164 8.76914 cv
16.9328 8.7634 17.0471 8.75845 17.1608 8.75215 cv
17.3647 8.76008 17.5575 8.78675 17.7514 8.79085 cv
18.0514 8.798 18.3448 8.75845 18.636 8.76419 cv
18.7195 8.77055 18.8003 8.7755 18.8827 8.78264 cv
19.1139 8.78675 19.3513 8.77133 19.5721 8.76998 cv
19.9979 8.77133 20.4242 8.77302 20.85 8.77628 cv
21.1698 8.7796 21.4895 8.7958 21.818 8.798 cv
22.0477 8.79884 22.2768 8.80048 22.507 8.80211 cv
22.5927 8.79715 22.6795 8.79333 22.7663 8.78838 cv
22.9465 8.80543 23.1267 8.82163 23.3069 8.83839 cv
23.5657 8.84413 23.7904 8.79417 24.0453 8.7958 cv
24.2431 8.80706 24.4386 8.81915 24.6353 8.82793 cv
24.8397 8.83451 25.0463 8.81009 25.2584 8.81915 cv
25.3518 8.82793 25.4424 8.8362 25.5369 8.84582 cv
25.6132 8.83839 25.6902 8.83125 25.766 8.82326 cv
25.9566 8.81257 26.1583 8.81505 26.3395 8.8079 cv
26.6604 8.79417 26.9813 8.83125 27.29 8.8263 cv
27.4713 8.81336 27.6515 8.798 27.8328 8.78506 cv
28.2701 8.78675 28.7052 8.78838 29.1448 8.78922 cv
29.2354 8.7958 29.3294 8.80048 29.4211 8.80706 cv
29.8678 8.80211 30.3512 8.81009 30.8149 8.798 cv
31.0078 8.79333 31.2242 8.76751 31.4204 8.77133 cv
31.6445 8.79085 31.8687 8.81009 32.0917 8.82793 cv
32.295 8.82793 32.5048 8.78675 32.7005 8.7796 cv
32.8268 8.77302 32.9674 8.79085 33.0773 8.74636 cv
33.2416 8.7472 33.418 8.74636 33.5619 8.7958 cv
33.6371 8.82163 33.6904 8.88947 33.7531 8.93949 cv
33.7882 8.95867 33.8262 8.97656 33.8618 8.99603 cv
33.975 9.07186 34.0739 9.15265 34.1882 9.22843 cv
34.1882 9.25841 34.1558 9.26083 34.1387 9.27788 cv
34.019 9.27377 33.8992 9.27377 33.7794 9.27045 cv
33.6762 9.2592 33.5146 9.21802 33.418 9.25673 cv
33.3789 9.26252 33.3399 9.26719 33.3026 9.27377 cv
33.0306 9.27214 32.7565 9.26882 32.4823 9.26798 cv
32.2323 9.26556 31.9807 9.26415 31.7307 9.26415 cv
31.6522 9.26415 31.5456 9.24958 31.4835 9.27928 cv
31.4099 9.27788 31.3324 9.26798 31.272 9.29464 cv
31.1517 9.29301 30.9803 9.26798 30.877 9.30921 cv
30.7792 9.30758 30.5243 9.29161 30.4512 9.32131 cv
30.3326 9.32131 30.1743 9.29628 30.0733 9.33667 cv
29.9798 9.33504 29.8667 9.29959 29.7799 9.33504 cv
29.47 9.33341 29.1893 9.3158 28.8789 9.31248 cv
28.7723 9.31248 28.6382 9.29301 28.5503 9.32874 cv
28.4794 9.32131 28.4091 9.3158 28.3383 9.31085 cv
28.1081 9.30921 27.879 9.30758 27.6504 9.30618 cv
27.5751 9.30455 27.4669 9.27625 27.4015 9.30539 cv
27.1779 9.30455 26.7796 9.26556 26.5989 9.33341 cv
26.4582 9.32705 26.3143 9.32131 26.1731 9.3158 cv
25.8259 9.31743 25.4561 9.32705 25.0924 9.32542 cv
24.9513 9.32542 24.6985 9.29301 24.5848 9.3383 cv
24.5337 9.3383 24.4617 9.332 24.42 9.35456 cv
24.2387 9.34792 24.0607 9.34162 23.8788 9.33504 cv
23.3597 9.33116 22.8405 9.32874 22.3213 9.32542 cv
22.0653 9.3158 21.7928 9.30618 21.5203 9.30455 cv
21.4434 9.30455 21.339 9.27377 21.2719 9.30455 cv
21.1807 9.30207 21.0857 9.30207 20.995 9.30207 cv
20.8325 9.30044 20.6786 9.28666 20.5188 9.28913 cv
20.4726 9.28997 20.4083 9.27928 20.372 9.29875 cv
20.205 9.29712 20.0446 9.29628 19.8798 9.29628 cv
19.8039 9.29628 19.7117 9.28502 19.6507 9.31085 cv
19.3996 9.30921 19.1475 9.30758 18.898 9.30618 cv
18.8206 9.30455 18.7195 9.27377 18.6508 9.30539 cv
18.3129 9.30455 17.9685 9.28502 17.6179 9.28176 cv
17.5416 9.28092 17.4207 9.25127 17.3581 9.28092 cv
17.2987 9.28092 17.2224 9.27377 17.1763 9.29712 cv
16.7461 9.29464 16.3123 9.29875 15.8956 9.26882 cv
15.7121 9.25757 15.2827 9.1922 15.1267 9.26882 cv
15.0946 9.27377 15.0621 9.28007 15.0275 9.28502 cv
14.8111 9.28502 14.5996 9.26556 14.3724 9.26415 cv
14.1334 9.26415 13.8348 9.29628 13.6359 9.21166 cv
13.603 9.21166 li
13.603 9.19631 li
cp
12.566 9.94318 mo
12.6001 9.91657 12.6314 9.88906 12.6671 9.86409 cv
12.7841 9.77452 13.1096 9.47816 13.2412 9.47979 cv
13.4931 9.47979 13.7387 9.50865 13.9922 9.50724 cv
14.1417 9.49819 14.2911 9.48778 14.4386 9.47979 cv
14.5979 9.47568 14.7441 9.49352 14.8974 9.49655 cv
15.1358 9.5015 15.3869 9.48941 15.6179 9.49188 cv
16.0813 9.49352 16.518 9.54516 16.9955 9.54105 cv
17.1004 9.54021 17.19 9.51608 17.29 9.51275 cv
17.5306 9.5015 17.791 9.50865 18.0261 9.5015 cv
18.1574 9.51275 18.2898 9.52153 18.4195 9.53228 cv
18.5563 9.52153 18.6931 9.51608 18.8293 9.50724 cv
18.9821 9.51439 19.1354 9.51934 19.2876 9.52648 cv
19.6353 9.51275 19.9979 9.49352 20.3539 9.49492 cv
20.5182 9.49819 20.6819 9.49819 20.8456 9.5015 cv
20.9269 9.51028 21.0159 9.5298 21.1082 9.53143 cv
21.2917 9.53228 21.4565 9.50398 21.6323 9.5015 cv
21.9038 9.49819 22.179 9.54353 22.4521 9.55478 cv
22.5894 9.54983 22.7246 9.54516 22.8613 9.54105 cv
23.0317 9.54516 23.2031 9.55973 23.386 9.56108 cv
23.4734 9.5581 23.5618 9.55315 23.6475 9.5482 cv
23.7167 9.5581 23.7893 9.5644 23.8607 9.57261 cv
23.9365 9.5644 24.0129 9.5581 24.0898 9.5482 cv
24.3024 9.54983 24.5161 9.54983 24.7293 9.54983 cv
24.8018 9.54353 24.8716 9.53526 24.9441 9.52811 cv
25.0573 9.54105 25.1726 9.55478 25.288 9.56772 cv
25.4512 9.5702 25.6132 9.57098 25.7803 9.57346 cv
25.877 9.5702 25.9753 9.5644 26.0737 9.55973 cv
26.6142 9.55973 li
26.7401 9.54983 26.8659 9.54105 26.9922 9.53228 cv
27.2153 9.53228 27.4406 9.53363 27.6636 9.53363 cv
27.768 9.52569 27.8707 9.51608 27.9756 9.50865 cv
28.0624 9.51771 28.1492 9.52648 28.2382 9.53695 cv
28.38 9.54353 28.5278 9.52648 28.6624 9.52896 cv
28.969 9.54516 29.2744 9.55973 29.581 9.5743 cv
30.1122 9.56108 30.6358 9.51275 31.172 9.50724 cv
31.3429 9.50398 31.5159 9.53143 31.6951 9.52401 cv
31.7978 9.51934 31.8824 9.49492 31.9906 9.49492 cv
32.262 9.49655 32.5367 9.49819 32.8103 9.49903 cv
32.9839 9.51028 33.1592 9.51934 33.3355 9.5298 cv
33.4427 9.51771 33.5531 9.50398 33.6619 9.49188 cv
33.7652 9.48361 33.8816 9.49819 33.975 9.47236 cv
34.175 9.48361 34.375 9.49492 34.5728 9.50865 cv
34.6612 9.53228 35.048 9.83331 35.0848 9.92203 cv
35.0634 9.92783 35.042 9.93193 35.0205 9.93745 cv
34.9172 9.93745 34.7573 9.91078 34.6749 9.95202 cv
34.4343 9.95117 34.1437 9.8858 33.9387 9.9973 cv
33.8992 10.0023 33.8618 10.0069 33.8228 10.0127 cv
33.7432 10.0127 33.6454 10.0015 33.5767 10.0281 cv
33.4136 10.0281 33.096 9.98988 32.9718 10.0569 cv
32.8564 10.0457 32.7422 10.0361 32.6268 10.0223 cv
32.3878 10.0207 32.1466 10.0165 31.906 10.0152 cv
31.7686 10.0053 31.5072 9.96653 31.3824 10.0152 cv
30.8852 10.0127 30.3875 10.0086 29.8903 10.0053 cv
29.6777 9.9973 29.4453 9.98768 29.2173 9.98605 cv
29.1343 9.98605 29.0272 9.97396 28.9558 10.0023 cv
28.769 10.0015 28.5833 9.99978 28.3987 9.9973 cv
28.302 9.9932 28.1789 9.9586 28.0888 9.9973 cv
27.9141 9.99567 27.7388 9.99404 27.5625 9.9932 cv
27.4922 9.9932 27.4076 9.98279 27.3482 10.0086 cv
27.3109 10.0144 27.2735 10.0199 27.2351 10.0248 cv
27.0208 10.0248 26.8087 10.0223 26.5945 10.0207 cv
26.5187 10.0207 26.4132 10.0053 26.3494 10.0361 cv
26.2066 10.0361 25.8132 10.0037 25.7105 10.0506 cv
25.5748 10.0489 25.2913 10.0152 25.1859 10.0619 cv
25.1529 10.0668 25.1199 10.0731 25.0886 10.0797 cv
24.876 10.0765 24.6952 10.0402 24.4804 10.0426 cv
24.4265 10.044 24.3629 10.0393 24.3178 10.0569 cv
24.1497 10.0569 23.8684 9.99978 23.7278 10.0547 cv
23.6838 10.0555 23.6415 10.0569 23.5959 10.0569 cv
23.4652 10.0506 23.2052 9.9586 23.0882 10.019 cv
22.8916 10.0119 22.6943 10.0053 22.4988 9.99978 cv
22.4279 9.99978 22.3455 9.98909 22.284 10.0144 cv
22.1587 10.0127 21.9203 9.95528 21.8104 10.011 cv
21.7769 10.0165 21.7433 10.0207 21.7115 10.0281 cv
21.4719 10.0248 21.2313 10.0223 20.9907 10.0199 cv
20.8973 10.011 20.8055 10.0015 20.7116 9.98988 cv
20.5643 9.98909 20.4182 9.98768 20.2699 9.98605 cv
20.1869 9.98442 20.0787 9.97233 20.0073 10.0015 cv
19.9347 10.0015 19.8556 9.99235 19.7935 10.0152 cv
19.7117 10.0152 19.6281 10.011 19.565 10.0473 cv
19.4711 10.0457 19.3793 10.044 19.2864 10.0402 cv
19.137 10.0199 18.937 9.93193 18.7777 9.9932 cv
18.5684 9.9932 18.3601 9.9748 18.1388 9.97396 cv
18.0695 9.97233 17.9838 9.9649 17.9256 9.98909 cv
17.874 9.98909 17.8042 9.98442 17.7613 10.0053 cv
17.713 10.0086 17.6641 10.0152 17.6124 10.0199 cv
17.3196 10.019 17.0576 9.99157 16.779 9.96327 cv
16.7192 9.9528 16.6571 9.94318 16.5988 9.93581 cv
16.3299 9.93193 16.0634 9.9303 15.7961 9.92867 cv
15.6533 9.92867 15.4022 9.89705 15.2866 9.94155 cv
15.2171 9.94155 15.1212 9.91162 15.0572 9.94155 cv
14.9709 9.93908 14.7949 9.90943 14.7303 9.93908 cv
14.6842 9.94318 14.6405 9.95033 14.5979 9.95528 cv
14.3491 9.9528 14.0947 9.95528 13.8623 9.9649 cv
13.7837 9.96653 13.6804 9.95202 13.6159 9.9811 cv
13.2654 9.97947 12.9157 9.97643 12.566 9.97643 cv
12.566 9.94318 li
cp
41.6632 23.5943 mo
41.6632 23.6313 41.5737 23.6267 41.5462 23.6426 cv
41.4655 23.6426 41.3726 23.6297 41.3028 23.6572 cv
41.1869 23.6558 41.0194 23.6267 40.9238 23.67 cv
40.4282 23.6684 39.9304 23.6637 39.4338 23.6621 cv
39.3151 23.6588 39.091 23.6121 38.991 23.6621 cv
38.8646 23.6605 38.5756 23.6267 38.4844 23.6734 cv
38.3784 23.6734 38.2361 23.6201 38.1383 23.6558 cv
37.9576 23.6621 37.7779 23.6684 37.5983 23.675 cv
37.3329 23.6717 37.0676 23.6684 36.8044 23.6637 cv
36.8044 23.7379 36.8044 23.8091 36.8033 23.8819 cv
36.8456 23.8846 36.8835 23.8901 36.922 23.8934 cv
37.0797 23.8967 37.2373 23.8819 37.3823 23.8835 cv
37.4747 23.8901 37.568 23.8934 37.662 23.8967 cv
37.8318 23.8901 38.0004 23.8802 38.1702 23.8692 cv
38.7427 23.872 39.3129 23.8753 39.9079 23.8785 cv
40.1711 23.8802 40.4304 23.8802 40.693 23.8819 cv
40.8446 23.8802 41.0067 23.8967 41.1352 23.8527 cv
41.2353 23.8544 41.333 23.856 41.4308 23.8594 cv
41.494 23.8626 41.5611 23.8819 41.6286 23.872 cv
41.6286 23.8785 41.6286 23.8819 41.6281 23.8901 cv
41.6836 23.8901 41.6533 24.3175 41.6407 24.3807 cv
41.5611 24.3791 41.4842 24.4082 41.3946 24.4082 cv
41.2501 24.4115 40.9891 24.3566 40.871 24.4065 cv
40.7727 24.4065 40.6216 24.384 40.5425 24.4241 cv
40.4381 24.423 40.2123 24.3966 40.1332 24.4373 cv
39.8546 24.434 39.5992 24.4197 39.3151 24.4164 cv
39.247 24.4164 39.1553 24.4033 39.1003 24.4296 cv
38.7893 24.4296 38.479 24.4263 38.1669 24.4241 cv
38.0658 24.4197 37.8444 24.3714 37.7593 24.4065 cv
37.6153 24.4055 37.4725 24.4033 37.3302 24.4033 cv
37.239 24.3989 37.1242 24.3681 37.0352 24.4033 cv
36.9703 24.4033 36.8857 24.4065 36.8297 24.3873 cv
36.8165 24.3824 36.8121 24.3631 36.8033 24.3516 cv
36.8033 24.6461 li
36.8149 24.6472 36.8297 24.6472 36.839 24.6472 cv
36.9758 24.6488 37.1032 24.6362 37.2329 24.6362 cv
37.3615 24.6406 37.4945 24.6472 37.6241 24.6521 cv
37.8592 24.6554 38.0762 24.6312 38.2977 24.6263 cv
38.3944 24.6312 38.4938 24.6362 38.5921 24.6406 cv
38.7569 24.6395 38.9174 24.6373 39.0817 24.6362 cv
39.1366 24.6427 39.1915 24.6505 39.247 24.657 cv
39.3448 24.6647 39.4459 24.6505 39.5426 24.6521 cv
39.6123 24.6554 39.6843 24.657 39.7546 24.6614 cv
39.8162 24.6505 39.8772 24.6427 39.9349 24.634 cv
40.0612 24.6312 40.215 24.6521 40.3282 24.6164 cv
40.4925 24.6197 40.6513 24.6362 40.804 24.6362 cv
40.9413 24.6362 41.505 24.5988 41.5858 24.6669 cv
41.6523 24.7263 41.6028 25.0724 41.572 25.1493 cv
41.5704 25.1768 41.4341 25.1691 41.4072 25.1823 cv
41.3726 25.1883 41.3325 25.1933 41.2929 25.1977 cv
41.0424 25.1977 40.7913 25.1949 40.5408 25.1949 cv
40.46 25.1933 40.3414 25.1757 40.276 25.2076 cv
40.0305 25.2076 39.7826 25.2098 39.5382 25.2098 cv
39.4723 25.2043 39.408 25.1977 39.3442 25.19 cv
39.2756 25.1977 39.2124 25.2043 39.147 25.2098 cv
39.0696 25.2031 38.9921 25.1949 38.9152 25.1866 cv
38.7586 25.185 38.5976 25.1823 38.4427 25.1801 cv
38.3504 25.1757 38.2345 25.146 38.1471 25.1801 cv
37.7356 25.1768 37.3263 25.1757 36.9165 25.1735 cv
36.8033 25.1735 li
36.8033 25.4174 li
36.8033 25.39 36.9033 25.4048 36.9319 25.4048 cv
37.2208 25.4048 37.501 25.4048 37.801 25.4064 cv
37.9059 25.4064 38.04 25.4256 38.1274 25.3922 cv
38.6097 25.3954 39.0783 25.4306 39.5536 25.4323 cv
39.7448 25.424 39.9349 25.4141 40.1294 25.4064 cv
40.52 25.4141 40.9149 25.4207 41.3062 25.4306 cv
41.3863 25.4323 41.4517 25.4548 41.538 25.4597 cv
41.5358 25.5597 41.538 25.8195 41.4765 25.8767 cv
41.4242 25.891 41.3742 25.9042 41.321 25.9201 cv
41.2171 25.9201 40.9567 25.8668 40.8793 25.9009 cv
40.8155 25.8987 40.7347 25.891 40.6831 25.9168 cv
40.6381 25.9218 40.5963 25.9228 40.5507 25.9317 cv
40.0931 25.9284 39.6426 25.8926 39.1761 25.891 cv
39.0388 25.8894 38.8481 25.8569 38.7306 25.9042 cv
38.6174 25.9042 38.3592 25.8745 38.2735 25.9201 cv
37.8972 25.9135 37.5192 25.9085 37.1428 25.902 cv
37.0319 25.8943 36.9176 25.8844 36.8011 25.88 cv
36.8011 25.9734 36.8 26.0668 36.8 26.1591 cv
36.8923 26.1234 37.1324 26.1393 37.223 26.1415 cv
37.5554 26.1415 37.8878 26.1426 38.2208 26.1426 cv
38.424 26.1509 38.7432 26.1542 38.9108 26.0866 cv
39.1514 26.0877 39.3678 26.1151 39.5992 26.13 cv
39.7953 26.1393 40.0112 26.1316 40.2051 26.13 cv
40.4128 26.125 40.6216 26.1415 40.8293 26.1426 cv
41.0084 26.1426 41.2726 26.0833 41.4341 26.1657 cv
41.5325 26.1657 41.4666 26.5228 41.4292 26.5722 cv
41.3896 26.6162 41.3303 26.6113 41.2847 26.6371 cv
41.2353 26.6447 41.1869 26.6503 41.1352 26.6546 cv
40.837 26.6536 40.5353 26.6514 40.2365 26.6503 cv
40.1008 26.6437 39.903 26.5904 39.7761 26.6481 cv
39.6646 26.6481 39.4355 26.6206 39.3514 26.6629 cv
39.0075 26.658 38.6487 26.6404 38.2856 26.6371 cv
38.1878 26.6371 38.0883 26.6371 37.9889 26.6371 cv
37.9164 26.6371 37.8098 26.6079 37.746 26.6354 cv
37.4164 26.6338 37.1258 26.6047 36.8 26.5997 cv
36.7989 26.692 36.7989 26.7821 36.7989 26.8711 cv
36.8308 26.87 36.8604 26.8645 36.8912 26.8634 cv
37.1258 26.8634 37.361 26.8612 37.5933 26.8601 cv
37.7043 26.8634 37.8131 26.8667 37.924 26.87 cv
38.0004 26.8761 38.0647 26.8986 38.1526 26.8986 cv
38.2685 26.8953 38.3735 26.87 38.4971 26.87 cv
38.7064 26.8711 39.1036 26.9085 39.2668 26.8425 cv
39.3442 26.8502 39.4201 26.8568 39.4986 26.8645 cv
39.6481 26.8612 39.7975 26.8425 39.9557 26.8437 cv
40.2365 26.8519 40.5134 26.8585 40.793 26.8634 cv
40.927 26.8678 41.2083 26.8568 41.3171 26.9035 cv
41.3995 26.9035 41.3017 27.2941 41.2963 27.3447 cv
41.2699 27.3447 41.2479 27.3606 41.2325 27.3765 cv
41.0891 27.3765 40.6381 27.3447 40.5414 27.3898 cv
40.4381 27.3898 40.2271 27.3656 40.1502 27.4062 cv
39.992 27.4029 39.8338 27.4007 39.6733 27.3974 cv
39.5942 27.3947 39.503 27.37 39.4294 27.3996 cv
39.3426 27.3996 39.2338 27.3914 39.1657 27.4315 cv
39.069 27.4188 38.969 27.4073 38.8701 27.3974 cv
38.7015 27.3963 38.5333 27.3947 38.363 27.3914 cv
38.2861 27.3898 38.1702 27.3623 38.1004 27.3914 cv
38.0092 27.3821 37.9153 27.37 37.823 27.359 cv
37.5488 27.3573 37.2752 27.3546 37.0055 27.3513 cv
36.9341 27.348 36.8665 27.3447 36.7989 27.3381 cv
36.7989 27.5963 li
36.9555 27.5919 37.111 27.5853 37.2637 27.5853 cv
37.3681 27.5897 37.4725 27.5963 37.5768 27.6029 cv
37.8955 27.6062 38.2361 27.598 38.5591 27.5996 cv
38.8261 27.6029 39.1965 27.6677 39.4272 27.5787 cv
39.5909 27.5864 39.7568 27.5919 39.9216 27.598 cv
39.9997 27.5952 40.0815 27.5897 40.1645 27.5864 cv
40.2414 27.5963 40.3161 27.6046 40.3952 27.6106 cv
40.6749 27.6194 40.9512 27.6106 41.2325 27.6403 cv
41.2281 27.7501 41.2265 27.8633 41.2007 27.9633 cv
41.1836 28.0193 41.166 28.0743 41.1446 28.1292 cv
40.9996 28.1325 40.8545 28.1358 40.7018 28.1358 cv
40.5776 28.1325 40.4529 28.1292 40.3249 28.1248 cv
40.1628 28.1193 39.9964 28.1117 39.8338 28.1083 cv
39.7074 28.1083 39.5833 28.1117 39.4563 28.1149 cv
39.3376 28.1083 39.1426 28.0699 39.0333 28.1193 cv
38.9646 28.1193 38.8723 28.1067 38.8174 28.1358 cv
38.6339 28.1325 38.4614 28.1083 38.2943 28.0984 cv
37.7911 28.0743 37.306 28.06 36.7973 28.0567 cv
36.7967 28.1391 36.7967 28.2248 36.7967 28.3056 cv
36.8461 28.2957 36.9099 28.2957 36.9319 28.2863 cv
36.9934 28.3105 37.0708 28.3023 37.1445 28.3056 cv
37.3439 28.3116 37.5642 28.3265 37.7691 28.3204 cv
37.9543 28.3149 38.1482 28.338 38.3235 28.338 cv
38.4888 28.3314 38.6503 28.3215 38.8163 28.3149 cv
39.1036 28.3248 39.4075 28.3731 39.703 28.3654 cv
39.8854 28.3457 40.075 28.3281 40.259 28.3083 cv
40.392 28.299 40.9864 28.2781 41.0545 28.349 cv
41.0924 28.3908 41.0699 28.4731 41.06 28.5215 cv
41.038 28.6314 40.9886 28.7544 40.9117 28.8336 cv
40.5886 28.8319 40.2359 28.7984 39.926 28.8385 cv
39.8722 28.8479 39.8184 28.8533 39.7656 28.8594 cv
39.6179 28.8577 39.1591 28.8061 39.0602 28.8566 cv
38.9064 28.8544 38.7547 28.8533 38.6004 28.8511 cv
38.4987 28.8479 38.3504 28.8094 38.2581 28.8511 cv
38.1306 28.8511 37.9614 28.8044 37.8471 28.85 cv
37.4945 28.8479 37.1516 28.8061 36.7945 28.7984 cv
36.7939 28.8742 36.7939 28.9484 36.7939 29.0242 cv
37.0154 29.0275 37.2329 29.0291 37.4543 29.0291 cv
37.6658 29.0401 37.8812 29.0791 38.1076 29.0775 cv
38.4701 29.0758 38.8449 29.0824 39.2053 29.0665 cv
39.3102 29.0577 39.4135 29.0484 39.5178 29.0423 cv
39.5887 29.0484 39.659 29.0549 39.731 29.061 cv
39.7975 29.0549 39.8645 29.0484 39.926 29.0423 cv
40.0876 29.0401 40.7446 29.0302 40.8183 29.1192 cv
40.8551 29.1643 40.8216 29.2599 40.8056 29.3071 cv
40.782 29.3807 40.749 29.4598 40.6952 29.5214 cv
40.615 29.5214 40.5183 29.5088 40.448 29.5346 cv
40.3809 29.5346 40.2887 29.5269 40.2365 29.5511 cv
40.2024 29.5571 40.1711 29.562 40.137 29.5686 cv
40.0194 29.5664 39.7272 29.5329 39.6469 29.5637 cv
39.5756 29.5719 39.5052 29.5763 39.4316 29.5846 cv
39.2152 29.5637 38.9921 29.562 38.7586 29.5587 cv
38.6811 29.5587 38.5625 29.5412 38.4998 29.5752 cv
38.3867 29.573 38.2307 29.5422 38.1383 29.5879 cv
37.9905 29.5879 37.0038 29.573 36.7934 29.5296 cv
36.7934 29.8527 li
36.894 29.8411 36.9978 29.8126 37.1032 29.8126 cv
37.5158 29.8159 37.924 29.817 38.3323 29.817 cv
38.4328 29.8092 38.5301 29.7994 38.6306 29.7884 cv
38.8355 29.7851 39.0525 29.7768 39.252 29.7752 cv
39.3448 29.7752 39.4613 29.7884 39.547 29.7609 cv
39.7184 29.762 39.8772 29.7862 40.0359 29.7862 cv
40.104 29.7802 40.1694 29.7736 40.2359 29.7653 cv
40.3688 29.7609 40.4941 29.7802 40.6111 29.7994 cv
40.6111 29.8867 40.5134 30.1872 40.4441 30.2356 cv
40.3914 30.2548 40.3348 30.2697 40.282 30.2889 cv
40.1024 30.2872 39.9337 30.3037 39.7722 30.3114 cv
39.6986 30.3147 39.6096 30.2889 39.5448 30.3164 cv
39.4767 30.3164 39.3838 30.3065 39.3305 30.3323 cv
39.2975 30.3372 39.2646 30.3433 39.2311 30.3488 cv
39.069 30.3488 38.8954 30.3323 38.7229 30.3279 cv
38.6366 30.3224 38.5267 30.2949 38.446 30.3279 cv
38.396 30.3323 38.346 30.3372 38.2977 30.3433 cv
38.1383 30.3405 37.9818 30.3389 37.823 30.3372 cv
37.701 30.3279 37.5197 30.2663 37.3978 30.3224 cv
37.3356 30.3224 37.2637 30.3147 37.2164 30.3372 cv
37.1324 30.3372 36.8297 30.3521 36.7907 30.3048 cv
36.7907 30.4213 36.7907 30.5295 36.7907 30.6421 cv
36.7939 30.6378 36.7934 30.6235 36.7989 30.6169 cv
36.8461 30.5587 37.3461 30.5746 37.4615 30.5345 cv
37.5428 30.5454 37.6191 30.5356 37.7076 30.5389 cv
37.8933 30.5454 38.1076 30.5685 38.2965 30.5652 cv
38.4152 30.5587 38.5372 30.5504 38.6558 30.5444 cv
38.7789 30.5422 38.8657 30.5746 38.9855 30.5746 cv
39.1789 30.5779 39.3756 30.5718 39.5734 30.5685 cv
39.7272 30.563 40.0958 30.507 40.2249 30.5718 cv
40.2359 30.5812 40.2436 30.5872 40.2518 30.5905 cv
40.2854 30.6378 40.2206 30.8185 40.2007 30.8652 cv
40.1628 30.9493 40.1294 31.0624 40.015 31.0657 cv
39.9667 31.0674 39.9222 31.0575 39.8821 31.0718 cv
39.7854 31.0624 39.6876 31.0531 39.5887 31.041 cv
39.3997 31.03 39.1794 31.035 38.9976 31.0465 cv
38.9262 31.0531 38.8476 31.0399 38.7861 31.0674 cv
38.6449 31.0674 38.3845 31.0223 38.2768 31.0806 cv
38.2449 31.0866 38.2108 31.0899 38.179 31.0982 cv
38.0691 31.0982 37.9603 31.0948 37.8515 31.0948 cv
37.7779 31.0915 37.6868 31.0674 37.6208 31.0932 cv
37.3455 31.0915 37.0654 31.0915 36.7874 31.0883 cv
36.7874 31.1882 36.7874 31.2822 36.7868 31.3772 cv
36.8835 31.369 36.9676 31.3322 37.0615 31.3239 cv
37.2445 31.3064 37.4296 31.3229 37.6043 31.3173 cv
37.6812 31.3096 37.7549 31.3014 37.8323 31.2921 cv
38.2043 31.2866 38.5883 31.2855 38.9504 31.2866 cv
39.1157 31.2866 39.3047 31.2888 39.4723 31.2855 cv
39.5695 31.2822 39.6788 31.2932 39.7678 31.269 cv
39.8277 31.2723 39.9079 31.2679 39.9437 31.3173 cv
39.987 31.3745 39.8546 31.6646 39.8173 31.7195 cv
39.7826 31.7645 39.7415 31.7921 39.6986 31.8261 cv
39.5843 31.8261 39.4701 31.8316 39.3547 31.8327 cv
39.2239 31.8316 38.958 31.7645 38.8476 31.8195 cv
38.7339 31.8195 38.4888 31.7921 38.4042 31.8343 cv
38.2955 31.8343 38.1328 31.8068 38.0433 31.847 cv
37.9318 31.847 37.7807 31.8068 37.6812 31.8459 cv
37.3912 31.8459 37.0708 31.8343 36.7846 31.8591 cv
36.7846 31.9393 36.7841 32.014 36.7841 32.0931 cv
36.8802 32.0816 36.9857 32.075 37.0077 32.0722 cv
37.134 32.0634 37.2329 32.0865 37.3516 32.0816 cv
37.4681 32.0722 37.5829 32.0574 37.6966 32.0448 cv
37.8839 32.0574 38.068 32.0667 38.2559 32.0782 cv
38.4031 32.0799 38.5449 32.0591 38.6811 32.0508 cv
38.8679 32.0414 39.0767 32.0816 39.2558 32.0349 cv
39.3843 32.0392 39.4854 32.0667 39.6179 32.0722 cv
39.6162 32.2123 39.4536 32.5293 39.3008 32.5535 cv
39.1844 32.5689 39.03 32.5337 38.924 32.5754 cv
38.7377 32.5722 38.3197 32.5062 38.1702 32.587 cv
37.8537 32.5853 37.534 32.5903 37.2362 32.5612 cv
37.123 32.5447 36.9341 32.5304 36.7819 32.5145 cv
36.7819 32.6051 36.7819 32.6853 36.7813 32.7699 cv
36.7907 32.7667 36.7989 32.7645 36.8088 32.7612 cv
36.9066 32.7677 37.1703 32.7727 37.2686 32.7776 cv
37.361 32.7727 37.4543 32.7727 37.5466 32.7677 cv
37.7631 32.776 37.9779 32.8018 38.2043 32.7985 cv
38.4202 32.7974 38.6723 32.7952 38.891 32.8018 cv
38.9987 32.8068 39.1185 32.7985 39.2009 32.8551 cv
39.2228 32.8551 39.2174 32.8502 39.2174 32.8732 cv
39.1965 32.8732 38.9646 33.3364 38.8009 33.3622 cv
38.5855 33.3913 38.2685 33.3336 38.0521 33.3249 cv
37.7647 33.3138 37.4868 33.304 37.2154 33.2897 cv
37.1242 33.2847 36.922 33.3072 36.7791 33.2913 cv
36.7791 33.5319 li
37.2516 33.5336 37.8372 33.5435 38.28 33.5742 cv
38.4152 33.5853 38.5526 33.5951 38.6883 33.6061 cv
38.6883 33.6545 li
38.6558 33.6545 38.6487 33.6995 38.6405 33.7226 cv
38.6053 33.805 38.4691 34.005 38.3811 34.0434 cv
38.3306 34.0566 38.2779 34.0665 38.2262 34.0797 cv
38.1153 34.0764 37.8664 33.9984 37.7845 34.0259 cv
37.6362 34.0259 37.4362 33.9665 37.2945 34.0248 cv
37.222 34.0248 36.9484 34.0226 36.7758 33.9951 cv
36.7758 34.0874 36.7736 34.1621 36.7736 34.2347 cv
37.0055 34.2357 37.2637 34.2379 37.4889 34.2412 cv
37.5933 34.2506 37.6966 34.2599 37.801 34.2698 cv
37.9488 34.272 38.0955 34.2747 38.2438 34.2764 cv
38.2427 34.406 37.9818 34.6835 37.8592 34.7186 cv
37.784 34.7274 37.7098 34.7384 37.6345 34.7483 cv
37.3516 34.7461 37.0555 34.7318 36.7665 34.7274 cv
36.7627 34.8208 36.7511 34.9 36.7451 34.9856 cv
36.8115 34.9757 36.8885 34.9681 36.9121 34.9582 cv
37.0263 34.9582 37.5659 34.9692 37.6038 35.0417 cv
37.6636 35.1598 37.3505 35.4197 37.2686 35.4828 cv
37.1407 35.4828 36.8539 35.5054 36.6841 35.4636 cv
36.666 35.5559 36.6478 35.6444 36.6258 35.7268 cv
36.7758 35.7268 36.9626 35.7268 37.0555 35.7284 cv
37.0555 35.7449 li
37.0708 35.7449 li
37.0708 35.8976 36.5791 36.2921 36.4451 36.3728 cv
36.4451 36.3712 36.4045 36.3728 36.355 36.3778 cv
36.1155 36.7651 35.7738 37.0756 35.3073 37.4513 cv
34.9167 37.77 34.5178 38.0205 34.1014 38.2238 cv
34.1157 38.2238 34.1256 38.2205 34.1404 38.2188 cv
34.3981 38.2106 33.8531 38.5644 33.7948 38.6094 cv
33.6371 38.6094 33.3531 38.6369 33.2213 38.5902 cv
33.1883 38.5902 li
33.1883 38.5842 li
32.8048 38.705 32.4037 38.8017 31.9796 38.8798 cv
32.1016 38.8798 32.2136 38.883 32.2692 38.8808 cv
32.3856 38.8798 32.501 38.8924 32.6125 38.894 cv
32.684 38.8858 32.7554 38.8798 32.8246 38.8699 cv
32.9103 38.8649 32.9943 38.8732 33.0718 38.8534 cv
33.3026 38.8534 li
33.3026 38.8649 33.302 38.8764 33.302 38.8858 cv
33.2938 38.8891 33.285 38.8924 33.2762 38.8957 cv
33.1784 38.9924 33.0312 39.072 32.912 39.139 cv
32.829 39.1874 32.7565 39.2544 32.6719 39.2973 cv
32.5988 39.3236 32.5213 39.3478 32.446 39.372 cv
32.3944 39.372 32.3246 39.3687 32.2829 39.3896 cv
31.8791 39.3863 31.4742 39.383 31.0698 39.3819 cv
30.916 39.3786 30.638 39.3214 30.4963 39.3786 cv
30.3375 39.3786 30.1161 39.3446 29.9881 39.4072 cv
29.8798 39.4072 29.6985 39.3786 29.6117 39.4237 cv
29.3816 39.406 29.1524 39.3863 28.9228 39.3676 cv
28.8761 39.3676 28.8184 39.3522 28.7778 39.3687 cv
28.5657 39.3687 28.074 39.3676 27.702 39.3654 cv
27.5532 39.383 27.4054 39.3984 27.2521 39.4171 cv
26.8346 39.4654 26.4846 39.5478 26.178 39.6511 cv
26.478 39.6533 26.9571 39.6533 27.2164 39.6533 cv
27.4581 39.6445 27.6988 39.6357 27.9383 39.6258 cv
28.536 39.6302 29.1645 39.6533 29.7568 39.6368 cv
29.9568 39.6324 30.1611 39.6258 30.3479 39.6237 cv
30.4501 39.6237 30.5578 39.6335 30.6413 39.5918 cv
31.1023 39.5961 31.5456 39.6159 32.0197 39.617 cv
32.0197 39.6335 li
32.0368 39.6335 li
32.0368 39.65 li
31.9785 39.6478 31.8274 39.7643 31.7708 39.795 cv
31.5868 39.8851 31.3995 39.9708 31.2105 40.0522 cv
31.0995 40.1005 30.9885 40.1664 30.8649 40.1906 cv
30.6397 40.2324 30.3776 40.1928 30.1293 40.1972 cv
30.0293 40.1972 29.948 40.2214 29.8513 40.2247 cv
29.7568 40.228 29.6095 40.2038 29.5244 40.2423 cv
29.4096 40.2423 29.2958 40.2455 29.1804 40.2477 cv
29.0316 40.2411 28.8931 40.1565 28.7541 40.2378 cv
28.5042 40.2356 28.2515 40.2378 28.0191 40.2214 cv
27.9086 40.2115 27.7388 40.1928 27.6372 40.2312 cv
27.5691 40.2312 27.4669 40.2181 27.4104 40.2455 cv
27.268 40.2455 27.1252 40.2445 26.9845 40.2445 cv
26.8406 40.2423 26.4626 40.1829 26.3451 40.2411 cv
26.027 40.2389 25.5594 40.1939 25.1825 40.1774 cv
25.0628 40.273 24.9617 40.373 24.8738 40.473 cv
25.0507 40.4675 25.2825 40.4708 25.377 40.4576 cv
25.833 40.4005 26.3264 40.4675 26.7851 40.4708 cv
27.0252 40.4708 27.2576 40.4433 27.5081 40.4433 cv
27.6691 40.4444 27.8119 40.4477 27.9658 40.4477 cv
28.0515 40.4455 28.1371 40.4521 28.2119 40.4312 cv
28.3536 40.4796 28.6174 40.4477 28.7865 40.4521 cv
29.0162 40.4543 29.2525 40.4895 29.4909 40.4884 cv
29.598 40.4763 29.7084 40.4675 29.8172 40.4576 cv
29.9722 40.4576 30.1243 40.4609 30.2776 40.4576 cv
30.2776 40.4763 li
30.2611 40.4763 li
30.2611 40.5027 30.2287 40.4982 30.21 40.5059 cv
30.0523 40.5675 29.8958 40.6301 29.737 40.6895 cv
29.653 40.7301 29.5705 40.7675 29.4865 40.8081 cv
29.3733 40.8498 29.2579 40.8905 29.1448 40.9268 cv
29.025 40.9268 28.758 40.8971 28.6679 40.9422 cv
28.5635 40.9422 28.4607 40.94 28.3558 40.9389 cv
28.2855 40.9334 28.1959 40.9125 28.1284 40.9389 cv
28.0564 40.9389 27.9526 40.9257 27.8987 40.9531 cv
27.8669 40.9608 27.835 40.9642 27.7998 40.9696 cv
27.6438 40.9674 27.4949 40.9729 27.34 40.9642 cv
27.2493 40.9598 27.1202 40.9048 27.029 40.9488 cv
26.9499 40.9488 26.8466 40.9334 26.7846 40.9642 cv
26.6785 40.9642 26.5274 40.9389 26.4396 40.9795 cv
26.3862 40.9795 26.3165 40.974 26.2764 40.9949 cv
26.1879 40.9949 26.0715 40.9807 25.9968 41.0092 cv
25.9572 41.0147 25.9204 41.0191 25.8808 41.0246 cv
25.755 41.0246 25.3726 40.9807 25.2913 41.0213 cv
25.204 41.0213 25.116 41.0191 25.0298 41.0191 cv
24.9112 41.018 24.6925 41.0147 24.5222 41.007 cv
24.4788 41.0982 24.4425 41.1905 24.4145 41.2762 cv
24.7573 41.2443 25.2517 41.2597 25.5682 41.2663 cv
25.8627 41.2729 26.1879 41.2531 26.472 41.2278 cv
26.5901 41.2179 26.7098 41.2356 26.8153 41.1938 cv
27.051 41.1949 27.279 41.2136 27.5065 41.2147 cv
27.7284 41.2081 27.952 41.207 28.1751 41.2015 cv
28.1751 41.2179 li
27.9899 41.2169 27.7757 41.3278 27.5977 41.3685 cv
27.4708 41.3971 27.3307 41.3751 27.223 41.441 cv
27.0406 41.4388 26.856 41.5278 26.6945 41.5762 cv
26.6494 41.585 26.6077 41.5927 26.5659 41.6036 cv
26.4599 41.6025 26.3588 41.6058 26.2725 41.6509 cv
26.1923 41.6498 25.972 41.6849 25.91 41.7135 cv
25.8099 41.7135 25.6957 41.7026 25.6154 41.7443 cv
25.5034 41.7443 25.2584 41.7168 25.1726 41.7575 cv
25.1402 41.764 25.1067 41.7685 25.0737 41.7739 cv
24.8178 41.7739 24.5606 41.7707 24.3024 41.7707 cv
23.9024 41.7992 23.5684 41.8355 23.086 41.7992 cv
23.0844 41.7959 23.0828 41.7916 23.0828 41.7882 cv
23.0619 41.8025 22.9992 41.7894 22.9778 41.786 cv
22.7636 41.7509 22.5504 41.7168 22.3356 41.6817 cv
22.234 41.6772 22.1307 41.674 22.0262 41.6674 cv
21.8906 41.6476 21.7532 41.6278 21.6181 41.6091 cv
21.4901 41.6036 21.373 41.619 21.256 41.6036 cv
20.5599 41.5069 19.8605 41.3971 19.1936 41.2498 cv
19.0903 41.2278 18.8305 41.174 18.7678 41.0982 cv
19.075 41.1619 19.4249 41.1388 19.7524 41.1553 cv
20.0337 41.1696 20.3149 41.2004 20.6039 41.2004 cv
20.6918 41.207 20.7797 41.2179 20.8659 41.2257 cv
20.9533 41.2223 21.0401 41.2179 21.1269 41.2136 cv
21.2478 41.2223 21.3659 41.2322 21.4879 41.2421 cv
21.5675 41.2421 21.6511 41.2278 21.7312 41.2356 cv
21.8318 41.2553 21.9301 41.2751 22.0279 41.296 cv
22.2219 41.3069 22.6603 41.2872 22.9124 41.2861 cv
22.8674 41.1861 22.8103 41.0795 22.7366 40.9674 cv
22.585 40.974 22.3422 40.9422 22.2768 40.9729 cv
22.1675 40.9729 22.0054 40.9268 21.9147 40.9696 cv
21.6434 40.9674 21.3692 40.9664 21.0978 40.9642 cv
21.0017 40.9642 20.8852 40.929 20.7995 40.9642 cv
20.5242 40.963 20.283 40.9268 20.0149 40.9268 cv
19.6545 40.9224 19.2919 40.9213 18.9316 40.918 cv
18.8085 40.9026 18.6821 40.885 18.5558 40.8707 cv
18.4701 40.8675 18.3799 40.8641 18.2943 40.8609 cv
18.1865 40.84 18.0712 40.8257 17.9712 40.7906 cv
17.891 40.7609 17.819 40.7301 17.735 40.7092 cv
17.6152 40.6839 17.4932 40.6642 17.3801 40.6433 cv
17.2471 40.6158 17.1241 40.5609 17.0026 40.5125 cv
16.935 40.4862 16.8647 40.4763 16.8048 40.4312 cv
16.7895 40.4312 li
16.7895 40.4159 li
16.8477 40.4126 16.9087 40.407 16.9691 40.4027 cv
17.2087 40.407 17.4713 40.4235 17.7229 40.4213 cv
17.908 40.4203 18.103 40.4312 18.2635 40.3752 cv
18.5206 40.3829 18.7777 40.3906 19.0354 40.3994 cv
19.1425 40.4092 19.2513 40.4181 19.3611 40.4312 cv
19.565 40.4346 19.7403 40.3796 19.9364 40.3884 cv
20.2072 40.3972 20.4847 40.4378 20.7556 40.44 cv
21.072 40.4411 21.3885 40.4411 21.7049 40.4433 cv
21.8081 40.44 22.079 40.4686 22.2477 40.4346 cv
22.1576 40.3609 22.057 40.2829 21.9433 40.2071 cv
21.8466 40.2005 21.7246 40.1895 21.7049 40.1994 cv
21.6565 40.1994 21.5862 40.1939 21.5433 40.2115 cv
21.3609 40.2115 21.1797 40.1829 20.9863 40.1763 cv
20.9297 40.173 20.8572 40.1565 20.8055 40.1763 cv
20.7138 40.1763 20.5918 40.1357 20.5105 40.1763 cv
20.2968 40.1686 20.0842 40.162 19.871 40.1555 cv
19.7875 40.1555 19.6798 40.1412 19.6078 40.1698 cv
19.4073 40.1664 19.204 40.1631 19.0013 40.162 cv
18.8827 40.1488 18.6975 40.0829 18.5778 40.1323 cv
18.4772 40.1313 18.3569 40.1148 18.281 40.162 cv
18.1734 40.162 17.9525 40.1379 17.8712 40.1763 cv
17.4251 40.1763 16.9702 40.1664 16.5439 40.1247 cv
16.3711 40.1071 16.195 40.1104 16.0368 40.0598 cv
15.764 39.973 15.55 39.75 15.2858 39.6533 cv
15.2858 39.6225 li
15.5475 39.6237 15.8091 39.6258 16.0717 39.6269 cv
16.2096 39.6368 16.3535 39.661 16.4988 39.6599 cv
16.6867 39.6577 16.8614 39.6302 17.0559 39.6324 cv
17.2087 39.6324 17.3614 39.6324 17.5152 39.6335 cv
17.5954 39.6335 17.691 39.6412 17.7602 39.6192 cv
17.9042 39.6335 18.0349 39.6192 18.1865 39.6225 cv
18.5937 39.6302 19.0381 39.6434 19.4644 39.6445 cv
19.7941 39.6467 20.1435 39.6445 20.4489 39.6752 cv
20.4962 39.672 20.5462 39.6687 20.5962 39.6665 cv
20.639 39.6709 20.7385 39.672 20.8412 39.6742 cv
20.5775 39.5808 20.2902 39.4896 19.96 39.4104 cv
19.9084 39.4072 19.8556 39.406 19.8424 39.406 cv
19.615 39.3852 19.3798 39.383 19.1386 39.3819 cv
19.0651 39.3819 18.9667 39.3676 18.9101 39.3962 cv
18.8557 39.3962 18.7854 39.3918 18.7447 39.4104 cv
18.5168 39.4104 18.3069 39.3896 18.0899 39.3918 cv
17.9404 39.3929 17.786 39.4028 17.63 39.406 cv
17.5251 39.4072 17.3746 39.3819 17.2861 39.4193 cv
17.0087 39.4171 16.7252 39.4006 16.4343 39.3984 cv
16.3436 39.3984 16.2112 39.3764 16.1387 39.4127 cv
15.9925 39.4104 15.844 39.4072 15.6953 39.406 cv
15.5984 39.3896 15.5006 39.3753 15.399 39.361 cv
15.1866 39.3489 14.9693 39.3687 14.782 39.3105 cv
14.6171 39.2578 14.4848 39.149 14.3361 39.0621 cv
14.2724 39.0248 14.1529 38.9797 14.1417 38.894 cv
14.5155 38.9072 14.9314 38.9226 15.3044 38.9325 cv
15.5646 38.9374 15.839 38.9374 16.1079 38.9407 cv
16.2395 38.9424 16.3486 38.9407 16.451 38.9407 cv
15.7695 38.8633 15.1937 38.7759 14.6924 38.6726 cv
14.6075 38.6776 14.5235 38.6841 14.4386 38.682 cv
14.3298 38.6726 14.22 38.6644 14.1109 38.6567 cv
14.0656 38.6611 14.023 38.6666 13.981 38.6726 cv
13.7266 38.6726 13.5714 38.5951 13.3931 38.4595 cv
13.3308 38.4094 13.3008 38.4193 13.2703 38.3436 cv
13.339 38.3436 13.4035 38.3496 13.4722 38.3512 cv
12.7196 38.0897 12.1888 37.7568 11.7012 37.3206 cv
11.3807 37.0349 11.1156 36.6503 10.9299 36.2113 cv
10.8637 36.2097 10.7983 36.2097 10.7983 36.2048 cv
10.6884 36.2048 10.3737 35.8152 10.3082 35.7268 cv
10.3082 35.7087 li
10.3242 35.7087 li
10.3242 35.6801 10.4286 35.6867 10.456 35.6785 cv
10.5085 35.6812 10.6505 35.6735 10.7516 35.6834 cv
10.7338 35.612 10.7217 35.5394 10.7088 35.4669 cv
10.5247 35.4746 10.2176 35.4828 10.099 35.4504 cv
10.0336 35.4312 9.68963 35.084 9.68001 35.0131 cv
9.67264 34.9774 9.688 34.9582 9.70667 34.9373 cv
9.80501 34.9406 9.90364 34.9483 9.99978 34.9516 cv
10.0997 34.9516 10.4308 34.9274 10.6473 34.9417 cv
10.6464 34.8917 10.6442 34.8076 10.6442 34.6934 cv
10.5972 34.6978 10.5552 34.706 10.5423 34.7109 cv
10.4843 34.7109 10.4148 34.7077 10.3624 34.7274 cv
10.2792 34.7274 10.0715 34.6901 10.0198 34.7093 cv
9.98194 34.7153 9.94403 34.7186 9.90364 34.7252 cv
9.76462 34.7242 9.62178 34.7461 9.49818 34.7109 cv
9.39574 34.6769 9.1518 34.3445 9.12019 34.2445 cv
9.13723 34.2445 li
9.13723 34.228 li
9.18477 34.228 9.23006 34.2538 9.28339 34.2572 cv
9.39157 34.2632 9.49323 34.2445 9.59596 34.2347 cv
9.73717 34.2214 9.89401 34.2412 10.0223 34.1989 cv
10.1442 34.1989 10.4423 34.183 10.6417 34.1989 cv
10.6417 33.9457 li
10.5423 33.9566 10.4382 33.9709 10.4324 33.9731 cv
10.3574 33.9825 10.2799 33.989 10.2039 33.9951 cv
10.116 33.9874 10.0294 33.9791 9.94071 33.9709 cv
9.84074 33.9665 9.75089 33.9858 9.6597 33.9907 cv
9.6089 33.9951 9.54431 33.9825 9.49903 34.0006 cv
9.43445 33.9984 9.35371 34.005 9.30207 34.0341 cv
9.19298 34.0308 9.07186 34.0341 8.98067 33.9984 cv
8.91912 33.9731 8.68509 33.6501 8.72796 33.5951 cv
8.77296 33.5319 9.13971 33.5561 9.23968 33.5237 cv
9.66549 33.5287 10.1984 33.5287 10.6426 33.5319 cv
10.6426 33.4446 10.6442 33.3605 10.6442 33.2666 cv
10.4673 33.2666 10.2242 33.2655 10.0934 33.2655 cv
10.0264 33.2655 9.93109 33.2556 9.87945 33.2831 cv
9.76957 33.2814 9.5927 33.2512 9.50229 33.2963 cv
9.34792 33.2963 9.04356 33.2606 8.93122 33.3249 cv
8.84413 33.3237 8.73589 33.3122 8.66641 33.3413 cv
8.60762 33.3413 8.5436 33.3347 8.50079 33.304 cv
8.45736 33.249 8.41781 33.193 8.37657 33.138 cv
8.28374 33.0073 8.18186 32.8974 8.16093 32.7304 cv
8.31339 32.7326 8.42906 32.7645 8.58894 32.7667 cv
8.70129 32.7633 8.81668 32.7579 8.93122 32.7534 cv
9.12266 32.7568 9.33504 32.7727 9.53773 32.7699 cv
9.64265 32.7601 9.74459 32.7502 9.85036 32.7425 cv
10.0619 32.7403 10.2904 32.7853 10.4898 32.7276 cv
10.5116 32.7359 10.5786 32.7425 10.6464 32.7502 cv
10.6464 32.6743 10.6473 32.5887 10.6473 32.5095 cv
10.4907 32.5205 10.2259 32.5095 10.1797 32.5304 cv
10.1127 32.5304 10.0336 32.5205 9.98194 32.5436 cv
9.74049 32.542 9.5015 32.5403 9.26005 32.5387 cv
9.18477 32.5293 9.10809 32.5194 9.03062 32.5095 cv
8.91113 32.5079 8.79086 32.5062 8.67136 32.5046 cv
8.60352 32.5046 8.51148 32.4953 8.45736 32.5205 cv
8.38456 32.5194 8.28757 32.5079 8.22884 32.5337 cv
8.15683 32.5337 8.08183 32.5353 8.02361 32.5019 cv
7.89697 32.4222 7.78215 32.125 7.74097 31.9931 cv
7.76758 31.9931 7.7992 31.9701 7.82254 31.959 cv
8.05275 31.9876 8.2829 32.014 8.52683 32.0233 cv
8.59221 32.02 8.65679 32.02 8.72216 32.0173 cv
8.78208 32.025 8.84165 32.0349 8.90236 32.0448 cv
9.02984 32.0458 9.15428 32.0475 9.28007 32.0475 cv
9.43118 32.0492 9.55562 32.014 9.70505 32.02 cv
9.80833 32.0359 9.9141 32.0508 10.0182 32.0667 cv
10.1613 32.07 10.472 32.0359 10.6489 32.0782 cv
10.6489 31.9909 10.6505 31.8942 10.6514 31.8019 cv
10.5956 31.8041 10.5377 31.8041 10.5269 31.8102 cv
9.90526 31.8068 9.27923 31.7942 8.67462 31.7827 cv
8.59305 31.7734 8.51148 31.7635 8.42743 31.7552 cv
8.31339 31.7536 8.19969 31.7492 8.08651 31.7459 cv
8.01483 31.7459 7.93241 31.7377 7.87031 31.7635 cv
7.78215 31.7618 7.69506 31.7667 7.62558 31.725 cv
7.53355 31.6679 7.45664 31.408 7.43166 31.3014 cv
7.45034 31.3014 li
7.45034 31.2855 li
7.56736 31.2866 7.67391 31.2723 7.7934 31.2723 cv
7.89286 31.269 7.99863 31.2789 8.08819 31.2558 cv
8.28374 31.258 8.4807 31.2591 8.67603 31.2591 cv
8.75457 31.2657 8.82956 31.269 8.90539 31.2756 cv
8.9886 31.269 9.07186 31.2679 9.15343 31.2624 cv
9.36333 31.2679 9.57098 31.2855 9.77593 31.2932 cv
9.8674 31.2921 9.96107 31.2866 10.0555 31.2855 cv
10.2209 31.2932 10.4544 31.3239 10.653 31.3415 cv
10.6538 31.2448 10.6538 31.1415 10.6547 31.041 cv
10.6192 31.0432 10.586 31.0465 10.5786 31.0498 cv
10.3662 31.0531 10.1539 31.0531 9.94071 31.0531 cv
9.72755 31.0559 9.51523 31.0559 9.30207 31.0559 cv
9.20345 31.0432 9.10483 31.03 9.00564 31.0168 cv
8.82163 31.0158 8.63344 31.0124 8.44993 31.0108 cv
8.33623 31.0108 8.1593 30.9592 8.05522 31.0108 cv
7.80083 31.0092 7.54317 31.0075 7.28714 31.0042 cv
7.27015 30.9641 7.25254 30.9251 7.23302 30.8828 cv
7.19679 30.8124 7.12016 30.652 7.17175 30.5718 cv
7.19926 30.5521 7.22672 30.5345 7.25558 30.5147 cv
7.45445 30.5169 7.64893 30.5246 7.82997 30.5389 cv
7.96071 30.5389 8.0923 30.5378 8.22304 30.5378 cv
8.29916 30.541 8.37657 30.5454 8.4524 30.5504 cv
8.52357 30.5422 8.59389 30.5345 8.66641 30.5246 cv
8.82956 30.5295 8.99439 30.5345 9.15675 30.541 cv
9.41987 30.5378 9.68637 30.5196 9.96023 30.5295 cv
10.1556 30.5378 10.4294 30.5619 10.6563 30.5746 cv
10.6572 30.4839 10.6572 30.3889 10.6593 30.2971 cv
10.3591 30.3213 9.60232 30.2548 9.45284 30.313 cv
9.27208 30.3114 9.08148 30.2889 8.89577 30.2872 cv
8.67299 30.2917 8.4483 30.2938 8.22467 30.2982 cv
8.0986 30.2839 7.97196 30.273 7.84589 30.2614 cv
7.7709 30.2614 7.69343 30.2641 7.61732 30.2663 cv
7.53355 30.2614 7.42035 30.2356 7.33962 30.2697 cv
7.29046 30.274 7.24185 30.279 7.19184 30.2839 cv
7.12016 30.2839 7.03938 30.2806 6.98745 30.2389 cv
6.93665 30.1949 6.77514 29.851 6.84956 29.7928 cv
7.01327 29.662 7.42367 29.7994 7.63768 29.728 cv
7.86867 29.7301 8.09641 29.7576 8.32577 29.7653 cv
8.48948 29.7653 8.65347 29.7703 8.81668 29.7719 cv
8.89825 29.7818 8.98067 29.7917 9.06387 29.8027 cv
9.47647 29.8092 9.86656 29.7862 10.2588 29.8092 cv
10.3379 29.8104 10.5319 29.8071 10.6618 29.8252 cv
10.6618 29.7335 10.6635 29.6334 10.6635 29.5346 cv
10.6013 29.539 10.5352 29.5444 10.5085 29.5488 cv
10.3099 29.5478 10.1127 29.5478 9.91658 29.5456 cv
9.81795 29.5456 9.68963 29.5269 9.60558 29.5587 cv
9.36575 29.5587 9.13313 29.5488 8.88289 29.5362 cv
8.79879 29.5296 8.66641 29.4994 8.59058 29.5379 cv
8.42 29.539 8.2505 29.5412 8.08105 29.5422 cv
7.95413 29.5362 7.58986 29.4846 7.49152 29.5329 cv
7.38165 29.5214 7.27425 29.5088 7.16354 29.4994 cv
7.04984 29.4939 6.77429 29.5021 6.69682 29.4505 cv
6.63308 29.4071 6.62346 29.2983 6.60563 29.2324 cv
6.59353 29.1972 6.55483 29.1324 6.57238 29.094 cv
6.60974 29.0094 7.0207 29.0401 7.11684 29.005 cv
7.26053 29.0126 7.40033 29.0176 7.54317 29.0225 cv
7.82254 29.0275 8.0986 29.0291 8.37826 29.0302 cv
8.44993 29.0401 8.5211 29.0517 8.59305 29.0599 cv
8.75457 29.0698 8.92655 29.0517 9.08311 29.0517 cv
9.1985 29.0577 9.31169 29.061 9.42786 29.0676 cv
9.53447 29.0643 9.62178 29.0423 9.7226 29.039 cv
9.93277 29.0291 10.1539 29.0225 10.3775 29.0242 cv
10.444 29.0259 10.5643 29.0225 10.6684 29.0275 cv
10.6684 28.9451 10.6692 28.8626 10.6692 28.7802 cv
10.5568 28.7836 10.4036 28.7676 10.3478 28.7951 cv
10.2808 28.7951 10.2047 28.7852 10.1506 28.8094 cv
10.0619 28.8094 9.92614 28.7869 9.85362 28.8237 cv
9.63225 28.8225 9.41498 28.8225 9.18477 28.8193 cv
9.07186 28.8193 8.91828 28.7918 8.82382 28.8352 cv
8.69139 28.8319 8.5598 28.8319 8.42906 28.8292 cv
8.28841 28.8225 8.03407 28.777 7.90496 28.8292 cv
7.7264 28.8292 7.56567 28.8017 7.39785 28.7951 cv
7.21355 28.7869 6.58391 28.8292 6.48451 28.7511 cv
6.39331 28.6819 6.3658 28.4121 6.35129 28.2957 cv
6.44822 28.2957 6.56028 28.2929 6.64681 28.2655 cv
6.88169 28.2732 7.12973 28.2808 7.36545 28.3056 cv
7.43903 28.3116 7.5003 28.3314 7.57861 28.3358 cv
7.78215 28.3358 7.98321 28.3358 8.18676 28.338 cv
8.34417 28.3281 8.51148 28.299 8.67603 28.3006 cv
8.79879 28.3083 8.91912 28.3182 9.03698 28.3265 cv
9.13093 28.3215 9.22432 28.3182 9.31827 28.3116 cv
9.51934 28.3138 9.72181 28.3149 9.92366 28.3171 cv
10.0498 28.3149 10.4728 28.2841 10.6731 28.3149 cv
10.6731 28.2248 10.6739 28.1375 10.6747 28.0457 cv
10.6198 28.0501 10.5294 28.0534 10.4995 28.0567 cv
10.3654 28.0551 10.1322 28.0276 10.0231 28.071 cv
9.90774 28.071 9.79376 28.0699 9.68001 28.0699 cv
9.63551 28.0743 9.59101 28.0792 9.54679 28.0842 cv
9.3828 28.0825 9.06607 28.0468 8.94027 28.1149 cv
8.84328 28.1117 8.74388 28.1117 8.64633 28.11 cv
8.4807 28.0974 8.18186 28.0309 8.02276 28.0919 cv
7.8662 28.0919 7.60527 28.0358 7.46733 28.0891 cv
7.31628 28.0891 6.97457 28.0583 6.86081 28.1018 cv
6.72264 28.1018 6.3779 28.1292 6.28974 28.06 cv
6.23506 28.016 6.23174 27.9182 6.21638 27.8512 cv
6.20428 27.7996 6.16637 27.6985 6.1914 27.6403 cv
6.1914 27.6128 6.20018 27.6172 6.22437 27.6106 cv
6.33503 27.5831 6.46116 27.5952 6.58448 27.5897 cv
6.88169 27.5771 7.20804 27.5853 7.51819 27.5831 cv
7.63684 27.5787 7.77804 27.6029 7.87914 27.5678 cv
8.56644 27.6128 9.2713 27.5919 9.9932 27.5963 cv
10.108 27.5963 10.4898 27.5787 10.6772 27.6062 cv
10.6772 27.5172 10.6788 27.4282 10.6788 27.3381 cv
10.5673 27.3397 10.4182 27.3397 10.3882 27.3513 cv
10.1805 27.3513 9.97396 27.3513 9.76462 27.3491 cv
9.6597 27.348 9.53363 27.3332 9.45284 27.3821 cv
9.38916 27.3799 9.2979 27.3546 9.24137 27.3799 cv
9.06061 27.3765 8.53977 27.3381 8.42085 27.4073 cv
8.2667 27.4062 8.14394 27.3755 7.99447 27.3733 cv
7.48027 27.3606 6.93828 27.3672 6.43916 27.3332 cv
6.35129 27.3249 6.21638 27.3573 6.15264 27.2996 cv
6.07658 27.2299 6.09689 26.9859 6.09773 26.87 cv
6.11225 26.87 li
6.11225 26.8469 6.10651 26.8519 6.12851 26.8519 cv
6.44737 26.8486 6.78008 26.8403 7.11274 26.8425 cv
7.29124 26.8425 7.52364 26.8761 7.68516 26.8277 cv
7.93652 26.8437 8.22057 26.8634 8.47497 26.8645 cv
8.6043 26.8634 8.73341 26.8568 8.865 26.8552 cv
9.02325 26.8678 9.18258 26.8827 9.33999 26.8953 cv
9.42482 26.8909 9.49323 26.8568 9.58555 26.8568 cv
9.73469 26.8568 9.88113 26.8585 10.0294 26.8601 cv
10.0806 26.8634 10.128 26.8667 10.1772 26.87 cv
10.3082 26.8634 10.5239 26.8469 10.683 26.8744 cv
10.683 26.7854 10.6838 26.6986 10.6838 26.6096 cv
10.6013 26.6019 10.5069 26.5953 10.4569 26.6162 cv
10.3679 26.6145 10.2354 26.5931 10.1627 26.6304 cv
9.97064 26.6294 9.77919 26.6272 9.58853 26.6261 cv
9.49903 26.6261 9.38668 26.6113 9.31 26.642 cv
9.21717 26.6404 8.85707 26.6113 8.80126 26.6371 cv
8.70433 26.6371 8.55266 26.6145 8.47497 26.6536 cv
8.38293 26.6536 8.27879 26.6173 8.19638 26.6536 cv
7.90991 26.6503 7.62558 26.6162 7.32669 26.6129 cv
7.23965 26.6195 7.15229 26.6228 7.0652 26.6294 cv
6.9578 26.6272 6.68557 26.6019 6.60647 26.6437 cv
6.49413 26.642 6.09689 26.6206 6.03951 26.5503 cv
6.00322 26.5047 5.98786 26.4014 5.97655 26.3415 cv
5.96367 26.2756 5.9554 26.1668 6.02162 26.1382 cv
6.14521 26.0811 6.36085 26.1151 6.51033 26.1173 cv
6.94486 26.1206 7.40033 26.1283 7.82254 26.1107 cv
7.93821 26.1042 8.0761 26.125 8.18186 26.0932 cv
8.32414 26.0976 8.46534 26.0992 8.60762 26.1008 cv
8.66174 26.1085 8.71721 26.1184 8.77133 26.1283 cv
8.97408 26.13 9.17594 26.1316 9.37785 26.1333 cv
9.45284 26.1393 9.53143 26.1415 9.60805 26.1448 cv
9.84704 26.1393 10.1094 26.1382 10.3607 26.1393 cv
10.4398 26.1393 10.5794 26.136 10.6884 26.1492 cv
10.6884 26.0624 10.6884 25.9767 10.6893 25.8894 cv
10.5011 25.902 10.1613 25.8745 10.0852 25.9085 cv
9.93992 25.9085 9.66054 25.8745 9.54431 25.9218 cv
9.41987 25.9218 9.12846 25.8679 9.03558 25.902 cv
8.93206 25.8954 8.82708 25.891 8.72464 25.8844 cv
8.48948 25.8827 8.25381 25.8811 8.02029 25.8811 cv
7.90907 25.88 7.75059 25.8525 7.65934 25.8943 cv
7.51239 25.8943 7.25473 25.8619 7.13305 25.9085 cv
6.94543 25.9085 6.7784 25.8767 6.59353 25.8701 cv
6.55702 25.8712 6.51607 25.8712 6.48034 25.8712 cv
6.40923 25.8712 6.32299 25.8619 6.26555 25.8877 cv
5.89909 25.886 5.89003 25.8119 5.89172 25.4597 cv
5.90708 25.4597 li
5.90708 25.4306 5.96367 25.4383 5.99028 25.4372 cv
6.06533 25.4306 6.13317 25.4108 6.2197 25.4108 cv
6.43286 25.4097 6.76383 25.4548 6.9416 25.3823 cv
7.03774 25.4097 7.23965 25.39 7.34924 25.39 cv
7.50362 25.4015 7.65636 25.4097 7.80882 25.4196 cv
7.90744 25.4196 8.00521 25.4174 8.10439 25.4163 cv
8.15852 25.4097 8.21179 25.4048 8.26917 25.3982 cv
8.60183 25.3965 8.93369 25.3954 9.26719 25.3954 cv
9.36001 25.4048 9.45284 25.4097 9.546 25.4196 cv
9.63883 25.4108 9.73165 25.4064 9.82532 25.3998 cv
9.9182 25.4097 10.0119 25.4174 10.1031 25.4273 cv
10.2421 25.4383 10.5247 25.4015 10.6925 25.424 cv
10.6934 25.3372 10.6934 25.2526 10.695 25.1658 cv
10.5997 25.1675 10.472 25.1691 10.4003 25.1702 cv
10.2475 25.1724 10.0951 25.1702 9.9424 25.1691 cv
9.86572 25.1691 9.77368 25.1592 9.71134 25.185 cv
9.5968 25.1823 9.48283 25.1823 9.36575 25.179 cv
9.27208 25.1691 9.12846 25.1416 9.03777 25.1823 cv
8.90866 25.1801 8.72464 25.1526 8.61392 25.1949 cv
7.95244 25.1933 7.29124 25.1883 6.62898 25.185 cv
6.51033 25.1823 6.38999 25.1823 6.26966 25.179 cv
6.2098 25.1691 6.14938 25.1592 6.08867 25.1493 cv
6.02572 25.146 5.95073 25.1526 5.90297 25.1175 cv
5.82303 25.0559 5.81836 24.7395 5.84722 24.6395 cv
5.9554 24.6296 6.06775 24.6197 6.1752 24.6065 cv
6.34465 24.6065 6.6935 24.6439 6.83004 24.5939 cv
6.90672 24.5972 6.98278 24.5988 7.06109 24.5988 cv
7.11274 24.6087 7.17012 24.6164 7.22261 24.6263 cv
7.35993 24.6263 7.49703 24.6296 7.63352 24.6296 cv
7.74176 24.6263 7.84038 24.6005 7.96319 24.6005 cv
8.06479 24.6038 8.16892 24.6054 8.27249 24.6065 cv
8.35244 24.6153 8.42743 24.6362 8.51778 24.6362 cv
9.23253 24.6521 9.99978 24.6427 10.6983 24.6647 cv
10.6983 24.5823 10.7005 24.4999 10.7014 24.4197 cv
10.5917 24.423 10.3632 24.4021 10.322 24.4197 cv
10.0772 24.4164 9.83084 24.4148 9.58471 24.4148 cv
9.48941 24.4131 9.36823 24.3966 9.28997 24.4274 cv
9.18477 24.4274 9.05977 24.3873 8.96278 24.4263 cv
8.59772 24.4263 8.25708 24.3966 7.89613 24.4115 cv
7.83379 24.4148 7.7709 24.3966 7.71678 24.4197 cv
7.38823 24.4197 7.08444 24.4033 6.75094 24.3966 cv
6.64928 24.3955 6.51607 24.3483 6.42161 24.3791 cv
6.37131 24.3856 6.32299 24.3906 6.27461 24.3955 cv
6.13807 24.3934 5.9554 24.4065 5.85459 24.334 cv
5.78263 24.2807 5.78179 23.9511 5.83923 23.8901 cv
5.87079 23.8544 5.92491 23.8527 5.9653 23.8352 cv
6.45947 23.8396 6.97373 23.8637 7.44072 23.8736 cv
7.56736 23.872 7.69259 23.8692 7.81759 23.8626 cv
8.23592 23.872 8.66641 23.8785 9.07901 23.8802 cv
9.15974 23.8753 9.24384 23.8692 9.32541 23.8626 cv
9.39242 23.872 9.45779 23.8802 9.52069 23.8879 cv
9.80664 23.8912 10.0893 23.8967 10.3737 23.9011 cv
10.4519 23.9011 10.6102 23.8846 10.7055 23.9077 cv
10.7063 23.8253 10.7071 23.7445 10.7071 23.6621 cv
10.6118 23.675 10.4802 23.625 10.3591 23.6799 cv
9.80254 23.6783 9.26966 23.6588 8.72053 23.6558 cv
8.60515 23.6541 8.30625 23.6234 8.22884 23.6525 cv
7.58435 23.6492 6.93913 23.6442 6.29385 23.6412 cv
6.13807 23.6297 5.97655 23.6184 5.81971 23.6055 cv
5.8071 23.5522 5.79169 23.4956 5.77881 23.441 cv
5.76587 23.3327 5.79006 23.2067 5.82218 23.1146 cv
6.49739 23.1196 7.17012 23.1484 7.83711 23.1729 cv
7.92116 23.1712 8.00189 23.1679 8.08268 23.1646 cv
8.27879 23.1712 8.48481 23.2034 8.67462 23.2034 cv
8.75046 23.197 8.8263 23.1888 8.90376 23.1808 cv
9.10398 23.1792 9.2979 23.1759 9.49323 23.1825 cv
9.63551 23.1888 10.4357 23.2034 10.7104 23.2405 cv
10.7121 23.1468 10.7121 23.0517 10.7121 22.958 cv
10.6505 22.9677 10.5868 22.974 10.5423 22.9757 cv
10.4341 22.974 10.3242 22.9723 10.2163 22.9723 cv
10.1385 22.9693 10.0231 22.9418 9.95365 22.974 cv
9.72181 22.9723 9.47647 22.9548 9.23175 22.9531 cv
9.15428 22.9531 9.04852 22.9402 8.98697 22.9693 cv
8.76334 22.9677 8.54197 22.9531 8.33044 22.9481 cv
7.99779 22.9465 7.66513 22.9449 7.33 22.9418 cv
7.22672 22.9402 6.94543 22.8916 6.87291 22.9256 cv
6.75809 22.924 6.59353 22.8998 6.49576 22.9385 cv
6.26966 22.9369 6.04524 22.8836 5.82303 22.869 cv
5.82387 22.7529 5.80845 22.4493 5.91585 22.4136 cv
5.9999 22.4073 6.08642 22.4023 6.17104 22.3974 cv
6.2422 22.3944 6.31635 22.3974 6.3842 22.3798 cv
6.46909 22.4023 6.55781 22.3829 6.64681 22.3815 cv
6.85508 22.3829 7.06188 22.3829 7.27015 22.3845 cv
7.43329 22.3845 7.58851 22.4007 7.74344 22.404 cv
7.96071 22.4073 8.15852 22.3861 8.36672 22.3911 cv
8.73341 22.3974 9.12266 22.412 9.49903 22.4136 cv
9.69211 22.4169 10.4599 22.3845 10.7184 22.4394 cv
10.7184 22.3653 10.7184 22.2908 10.7192 22.2183 cv
10.6709 22.2134 10.6214 22.2117 10.5964 22.2084 cv
10.5101 22.2054 10.4211 22.2037 10.3357 22.1988 cv
10.2646 22.1908 10.1385 22.1584 10.0715 22.1875 cv
9.93576 22.1875 9.75916 22.1471 9.64597 22.2004 cv
9.42482 22.1988 9.2147 22.1746 9.00564 22.1667 cv
8.92407 22.1697 8.84081 22.1713 8.75845 22.173 cv
8.66889 22.1697 8.54855 22.1439 8.46613 22.1779 cv
8.35958 22.1779 8.15852 22.1422 8.07362 22.1763 cv
7.91374 22.1746 7.75548 22.173 7.59813 22.173 cv
7.50857 22.173 7.39453 22.1584 7.31954 22.1908 cv
7.13305 22.1859 6.94875 22.1842 6.7622 22.1826 cv
6.68805 22.1763 6.57238 22.1439 6.50071 22.1667 cv
6.31967 22.1667 6.08642 22.1955 5.92491 22.1488 cv
5.89993 22.1488 5.9046 22.1375 5.90128 22.1147 cv
5.88289 21.9807 5.89419 21.695 6.04361 21.6804 cv
6.29964 21.6513 6.55702 21.6755 6.81384 21.6772 cv
6.93417 21.6722 7.05451 21.6675 7.17479 21.6626 cv
7.46733 21.6692 7.7709 21.6659 8.0761 21.6675 cv
8.25955 21.6675 8.42332 21.6755 8.60104 21.6722 cv
8.67462 21.6692 8.74635 21.6755 8.8142 21.6563 cv
8.9441 21.6675 9.07597 21.6788 9.20671 21.6901 cv
9.688 21.6934 10.2347 21.695 10.7217 21.6997 cv
10.7233 21.6222 10.7233 21.5447 10.725 21.4656 cv
10.6093 21.4753 10.3737 21.4414 10.3228 21.4656 cv
9.85199 21.464 9.38201 21.4623 8.91445 21.4591 cv
8.73758 21.4511 8.3692 21.3736 8.20684 21.4398 cv
8.1269 21.4398 8.02029 21.4057 7.94699 21.4382 cv
7.91289 21.4445 7.88077 21.4494 7.84589 21.4544 cv
7.64015 21.4511 7.43166 21.4494 7.22424 21.4494 cv
7.00039 21.4315 6.76714 21.4057 6.53615 21.414 cv
6.47871 21.414 6.40619 21.409 6.35596 21.4286 cv
6.2197 21.4286 6.06533 21.4527 5.94747 21.3945 cv
5.91585 21.3945 5.93537 21.3349 5.93785 21.3121 cv
5.9999 20.9907 5.98539 20.9536 6.34217 20.9407 cv
6.41913 20.9341 6.50149 20.9423 6.57238 20.9212 cv
6.67432 20.9423 6.78886 20.9341 6.90036 20.944 cv
7.11684 20.9553 7.33552 20.9665 7.55526 20.9761 cv
7.66513 20.9731 7.775 20.9682 7.8824 20.9632 cv
8.8263 20.9698 9.82206 20.9503 10.7288 21.0052 cv
10.7297 20.9198 10.7297 20.8358 10.7313 20.7484 cv
10.648 20.7468 10.5593 20.7421 10.5384 20.7484 cv
10.2937 20.7468 10.0473 20.7468 9.80254 20.7437 cv
9.68963 20.7437 9.53526 20.7193 9.4408 20.7583 cv
9.36001 20.7583 9.17352 20.7308 9.11473 20.7566 cv
8.97572 20.7566 8.80126 20.705 8.67136 20.7534 cv
8.3975 20.7421 8.12386 20.7275 7.85163 20.7163 cv
7.78131 20.7163 7.68049 20.7067 7.62148 20.7325 cv
7.48578 20.7325 7.2072 20.6742 7.09901 20.7308 cv
6.75893 20.7275 6.41913 20.7258 6.08232 20.7242 cv
6.08232 20.7067 li
6.05486 20.7067 6.06775 20.6792 6.06775 20.658 cv
6.06775 20.5547 6.07984 20.3028 6.17104 20.2655 cv
6.28833 20.2204 6.45373 20.2334 6.59353 20.2334 cv
6.79049 20.235 6.99735 20.2334 7.18306 20.2237 cv
7.24348 20.2171 7.30255 20.2122 7.36382 20.2042 cv
7.83627 20.2526 8.36672 20.2429 8.8708 20.2463 cv
9.00728 20.2542 9.14218 20.2575 9.27923 20.2655 cv
9.48941 20.2608 9.69514 20.2479 9.92068 20.2526 cv
10.0182 20.2592 10.116 20.2655 10.2146 20.2704 cv
10.3478 20.2737 10.5739 20.2559 10.7338 20.2883 cv
10.7346 20.1993 10.7346 20.1139 10.7363 20.0249 cv
10.6692 20.0265 10.6022 20.0315 10.5764 20.0427 cv
10.472 20.0378 10.3679 20.0331 10.2646 20.0265 cv
9.98026 20.0153 9.70667 20.0218 9.41194 20.0201 cv
9.32373 20.0201 9.19298 19.9861 9.1172 20.0201 cv
8.50816 20.0169 7.91706 19.9974 7.29839 19.9927 cv
7.04984 19.9927 6.77429 19.9927 6.52816 19.9732 cv
6.4287 19.9669 6.33503 19.9686 6.25098 19.9361 cv
6.25182 19.8537 6.29795 19.6276 6.34549 19.5727 cv
6.38037 19.5452 6.41581 19.5227 6.44906 19.4969 cv
6.81631 19.4985 7.18773 19.521 7.54648 19.534 cv
7.97196 19.534 li
8.05849 19.5274 8.14062 19.5048 8.23351 19.5081 cv
8.72464 19.5161 9.20176 19.5436 9.7105 19.5469 cv
9.86408 19.5469 10.0165 19.5469 10.1701 19.5502 cv
10.2962 19.5469 10.5643 19.521 10.7409 19.5469 cv
10.7426 19.4678 10.7426 19.3887 10.7434 19.3096 cv
10.6192 19.3112 10.4753 19.3125 10.3824 19.3142 cv
10.3017 19.3142 10.1943 19.2854 10.1217 19.3208 cv
9.80501 19.3192 9.48772 19.3159 9.17048 19.3142 cv
9.04852 19.3079 8.89167 19.2513 8.77792 19.3125 cv
8.38703 19.3112 8.01483 19.3029 7.64809 19.2788 cv
7.54648 19.2722 7.28798 19.2464 7.20393 19.2884 cv
7.17175 19.2917 7.13772 19.2982 7.10638 19.3046 cv
6.87538 19.3013 6.671 19.2496 6.44906 19.2334 cv
6.4521 19.1269 6.53531 18.8508 6.61193 18.7909 cv
6.65097 18.7571 6.71713 18.7621 6.76467 18.7426 cv
6.84129 18.7538 6.91825 18.7635 6.99403 18.7733 cv
7.08607 18.77 7.17974 18.7667 7.27178 18.7621 cv
7.38576 18.7684 7.50277 18.775 7.61653 18.7813 cv
7.75306 18.7717 7.89039 18.7621 8.02445 18.7522 cv
8.33044 18.7588 8.64936 18.7975 8.9603 18.8008 cv
9.31658 18.8024 9.69295 18.7942 10.0586 18.7959 cv
10.1539 18.7959 10.5222 18.7959 10.7467 18.82 cv
10.7483 18.7346 10.7491 18.6522 10.7491 18.5681 cv
10.578 18.5648 10.3275 18.5569 10.208 18.6151 cv
10.1014 18.6151 10.0094 18.5877 9.91241 18.5843 cv
9.80338 18.5843 9.69295 18.581 9.58471 18.581 cv
9.52896 18.5877 9.47568 18.5906 9.42156 18.594 cv
9.29543 18.5877 9.16964 18.5794 9.04356 18.5715 cv
8.88041 18.5456 li
8.49612 18.5294 8.1269 18.5228 7.73298 18.5198 cv
7.59729 18.5198 7.35172 18.489 7.24185 18.5343 cv
7.12973 18.5327 6.76962 18.5343 6.69845 18.489 cv
6.63308 18.4503 6.74295 18.1322 6.78554 18.0902 cv
6.83088 18.0481 6.9092 18.0448 6.96573 18.024 cv
7.17012 18.024 7.36134 18.0627 7.55526 18.074 cv
7.76291 18.0756 7.96949 18.0756 8.17882 18.0772 cv
8.24723 18.069 8.32003 18.061 8.39114 18.0528 cv
8.51063 18.0544 8.6205 18.0819 8.75046 18.0819 cv
8.89414 18.0789 9.03558 18.074 9.17841 18.069 cv
9.35917 18.074 9.56029 18.0965 9.75089 18.0932 cv
10.041 18.0836 10.4357 18.0803 10.7533 18.1014 cv
10.7538 18.0157 10.7555 17.9316 10.7555 17.8462 cv
10.6618 17.8446 10.4964 17.8366 10.4407 17.8624 cv
10.2863 17.8608 10.0336 17.7993 9.90031 17.8608 cv
9.81407 17.8591 9.69677 17.83 9.62178 17.8591 cv
9.56108 17.8575 9.48941 17.8525 9.4408 17.8753 cv
9.21717 17.8575 8.99276 17.8413 8.7697 17.8267 cv
8.68177 17.8267 8.59935 17.8542 8.50737 17.8462 cv
8.38703 17.8382 8.25708 17.8366 8.13185 17.8317 cv
8.07362 17.83 8.00437 17.8138 7.94946 17.8333 cv
7.87914 17.8333 7.79509 17.822 7.7363 17.8479 cv
7.53518 17.8462 7.12016 17.88 6.96821 17.8108 cv
6.9416 17.8108 6.94627 17.8042 6.94875 17.7816 cv
6.96 17.6539 7.04241 17.404 7.13305 17.321 cv
7.13305 17.304 li
7.44072 17.3057 7.73461 17.3403 8.03407 17.3361 cv
8.30383 17.3356 8.60515 17.3248 8.88531 17.3298 cv
8.9724 17.3419 9.06061 17.3507 9.14685 17.362 cv
9.26331 17.3685 9.38201 17.3507 9.49239 17.3507 cv
9.58144 17.3573 9.66848 17.362 9.75584 17.3669 cv
9.98605 17.3644 10.2242 17.3669 10.4599 17.3702 cv
10.5278 17.3718 10.6572 17.3644 10.7596 17.3751 cv
10.7604 17.2911 10.7604 17.2103 10.7604 17.1262 cv
10.703 17.1246 10.6409 17.1229 10.5917 17.1433 cv
10.3146 17.1417 10.0336 17.14 9.75748 17.1383 cv
9.53936 17.132 9.31962 17.1229 9.10179 17.1158 cv
8.9661 17.107 8.70129 17.065 8.57685 17.115 cv
8.51451 17.115 8.42906 17.1199 8.37905 17.1471 cv
8.22715 17.132 8.07441 17.1141 7.92116 17.0979 cv
7.69096 17.0971 7.46322 17.0933 7.23302 17.0924 cv
7.23302 17.0762 li
7.21603 17.0762 li
7.21681 16.976 7.30503 16.879 7.34126 16.7936 cv
7.36382 16.7403 7.36213 16.6757 7.3987 16.6288 cv
7.42367 16.595 7.46322 16.5859 7.49703 16.5683 cv
7.70879 16.5708 7.90327 16.5867 8.1206 16.5884 cv
8.23592 16.5851 8.34996 16.5796 8.4645 16.5738 cv
8.74635 16.5804 9.06444 16.6054 9.35039 16.6079 cv
9.52896 16.6087 9.71134 16.5867 9.89154 16.5837 cv
10.1863 16.5738 10.4819 16.59 10.7653 16.6175 cv
10.7667 16.5255 10.7684 16.4318 10.7684 16.3414 cv
10.6264 16.3985 10.0852 16.3736 9.95775 16.3673 cv
9.84074 16.3582 9.67264 16.317 9.56271 16.3673 cv
9.43445 16.3664 9.30207 16.364 9.17048 16.3623 cv
9.09521 16.3607 8.99822 16.3349 8.92407 16.364 cv
8.61392 16.3623 8.28127 16.3673 7.95824 16.3574 cv
7.83132 16.3511 7.71346 16.3252 7.58024 16.3219 cv
7.58108 16.1395 7.6756 15.9731 7.76432 15.8311 cv
7.88707 15.8327 7.99447 15.8665 8.10766 15.8602 cv
8.40487 15.8407 8.71175 15.839 9.02736 15.8407 cv
9.10342 15.8423 9.1801 15.8464 9.25509 15.8519 cv
9.58471 15.8423 9.94898 15.8341 10.2879 15.8473 cv
10.4544 15.8544 10.6093 15.894 10.7717 15.9085 cv
10.7733 15.8198 10.7733 15.7308 10.7733 15.6445 cv
10.725 15.6462 10.6731 15.6492 10.6489 15.6517 cv
10.5222 15.6517 10.3599 15.6017 10.2388 15.65 cv
9.99815 15.6492 9.75089 15.6388 9.50313 15.6275 cv
9.40204 15.6209 9.15675 15.5863 9.07597 15.6275 cv
9.0282 15.6324 8.97656 15.6371 8.93122 15.6429 cv
8.72053 15.6404 8.52188 15.6179 8.32414 15.608 cv
8.19969 15.6017 8.05275 15.6146 7.94699 15.5709 cv
7.92116 15.5709 7.92662 15.5613 7.92662 15.5385 cv
7.92662 15.4539 8.04392 15.2262 8.10439 15.1704 cv
8.13348 15.1429 8.1755 15.1317 8.21095 15.113 cv
8.48785 15.1146 8.74798 15.1372 9.01442 15.1342 cv
9.34409 15.1317 9.70094 15.1221 10.0473 15.1229 cv
10.2047 15.1251 10.578 15.1092 10.7774 15.1446 cv
10.7796 15.0663 10.7805 14.9864 10.7805 14.9111 cv
10.7104 14.9152 10.6272 14.9144 10.5893 14.9144 cv
10.4794 14.9119 10.3703 14.9111 10.2621 14.9102 cv
10.1385 14.9007 9.86076 14.857 9.75252 14.9102 cv
9.6152 14.9089 9.44817 14.857 9.32541 14.9056 cv
9.15974 14.9056 8.865 14.8361 8.73758 14.9056 cv
8.66725 14.9039 8.56312 14.8911 8.50737 14.9201 cv
8.42332 14.9127 8.34338 14.9073 8.26096 14.9007 cv
8.26096 14.8207 8.46534 14.4581 8.53398 14.429 cv
8.64222 14.3815 8.91113 14.4144 9.05015 14.4144 cv
9.2979 14.4144 9.54983 14.4015 9.78881 14.4048 cv
9.92946 14.4048 10.083 14.4243 10.2291 14.4186 cv
10.3017 14.4098 10.3737 14.3999 10.444 14.3919 cv
10.5399 14.387 10.6514 14.3999 10.7387 14.3741 cv
10.7871 14.3741 li
10.7871 14.2983 10.7871 14.2175 10.7871 14.1433 cv
10.7604 14.1496 10.7338 14.1562 10.7233 14.16 cv
10.6184 14.16 10.4932 14.1447 10.4132 14.1933 cv
10.3292 14.19 10.2492 14.1867 10.1668 14.1854 cv
10.0569 14.1675 9.90279 14.1279 9.78965 14.1721 cv
9.75584 14.1779 9.72507 14.182 9.69211 14.1883 cv
9.6476 14.1933 9.60479 14.1988 9.56029 14.2029 cv
9.4732 14.198 9.38364 14.1917 9.2979 14.1867 cv
9.13093 14.182 8.9216 14.2112 8.77296 14.1658 cv
8.72053 14.1658 8.7859 14.056 8.79715 14.0389 cv
8.8466 13.9502 8.95484 13.7412 9.04852 13.6925 cv
9.11771 13.6538 9.2084 13.6604 9.28339 13.6297 cv
9.41576 13.6313 9.546 13.6313 9.67511 13.6329 cv
9.87039 13.6384 10.0756 13.6587 10.2687 13.6634 cv
10.3574 13.6538 10.4407 13.6483 10.5294 13.6409 cv
10.594 13.6442 10.6967 13.6538 10.792 13.6604 cv
10.7928 13.5788 10.7934 13.4923 10.795 13.4115 cv
10.7346 13.4156 10.6747 13.4165 10.661 13.4236 cv
10.4865 13.4165 10.3113 13.4115 10.1385 13.4052 cv
10.0723 13.4044 9.99567 13.397 9.94071 13.4206 cv
9.80501 13.419 9.56108 13.389 9.44986 13.4327 cv
9.38364 13.4269 9.31883 13.4228 9.25177 13.4156 cv
9.25425 13.317 9.31827 13.225 9.36575 13.1517 cv
9.40783 13.0901 9.45779 12.9915 9.52316 12.9544 cv
9.57317 12.9253 9.65092 12.9415 9.71466 12.9399 cv
9.89953 12.9352 10.1072 12.9286 10.305 12.9303 cv
10.4044 12.9311 10.5294 12.9465 10.6151 12.9141 cv
10.6555 12.9149 10.7313 12.9149 10.8 12.9149 cv
10.8 12.8341 10.8016 12.7559 10.8016 12.6784 cv
10.6601 12.6671 10.469 12.6459 10.372 12.6838 cv
10.3324 12.6904 10.2945 12.6962 10.2566 12.6993 cv
10.1231 12.6993 9.97396 12.7108 9.86408 12.663 cv
9.84704 12.663 li
9.84704 12.6437 9.84074 12.6492 9.86408 12.6492 cv
9.86408 12.5361 10.0264 12.4748 10.0822 12.3957 cv
10.1363 12.3133 10.1887 12.2342 10.2588 12.1592 cv
10.3607 12.163 10.6417 12.1608 10.8066 12.1842 cv
10.8066 12.1081 10.8079 12.0372 10.8079 11.9685 cv
10.6934 11.9839 10.5222 11.9735 10.4736 11.9474 cv
10.4569 11.9474 li
10.4569 11.9144 li
10.4569 11.9144 10.7604 11.5461 10.8137 11.4815 cv
10.8137 11.4807 li
10.9694 11.2384 11.7189 10.5868 11.879 10.4835 cv
11.9748 10.3962 12.1042 10.2734 12.2254 10.233 cv
12.419 10.1684 12.6742 10.2129 12.8915 10.2055 cv
13.1659 10.1935 13.4744 10.2017 13.7612 10.1943 cv
14.0213 10.188 14.307 10.1701 14.5655 10.1718 cv
14.7342 10.1767 14.9031 10.1814 15.0742 10.1863 cv
15.667 10.1797 16.292 10.175 16.8922 10.1992 cv
16.9625 10.2072 17.0339 10.2163 17.1032 10.2267 cv
17.2257 10.2284 17.3449 10.23 17.4636 10.2322 cv
17.8251 10.2284 18.1865 10.1992 18.5635 10.2055 cv
18.993 10.2154 19.4249 10.2476 19.8743 10.2459 cv
20.1221 10.2421 20.3776 10.2129 20.6456 10.2193 cv
20.8049 10.2209 20.9478 10.2525 21.1181 10.2525 cv
21.5549 10.2558 21.9719 10.225 22.4163 10.2284 cv
22.7064 10.23 22.9948 10.2322 23.2838 10.2322 cv
23.3607 10.2388 23.4371 10.2421 23.514 10.2476 cv
23.6486 10.2459 23.7926 10.233 23.9376 10.2363 cv
24.0162 10.2459 24.0914 10.2533 24.1694 10.263 cv
24.2244 10.2572 24.2782 10.2492 24.3332 10.2421 cv
24.4332 10.2421 24.5288 10.2421 24.6282 10.2405 cv
24.7661 10.2421 24.8782 10.2726 25.0199 10.2734 cv
25.1369 10.263 25.2507 10.2533 25.3649 10.2446 cv
25.833 10.2405 26.3198 10.2405 26.7736 10.2355 cv
26.9329 10.2421 27.0906 10.2459 27.2493 10.2533 cv
27.5405 10.2459 27.835 10.2209 28.1361 10.2226 cv
28.4245 10.225 28.708 10.2572 29.003 10.2459 cv
29.1568 10.2363 29.3107 10.2284 29.4612 10.2193 cv
29.5546 10.225 29.6469 10.2284 29.7403 10.2322 cv
30.1617 10.2209 30.6452 10.2193 31.0687 10.2363 cv
31.4423 10.2492 31.8467 10.2154 32.2313 10.2355 cv
32.3137 10.2446 32.3961 10.2558 32.4785 10.2646 cv
32.7938 10.2808 33.1202 10.2992 33.4432 10.2863 cv
33.5822 10.2671 33.719 10.2476 33.8542 10.2284 cv
33.9762 10.2171 34.0959 10.2055 34.2146 10.1943 cv
34.4761 10.196 34.7315 10.2193 35.0018 10.2154 cv
35.1337 10.2146 35.2815 10.1781 35.4089 10.2146 cv
35.4655 10.23 35.5166 10.2879 35.5628 10.3292 cv
35.8276 10.5269 36.3869 11.0098 36.7945 11.4428 cv
36.7945 11.4573 36.7945 11.484 36.7967 11.4994 cv
36.8187 11.4977 36.8374 11.4928 36.8643 11.4928 cv
36.9588 11.5293 37.1637 11.7433 37.1242 11.8142 cv
37.0978 11.862 37 11.8595 36.9588 11.882 cv
36.9297 11.882 36.856 11.882 36.8 11.8773 cv
36.8011 11.9523 36.8011 12.0356 36.8033 12.1276 cv
36.9676 12.1243 37.1989 12.1147 37.3302 12.16 cv
37.4543 12.2018 37.6757 12.5218 37.7098 12.6396 cv
37.7098 12.6572 li
37.6757 12.6621 37.6428 12.6671 37.6098 12.6717 cv
37.5252 12.6717 36.9736 12.6589 36.8033 12.6363 cv
36.8044 12.7171 36.8044 12.7937 36.8044 12.8819 cv
37.1395 12.8819 37.5428 12.877 37.8559 12.8981 cv
37.9114 12.9036 37.985 12.8844 38.0295 12.911 cv
38.1076 12.9577 38.1652 13.0693 38.2048 13.1467 cv
38.2361 13.2041 38.3015 13.2679 38.2889 13.3437 cv
38.28 13.3786 38.2427 13.3849 38.2103 13.389 cv
37.9389 13.3849 37.6653 13.381 37.3912 13.3753 cv
37.3203 13.3753 37.222 13.3648 37.1637 13.3907 cv
37.1022 13.3907 36.8945 13.3841 36.8066 13.3599 cv
36.8066 13.6021 li
37.1637 13.6046 37.6016 13.6071 37.9488 13.6101 cv
38.1306 13.6101 38.3685 13.5813 38.5141 13.6618 cv
38.6036 13.7112 38.7746 14.0351 38.8141 14.1367 cv
38.7877 14.1367 38.769 14.1546 38.7482 14.1721 cv
38.6526 14.1708 38.3323 14.1409 38.2735 14.1675 cv
38.1702 14.1675 38.0658 14.1658 37.9614 14.1658 cv
37.8263 14.1571 37.6373 14.0875 37.5032 14.1463 cv
37.4643 14.1513 37.428 14.1571 37.3873 14.1625 cv
37.2208 14.1625 36.9945 14.1367 36.8088 14.1205 cv
36.8088 14.359 li
37.3131 14.3644 37.8993 14.3936 38.3867 14.3968 cv
38.5218 14.3968 38.9174 14.3436 39.0207 14.4098 cv
39.0849 14.4502 39.1036 14.521 39.1366 14.5859 cv
39.1657 14.6246 39.1932 14.6666 39.2228 14.707 cv
39.2498 14.7595 39.2756 14.8103 39.302 14.8628 cv
39.302 14.8781 li
39.2585 14.8894 39.214 14.899 39.1729 14.9102 cv
39.0097 14.9089 38.6844 14.8183 38.5493 14.874 cv
38.5092 14.8798 38.4713 14.8836 38.4328 14.8902 cv
38.3339 14.8836 38.2361 14.8781 38.1383 14.8732 cv
37.8626 14.8707 37.601 14.8691 37.3197 14.8669 cv
37.2236 14.8652 37.1022 14.8466 37.0258 14.8828 cv
36.9846 14.8828 36.8857 14.8836 36.8088 14.8732 cv
36.8088 14.946 36.8099 15.0226 36.8099 15.0962 cv
36.9044 15.0897 37.0346 15.0946 37.0879 15.0946 cv
37.2478 15.0954 37.4043 15.0954 37.5642 15.0962 cv
37.657 15.0976 37.7625 15.1075 37.8428 15.0831 cv
38.2257 15.0863 38.5971 15.1034 38.9888 15.1059 cv
39.097 15.1059 39.3327 15.0847 39.4113 15.1317 cv
39.5052 15.1833 39.5349 15.3149 39.575 15.4053 cv
39.6052 15.4805 39.6211 15.5226 39.5601 15.5838 cv
39.4986 15.5838 39.414 15.5758 39.3646 15.6 cv
39.2547 15.6 39.0767 15.5693 38.9855 15.613 cv
38.9272 15.613 38.8564 15.6063 38.8053 15.6283 cv
38.6767 15.6275 38.4482 15.5654 38.3477 15.6096 cv
38.1713 15.6096 37.9977 15.608 37.823 15.608 cv
37.7691 15.608 37.6999 15.6041 37.6592 15.6234 cv
37.5247 15.6193 37.3873 15.6193 37.2483 15.6193 cv
37.184 15.6179 37.0967 15.5951 37.0352 15.6193 cv
36.983 15.6193 36.8885 15.6179 36.8099 15.6063 cv
36.8099 15.8544 li
36.9709 15.8198 37.2428 15.8198 37.3461 15.8132 cv
37.3681 15.8099 37.3912 15.806 37.4099 15.8019 cv
37.629 15.839 37.879 15.8198 38.1163 15.8212 cv
38.568 15.8253 39.0009 15.8212 39.4459 15.8407 cv
39.5536 15.8423 39.6646 15.7907 39.7623 15.8464 cv
39.8503 15.8931 39.9376 16.1758 39.9656 16.2736 cv
40.0404 16.2758 39.8338 16.339 39.8338 16.339 cv
39.7239 16.339 39.4767 16.3115 39.3926 16.3543 cv
39.2789 16.3527 39.0558 16.3057 38.9663 16.3511 cv
38.769 16.3511 38.5795 16.3236 38.3889 16.3381 cv
38.3482 16.3414 38.3042 16.3445 38.2603 16.3477 cv
38.1252 16.3461 37.7647 16.2978 37.6713 16.3428 cv
37.5549 16.3428 37.0615 16.3582 36.8099 16.3302 cv
36.8099 16.5804 li
36.922 16.5708 37.0956 16.5659 37.1286 16.553 cv
37.3356 16.5571 37.5439 16.5584 37.7504 16.5593 cv
37.9114 16.5675 38.068 16.5917 38.2449 16.5933 cv
38.3932 16.5933 38.5251 16.5659 38.6707 16.5642 cv
38.963 16.5571 39.2767 16.5796 39.5541 16.5804 cv
39.6519 16.5771 39.7519 16.5738 39.8503 16.5692 cv
39.926 16.5692 40.0474 16.553 40.1062 16.595 cv
40.1414 16.6225 40.3205 17.0263 40.2672 17.0696 cv
40.1546 17.1586 39.8464 17.0414 39.7151 17.0933 cv
39.6469 17.0924 39.5426 17.0809 39.4854 17.107 cv
39.4409 17.1125 39.3981 17.1183 39.3563 17.1229 cv
39.2613 17.1229 39.1673 17.1262 39.0762 17.1183 cv
38.958 17.107 38.7015 17.0285 38.585 17.0875 cv
38.5218 17.0875 38.4526 17.09 38.4042 17.1183 cv
38.1977 17.1183 37.9889 17.1158 37.7807 17.1141 cv
37.6999 17.1141 37.5845 17.0971 37.5192 17.1296 cv
37.4175 17.1296 37.2686 17.0809 37.1769 17.1262 cv
37.1022 17.1262 36.9198 17.132 36.8099 17.11 cv
36.8099 17.346 li
36.9252 17.3435 37.1099 17.3419 37.223 17.3403 cv
37.3181 17.3356 37.4077 17.3323 37.501 17.3265 cv
37.5999 17.3323 37.6983 17.3386 37.7966 17.3427 cv
38.191 17.346 38.5526 17.3152 38.9597 17.3194 cv
39.214 17.3202 39.5788 17.3614 39.7975 17.2911 cv
39.953 17.321 40.3436 17.2287 40.4342 17.3597 cv
40.4925 17.4476 40.5084 17.557 40.5447 17.6573 cv
40.6024 17.8092 40.5787 17.7688 40.4656 17.8333 cv
40.209 17.8333 39.953 17.8317 39.6964 17.83 cv
39.5876 17.8251 39.4162 17.78 39.3173 17.83 cv
39.1712 17.8267 39.0218 17.8251 38.8756 17.8251 cv
38.813 17.822 38.7218 17.8009 38.6624 17.8251 cv
38.5712 17.8251 38.4268 17.8009 38.3504 17.8382 cv
38.2257 17.8382 38.0999 17.8366 37.9735 17.835 cv
37.9153 17.8333 37.8318 17.8108 37.7779 17.835 cv
37.6186 17.835 37.361 17.7768 37.2208 17.8333 cv
37.1099 17.8317 36.9319 17.8382 36.8099 17.8155 cv
36.8099 18.0772 li
36.9758 18.0336 37.4164 18.0627 37.5642 18.0657 cv
37.8131 18.0657 38.0581 18.0498 38.3015 18.0498 cv
38.4592 18.0528 38.6278 18.074 38.7756 18.0657 cv
38.9009 18.0578 39.0267 18.0498 39.152 18.0432 cv
39.2624 18.0544 39.3717 18.0657 39.48 18.074 cv
39.7337 18.0789 39.9986 18.069 40.2359 18.0369 cv
40.2887 18.0286 40.3436 18.0223 40.3985 18.014 cv
40.5084 18.0174 40.6513 18.0174 40.7282 18.0819 cv
40.7913 18.1352 40.91 18.4632 40.7996 18.5082 cv
40.6902 18.5473 40.5183 18.5228 40.3952 18.5228 cv
40.0568 18.5198 39.7184 18.5181 39.3805 18.5165 cv
39.2789 18.5165 39.1163 18.489 39.0366 18.5311 cv
38.9547 18.5294 38.8404 18.5132 38.7734 18.5456 cv
38.6459 18.5456 38.2685 18.5165 38.1834 18.5585 cv
38.0878 18.5585 37.9526 18.5374 37.8719 18.5731 cv
37.7549 18.5731 37.5944 18.5423 37.4945 18.5877 cv
37.2686 18.5877 37.0352 18.5486 36.8099 18.5407 cv
36.8099 18.7893 li
36.9187 18.7813 37.05 18.775 37.1324 18.7684 cv
37.3263 18.7684 37.5158 18.7684 37.7076 18.7684 cv
38.0647 18.7717 38.4427 18.7635 38.7877 18.7604 cv
38.8537 18.7621 38.9174 18.7651 38.9855 18.7667 cv
39.0416 18.7621 39.0954 18.7538 39.1514 18.7459 cv
39.336 18.7475 39.5206 18.7475 39.7069 18.7475 cv
39.7947 18.7522 39.8821 18.7588 39.9667 18.7621 cv
40.0788 18.7604 40.1881 18.7555 40.2963 18.7522 cv
40.4205 18.7522 40.5447 18.775 40.6568 18.736 cv
40.7282 18.7409 40.8414 18.7393 40.8985 18.7763 cv
41.0061 18.8426 41.038 19.1076 41.0644 19.2321 cv
41.0462 19.2321 li
41.0462 19.2593 40.9155 19.2496 40.8842 19.2464 cv
40.8842 19.2513 40.8831 19.2579 40.8831 19.2626 cv
40.8633 19.2675 40.838 19.2722 40.8183 19.2788 cv
40.754 19.2771 40.6733 19.2708 40.6205 19.2934 cv
40.371 19.2917 40.137 19.2755 39.8854 19.2722 cv
39.8019 19.2722 39.6887 19.2579 39.6211 19.2884 cv
39.5623 19.2884 39.4904 19.282 39.4404 19.3046 cv
39.2228 19.3013 39.0058 19.2997 38.7861 19.2982 cv
38.6691 19.29 38.5361 19.2368 38.424 19.2997 cv
38.3152 19.2982 38.0801 19.2708 37.9977 19.3112 cv
37.8098 19.3112 37.6098 19.295 37.4077 19.2917 cv
37.2769 19.2917 36.9912 19.3013 36.8099 19.2788 cv
36.8099 19.3595 36.8099 19.4403 36.8088 19.521 cv
36.8616 19.5128 36.9214 19.5081 36.9489 19.5065 cv
37.0708 19.4952 37.1912 19.5144 37.3088 19.521 cv
37.534 19.5227 37.7549 19.5227 37.9818 19.5243 cv
38.1471 19.5144 38.3076 19.5065 38.4729 19.4985 cv
38.6036 19.4919 38.7427 19.5098 38.8679 19.5098 cv
39.0416 19.5065 39.2174 19.5032 39.391 19.5016 cv
39.5514 19.5065 39.7272 19.521 39.898 19.521 cv
40.0239 19.5144 40.1502 19.5081 40.276 19.5048 cv
40.4282 19.5065 40.6304 19.5356 40.7666 19.4919 cv
40.8881 19.4919 41.038 19.4919 41.1314 19.5452 cv
41.2083 19.5889 41.2501 19.857 41.2572 19.954 cv
41.2325 19.9523 41.2083 19.9686 41.1918 19.9845 cv
41.099 19.9845 40.9737 19.9652 40.8963 19.9991 cv
40.7864 19.9991 40.626 19.9732 40.5353 20.0153 cv
40.1145 20.0119 39.6936 20.0103 39.2739 20.0073 cv
39.1157 20.0089 38.958 20.0119 38.7981 20.0119 cv
38.6795 20.0007 38.2768 19.9732 38.1916 20.0169 cv
37.8845 20.0153 37.5796 20.0153 37.2747 20.0119 cv
37.1868 20.0119 37.0626 19.9927 36.9956 20.0265 cv
36.9588 20.0265 36.878 20.0265 36.8088 20.0232 cv
36.8088 20.2639 li
36.8813 20.2592 37.0077 20.2542 37.0775 20.2509 cv
37.361 20.2188 37.6592 20.2267 37.9614 20.23 cv
38.3784 20.2317 38.7833 20.2171 39.1898 20.2204 cv
39.4316 20.2221 39.7403 20.2899 39.9618 20.2075 cv
40.1744 20.2092 41.2929 20.1993 41.3676 20.2979 cv
41.4424 20.3949 41.4204 20.5805 41.416 20.708 cv
41.3995 20.708 li
41.3995 20.7372 41.3094 20.7275 41.2847 20.7404 cv
41.0216 20.7372 40.7589 20.7338 40.4996 20.7325 cv
40.426 20.7308 40.3205 20.6951 40.2535 20.7179 cv
40.1546 20.7193 40.0563 20.7242 39.9562 20.7258 cv
39.8162 20.7258 39.52 20.6806 39.3986 20.7308 cv
39.3008 20.7275 39.1448 20.708 39.0558 20.7437 cv
38.6009 20.7404 38.1493 20.7388 37.6944 20.7338 cv
37.5933 20.7338 37.4582 20.7017 37.3681 20.7338 cv
37.2785 20.7325 36.9538 20.7338 36.8088 20.6968 cv
36.8066 20.7858 36.8066 20.8729 36.8066 20.9602 cv
36.9335 20.9536 37.1099 20.9616 37.1857 20.9616 cv
37.2955 20.9569 37.4043 20.9536 37.5158 20.9486 cv
37.6345 20.9486 37.7494 20.9585 37.8592 20.9616 cv
37.9559 20.9585 38.0559 20.9553 38.1548 20.9519 cv
38.5301 20.9536 38.9053 20.9536 39.2701 20.9553 cv
39.3442 20.9519 39.4206 20.9486 39.4986 20.9456 cv
39.7986 20.9519 40.1425 20.9778 40.448 20.9519 cv
40.5524 20.9423 40.6595 20.9602 40.7589 20.9327 cv
40.8776 20.9341 41.3797 20.9374 41.4446 20.9923 cv
41.5132 21.0472 41.5407 21.325 41.5435 21.4302 cv
41.538 21.4302 41.5336 21.4286 41.5259 21.4286 cv
41.5259 21.4574 41.4704 21.4445 41.4435 21.4445 cv
41.3243 21.4431 41.2051 21.4414 41.0853 21.4398 cv
40.9666 21.4315 40.7853 21.3865 40.6749 21.4414 cv
40.5655 21.4398 40.4035 21.4156 40.3139 21.4544 cv
40.2535 21.4544 40.1843 21.4494 40.1332 21.4703 cv
39.9118 21.4703 39.703 21.4398 39.4959 21.4349 cv
39.2547 21.4332 39.0146 21.4332 38.774 21.4315 cv
38.7152 21.4398 38.6526 21.4461 38.5921 21.4544 cv
38.5004 21.4607 38.396 21.4315 38.3152 21.4607 cv
38.1433 21.4591 37.9768 21.4574 37.8065 21.4574 cv
37.7274 21.4544 37.6345 21.4252 37.5587 21.4574 cv
37.4428 21.4544 37.0258 21.4591 36.8066 21.4269 cv
36.8066 21.7096 li
36.8923 21.6675 37.0209 21.6708 37.1011 21.6335 cv
37.2906 21.6351 37.4384 21.6838 37.6258 21.6838 cv
37.7834 21.6838 37.9405 21.6838 38.0999 21.6821 cv
38.28 21.6722 38.4592 21.6593 38.6405 21.6464 cv
39.3014 21.661 39.9986 21.6659 40.6733 21.6692 cv
40.8155 21.6722 41.4721 21.6417 41.5325 21.7142 cv
41.5676 21.7612 41.5567 21.8596 41.5611 21.9211 cv
41.5676 21.9694 41.5962 22.1018 41.5589 22.1422 cv
41.4677 22.2359 41.0391 22.1343 40.9155 22.1796 cv
40.8639 22.1796 40.7969 22.1746 40.7534 22.1955 cv
40.5666 22.1938 40.3809 22.1925 40.1964 22.1908 cv
40.0799 22.1796 39.9118 22.1471 39.8019 22.1908 cv
39.6656 22.1908 39.3047 22.1392 39.2124 22.1859 cv
39.0762 22.1859 38.8987 22.1343 38.7701 22.1842 cv
38.4636 22.1826 38.1862 22.1796 37.8839 22.1779 cv
37.8164 22.1779 37.7142 22.1521 37.6554 22.1779 cv
37.5461 22.1763 37.4351 22.1763 37.3263 22.1763 cv
37.2478 22.1746 37.1291 22.1584 37.0648 22.1908 cv
36.8066 22.1908 li
36.8066 22.2634 36.8066 22.3361 36.8066 22.4103 cv
36.967 22.3716 37.3318 22.3911 37.4725 22.4023 cv
37.5884 22.3974 37.7015 22.3958 37.8175 22.3927 cv
38.0801 22.3944 38.3207 22.3974 38.5702 22.3974 cv
38.7015 22.3958 38.8684 22.4219 38.9816 22.3815 cv
39.247 22.3829 39.4986 22.404 39.77 22.4023 cv
40.2063 22.3974 40.6886 22.3765 41.1435 22.3958 cv
41.3028 22.4073 41.4622 22.4185 41.6182 22.4298 cv
41.6182 22.5444 41.7116 22.8158 41.6127 22.8836 cv
41.5654 22.8949 41.5182 22.9061 41.4677 22.9191 cv
41.3512 22.9191 41.2007 22.9015 41.1094 22.9515 cv
40.9238 22.9498 40.7304 22.929 40.5353 22.9306 cv
40.4743 22.9306 40.4051 22.9256 40.3557 22.9481 cv
40.276 22.9465 40.1777 22.9353 40.109 22.9627 cv
39.9425 22.9611 39.6634 22.9015 39.5184 22.9595 cv
39.3492 22.958 39.1278 22.8965 38.9784 22.9723 cv
38.8295 22.971 38.6828 22.9677 38.5366 22.966 cv
38.424 22.958 38.179 22.9111 38.0762 22.9498 cv
37.9691 22.9498 37.7323 22.9256 37.6516 22.9643 cv
37.5692 22.9627 37.4878 22.9627 37.4043 22.9627 cv
37.3088 22.9627 36.9439 22.9806 36.8066 22.9418 cv
36.8066 23.0323 36.8044 23.1259 36.8044 23.2196 cv
36.8247 23.2179 36.8483 23.2196 36.8616 23.2196 cv
37.184 23.2017 37.5071 23.1825 37.8296 23.163 cv
38.0658 23.1646 38.2993 23.1679 38.5333 23.1679 cv
38.6339 23.1729 38.7229 23.2001 38.8295 23.197 cv
38.9108 23.1888 38.9937 23.1792 39.0762 23.1712 cv
39.4536 23.1597 39.814 23.1583 40.1887 23.1597 cv
40.4529 23.1597 40.7282 23.1583 40.9754 23.1484 cv
41.0644 23.1454 41.16 23.155 41.2385 23.1322 cv
41.3297 23.1322 41.6281 23.1114 41.66 23.1792 cv
41.6808 23.2229 41.6803 23.2937 41.6803 23.3487 cv
41.6803 23.4278 41.6896 23.5231 41.6632 23.5943 cv
f
35.8127 14.7279 mo
35.8221 14.5631 35.8314 14.3999 35.8419 14.2337 cv
35.8352 14.0713 35.8254 13.9073 35.8215 13.7426 cv
35.8254 13.6684 35.8287 13.5909 35.8331 13.5151 cv
35.8314 13.2833 35.8352 13.0223 35.8254 12.7937 cv
35.81 12.4328 35.8254 12.071 35.8287 11.6947 cv
35.8309 11.5801 35.8529 11.4194 35.7946 11.3329 cv
35.7869 11.329 35.7814 11.3233 35.776 11.3184 cv
35.7062 11.2908 35.6029 11.3007 35.5221 11.3007 cv
35.432 11.2958 35.3452 11.2908 35.2579 11.287 cv
35.1288 11.2958 34.9963 11.3046 34.8656 11.312 cv
34.5909 11.3162 34.3288 11.2749 34.0635 11.2958 cv
33.8992 11.3071 33.73 11.287 33.5531 11.2895 cv
33.4619 11.2958 33.3691 11.3007 33.2751 11.3024 cv
33.1834 11.2983 33.0905 11.2925 32.9982 11.2879 cv
32.9103 11.2908 32.8224 11.2958 32.7356 11.3007 cv
32.6301 11.2838 32.5279 11.2683 32.4224 11.2521 cv
32.2741 11.24 32.1104 11.2612 31.9653 11.2587 cv
31.8598 11.2491 31.7571 11.2393 31.6533 11.2296 cv
31.506 11.2255 31.3681 11.2538 31.2242 11.2555 cv
31.0226 11.2562 30.7907 11.2329 30.5875 11.2255 cv
30.4627 11.2296 30.3353 11.2329 30.21 11.2376 cv
30.0968 11.2346 30.0002 11.2038 29.8837 11.2038 cv
29.6008 11.1972 29.2953 11.2255 29.0327 11.1996 cv
28.9668 11.2038 28.9008 11.2117 28.8349 11.2175 cv
28.5311 11.2384 28.1987 11.2175 27.8844 11.2255 cv
27.7306 11.2362 27.579 11.2458 27.4257 11.2538 cv
26.7181 11.2604 26.0583 11.2434 25.36 11.2612 cv
25.2397 11.2717 25.1199 11.2813 24.999 11.2895 cv
24.7419 11.2813 24.4859 11.2717 24.2288 11.2612 cv
24.0986 11.2683 23.9673 11.2749 23.8354 11.2813 cv
23.6657 11.2659 23.4959 11.2521 23.3267 11.2384 cv
23.1789 11.24 23.0317 11.2441 22.8839 11.2458 cv
22.7191 11.2458 22.5488 11.2296 22.3921 11.2296 cv
22.1702 11.2296 21.9554 11.27 21.7373 11.2733 cv
21.4813 11.2659 21.2252 11.2587 20.967 11.2521 cv
20.5891 11.2555 20.1885 11.2717 19.8029 11.2749 cv
19.6721 11.2659 19.5408 11.2562 19.4106 11.2458 cv
19.1321 11.2296 18.8426 11.2296 18.5722 11.223 cv
18.4008 11.2192 18.2333 11.2362 18.0492 11.2346 cv
17.9047 11.2346 17.7773 11.2038 17.6416 11.2021 cv
17.4757 11.2117 17.3098 11.2192 17.1504 11.2279 cv
17.0334 11.223 16.918 11.2175 16.8048 11.2117 cv
16.4068 11.2101 15.9917 11.2167 15.6072 11.2192 cv
15.2866 11.223 14.9847 11.2021 14.66 11.1996 cv
14.4823 11.2101 14.307 11.2192 14.1326 11.2296 cv
13.8428 11.2279 13.553 11.2279 13.2637 11.2255 cv
12.939 11.223 12.6242 11.2749 12.3133 11.2255 cv
12.0606 11.1868 11.7641 11.2175 11.5268 11.2505 cv
11.4993 11.2538 11.4614 11.2483 11.4614 11.2813 cv
11.4169 11.3928 11.4436 11.576 11.4436 11.7068 cv
11.4419 11.8724 11.4249 12.0243 11.4236 12.1817 cv
11.4227 12.424 11.4315 12.6726 11.4356 12.9036 cv
11.4356 13.1072 11.4169 13.297 11.4153 13.5102 cv
11.4128 14.0947 11.4249 14.673 11.4227 15.2471 cv
11.4153 15.3545 11.4103 15.4643 11.4049 15.5758 cv
11.4007 15.7462 11.4249 15.9036 11.4315 16.0676 cv
11.4299 16.2961 11.4299 16.5255 11.4282 16.7549 cv
11.4137 17.4185 11.4153 18.1207 11.4032 18.8024 cv
11.387 18.9461 11.3766 19.0881 11.3629 19.2304 cv
11.3724 19.3933 11.3815 19.5565 11.387 19.7213 cv
11.3862 19.7971 11.3823 19.8732 11.3807 19.949 cv
11.3766 20.3317 11.3612 20.7308 11.3595 21.0973 cv
11.3579 21.2604 11.3733 21.4286 11.3708 21.6044 cv
11.3532 21.7837 11.3346 21.9648 11.3183 22.1455 cv
11.3153 22.2974 11.3433 22.4427 11.3466 22.588 cv
11.3491 22.7221 11.3321 22.8545 11.3304 22.9822 cv
11.3257 23.2034 11.3403 23.4294 11.3411 23.6379 cv
11.337 23.7412 11.3304 23.8445 11.3257 23.9494 cv
11.3208 24.0725 11.3474 24.1802 11.3532 24.2934 cv
11.3579 24.4329 11.3387 24.568 11.337 24.7021 cv
11.337 24.8812 11.354 25.0691 11.3474 25.2592 cv
11.329 25.5053 11.3079 25.752 11.2895 25.9959 cv
11.2901 26.0734 11.2917 26.1492 11.2949 26.2272 cv
11.2933 26.3866 11.2758 26.5503 11.2771 26.7178 cv
11.2862 26.8711 11.2949 27.0249 11.3038 27.1766 cv
11.2787 28.26 11.2596 29.3473 11.2708 30.4213 cv
11.2741 30.6718 11.2529 30.93 11.2513 31.1916 cv
11.2497 31.5909 11.2458 31.9898 11.245 32.3865 cv
11.2497 32.4755 11.2513 32.5612 11.2554 32.6502 cv
11.2458 33.0424 11.2216 33.4463 11.2062 33.8451 cv
11.2158 33.95 11.2255 34.0533 11.2329 34.1566 cv
11.2384 34.6934 11.2288 35.2065 11.3321 35.696 cv
11.3653 35.8026 11.3974 35.9092 11.4282 36.0141 cv
11.4952 36.2273 11.5672 36.4328 11.7059 36.6086 cv
11.8869 36.8382 12.0718 37.0981 12.3061 37.2854 cv
12.3382 37.3046 12.3715 37.3206 12.4045 37.3387 cv
12.4732 37.3837 12.5426 37.4272 12.6122 37.4711 cv
12.7091 37.5162 12.8083 37.5601 12.9053 37.6035 cv
13.0489 37.6678 13.1912 37.7326 13.3332 37.7958 cv
13.4785 37.8502 13.6329 37.8875 13.7821 37.9326 cv
14.0518 38.0205 14.3378 38.1029 14.6237 38.1523 cv
14.9086 38.2029 15.1954 38.204 15.4868 38.2524 cv
16.3444 38.3919 17.224 38.4776 18.1108 38.5677 cv
18.3003 38.5852 18.4871 38.582 18.6821 38.5935 cv
18.9294 38.6243 19.1733 38.6545 19.4205 38.6841 cv
19.6721 38.7308 19.9243 38.805 20.1748 38.8556 cv
20.2951 38.883 20.4177 38.9149 20.5341 38.9374 cv
20.6511 38.96 20.7687 38.9731 20.878 39.0138 cv
20.9934 39.0556 21.0978 39.1204 21.2093 39.1698 cv
21.311 39.2061 21.4115 39.2445 21.5137 39.2819 cv
22.0016 39.4918 22.4674 39.8159 22.8647 40.1928 cv
22.9954 40.3488 23.1322 40.5038 23.2635 40.6576 cv
23.3267 40.7609 23.3893 40.8631 23.4541 40.963 cv
23.4674 40.9807 23.4805 41.0092 23.5047 41.0092 cv
23.5047 41.029 li
23.5212 41.029 li
23.7157 40.5587 23.9491 40.073 24.3387 39.7148 cv
24.4782 39.584 24.6617 39.5258 24.8035 39.4072 cv
24.9639 39.2753 25.1979 39.0699 25.4171 39.072 cv
25.5303 39.0297 25.644 38.9896 25.7561 38.9473 cv
25.9011 38.8924 26.0484 38.8133 26.2215 38.8133 cv
26.2626 38.7886 26.3165 38.7825 26.3692 38.7825 cv
26.4379 38.7424 26.5478 38.7182 26.6319 38.7182 cv
26.6659 38.7127 26.6978 38.7083 26.7313 38.7018 cv
26.7714 38.6792 26.8252 38.6694 26.8791 38.671 cv
26.9219 38.6452 26.9862 38.6369 27.0417 38.6369 cv
27.0955 38.6062 27.1691 38.6062 27.2367 38.6062 cv
27.2938 38.5726 27.379 38.5743 27.4527 38.5743 cv
27.4955 38.5693 27.5394 38.5644 27.5834 38.56 cv
27.6361 38.5303 27.712 38.527 27.7801 38.5292 cv
27.8295 38.5226 27.8795 38.5177 27.9279 38.5111 cv
27.9613 38.5078 27.9943 38.5029 28.0273 38.4952 cv
28.0592 38.4919 28.0921 38.4853 28.124 38.4787 cv
28.169 38.4754 28.2119 38.471 28.2569 38.466 cv
28.3449 38.4304 28.4789 38.4501 28.5833 38.4501 cv
28.6174 38.4446 28.6492 38.4402 28.6822 38.4353 cv
28.7354 38.4078 28.8151 38.4205 28.8789 38.4205 cv
28.9756 38.3622 29.1129 38.4029 29.2239 38.4045 cv
29.2667 38.3996 29.3107 38.393 29.3536 38.3897 cv
29.448 38.3402 29.6162 38.3562 29.7321 38.3579 cv
29.7809 38.3347 29.8513 38.3271 29.9128 38.3271 cv
29.9678 38.2963 30.0397 38.2946 30.1089 38.2946 cv
30.1512 38.2897 30.1952 38.2853 30.2402 38.2787 cv
30.3084 38.2381 30.4144 38.2479 30.5028 38.2479 cv
30.5452 38.2238 30.6105 38.2172 30.6671 38.2172 cv
30.7479 38.182 30.8649 38.2007 30.9611 38.2007 cv
31.0418 38.1545 31.2973 38.104 31.4044 38.104 cv
31.4494 38.0788 31.5137 38.0732 31.5692 38.0732 cv
31.6061 38.0623 31.6423 38.054 31.678 38.0425 cv
31.7906 38.0024 31.8912 37.9601 32.0302 37.9601 cv
32.1027 37.9249 32.1994 37.9139 32.2895 37.9139 cv
32.373 37.865 32.5147 37.8167 32.6202 37.8167 cv
32.6685 37.8007 32.7175 37.7832 32.7653 37.765 cv
32.9565 37.6942 33.1597 37.6403 33.3531 37.5678 cv
33.5619 37.4887 33.7663 37.3964 33.9695 37.3129 cv
34.0728 37.2744 34.1728 37.2382 34.275 37.1997 cv
34.4332 37.1173 34.5716 36.9882 34.7101 36.8701 cv
34.7881 36.8074 34.8694 36.7602 34.9409 36.6893 cv
35.0606 36.5701 35.2183 36.4877 35.31 36.3388 cv
35.4178 36.1646 35.5661 35.8724 35.6084 35.6702 cv
35.6232 35.5493 35.6386 35.4296 35.6529 35.312 cv
35.6727 35.2021 35.6924 35.0923 35.7133 34.9824 cv
35.7249 34.7999 35.7001 34.6175 35.7045 34.4412 cv
35.7133 34.2347 35.7221 34.0259 35.7336 33.8193 cv
35.7265 33.7578 35.7177 33.6995 35.7122 33.6385 cv
35.7144 33.5402 35.7182 33.4429 35.7221 33.343 cv
35.732 32.9858 35.7287 32.6194 35.7303 32.2788 cv
35.732 31.9975 35.7166 31.7036 35.7182 31.4129 cv
35.7215 31.2899 35.7215 31.1707 35.7221 31.0509 cv
35.7265 30.985 35.7303 30.9201 35.7336 30.8553 cv
35.7287 30.6844 35.7177 30.5136 35.7117 30.3455 cv
35.7067 30.029 35.7386 29.6928 35.7419 29.378 cv
35.7353 28.9258 35.7287 28.4731 35.7221 28.0182 cv
35.7336 27.8985 35.7441 27.7776 35.7545 27.6578 cv
35.7578 27.4315 35.7605 27.2084 35.7617 26.9859 cv
35.7704 26.8827 35.7836 26.7788 35.7946 26.6744 cv
35.7946 26.4822 35.7639 26.3107 35.7639 26.1173 cv
35.7682 25.6394 35.7946 25.1866 35.8122 24.707 cv
35.8188 24.5329 35.7781 24.3615 35.777 24.1983 cv
35.7869 24.0769 35.7957 23.9593 35.8067 23.8396 cv
35.8023 23.7687 35.799 23.6959 35.7946 23.6267 cv
35.799 23.5168 35.8067 23.4086 35.81 23.3003 cv
35.8001 23.2308 35.7946 23.1679 35.7859 23.1017 cv
35.7781 22.9369 35.7738 22.7737 35.7694 22.6092 cv
35.7639 22.2732 35.7946 21.9532 35.8023 21.6255 cv
35.799 21.5398 35.7957 21.4511 35.7919 21.3637 cv
35.8023 21.2992 35.81 21.233 35.8188 21.1667 cv
35.8215 21.044 35.7946 20.9341 35.7946 20.8066 cv
35.7946 20.6339 35.81 20.4545 35.8188 20.2979 cv
35.8127 20.1622 35.8078 20.0249 35.8023 19.8891 cv
35.8089 19.8246 35.8166 19.7568 35.8248 19.6939 cv
35.8199 19.3999 35.7946 19.0623 35.7919 18.7588 cv
35.7891 18.589 35.8023 18.4116 35.8094 18.2338 cv
35.8188 18.158 35.8248 18.0803 35.8287 18.0044 cv
35.8166 17.7896 35.8001 17.5781 35.7859 17.3644 cv
35.7946 17.2361 35.8045 17.1037 35.8155 16.9713 cv
35.8166 16.7969 35.8188 16.6225 35.8199 16.448 cv
35.8287 16.3057 35.8386 16.1637 35.8473 16.0214 cv
35.849 15.8844 35.8188 15.7541 35.8254 15.6113 cv
35.8352 15.5305 35.843 15.4481 35.8539 15.3673 cv
35.8419 15.1534 35.8254 14.941 35.8127 14.7279 cv
35.3803 20.7067 mo
35.3738 20.755 35.3628 20.8033 35.3557 20.855 cv
35.354 20.9473 35.3848 21.0182 35.3803 21.1151 cv
35.3771 21.2154 35.3518 21.2929 35.3507 21.3945 cv
35.3469 21.8419 35.3441 22.2908 35.3408 22.7383 cv
35.3408 22.8158 35.3661 22.8773 35.3677 22.9515 cv
35.359 23.0323 35.3518 23.1179 35.3408 23.197 cv
35.3518 23.2695 35.359 23.3391 35.3677 23.4102 cv
35.3584 23.4698 35.3501 23.5314 35.3408 23.5909 cv
35.3408 23.6509 35.3441 23.7121 35.3452 23.772 cv
35.337 23.8901 35.3177 24.0011 35.3177 24.1318 cv
35.3155 24.323 35.3606 24.4824 35.3628 24.6735 cv
35.3628 24.7653 35.3408 24.8505 35.3397 24.9351 cv
35.3452 24.9944 35.3529 25.0543 35.359 25.1158 cv
35.3628 25.2043 35.3441 25.2966 35.3397 25.3773 cv
35.3441 25.4097 35.3469 25.4416 35.3529 25.4756 cv
35.3595 25.5844 35.3628 25.6938 35.371 25.802 cv
35.3469 26.8277 35.3606 27.9226 35.3397 28.9511 cv
35.3386 29.3258 35.337 29.7038 35.3348 30.0807 cv
35.337 30.184 35.3408 30.2889 35.3441 30.3922 cv
35.3288 30.8136 35.3331 31.2388 35.3243 31.6712 cv
35.3211 31.7953 35.2892 31.8876 35.2892 32.014 cv
35.2919 32.1205 35.3199 32.1997 35.3194 32.3096 cv
35.3194 32.4107 35.2925 32.4898 35.2892 32.5887 cv
35.298 32.637 35.3024 32.6876 35.3095 32.7359 cv
35.3024 32.7842 35.298 32.8342 35.2919 32.8826 cv
35.2991 32.9375 35.3056 32.9908 35.3128 33.0458 cv
35.3145 33.1897 35.3145 33.3303 35.3145 33.4721 cv
35.3199 33.5435 35.3232 33.6144 35.3288 33.6836 cv
35.3211 33.816 35.3177 33.9489 35.31 34.0797 cv
35.3145 34.4478 35.3232 34.8384 35.2639 35.1922 cv
35.2584 35.2713 35.2518 35.3554 35.2474 35.4372 cv
35.22 35.6086 35.1397 35.824 35.0551 35.9691 cv
34.8628 36.2954 34.5266 36.5037 34.2146 36.6976 cv
34.042 36.8052 33.8871 36.925 33.6987 37.0107 cv
33.485 37.1074 33.2641 37.1788 33.0339 37.253 cv
32.7603 37.3387 32.4906 37.4502 32.2104 37.5304 cv
32.1142 37.5601 32.0192 37.5695 31.9181 37.592 cv
31.6258 37.6617 31.3324 37.7359 31.027 37.7842 cv
30.9655 37.7892 30.899 37.7958 30.8325 37.7985 cv
30.6358 37.8315 30.4391 37.865 30.2414 37.8958 cv
30.0183 37.9233 29.7958 37.9315 29.5711 37.9491 cv
29.3206 37.9656 29.064 38.0205 28.8151 38.0381 cv
28.608 38.0447 28.4003 38.0524 28.1932 38.059 cv
28.0328 38.0721 27.8844 38.1106 27.7306 38.1397 cv
27.635 38.1458 27.5383 38.1523 27.4411 38.1589 cv
27.0477 38.243 26.6659 38.3446 26.2725 38.4304 cv
26.061 38.4754 25.8528 38.5111 25.6523 38.5726 cv
25.5512 38.615 25.4495 38.6578 25.3501 38.7001 cv
25.265 38.7308 25.1825 38.76 25.0979 38.7874 cv
24.5595 39.0764 24.0266 39.4511 23.6673 39.9741 cv
23.6343 40.028 23.6003 40.0796 23.5657 40.1346 cv
23.5437 40.1598 23.4613 40.2115 23.4613 40.2411 cv
23.4371 40.2411 23.4278 40.251 23.4278 40.2247 cv
23.3564 40.1829 23.33 40.1071 23.2761 40.0489 cv
23.1124 39.873 22.9861 39.6885 22.8015 39.5401 cv
22.6515 39.4171 22.4894 39.3347 22.3246 39.2423 cv
22.246 39.1863 22.1636 39.1325 22.0845 39.0775 cv
21.9324 39.0023 21.784 38.9281 21.6323 38.8534 cv
21.428 38.7792 21.2198 38.705 21.0137 38.6292 cv
20.872 38.5726 20.7385 38.5369 20.5891 38.4962 cv
20.5226 38.4721 20.4556 38.4501 20.388 38.4259 cv
20.171 38.3853 19.9688 38.3622 19.7524 38.3303 cv
19.6749 38.3106 19.5974 38.293 19.5216 38.2721 cv
19.4315 38.2705 19.3469 38.2688 19.2579 38.2644 cv
19.0903 38.2479 18.9217 38.2314 18.7519 38.2172 cv
18.5937 38.2128 18.4344 38.2106 18.2767 38.2073 cv
18.1882 38.1864 18.102 38.1688 18.014 38.1491 cv
17.813 38.1414 17.6108 38.1304 17.4086 38.1205 cv
16.9801 38.0689 16.5667 37.993 16.1467 37.9425 cv
15.9505 37.9282 15.7541 37.9139 15.5564 37.8991 cv
15.3511 37.8749 15.1462 37.8249 14.9498 37.7892 cv
14.6924 37.7469 14.4468 37.715 14.198 37.6568 cv
13.8669 37.5777 13.5522 37.4272 13.2437 37.2931 cv
12.8011 37.103 12.3157 36.825 12.0509 36.3855 cv
11.6647 35.7416 11.656 34.9258 11.6617 34.0764 cv
11.6617 33.9616 11.6318 33.8792 11.6326 33.766 cv
11.6334 33.6743 11.6617 33.6018 11.6642 33.5045 cv
11.6642 33.4095 11.6372 33.3336 11.635 33.2424 cv
11.6277 33.0392 11.6221 32.8276 11.623 32.6359 cv
11.6238 32.4854 11.6334 32.3172 11.6405 32.159 cv
11.6496 32.1057 11.6592 32.0508 11.6655 31.9959 cv
11.6617 31.9425 11.6504 31.8876 11.6446 31.8327 cv
11.6446 31.6953 11.6439 31.5602 11.6439 31.4228 cv
11.6446 31.1124 11.6801 30.83 11.6826 30.507 cv
11.6859 29.7895 11.7084 29.1127 11.7246 28.4089 cv
11.7196 28.3149 11.7167 28.2248 11.7125 28.1292 cv
11.7125 27.921 11.7142 27.7161 11.715 27.5062 cv
11.7158 27.3057 11.7504 27.1441 11.7479 26.9502 cv
11.7416 26.169 11.7287 25.3646 11.7326 24.5889 cv
11.7433 24.3922 11.7545 24.1967 11.7641 24 cv
11.7562 23.8461 11.7504 23.6945 11.7433 23.541 cv
11.7392 23.1097 11.7576 22.6705 11.7592 22.2474 cv
11.7554 22.034 11.7504 21.8208 11.7479 21.606 cv
11.7576 21.464 11.7691 21.322 11.7779 21.1813 cv
11.7859 20.894 11.7691 20.6226 11.7713 20.3287 cv
11.7738 19.6518 11.7924 19.0123 11.7867 18.3454 cv
11.7988 18.2547 11.8103 18.158 11.8216 18.0674 cv
11.8158 18.0174 11.8103 17.969 11.8037 17.9187 cv
11.7974 17.7671 11.7916 17.6136 11.7867 17.4605 cv
11.7828 17.068 11.8004 16.6683 11.815 16.2969 cv
11.8095 16.0797 11.8045 15.8602 11.7988 15.6404 cv
11.8111 15.5371 11.8241 15.4344 11.8378 15.3303 cv
11.8383 15.2262 11.8142 15.1163 11.8183 15.0031 cv
11.8224 14.8943 11.8507 14.8086 11.8515 14.6924 cv
11.8537 14.2645 11.8578 13.8653 11.8724 13.4464 cv
11.8724 13.2928 11.8707 13.1402 11.8707 12.9868 cv
11.8836 12.8786 11.8674 12.7762 11.8658 12.6767 cv
11.8707 12.5668 11.8773 12.457 11.879 12.3474 cv
11.8773 12.21 11.8257 11.7787 11.9185 11.6917 cv
11.9748 11.6383 12.1251 11.6617 12.2133 11.6617 cv
12.327 11.6172 12.6542 11.648 12.8036 11.6488 cv
12.9053 11.6093 13.0764 11.6351 13.1975 11.6351 cv
13.6101 11.6367 14.0213 11.6543 14.4089 11.6576 cv
14.4914 11.6172 14.6495 11.6422 14.7528 11.6422 cv
14.8531 11.6043 15.0122 11.6268 15.1308 11.6301 cv
15.1808 11.6059 15.2495 11.6122 15.3116 11.6139 cv
15.4135 11.568 15.5789 11.6043 15.6871 11.6122 cv
15.9934 11.6334 16.2791 11.6526 16.5876 11.6526 cv
16.7103 11.6059 16.9658 11.6543 17.1141 11.6576 cv
17.2515 11.6002 17.5388 11.6576 17.6866 11.6672 cv
17.9229 11.6664 18.1574 11.6656 18.3931 11.6634 cv
18.4624 11.6334 18.5832 11.6488 18.6695 11.6496 cv
18.8557 11.6496 19.0414 11.6513 19.2293 11.6526 cv
19.3293 11.6109 19.4996 11.6383 19.6227 11.6383 cv
19.6754 11.6139 19.7534 11.6221 19.8177 11.6221 cv
20.0248 11.6238 20.1957 11.6576 20.3907 11.6584 cv
20.4759 11.6252 20.605 11.6422 20.7012 11.6422 cv
20.772 11.6172 20.8599 11.6367 20.9314 11.6422 cv
21.0423 11.6422 21.15 11.6463 21.2593 11.648 cv
21.4115 11.5864 21.7807 11.6526 21.9477 11.6656 cv
22.0691 11.6664 22.1873 11.6672 22.3092 11.6697 cv
22.3597 11.6422 22.4477 11.6672 22.507 11.6672 cv
22.6267 11.6681 22.7586 11.6617 22.8828 11.6656 cv
23.3486 11.6754 23.8354 11.6779 24.3266 11.6801 cv
24.3804 11.6496 24.465 11.6488 24.5387 11.6488 cv
24.5711 11.6422 24.6035 11.6389 24.6353 11.6334 cv
24.8018 11.568 25.1194 11.6697 25.3089 11.6697 cv
25.3572 11.6656 25.4067 11.6592 25.4572 11.6543 cv
25.4968 11.6488 25.533 11.6422 25.5715 11.6389 cv
25.6764 11.5972 25.8594 11.6238 25.9813 11.6238 cv
26.3187 11.6252 26.6577 11.6301 26.9956 11.6318 cv
27.1307 11.6351 27.2493 11.6656 27.3884 11.6656 cv
27.4307 11.6447 27.5021 11.6496 27.5537 11.6496 cv
27.6208 11.618 27.7339 11.6351 27.8163 11.6351 cv
27.9855 11.6351 28.1548 11.6367 28.3245 11.6383 cv
28.3663 11.6334 28.4119 11.6252 28.4558 11.6214 cv
28.6135 11.559 28.8481 11.6389 29.0124 11.5906 cv
29.2338 11.5914 29.4404 11.6252 29.6513 11.6414 cv
29.7925 11.6422 29.9348 11.6463 30.0787 11.648 cv
30.1222 11.6414 30.1639 11.6367 30.2084 11.6318 cv
30.3562 11.5744 30.5677 11.6367 30.7171 11.648 cv
30.9132 11.6496 31.1094 11.6526 31.3066 11.6543 cv
31.3802 11.6214 31.6588 11.6543 31.7665 11.656 cv
32.1488 11.6592 32.5301 11.6617 32.912 11.6656 cv
33.0224 11.6779 33.1317 11.693 33.24 11.7054 cv
33.3179 11.698 33.3949 11.69 33.4696 11.6834 cv
33.5191 11.6617 33.5916 11.6672 33.6498 11.6672 cv
33.8624 11.6656 34.0596 11.6779 34.2574 11.6947 cv
34.5629 11.6996 34.8694 11.7046 35.1733 11.7084 cv
35.2002 11.6947 35.354 11.6754 35.354 11.7101 cv
35.371 11.7101 li
35.3683 12.0243 35.3628 12.3029 35.3661 12.6105 cv
35.3683 12.911 35.3924 13.25 35.3803 13.5618 cv
35.3771 14.1342 35.3743 14.707 35.371 15.2803 cv
35.332 16.3269 35.3716 17.3403 35.3677 18.3954 cv
35.3743 18.5327 35.3831 18.6684 35.3902 18.8038 cv
35.3924 18.9832 35.3595 19.1447 35.3606 19.3304 cv
35.371 19.4079 35.3803 19.4823 35.3897 19.5582 cv
35.398 19.7955 35.4013 20.0394 35.4035 20.2639 cv
35.3946 20.4124 35.3892 20.5594 35.3803 20.7067 cv
f
25.6605 35.1197 mo
25.616 34.9615 25.5666 34.8142 25.5143 34.6604 cv
25.4968 34.606 25.4841 34.5511 25.4529 34.5022 cv
25.4253 34.4604 25.3924 34.4478 25.3452 34.4346 cv
25.2913 34.4747 25.2166 34.5055 25.21 34.5813 cv
25.1946 34.7044 25.2727 34.8434 25.3133 34.9467 cv
25.3748 35.0999 25.4253 35.2637 25.477 35.4197 cv
25.51 35.5186 25.533 35.6185 25.5957 35.7026 cv
25.655 35.7801 25.7968 35.8702 25.9011 35.824 cv
25.9566 35.7999 25.8759 35.6785 25.8627 35.6493 cv
25.788 35.4828 25.7122 35.2971 25.6605 35.1197 cv
f
19.0107 27.1052 mo
19.026 27.1052 li
19.026 27.0892 li
19.0436 27.0892 li
19.0975 26.9859 19.1507 26.8793 19.2073 26.776 cv
19.2579 26.7244 19.3128 26.6744 19.3639 26.6239 cv
19.4161 26.5503 19.4711 26.4772 19.5249 26.4041 cv
19.5595 26.3525 19.6353 26.3107 19.6562 26.2525 cv
19.7205 26.0591 19.6897 25.6504 19.693 25.4196 cv
19.693 25.2306 19.6941 25.0394 19.6941 24.8477 cv
19.7051 24.7329 19.7144 24.6197 19.7199 24.5021 cv
19.7183 24.2593 19.7177 24.0126 19.7172 23.7654 cv
19.7073 23.6442 19.6974 23.5231 19.6875 23.4052 cv
19.6787 23.0872 19.7216 22.7463 19.7172 22.4232 cv
19.7062 22.1246 19.7216 21.795 19.7292 21.5027 cv
19.726 21.3945 19.7199 21.2862 19.7172 21.1764 cv
19.7216 21.0827 19.7326 20.9907 19.7386 20.8987 cv
19.7369 20.6905 19.7353 20.4836 19.7353 20.2754 cv
19.726 20.1655 19.7172 20.0556 19.7073 19.9457 cv
19.7007 19.7795 19.7117 19.6131 19.7292 19.4549 cv
19.7425 19.3241 19.7606 19.156 19.727 19.0302 cv
19.727 19.0461 li
19.5732 19.106 19.126 19.6147 19.081 19.7667 cv
19.037 19.9149 19.0645 20.1688 19.0645 20.3366 cv
19.0623 20.5822 19.0327 20.8146 19.0249 21.0569 cv
19.0194 21.1247 19.0167 21.1893 19.0107 21.2541 cv
19.0233 21.3703 19.0293 21.4835 19.0381 21.5997 cv
19.0337 21.8049 18.9744 21.984 18.9744 22.1875 cv
18.9821 22.3152 18.993 22.4394 19.0013 22.5655 cv
18.9975 22.69 18.993 22.8158 18.9876 22.9418 cv
18.9964 23.1064 19.003 23.2695 19.0134 23.4344 cv
19.0079 23.7041 18.9744 23.9725 18.9777 24.2533 cv
18.9859 24.4241 18.9964 24.5922 19.0079 24.762 cv
19.0051 24.9153 18.9766 25.0702 18.9744 25.2207 cv
18.97 25.3465 19.0079 25.4614 18.9997 25.597 cv
18.9909 25.7745 18.9579 25.9718 18.9612 26.1542 cv
18.965 26.4624 19.0107 26.7969 19.0107 27.1052 cv
f
27.712 27.2848 mo
27.7175 27.2848 27.7235 27.2865 27.7301 27.2865 cv
27.7076 27.1052 27.5773 26.9678 27.457 26.837 cv
27.3812 26.7535 27.3071 26.6711 27.2329 26.5871 cv
27.0631 26.458 26.8346 26.3525 26.6181 26.3173 cv
26.4873 26.314 26.3588 26.314 26.2264 26.3107 cv
26.1489 26.3415 26.0528 26.3338 25.9665 26.3465 cv
25.8105 26.3833 25.6583 26.419 25.5056 26.4563 cv
25.0771 26.5629 24.6925 26.7547 24.3068 26.9425 cv
24.1639 27.0084 24.0376 27.1107 23.9129 27.2024 cv
23.7981 27.2832 23.7003 27.4798 23.5475 27.482 cv
23.4398 27.4853 23.3575 27.359 23.2805 27.3008 cv
23.2355 27.2733 23.1915 27.2447 23.1487 27.215 cv
22.9795 27.0777 22.8289 26.9277 22.6454 26.8211 cv
22.3641 26.6568 22.0664 26.6162 21.7367 26.5547 cv
21.6373 26.5272 21.5389 26.4981 21.4384 26.4706 cv
20.9209 26.3624 20.2622 26.3613 19.8419 26.6321 cv
19.7457 26.6937 19.6721 26.7876 19.5864 26.8634 cv
19.4293 26.9985 19.3611 27.0568 19.282 27.2524 cv
19.2579 27.3073 19.2216 27.3656 19.2216 27.4337 cv
19.2908 27.4672 19.3793 27.4672 19.4666 27.4689 cv
19.5512 27.4282 19.6936 27.4546 19.7941 27.4546 cv
20.082 27.4513 20.3764 27.4738 20.6643 27.4754 cv
20.7401 27.4315 20.8627 27.443 20.9588 27.4447 cv
21.1621 27.4463 21.3522 27.4623 21.5488 27.4639 cv
21.606 27.4337 21.7065 27.448 21.7774 27.4491 cv
22.057 27.4513 22.2949 27.4853 22.5653 27.4853 cv
22.5927 27.4798 22.6207 27.4754 22.6476 27.4689 cv
22.7619 27.4754 22.8762 27.482 22.9899 27.4864 cv
23.0245 27.4798 23.0652 27.4963 23.086 27.5221 cv
23.1344 27.5831 23.1135 27.6886 23.13 27.7644 cv
23.1762 27.9853 23.3673 28.16 23.6091 28.1616 cv
23.9096 28.1633 24.1228 27.9001 24.1172 27.6095 cv
24.1167 27.5804 24.0925 27.4947 24.1228 27.4947 cv
24.1711 27.4397 24.2727 27.4282 24.3518 27.4304 cv
24.4002 27.4249 24.4507 27.4216 24.498 27.4123 cv
24.5485 27.4073 24.598 27.4062 24.6469 27.3974 cv
24.7293 27.3573 24.9628 27.3864 25.0732 27.3864 cv
25.1194 27.3639 25.1803 27.3546 25.2375 27.3546 cv
25.343 27.3008 25.5001 27.3216 25.6319 27.3216 cv
25.6704 27.3172 25.7078 27.3123 25.7462 27.3057 cv
25.8495 27.254 26.0083 27.3249 26.122 27.3249 cv
26.2215 27.2722 26.3901 27.2941 26.5153 27.2941 cv
26.8604 27.2974 27.2043 27.2974 27.5477 27.3008 cv
27.5812 27.3008 27.712 27.315 27.712 27.2848 cv
f
19.9787 25.7504 mo
19.9787 25.8954 19.949 26.0382 19.949 26.191 cv
20.0083 26.191 20.0688 26.1932 20.1303 26.1932 cv
20.1748 26.1723 20.238 26.1608 20.2951 26.1624 cv
20.3402 26.1393 20.4039 26.13 20.4572 26.1316 cv
20.4962 26.1234 20.5341 26.1206 20.5731 26.1141 cv
20.728 26.0459 21.1527 26.1333 21.3126 26.1591 cv
21.5137 26.1932 21.701 26.1849 21.8983 26.2283 cv
22.129 26.2756 22.4795 26.4096 22.6795 26.5272 cv
22.7509 26.569 23.1537 26.8827 23.1904 26.8827 cv
23.1904 26.8667 li
23.2948 26.6937 23.2849 26.5239 23.3146 26.3107 cv
23.3476 26.0684 23.3542 25.8217 23.3646 25.5569 cv
23.3762 25.1801 23.3981 24.7927 23.4003 24.4082 cv
23.397 24.245 23.3937 24.0802 23.3888 23.9176 cv
23.4064 23.4456 23.4025 22.9869 23.4124 22.5251 cv
23.4278 21.8032 23.4767 21.031 23.4124 20.3108 cv
23.3888 20.0685 23.4212 19.8133 23.2849 19.631 cv
23.0289 19.2854 22.6795 19.1593 22.3048 19.0172 cv
22.2037 18.9832 22.1059 18.9494 22.0049 18.9137 cv
21.8917 18.8928 21.7796 18.8716 21.6642 18.8508 cv
21.4901 18.8071 21.2917 18.7717 21.1049 18.7621 cv
20.8424 18.7588 20.5819 18.7571 20.3176 18.7538 cv
20.2413 18.7893 20.1138 18.7763 20.0622 18.8541 cv
20.0105 18.9316 20.0375 19.2304 20.0375 19.3433 cv
20.0358 19.7858 20.016 20.2284 20.0133 20.6871 cv
20.0105 20.9536 20.0083 21.2217 20.0073 21.4898 cv
19.9913 21.7142 19.9765 21.9373 19.9622 22.1617 cv
19.9545 22.3216 20.0204 22.4669 20.016 22.6366 cv
20.0083 22.966 20.0029 23.3261 19.9952 23.6684 cv
19.9825 23.8124 19.9754 23.9527 19.9622 24.095 cv
19.9551 24.3873 19.9787 24.6587 19.9721 24.946 cv
19.9622 25.0883 19.949 25.2306 19.9391 25.3724 cv
19.938 25.5114 19.9798 25.6246 19.9787 25.7504 cv
22.818 25.2855 mo
22.5383 25.1526 22.2378 25.046 21.9351 24.9526 cv
21.8318 24.9186 21.7236 24.9054 21.6126 24.8845 cv
21.4533 24.8493 21.2868 24.8043 21.1181 24.7779 cv
20.9336 24.7505 20.7435 24.7406 20.5643 24.7021 cv
20.5446 24.6944 20.5237 24.6862 20.5033 24.6796 cv
20.3545 24.5972 20.3523 24.3115 20.5655 24.3115 cv
20.5655 24.2934 li
20.7006 24.2934 20.7973 24.3291 20.9143 24.3549 cv
21.0308 24.3791 21.1527 24.3906 21.2687 24.4197 cv
21.3675 24.4549 21.4664 24.4906 21.5653 24.5263 cv
21.8576 24.623 22.1246 24.7186 22.3982 24.8477 cv
22.4625 24.8719 22.529 24.896 22.5927 24.9186 cv
22.7493 24.9878 22.9745 25.1548 23.086 25.2889 cv
23.13 25.3372 23.1992 25.3658 23.1992 25.4405 cv
23.0619 25.4581 22.9284 25.335 22.818 25.2855 cv
23.2086 23.491 mo
23.1992 23.4926 23.1883 23.4973 23.175 23.5022 cv
23.1685 23.5039 23.1641 23.5056 23.1575 23.5072 cv
23.0432 23.5231 22.5812 23.1454 22.44 23.0775 cv
22.2768 22.9998 22.1059 22.9385 21.9351 22.8724 cv
21.7082 22.7836 21.4862 22.6833 21.2291 22.6496 cv
21.1313 22.6366 21.0346 22.6251 20.9363 22.6092 cv
20.8022 22.6042 20.5918 22.635 20.494 22.5542 cv
20.372 22.4573 20.4511 22.1955 20.6105 22.1972 cv
20.6105 22.1796 li
21.3357 22.2329 21.9609 22.5638 22.5498 22.8916 cv
22.7092 22.9839 23.119 23.2308 23.2014 23.3973 cv
23.2102 23.4149 23.2421 23.491 23.2086 23.491 cv
20.4588 20.1638 mo
20.6984 20.1655 20.8896 20.2413 21.1005 20.3045 cv
21.1621 20.3171 21.2269 20.3303 21.2896 20.3432 cv
21.4269 20.3787 21.5598 20.4369 21.6911 20.4886 cv
21.8059 20.5306 21.9203 20.571 22.0389 20.6127 cv
22.0949 20.6418 22.1515 20.6726 22.2065 20.7017 cv
22.3653 20.7759 22.5257 20.8533 22.6839 20.9278 cv
22.7856 20.9731 23.3338 21.3154 23.2729 21.4414 cv
23.2553 21.4785 23.1948 21.4802 23.1602 21.4719 cv
23.0619 21.4511 22.9894 21.3624 22.9058 21.3154 cv
22.8125 21.2604 22.7152 21.2071 22.6207 21.1539 cv
22.1092 20.897 21.5379 20.7468 20.9808 20.5918 cv
20.8214 20.5465 20.6116 20.558 20.4759 20.4723 cv
20.3633 20.3996 20.3589 20.2496 20.4588 20.1638 cv
f
24.3178 16.0846 mo
24.3837 16.0892 24.4524 16.0329 24.5007 15.9973 cv
24.5705 15.9439 24.6595 15.8736 24.6881 15.7939 cv
24.7414 15.6445 24.6194 15.4369 24.4771 15.3852 cv
24.4321 15.3803 24.3837 15.374 24.3375 15.369 cv
24.3359 15.4723 24.4167 15.5209 24.4096 15.6292 cv
24.4035 15.7211 24.32 15.7421 24.2859 15.8181 cv
24.2606 15.8731 24.2233 16.0747 24.3178 16.0846 cv
f
24.6958 14.4897 mo
24.5782 14.4444 24.464 14.4186 24.3486 14.3727 cv
24.2513 14.3307 24.1744 14.2741 24.0645 14.2529 cv
24.0645 14.2691 li
24.0189 14.287 23.9706 14.3145 23.9629 14.3678 cv
23.942 14.5018 24.0925 14.5373 24.1673 14.6051 cv
24.2321 14.6666 24.2739 14.7974 24.3755 14.8086 cv
24.4475 14.8183 24.5134 14.7279 24.5672 14.6941 cv
24.6243 14.66 24.6991 14.6246 24.7227 14.5535 cv
24.7326 14.5276 24.7221 14.4993 24.6958 14.4897 cv
f
23.9651 16.834 mo
24.0607 16.8936 24.331 16.8452 24.354 16.7241 cv
24.3705 16.6288 24.2189 16.5497 24.1497 16.5318 cv
24.0914 16.5755 23.8266 16.7499 23.9651 16.834 cv
f
27.0703 18.9057 mo
26.9922 18.8687 26.901 18.8846 26.8077 18.8815 cv
26.7022 18.875 26.5978 18.8557 26.4807 18.8541 cv
26.3588 18.8975 26.2044 18.8832 26.0737 18.9074 cv
25.4666 19.0219 24.8969 19.1093 24.3755 19.3887 cv
24.2453 19.4565 24.1068 19.529 24.0074 19.6501 cv
23.9338 19.7375 23.931 19.8521 23.9156 19.9686 cv
23.87 20.2496 23.8717 20.5465 23.8613 20.855 cv
23.8519 21.0085 23.8409 21.1604 23.8299 21.3154 cv
23.8266 21.5368 23.8266 21.7612 23.8244 21.9856 cv
23.8123 22.073 23.8035 22.1601 23.7942 22.2474 cv
23.7728 22.454 23.7783 22.685 23.7717 22.8869 cv
23.7602 23.2017 23.7783 23.5201 23.7849 23.822 cv
23.7909 24.1099 23.7728 24.423 23.7761 24.723 cv
23.7838 24.8043 23.7904 24.8867 23.7981 24.9691 cv
23.7904 25.0175 23.7849 25.0669 23.7783 25.1175 cv
23.7772 25.2548 23.8047 25.39 23.8035 25.5421 cv
23.8014 25.946 23.7909 26.4657 23.9525 26.7843 cv
23.9607 26.8019 24.0113 26.8728 24.0113 26.837 cv
24.1914 26.7662 24.354 26.6272 24.5222 26.5338 cv
24.6727 26.453 24.8375 26.4014 24.9886 26.3223 cv
25.1716 26.2239 25.2682 26.1574 25.5056 26.1591 cv
25.5737 26.1141 25.7748 26.0783 25.8682 26.08 cv
25.905 26.0734 25.9429 26.0684 25.9813 26.0624 cv
26.0143 26.0569 26.0462 26.0525 26.0791 26.0476 cv
26.2539 25.9602 26.6604 26.0393 26.834 26.0844 cv
26.9219 26.1085 27.0082 26.13 27.0966 26.1509 cv
27.1384 25.8954 27.0966 25.6097 27.0906 25.3625 cv
27.0994 25.2207 27.1081 25.0801 27.118 24.9383 cv
27.1197 24.7587 27.1081 24.5813 27.1087 24.4148 cv
27.118 24.3258 27.1307 24.2384 27.1373 24.15 cv
27.1482 23.9428 27.1362 23.7478 27.1472 23.5443 cv
27.1526 23.4278 27.1724 23.3036 27.1752 23.1841 cv
27.1801 22.958 27.1856 22.7287 27.1801 22.496 cv
27.1697 22.3974 27.1615 22.299 27.151 22.2004 cv
27.1472 21.7903 27.1697 21.367 27.173 20.9731 cv
27.1691 20.847 27.1647 20.721 27.1603 20.5951 cv
27.1549 20.2817 27.1625 19.9781 27.1455 19.6777 cv
27.1274 19.5823 27.1109 19.4903 27.0928 19.3966 cv
27.0779 19.2884 27.0988 19.1656 27.1059 19.0544 cv
27.1059 19.0156 27.1164 18.9074 27.0703 18.9057 cv
24.1376 23.1097 mo
24.5337 22.7446 25.0452 22.5638 25.527 22.3699 cv
25.6781 22.3054 25.8572 22.1938 26.0374 22.1955 cv
26.0973 22.1488 26.2352 22.0826 26.3143 22.0826 cv
26.3143 22.0647 li
26.411 22.0826 26.4824 22.123 26.4846 22.2296 cv
26.4873 22.3232 26.4418 22.3974 26.3703 22.4477 cv
26.2253 22.5413 26.0544 22.5573 25.8896 22.6139 cv
25.7039 22.6754 25.5111 22.7463 25.3254 22.8028 cv
25.1957 22.8416 25.0683 22.8707 24.9463 22.9191 cv
24.7254 23.0081 24.5046 23.1226 24.3002 23.247 cv
24.2288 23.2891 24.1519 23.3585 24.0618 23.3616 cv
24.0376 23.3616 24.0129 23.3602 23.9992 23.3457 cv
23.9201 23.2649 24.0914 23.1517 24.1376 23.1097 cv
26.4275 24.4483 mo
26.2934 24.5263 26.1165 24.5263 25.9572 24.5604 cv
25.8171 24.5911 25.6764 24.6362 25.5303 24.6681 cv
25.0425 24.7801 24.6386 24.9752 24.2233 25.2251 cv
24.1711 25.2559 24.0332 25.3866 23.9805 25.2899 cv
23.9431 25.224 24.0442 25.1548 24.086 25.1175 cv
24.2485 24.9768 24.4145 24.8812 24.5914 24.7714 cv
24.787 24.6505 24.982 24.5395 25.1979 24.4582 cv
25.2682 24.4197 25.3342 24.3824 25.4034 24.345 cv
25.6726 24.2406 25.9495 24.1725 26.2215 24.0802 cv
26.3 24.0802 26.3802 24.0824 26.444 24.1126 cv
26.5753 24.1835 26.5407 24.3791 26.4275 24.4483 cv
26.4533 20.4399 mo
26.3901 20.4836 26.2978 20.5014 26.2253 20.524 cv
26.0396 20.5789 25.8539 20.6355 25.6704 20.6921 cv
25.4155 20.7712 25.1529 20.8679 24.9166 20.9844 cv
24.7501 21.0827 24.5832 21.1764 24.4134 21.2766 cv
24.3881 21.2896 24.1563 21.4124 24.1574 21.3494 cv
24.1409 21.3494 li
24.1607 21.175 24.3607 21.0586 24.4958 20.9778 cv
24.5606 20.9311 24.6265 20.8857 24.6903 20.839 cv
24.8573 20.7325 25.0364 20.6289 25.2133 20.5465 cv
25.4012 20.4594 25.599 20.4124 25.7946 20.3462 cv
25.8621 20.3157 25.9297 20.285 25.9946 20.2559 cv
26.0846 20.2251 26.1714 20.1946 26.2621 20.1638 cv
26.3297 20.1638 26.4077 20.1572 26.4687 20.1784 cv
26.5967 20.2237 26.5324 20.3803 26.4533 20.4399 cv
f
23.6201 15.9019 mo
23.5783 15.8769 23.5355 15.8736 23.4827 15.8706 cv
23.4398 15.9006 23.3882 15.9247 23.3695 15.9772 cv
23.3443 16.0376 23.3547 16.1168 23.3597 16.1829 cv
23.3646 16.3074 23.341 16.4068 23.4234 16.4989 cv
23.4558 16.5359 23.5008 16.5417 23.5382 16.5659 cv
23.5684 16.5867 23.5937 16.6288 23.641 16.6208 cv
23.7398 16.5988 24.0266 16.4106 24.0035 16.2873 cv
23.9975 16.2508 23.6662 15.931 23.6201 15.9019 cv
f
28.2053 20.7484 mo
28.2053 20.5935 28.1756 20.4369 28.1647 20.2883 cv
28.1603 20.2059 28.1536 20.1251 28.1492 20.0411 cv
28.147 20.0119 28.1603 19.8633 28.1323 19.8617 cv
28.1323 19.8458 li
28.0822 19.8458 li
28.0481 20.1688 28.0652 20.519 28.057 20.8616 cv
28.0564 20.9956 27.9965 21.0926 27.9855 21.2071 cv
27.9877 21.2717 27.9894 21.3362 27.9899 21.4027 cv
27.9833 21.464 27.9795 21.5236 27.9724 21.5818 cv
27.8943 21.5948 27.8383 21.5739 27.8213 21.4964 cv
27.7966 21.3865 27.8493 21.2945 27.8471 21.1893 cv
27.8383 21.1184 27.8328 21.0456 27.8229 20.9747 cv
27.8213 20.5852 27.8559 20.1751 27.8526 19.7971 cv
27.8433 19.7293 27.8383 19.6647 27.8306 19.6002 cv
27.8213 19.5664 27.8125 19.534 27.8043 19.5016 cv
27.7878 19.5016 27.7729 19.5016 27.7548 19.5002 cv
27.7548 19.5161 li
27.7394 19.5161 li
27.7301 19.7955 27.6988 20.0443 27.6839 20.3188 cv
27.6724 20.3691 27.6631 20.4174 27.6515 20.4674 cv
27.6021 20.4674 li
27.5153 20.2509 27.5444 19.9669 27.5405 19.7117 cv
27.5383 19.576 27.5537 19.4353 27.5109 19.3192 cv
27.4625 19.4079 27.4658 19.5002 27.4559 19.6114 cv
27.4438 19.7438 27.4362 19.9023 27.4433 20.0394 cv
27.4527 20.1864 27.4801 20.3462 27.4669 20.4998 cv
27.3862 21.4398 27.4285 22.3603 27.4241 23.3165 cv
27.4175 23.5085 27.4131 23.6992 27.4104 23.8901 cv
27.3977 24.0527 27.3702 24.2258 27.3691 24.3989 cv
27.368 24.6362 27.3845 24.8878 27.3796 25.1367 cv
27.3746 25.3691 27.3482 25.6306 27.3625 25.8734 cv
27.3636 25.9042 27.3702 25.9893 27.4087 25.9893 cv
27.4087 26.0042 li
27.4257 26.0042 li
27.4257 25.9893 li
27.4411 25.9893 li
27.4834 25.8525 27.4708 25.6877 27.4774 25.5306 cv
27.4856 25.2724 27.5185 25.0108 27.5109 24.7428 cv
27.5081 24.5747 27.4724 24.3659 27.529 24.2066 cv
27.5394 24.1802 27.5598 24.1709 27.59 24.1802 cv
27.6537 24.1967 27.6691 24.2934 27.6768 24.3516 cv
27.7086 24.5521 27.6724 24.7472 27.6614 24.957 cv
27.6597 25.1218 27.6592 25.2855 27.657 25.4504 cv
27.6565 25.6273 27.646 25.8195 27.6636 25.9893 cv
27.6746 26.0844 27.6537 26.1767 27.6812 26.2657 cv
27.6988 26.3157 27.7076 26.4316 27.7823 26.4316 cv
27.7998 26.1624 27.8119 25.8569 27.8119 25.5811 cv
27.8043 25.4504 27.7988 25.3191 27.791 25.1883 cv
27.8037 25.0559 27.8163 24.9252 27.8284 24.7944 cv
27.8433 24.707 27.8559 24.6214 27.8701 24.5307 cv
27.8701 24.4098 27.8328 24.2934 27.8174 24.1857 cv
27.7932 24.0093 27.7971 23.822 27.7988 23.6313 cv
27.7998 23.5297 27.7998 23.4278 27.8273 23.3391 cv
27.835 23.3083 27.8828 23.2808 27.8828 23.255 cv
27.8977 23.255 li
27.9559 23.3069 27.9921 23.3585 28.0048 23.436 cv
28.0328 23.6363 28.0191 23.8868 28.0048 24.0901 cv
27.9998 24.1615 27.9768 24.2225 27.9773 24.3016 cv
27.9795 24.4845 28.0251 24.6746 28.0306 24.862 cv
28.0273 24.9361 28.0229 25.0142 28.0191 25.09 cv
28.0191 25.4207 28.0163 25.7196 28.0152 26.0569 cv
28.0119 26.2964 28.0339 26.5547 28.0592 26.781 cv
28.0548 26.8244 28.0481 26.8678 28.0411 26.9101 cv
28.1081 26.9101 li
28.1734 26.7678 28.1536 26.5931 28.1603 26.419 cv
28.1679 26.2349 28.1959 26.0201 28.1734 25.8294 cv
28.1536 25.7037 28.1371 25.5779 28.1174 25.4504 cv
28.1218 25.3191 28.1635 25.1977 28.1679 25.0576 cv
28.1718 24.8526 28.1361 24.6681 28.1371 24.4681 cv
28.1482 24.2565 28.163 24.0417 28.1734 23.8297 cv
28.1734 23.6671 28.1751 23.5022 28.1734 23.3374 cv
28.1657 23.2729 28.1581 23.2067 28.1476 23.1421 cv
28.147 23.0371 28.1756 22.9531 28.1789 22.8465 cv
28.1751 22.6768 28.1701 22.5073 28.1657 22.3378 cv
28.1679 22.0809 28.1844 21.8208 28.1855 21.551 cv
28.1888 21.275 28.2086 21.0135 28.2053 20.7484 cv
27.6251 23.2712 mo
27.6174 23.2874 27.5219 23.4248 27.5219 23.3341 cv
27.4988 23.2857 27.5065 23.21 27.5065 23.155 cv
27.4988 23.0047 27.5021 22.8353 27.4988 22.6801 cv
27.4977 22.4702 27.4977 22.2634 27.4949 22.0551 cv
27.4977 21.887 27.4807 21.7126 27.5471 21.5785 cv
27.596 21.6044 27.635 21.6464 27.6504 21.6997 cv
27.6988 21.8807 27.6597 22.0859 27.6592 22.2862 cv
27.657 22.5573 27.7262 23.0323 27.6251 23.2712 cv
27.6658 20.8761 mo
27.6658 20.8923 li
27.5383 20.8679 27.5153 20.7662 27.5867 20.663 cv
27.6537 20.6968 27.7306 20.8761 27.6658 20.8761 cv
27.9158 22.8932 mo
27.885 22.8932 li
27.8328 22.7641 27.8526 22.6397 27.8537 22.4831 cv
27.8548 22.2878 27.8119 22.0906 27.9064 21.9274 cv
27.957 21.9373 27.9965 21.9518 28.0207 22.0018 cv
28.0679 22.1117 28.0602 22.8949 27.9158 22.8932 cv
f
25.788 31.6503 mo
25.8341 31.6327 25.9001 31.647 25.9495 31.6503 cv
26.0868 31.6519 26.2242 31.6536 26.3588 31.6536 cv
26.3923 31.6453 26.4253 31.6426 26.4582 31.6371 cv
26.3187 31.4322 26.0874 31.2482 25.91 31.0707 cv
25.4819 30.6344 25.0331 30.2191 24.6106 29.7818 cv
24.5178 29.6928 24.4249 29.6071 24.331 29.5214 cv
24.1837 29.3681 24.0365 29.2148 23.8871 29.0632 cv
23.7981 28.9709 23.7003 28.8577 23.5904 28.8028 cv
23.5898 28.8127 23.5898 28.8259 23.5898 28.8352 cv
23.5195 28.8594 23.4695 28.9176 23.4146 28.9709 cv
23.2443 29.1456 23.0751 29.3197 22.9036 29.4939 cv
22.407 29.9834 21.9125 30.4619 21.4384 30.9592 cv
21.3631 31.0383 20.8055 31.5778 20.8055 31.6211 cv
21.1797 31.6602 21.5912 31.6371 21.9839 31.6453 cv
22.1208 31.6536 22.2554 31.6602 22.3921 31.6668 cv
22.4746 31.6761 22.5586 31.6876 22.6378 31.6986 cv
22.6509 31.7085 22.6553 31.7085 22.6553 31.7294 cv
22.5839 31.8195 21.929 32.6112 21.9125 32.6112 cv
21.9125 32.6436 li
22.3696 32.6469 22.8289 32.6661 23.2904 32.6694 cv
23.3058 32.6634 23.3223 32.6579 23.3393 32.6535 cv
23.3393 32.6359 li
23.2761 32.5403 23.2124 32.4436 23.1509 32.3464 cv
23.0333 32.1898 22.8976 32.0299 22.8125 31.8591 cv
22.7926 31.8184 22.7619 31.7645 22.7856 31.7217 cv
22.8718 31.5327 23.6212 31.6371 23.836 31.6371 cv
23.9365 31.5937 24.198 31.6536 24.3112 31.6569 cv
24.5249 31.6634 24.765 31.6052 24.9617 31.6745 cv
25.0089 31.6888 25.0452 31.7261 25.0507 31.7778 cv
25.0715 31.9294 24.7628 32.348 24.6848 32.4953 cv
24.6617 32.5387 24.6178 32.587 24.6178 32.6419 cv
24.6343 32.6419 li
24.6331 32.6485 24.6331 32.6535 24.6331 32.6601 cv
24.8842 32.6612 25.1369 32.6612 25.3875 32.6634 cv
25.5298 32.6612 25.6715 32.6601 25.8132 32.6579 cv
25.8341 32.6535 25.8621 32.6502 25.872 32.6271 cv
25.8989 32.5293 25.4297 32.0107 25.3518 31.9008 cv
25.3122 31.8459 25.2259 31.7645 25.2287 31.6942 cv
25.3792 31.6245 25.6006 31.647 25.788 31.6503 cv
f
24.198 32.637 mo
24.298 32.5952 24.687 32.0233 24.6881 31.9217 cv
24.6057 31.9217 24.5222 31.92 24.442 31.92 cv
24.442 31.936 li
24.4046 31.9524 24.3639 31.9783 24.3387 32.0118 cv
24.2859 32.075 23.9288 32.5919 23.9288 32.637 cv
23.9442 32.637 li
23.9442 32.6546 li
24.0299 32.6535 24.1261 32.6694 24.198 32.637 cv
f
21.818 31.9052 mo
21.695 32.0266 21.0951 32.4596 21.0951 32.6062 cv
21.1994 32.6051 21.339 32.6271 21.4313 32.5903 cv
21.5488 32.5403 22.0653 32.0266 22.0653 31.9074 cv
21.9829 31.9052 21.8994 31.9052 21.818 31.9052 cv
f
27.0604 32.6084 mo
27.0516 32.314 27.084 31.9766 26.8175 31.8343 cv
26.7758 32.0475 26.7846 32.2881 26.7823 32.5238 cv
26.7796 32.87 26.7736 33.2122 26.7714 33.5413 cv
26.7714 33.5754 26.7703 33.721 26.7428 33.721 cv
26.7428 33.7259 26.7428 33.7303 26.7401 33.7358 cv
26.2384 33.7336 25.7034 33.7094 25.1859 33.7226 cv
24.9584 33.7303 24.7155 33.7369 24.4947 33.7358 cv
24.0629 33.7336 23.6113 33.7028 23.1871 33.7017 cv
22.8674 33.6995 22.5773 33.7451 22.2499 33.7435 cv
22.0411 33.7418 20.7781 33.6435 20.7116 33.7578 cv
20.6956 33.7819 20.7181 33.8303 20.7292 33.8484 cv
20.8456 34.0566 21.0401 33.9984 21.283 34.0006 cv
21.3324 33.9951 21.3807 33.9907 21.4291 33.9858 cv
21.5604 33.9858 li
21.6928 33.9907 21.8318 33.9951 21.9554 34.0017 cv
22.162 34.005 22.3696 34.005 22.5773 34.0099 cv
22.6366 33.9841 22.7185 33.9918 22.7905 33.9918 cv
22.8833 33.9457 23.1597 33.9951 23.2838 33.9951 cv
23.3223 33.9742 23.3816 33.9907 23.43 33.9907 cv
23.6503 33.9825 23.8651 33.9984 24.086 33.9984 cv
24.214 33.9467 24.3958 34.0066 24.5276 34.0165 cv
24.8271 34.0357 25.1128 34.039 25.4122 34.039 cv
25.4979 34.0066 25.6265 34.0248 25.7242 34.0259 cv
25.8231 33.9874 25.9847 34.0099 26.1011 34.0116 cv
26.3692 34.0116 26.6121 33.9984 26.8713 33.9984 cv
26.9016 33.9984 27.0032 33.9874 27.0032 34.0165 cv
27.0197 34.0165 li
27.0197 33.9841 li
27.0785 33.8424 27.0329 33.666 27.0417 33.5072 cv
27.0516 33.404 27.0604 33.3007 27.0719 33.1974 cv
27.0785 33.0007 27.0659 32.7908 27.0604 32.6084 cv
f
27.0049 36.7525 mo
27.0049 36.6525 26.9845 36.5619 26.9961 36.4745 cv
27.001 36.4372 26.9978 36.263 26.9736 36.263 cv
26.9076 36.2273 26.8285 36.2273 26.7434 36.2273 cv
26.7175 36.2548 26.6967 36.2723 26.6879 36.313 cv
26.6643 36.4245 26.6835 36.5646 26.6785 36.6833 cv
26.6648 37.1008 26.6879 37.5392 26.6846 37.9491 cv
26.7637 37.9381 26.911 37.9199 26.9604 37.8524 cv
27.0417 37.7359 26.9961 37.3288 26.9862 37.1788 cv
26.9791 37.0305 27.0032 36.9008 27.0049 36.7525 cv
f
31.8104 37.0173 mo
31.5137 36.7168 31.2006 36.4229 30.9045 36.1223 cv
30.5161 35.7301 30.1485 35.3065 29.7513 34.9175 cv
29.6029 34.7725 29.442 34.645 29.2992 34.5011 cv
29.2442 34.4313 29.1931 34.3654 29.1404 34.2973 cv
28.5635 33.6984 27.9306 33.1474 27.3707 32.5436 cv
27.2988 32.7677 27.3554 33.0534 27.346 33.2963 cv
27.3395 33.4556 27.3329 33.6144 27.3262 33.7726 cv
27.3345 33.8742 27.3526 34.1314 27.3071 34.2115 cv
27.2351 34.3346 26.3588 34.333 26.1649 34.3313 cv
26.0814 34.3313 25.8621 34.3214 25.8171 34.3764 cv
25.7984 34.3972 25.8067 34.4395 25.8089 34.467 cv
25.8407 34.7186 25.9841 34.9483 26.0737 35.1779 cv
26.1308 35.3329 26.1923 35.7218 26.3044 35.8301 cv
26.3692 35.8899 26.6549 35.8658 26.7637 35.8658 cv
26.8401 35.8301 27.0532 35.8515 27.1549 35.8526 cv
27.3345 35.7943 27.2988 36.1438 27.3032 36.2471 cv
27.3065 36.3454 27.3109 36.4437 27.3158 36.5426 cv
27.3109 36.7382 27.2521 37.781 27.3587 37.865 cv
27.4219 37.915 27.6933 37.8875 27.7998 37.8875 cv
27.857 37.859 27.9405 37.8557 28.013 37.8557 cv
28.1015 37.8134 28.2317 37.8249 28.3427 37.8249 cv
28.3811 37.82 28.419 37.8167 28.4569 37.8106 cv
28.5503 37.7765 28.6899 37.7958 28.7998 37.7958 cv
28.8349 37.7765 29.031 37.7491 29.031 37.715 cv
29.0953 37.731 29.1514 37.7491 29.2283 37.7491 cv
29.2772 37.7282 29.3475 37.7326 29.4085 37.7326 cv
29.5304 37.6617 29.7238 37.6875 29.8837 37.6875 cv
29.921 37.681 29.9579 37.6744 29.9974 37.67 cv
30.0727 37.6244 30.1947 37.6403 30.293 37.6403 cv
30.3314 37.6359 30.3699 37.6293 30.4073 37.6244 cv
30.4446 37.6195 30.4842 37.615 30.5226 37.6096 cv
30.5787 37.5777 30.655 37.5821 30.7193 37.5711 cv
30.8061 37.5568 30.9045 37.5403 30.9957 37.5194 cv
31.1314 37.4936 31.2583 37.4326 31.4099 37.4354 cv
31.4742 37.3953 31.639 37.3546 31.7203 37.3546 cv
31.7632 37.3288 31.8291 37.3206 31.884 37.3206 cv
31.9132 37.2986 32.0104 37.2689 31.9884 37.2107 cv
31.9643 37.1371 31.8665 37.0733 31.8104 37.0173 cv
f
35.1474 21.0006 mo
35.1397 20.9341 35.1342 20.8679 35.1288 20.8017 cv
35.1298 20.7484 35.1342 20.6951 35.1365 20.6388 cv
35.1288 20.5256 35.1189 20.4111 35.1117 20.2946 cv
35.1216 20.0976 35.1298 19.9023 35.1397 19.7051 cv
35.1337 19.5144 35.1244 19.3224 35.1155 19.1335 cv
35.1117 18.7555 35.1298 18.3629 35.1079 17.9995 cv
35.0991 17.8462 35.1578 17.555 35.0771 17.4435 cv
34.9881 17.5877 34.8189 17.6943 34.7024 17.8251 cv
34.2552 18.3226 33.7597 18.7813 33.2729 19.2464 cv
32.9576 19.576 32.6417 19.9037 32.3258 20.2317 cv
32.1643 20.3866 32.0027 20.5418 31.839 20.6968 cv
31.6951 20.8421 31.5539 20.989 31.4099 21.136 cv
31.3017 21.2395 31.1786 21.3266 31.0731 21.4365 cv
30.983 21.5431 30.8907 21.6513 30.8012 21.7563 cv
30.7001 21.8582 30.5984 21.9565 30.4974 22.0584 cv
30.393 22.1633 30.293 22.2683 30.1908 22.3732 cv
30.1463 22.412 30.1018 22.4493 30.0578 22.4864 cv
29.9381 22.6042 29.8106 22.7221 29.6941 22.8432 cv
29.5612 22.9757 29.4607 23.1242 29.3206 23.2583 cv
29.1931 23.3794 28.936 23.5506 28.8711 23.7058 cv
28.8711 23.7217 28.8689 23.7349 28.8657 23.7508 cv
28.8689 23.8041 29.6854 24.623 29.7964 24.7345 cv
30.4281 25.3499 31.0644 25.9767 31.6907 26.5931 cv
31.739 26.6503 31.7873 26.7052 31.8335 26.7612 cv
31.9269 26.8502 32.0192 26.9376 32.1126 27.0261 cv
32.212 27.125 32.3005 27.248 32.4037 27.3546 cv
33.0509 28.0084 33.714 28.6819 34.3662 29.3423 cv
34.4552 29.4324 34.9777 30.0015 35.0414 30.0015 cv
35.1375 30.0015 35.0749 29.4137 35.076 29.3082 cv
35.0804 29.2005 35.0875 29.0917 35.0914 28.9808 cv
35.0881 28.8995 35.0837 28.8171 35.0804 28.7352 cv
35.0914 28.6578 35.1024 28.583 35.1117 28.5061 cv
35.1123 28.3731 35.0771 28.2506 35.0848 28.1117 cv
35.0942 28.0583 35.1029 28.0051 35.1117 27.9485 cv
35.1342 27.7194 35.1419 27.4238 35.1145 27.1958 cv
35.0947 27.0502 35.0848 26.892 35.0958 26.7337 cv
35.1024 26.6629 35.1232 26.5871 35.1232 26.5063 cv
35.1155 26.4031 35.1062 26.2976 35.1024 26.1932 cv
35.1057 26.0509 35.12 25.902 35.1167 25.7537 cv
35.1117 25.7037 35.1057 25.6536 35.098 25.6031 cv
35.109 25.4679 35.12 25.3339 35.1298 25.1949 cv
35.1155 24.9719 35.1024 24.7472 35.0848 24.523 cv
35.0826 24.3384 35.1244 24.156 35.1298 23.9818 cv
35.132 23.8626 35.1024 23.7316 35.0964 23.6055 cv
35.1024 23.5393 35.1035 23.4748 35.1079 23.4102 cv
35.1117 23.213 35.1123 23.016 35.1145 22.819 cv
35.1244 22.7317 35.1342 22.6446 35.1441 22.5573 cv
35.1298 22.3974 35.1155 22.2408 35.1024 22.0826 cv
35.0958 21.7691 35.098 21.4656 35.1244 21.1635 cv
35.1337 21.1088 35.1387 21.0552 35.1474 21.0006 cv
f
26.7335 12.8786 mo
26.6813 12.9344 26.6659 12.9997 26.6319 13.0635 cv
26.5923 13.1176 26.5478 13.1733 26.5077 13.2291 cv
26.4275 13.3245 26.3105 13.3728 26.2346 13.4632 cv
26.1681 13.5409 26.1572 13.6329 26.0703 13.6942 cv
25.9033 13.8186 25.788 14.001 25.6759 14.1721 cv
25.6506 14.2079 25.6232 14.2433 25.5979 14.282 cv
25.588 14.2999 25.555 14.3419 25.588 14.3419 cv
25.6132 14.4024 25.6638 14.4518 25.7039 14.5051 cv
25.8017 14.6263 25.8923 14.7732 25.9088 14.9347 cv
25.9253 15.0605 25.9407 15.185 25.9561 15.3124 cv
25.9517 15.458 25.8891 15.5676 25.8572 15.6921 cv
25.8308 15.7824 25.8363 15.8778 25.8017 15.9643 cv
25.7583 16.0263 25.7143 16.0892 25.6715 16.1508 cv
25.6369 16.222 25.6006 16.2936 25.5638 16.364 cv
25.4342 16.5447 25.2314 16.6433 25.0573 16.7582 cv
24.9782 16.8065 24.9122 16.876 24.8309 16.918 cv
24.7034 16.9809 24.5518 17.0026 24.4337 17.0826 cv
24.3178 17.1586 24.2618 17.2781 24.1673 17.3718 cv
24.1189 17.4185 24.0431 17.4435 24.0113 17.5034 cv
23.9579 17.6007 23.998 17.6943 23.9904 17.8075 cv
23.9772 17.8687 23.9629 17.927 23.9491 17.9882 cv
23.9376 18.1047 23.9585 18.2193 23.9574 18.3324 cv
23.9525 18.3808 23.9464 18.4308 23.9409 18.4794 cv
23.9585 18.4794 li
23.9585 18.497 li
23.975 18.497 li
23.975 18.4794 li
24.1101 18.3871 24.2178 18.2418 24.342 18.1272 cv
24.7123 17.7688 25.0765 17.396 25.4462 17.0334 cv
25.6611 16.8235 25.8775 16.6142 26.0945 16.4043 cv
26.1923 16.289 26.2901 16.1733 26.389 16.0588 cv
26.5978 15.8632 26.8043 15.6638 26.9994 15.458 cv
27.0719 15.3707 27.145 15.2836 27.2164 15.1979 cv
27.2823 15.1429 27.346 15.0863 27.4104 15.0314 cv
27.5257 14.9185 27.6438 14.8053 27.7608 14.6933 cv
28.0822 14.3831 28.3663 14.0351 28.6833 13.7145 cv
28.7596 13.6329 28.8525 13.5697 28.9333 13.4882 cv
29.2821 13.1467 29.6315 12.8011 29.9831 12.457 cv
30.1677 12.2795 30.4007 12.1163 30.5578 11.907 cv
30.5622 11.8966 30.566 11.8886 30.5677 11.8804 cv
30.5908 11.8804 30.5847 11.8837 30.5847 11.8636 cv
30.5677 11.8636 li
30.5677 11.8466 li
30.4325 11.8903 30.2326 11.8903 30.0777 11.8724 cv
30.0337 11.8636 29.9886 11.8587 29.9452 11.8499 cv
29.8161 11.8466 29.7007 11.8949 29.5678 11.8933 cv
29.4172 11.8933 29.2667 11.8595 29.1255 11.8425 cv
29.0003 11.8408 28.8733 11.8394 28.7503 11.8353 cv
28.6772 11.8683 28.6031 11.862 28.5185 11.8724 cv
28.3504 11.8903 28.1652 11.8966 27.9789 11.8966 cv
27.8883 11.8966 27.7664 11.879 27.6943 11.9161 cv
27.6565 11.9523 27.6174 11.9872 27.579 12.0219 cv
27.4713 12.1339 27.3796 12.2429 27.2933 12.3715 cv
27.2592 12.4215 27.2268 12.4715 27.1922 12.5232 cv
27.1455 12.5743 27.0856 12.588 27.034 12.6267 cv
26.9911 12.6671 26.9461 12.7108 26.9016 12.7509 cv
26.8439 12.7995 26.7868 12.8237 26.7335 12.8786 cv
f
25.643 13.2291 mo
25.5495 13.3519 25.4155 13.4269 25.3924 13.5893 cv
25.3935 13.6442 25.3935 13.6975 25.3935 13.7508 cv
25.41 13.7508 25.427 13.7508 25.444 13.7524 cv
25.444 13.737 li
25.549 13.6239 25.8171 13.381 25.643 13.2291 cv
f
25.3172 15.8473 mo
25.3419 15.8544 25.3995 15.8907 25.3995 15.8665 cv
25.5034 15.8181 25.566 15.6904 25.566 15.5709 cv
25.5495 15.5709 li
25.4715 15.6429 25.3188 15.7291 25.3172 15.8473 cv
f
25.1782 14.5697 mo
25.1369 14.6147 25.0485 14.6633 25.032 14.7207 cv
25.0166 14.7666 25.0122 15.2965 25.0254 15.3399 cv
25.0425 15.386 25.0672 15.4223 25.1243 15.4232 cv
25.1782 15.4239 25.2166 15.3885 25.2572 15.3586 cv
25.4693 15.2034 25.4133 14.9992 25.3363 14.7941 cv
25.2935 14.6826 25.3001 14.6084 25.1782 14.5697 cv
f
24.7743 16.4672 mo
24.8397 16.5318 25.054 16.3978 25.054 16.3219 cv
25.0644 16.3107 25.0693 16.3057 25.0551 16.3057 cv
25.0089 16.2348 24.9457 16.2291 24.8562 16.2233 cv
24.7968 16.2832 24.6815 16.3769 24.7743 16.4672 cv
f
25.9011 12.7333 mo
25.8682 12.8149 25.7847 12.9368 25.8967 13.0077 cv
25.9352 13.0305 25.9907 13.0497 26.0396 13.0264 cv
26.1187 12.9852 26.1791 12.8495 26.2308 12.7784 cv
26.3379 12.633 26.8043 12.0548 26.978 12.0565 cv
26.978 12.0064 li
26.8461 12.0015 26.7362 11.9839 26.6181 11.9718 cv
26.5659 12.0243 26.5143 12.0743 26.4626 12.1243 cv
26.4016 12.2067 26.3649 12.2954 26.295 12.3699 cv
26.2308 12.4207 26.1676 12.4707 26.1022 12.5201 cv
26.0577 12.5426 26.0143 12.5652 25.9682 12.5863 cv
25.9264 12.6234 25.9204 12.6838 25.9011 12.7333 cv
f
24.8568 13.158 mo
24.8079 13.2 24.5925 13.5343 24.5914 13.5827 cv
24.626 13.5827 li
24.731 13.6192 24.8738 13.578 24.9518 13.5173 cv
25.0419 13.4473 25.0419 13.3291 25.1089 13.247 cv
25.1452 13.2129 25.1814 13.1783 25.2166 13.1434 cv
25.2539 13.1047 25.2913 13.0659 25.3259 13.0239 cv
25.3671 12.994 25.4067 12.9627 25.4462 12.9319 cv
25.4996 12.869 25.5149 12.7937 25.5594 12.7267 cv
25.6232 12.6405 25.688 12.5531 25.7501 12.4691 cv
25.8067 12.3811 25.8605 12.2883 25.9138 12.1996 cv
25.9517 12.1334 26.0604 12.0502 26.0604 11.9694 cv
25.9946 11.9685 25.9297 11.9685 25.8627 11.9685 cv
25.7847 12.0032 25.7039 12.0161 25.6457 12.0913 cv
25.5902 12.163 25.5748 12.2495 25.5067 12.3133 cv
25.4297 12.3878 25.3045 12.4119 25.2507 12.5119 cv
25.21 12.588 25.2106 12.68 25.1825 12.7654 cv
25.1589 12.8316 25.0924 12.8495 25.0594 12.9094 cv
25.032 12.9594 25.0353 13.0151 25.0029 13.0643 cv
24.9672 13.1176 24.9029 13.1192 24.8568 13.158 cv
f
23.9629 13.3519 mo
23.9678 13.381 23.9579 13.5294 23.9859 13.531 cv
23.9859 13.5472 li
24.1716 13.5126 24.3826 13.242 24.4672 13.0838 cv
24.5007 13.0052 24.5337 12.927 24.5672 12.8462 cv
24.6073 12.7745 24.6496 12.7025 24.6903 12.63 cv
24.7804 12.4295 24.8463 12.2213 24.9754 12.041 cv
24.9853 12.026 24.9853 12.0114 25.0101 12.0114 cv
25.0101 11.979 li
24.9232 11.9781 24.8375 11.9781 24.7501 11.9781 cv
24.6128 12.0502 24.1898 11.9856 24.1222 12.0647 cv
24.0541 12.1438 24.0892 12.2229 24.0618 12.3182 cv
24.0371 12.399 23.9607 12.4539 23.9398 12.5331 cv
23.9096 12.6542 23.9805 12.7712 23.9849 12.8915 cv
23.9859 12.9902 23.9376 13.0481 23.931 13.1371 cv
23.9233 13.2195 23.9491 13.2791 23.9629 13.3519 cv
f
23.5536 14.5938 mo
23.5113 14.618 23.3184 14.8149 23.3069 14.8586 cv
23.2849 14.9556 23.4613 15.5031 23.5832 15.4868 cv
23.7085 15.4723 23.8123 15.3731 23.8981 15.2882 cv
23.9805 15.2042 24.0898 15.1372 24.12 15.0218 cv
24.1563 14.8911 23.8299 14.6292 23.7278 14.5955 cv
23.6706 14.5889 23.6135 14.5825 23.5542 14.576 cv
23.5536 14.5825 23.5536 14.5889 23.5536 14.5938 cv
f
23.3492 15.7017 mo
23.3937 15.5121 22.9861 15.2125 22.8454 15.1479 cv
22.7443 15.2471 22.7619 15.2712 22.7185 15.4031 cv
22.6927 15.4498 22.6696 15.4959 22.6449 15.5418 cv
22.6059 15.6953 22.6839 15.8874 22.7926 15.9805 cv
22.8366 16.02 22.8701 16.0676 22.9377 16.0621 cv
23.0245 16.0563 23.1102 15.9602 23.1723 15.9052 cv
23.2322 15.8544 23.3338 15.7824 23.3492 15.7017 cv
f
23.0591 16.5851 mo
23.019 16.5304 22.9992 16.4665 22.9438 16.4222 cv
22.913 16.3985 22.88 16.3978 22.8405 16.3915 cv
22.6361 16.6933 22.9026 16.7582 23.1509 16.8098 cv
23.1706 16.8161 23.2322 16.8323 23.2322 16.8041 cv
23.2459 16.8041 li
23.2185 16.7049 23.1223 16.6645 23.0591 16.5851 cv
f
22.2675 15.2382 mo
22.3257 15.2287 22.3938 15.1704 22.4356 15.1267 cv
22.6487 14.9102 22.4817 14.6705 22.2768 14.5373 cv
22.2768 14.5535 li
22.2312 14.5743 22.1136 14.7182 22.112 14.7182 cv
22.129 14.7828 22.1515 14.8539 22.1532 14.9298 cv
22.1576 15.0314 22.0752 15.2665 22.2675 15.2382 cv
f
22.8009 14.6746 mo
22.9278 14.6875 23.3597 14.3919 23.2674 14.249 cv
23.2344 14.195 23.1514 14.195 23.0965 14.1812 cv
22.9267 14.2725 22.7943 14.3032 22.5916 14.332 cv
22.5564 14.3403 22.5229 14.3482 22.49 14.359 cv
22.49 14.4081 li
22.5878 14.4897 22.6608 14.6568 22.8009 14.6746 cv
f
22.3921 16.4763 mo
22.4696 16.4609 22.7103 16.2895 22.7036 16.1992 cv
22.6943 16.1121 22.407 15.8407 22.3279 15.7923 cv
22.2971 15.7857 22.2669 15.7745 22.2356 15.7679 cv
22.1587 15.9827 22.2136 16.1871 22.2889 16.3769 cv
22.3092 16.4236 22.3279 16.49 22.3921 16.4763 cv
f
22.9619 12.9731 mo
23.0465 13.1192 23.2849 13.7563 23.4926 13.7579 cv
23.4926 13.7733 li
23.5102 13.7733 li
23.5008 13.6159 23.4915 13.4568 23.4833 13.2986 cv
23.4959 13.0465 23.5316 12.7899 23.5355 12.5264 cv
23.5464 12.4685 23.5558 12.4086 23.5657 12.3474 cv
23.5542 12.2932 23.5409 12.24 23.5288 12.1858 cv
23.5256 12.1147 23.5223 12.0427 23.5195 11.9718 cv
23.3959 11.966 23.1327 11.9718 23.0289 11.9353 cv
22.9355 11.9628 22.6966 11.9202 22.6378 11.9839 cv
22.4575 12.1751 22.6696 12.5984 22.7872 12.7632 cv
22.8438 12.8407 22.9146 12.8915 22.9619 12.9731 cv
f
22.5795 13.7096 mo
22.624 13.7266 22.6949 13.7387 22.7421 13.7145 cv
22.7993 13.6846 22.7894 13.5684 22.7883 13.5077 cv
22.7856 13.4228 22.7751 13.342 22.7454 13.2662 cv
22.7026 13.1942 22.6586 13.1209 22.6136 13.0465 cv
22.5476 12.9077 22.4664 12.7745 22.4048 12.6347 cv
22.3131 12.4207 22.234 12.0814 22.0016 11.966 cv
21.9203 11.9273 21.7961 11.9435 21.6994 11.9435 cv
21.6093 11.9977 21.3478 11.9999 21.3126 12.0985 cv
21.3126 12.1034 21.3115 12.1067 21.3115 12.1097 cv
21.3115 12.1147 21.311 12.118 21.311 12.1227 cv
21.311 12.1356 li
21.3181 12.2125 22.496 13.6749 22.5795 13.7096 cv
f
20.5061 12.1493 mo
20.5841 12.2553 20.7044 12.3303 20.7863 12.4377 cv
20.8599 12.5331 20.8907 12.6542 20.9759 12.7429 cv
20.9786 12.7445 20.9808 12.7479 20.9813 12.7503 cv
21.0643 12.827 21.1797 12.8415 21.2577 12.9206 cv
21.3956 13.0547 21.4813 13.2355 21.5939 13.3857 cv
21.6521 13.464 21.7312 13.4906 21.7983 13.5576 cv
21.9054 13.6659 22.0115 13.7733 22.1147 13.8815 cv
22.179 13.9299 22.2889 13.9639 22.3784 13.9639 cv
22.385 13.9431 22.3834 13.9148 22.4081 13.9156 cv
22.3526 13.7799 22.2526 13.6483 22.1428 13.5439 cv
22.0906 13.4989 22.0378 13.4536 21.9862 13.406 cv
21.9592 13.3678 21.9334 13.3275 21.907 13.2879 cv
21.8356 13.1967 21.7631 13.1047 21.6911 13.0135 cv
21.6098 12.927 21.5258 12.8399 21.4445 12.7525 cv
21.3807 12.6784 21.3522 12.5951 21.2983 12.5201 cv
21.194 12.374 21.0824 12.2246 20.9533 12.0985 cv
20.8627 12.0105 20.7901 11.974 20.6687 11.9548 cv
20.6072 11.9839 20.4775 12.0219 20.4918 12.1147 cv
20.4918 12.118 20.494 12.1213 20.4946 12.1276 cv
20.5001 12.1334 20.5033 12.1389 20.5061 12.1493 cv
f
17.3988 12.4685 mo
17.7157 12.7624 17.9998 13.0693 18.3052 13.3777 cv
18.4481 13.5302 18.5887 13.6846 18.7299 13.8379 cv
19.2612 14.359 19.7935 14.8798 20.3303 15.4039 cv
20.394 15.4805 20.4622 15.5555 20.5248 15.6324 cv
20.6819 15.7939 20.8401 15.9522 20.9934 16.1137 cv
21.283 16.4156 21.5983 16.6991 21.8906 17.0043 cv
22.0389 17.1617 22.1861 17.3202 22.3339 17.4759 cv
22.5383 17.6668 22.7421 17.8575 22.9443 18.0465 cv
23.0443 18.1451 23.3184 18.4761 23.4519 18.4761 cv
23.4767 18.3209 23.4179 18.1144 23.3838 17.969 cv
23.3695 17.9075 23.3849 17.8366 23.3816 17.7718 cv
23.3794 17.7026 23.3564 17.6235 23.33 17.5652 cv
23.2855 17.4801 23.1915 17.4298 23.1327 17.3589 cv
23.069 17.2685 23.0059 17.1812 22.9399 17.0924 cv
22.8421 16.9988 22.7059 16.9502 22.5927 16.879 cv
22.5087 16.8227 22.4257 16.7678 22.3389 16.7095 cv
22.2795 16.6821 22.2185 16.6546 22.1576 16.6255 cv
22.0933 16.5755 22.0664 16.4989 22.0021 16.4527 cv
21.94 16.4052 21.8527 16.3802 21.8027 16.3115 cv
21.7334 16.2186 21.7115 16.1137 21.6664 16.0151 cv
21.6279 15.9247 21.5912 15.8341 21.5532 15.7446 cv
21.5302 15.6583 21.5104 15.5709 21.4884 15.4822 cv
21.4741 15.3465 21.506 15.2262 21.5291 15.1059 cv
21.5433 15.0297 21.5532 14.9556 21.5637 14.8798 cv
21.6115 14.6916 21.7159 14.5468 21.851 14.4048 cv
21.8862 14.3694 21.9626 14.2579 22.0158 14.2579 cv
21.9626 14.1513 21.8763 14.0472 21.7818 13.9673 cv
21.7312 13.9285 21.6823 13.8903 21.6323 13.8524 cv
21.5483 13.7637 21.4939 13.6618 21.4071 13.5697 cv
21.2593 13.4156 21.1005 13.3082 20.9533 13.1555 cv
20.8347 13.0335 20.7237 12.8874 20.6072 12.7632 cv
20.433 12.588 20.2594 12.4166 20.082 12.2416 cv
19.9721 12.13 19.8452 11.966 19.7007 11.9161 cv
19.5776 11.8757 19.4304 11.9589 19.3062 11.9589 cv
19.2485 11.9474 19.187 11.937 19.1271 11.9273 cv
18.7184 11.9273 li
18.6206 11.9224 18.5217 11.9161 18.4223 11.9095 cv
18.2953 11.907 18.1635 11.9144 18.0459 11.8911 cv
17.8998 11.9298 17.6998 11.907 17.5388 11.9048 cv
17.3064 11.9032 17.0757 11.9177 16.8504 11.9161 cv
16.9054 12.1213 17.2411 12.3199 17.3988 12.4685 cv
f
21.7807 15.222 mo
21.7769 15.324 21.7423 15.633 21.9026 15.5934 cv
22.1378 15.5347 21.8994 15.2641 21.7807 15.222 cv
f
15.4959 26.6986 mo
15.6646 26.5239 15.8335 26.3492 16.0063 26.1767 cv
16.2645 25.9218 16.5263 25.6696 16.7834 25.4141 cv
16.9702 25.2251 17.1548 25.046 17.3394 24.857 cv
17.4152 24.7801 17.4636 24.6845 17.5416 24.6131 cv
17.7679 24.4115 18.114 24.1252 18.2613 23.8736 cv
18.2854 23.8396 18.3069 23.8041 18.3311 23.7704 cv
18.4052 23.5909 17.146 22.4073 16.9471 22.2183 cv
16.6346 21.8936 16.3203 21.5689 16.003 21.2442 cv
15.6734 20.9311 15.3278 20.6402 15.0001 20.3287 cv
14.9369 20.2671 14.9064 20.1993 14.8482 20.138 cv
14.7117 19.9974 14.563 19.8748 14.4235 19.7422 cv
14.3474 19.6713 14.2878 19.5935 14.2207 19.5161 cv
14.0302 19.2966 13.8178 19.0914 13.6038 18.8912 cv
13.5068 18.7879 13.4098 18.6827 13.3107 18.5778 cv
13.0297 18.3033 12.7462 18.027 12.4635 17.7526 cv
12.3358 17.6265 12.2018 17.4413 12.0339 17.3806 cv
12.0331 17.5765 12.0388 17.7768 12.041 17.9707 cv
12.0339 18.0416 12.0243 18.1127 12.0152 18.1822 cv
12.0073 18.3064 12.0323 18.4228 12.0306 18.5456 cv
12.0226 18.6489 12.0161 18.7522 12.0098 18.8557 cv
12.013 18.9428 12.0185 19.0302 12.0226 19.1189 cv
12.0267 19.521 12.0122 19.9441 12.0161 20.3641 cv
12.0251 20.4674 12.0331 20.5693 12.041 20.6742 cv
12.0267 20.8712 12.0152 21.0668 12.0031 21.2637 cv
11.9927 21.6755 12.0114 22.0826 12.0161 22.4944 cv
12.0073 22.685 11.9968 22.8756 11.9878 23.0676 cv
11.9773 23.3165 12.0048 23.5619 11.9943 23.822 cv
11.9847 23.9335 11.9748 24.0494 11.9636 24.1648 cv
11.9694 24.2593 11.974 24.3516 11.9765 24.4439 cv
11.9765 24.7554 11.9748 25.0658 11.971 25.3773 cv
11.9773 25.4872 11.9806 25.597 11.9847 25.7053 cv
11.9847 25.891 11.971 26.0718 11.9677 26.2481 cv
11.971 26.3656 11.9765 26.4865 11.9806 26.6063 cv
11.9831 26.892 11.9677 27.1898 11.9619 27.459 cv
11.9653 27.5579 11.9702 27.6562 11.974 27.7545 cv
11.9765 28.0391 11.971 28.3248 11.971 28.6253 cv
11.9619 28.9841 11.9548 29.3439 11.949 29.7038 cv
11.949 29.8235 11.9523 29.9444 11.9532 30.0631 cv
11.9564 30.0883 11.9943 30.1807 11.9943 30.1483 cv
12.0114 30.1483 li
12.0968 30.0158 12.2625 29.8928 12.3762 29.7752 cv
12.7212 29.4379 13.0668 29.1 13.4123 28.7621 cv
13.6459 28.5396 13.8403 28.2781 14.0801 28.0534 cv
14.5089 27.6578 14.9369 27.2447 15.3649 26.8469 cv
15.4086 26.7969 15.4514 26.747 15.4959 26.6986 cv
f
21.4588 35.512 mo
21.551 35.2582 21.6499 35.0109 21.7488 34.7643 cv
21.8027 34.6209 21.9026 34.4247 21.9038 34.2665 cv
21.6533 34.2632 21.4143 34.283 21.1824 34.2907 cv
21.05 34.2973 20.7336 34.283 20.6347 34.228 cv
20.5649 34.1874 20.5446 34.1104 20.5061 34.05 cv
20.4363 33.9457 20.3523 33.8451 20.3111 33.7292 cv
20.2688 33.6078 20.2852 33.4622 20.2869 33.3215 cv
20.2886 33.1024 20.2935 32.8919 20.3094 32.6853 cv
20.321 32.5546 20.366 32.1755 20.2951 32.0766 cv
20.1863 32.1882 20.0787 32.2997 19.9704 32.4095 cv
19.6018 32.7974 19.2194 33.16 18.8315 33.5336 cv
18.5536 33.8017 18.303 34.094 18.03 34.3731 cv
17.5888 34.8208 17.1284 35.2405 16.6774 35.6735 cv
16.6054 35.7526 16.5326 35.835 16.4609 35.9158 cv
16.3711 36.0009 16.2832 36.0888 16.1966 36.1745 cv
16.0184 36.3503 15.8285 36.5053 15.6525 36.6811 cv
15.5385 36.7959 15.4248 36.9107 15.3116 37.025 cv
15.1858 37.1382 15.0147 37.2887 14.9273 37.4272 cv
14.9152 37.4481 14.9281 37.4387 14.9031 37.4387 cv
14.9031 37.4711 li
14.921 37.4711 li
15.0501 37.5392 15.2437 37.5403 15.3948 37.5612 cv
15.5918 37.5969 15.7898 37.6326 15.986 37.6678 cv
16.0733 37.6711 16.1604 37.6744 16.2461 37.681 cv
16.3074 37.6942 16.3673 37.7085 16.4268 37.7227 cv
16.5634 37.7458 16.701 37.7683 16.8372 37.7892 cv
16.9993 37.8183 17.1691 37.8167 17.3444 37.8348 cv
17.7196 37.8716 18.0822 37.9491 18.4739 37.9523 cv
18.5321 37.9266 18.636 37.9359 18.703 37.9425 cv
18.8722 37.959 19.0414 37.9749 19.2095 37.9898 cv
19.2975 38.0024 19.3865 38.0117 19.4755 38.0249 cv
19.5892 38.0249 19.7144 37.9974 19.8325 38.015 cv
19.9567 38.0348 20.0787 38.0914 20.2111 38.0914 cv
20.2111 38.0754 li
20.2468 38.0458 20.2715 38.0057 20.283 37.959 cv
20.3226 37.7711 20.2995 37.4953 20.2985 37.3063 cv
20.3007 36.8701 20.3039 36.4328 20.3089 35.9949 cv
20.3094 35.9559 20.3138 35.9141 20.3457 35.8916 cv
20.4303 35.8367 20.9017 35.8669 21.0423 35.8669 cv
21.0753 35.8608 21.1082 35.8592 21.1412 35.8515 cv
21.2049 35.8268 21.2719 35.8608 21.3225 35.8092 cv
21.3895 35.7301 21.4209 35.6054 21.4588 35.512 cv
f
23.0091 38.7633 mo
23.0476 38.7501 23.2058 38.7792 23.2058 38.749 cv
23.2234 38.749 li
23.2256 38.4853 23.2355 38.2381 23.2432 37.9782 cv
23.2476 37.7134 23.2322 37.3662 23.341 37.1624 cv
23.4717 36.914 23.5344 36.7382 23.8563 36.7008 cv
23.8937 36.6943 23.9442 36.6943 23.9491 36.6503 cv
23.9646 36.4712 23.6327 36.4229 23.4992 36.4229 cv
23.4212 36.4503 23.3465 36.458 23.2761 36.4987 cv
22.7905 36.7701 22.8526 37.481 22.8492 38.0073 cv
22.8492 38.0914 22.8492 38.3029 22.7993 38.3529 cv
22.6949 38.4545 21.562 38.4094 21.3236 38.4078 cv
21.3022 38.4078 21.3077 38.4029 21.3077 38.4259 cv
21.2917 38.4259 li
21.2917 38.4435 li
21.3077 38.4435 li
21.4175 38.5111 21.5566 38.5337 21.6785 38.5842 cv
21.8318 38.6485 21.9873 38.7677 22.1587 38.7858 cv
22.3597 38.7874 22.5603 38.7886 22.7636 38.7918 cv
22.8438 38.7874 22.9201 38.7633 23.0091 38.7633 cv
f
24.1991 38.5111 mo
24.1728 38.4534 24.1277 38.393 24.1172 38.3254 cv
24.1167 38.0414 24.114 37.7568 24.109 37.4744 cv
24.1101 37.3563 24.1365 37.2107 24.1024 37.103 cv
24.0892 37.064 24.0524 37.0481 24.0211 37.0316 cv
23.9189 37.0733 23.8101 37.0657 23.7322 37.153 cv
23.6536 37.2349 23.6228 37.3755 23.6025 37.4887 cv
23.5816 37.5794 23.5624 37.6733 23.5409 37.7683 cv
23.5288 37.9326 23.5486 38.1106 23.5508 38.2737 cv
23.5486 38.3512 23.5437 38.4259 23.5399 38.5029 cv
23.5486 38.5809 23.5563 38.6578 23.564 38.7342 cv
23.5563 38.8149 23.5508 38.8973 23.5409 38.9797 cv
23.5344 39.0116 23.5234 39.0457 23.5162 39.0775 cv
23.3267 39.083 23.1344 39.0907 22.9421 39.0962 cv
22.8828 39.1072 22.8218 39.1204 22.7608 39.1325 cv
22.7377 39.1358 22.7119 39.127 22.7119 39.1545 cv
22.696 39.1545 li
22.696 39.1698 li
22.7119 39.1698 li
22.7119 39.1863 li
22.8284 39.2445 23.0278 39.3588 23.1267 39.4467 cv
23.2272 39.5577 23.3311 39.6687 23.43 39.7807 cv
23.4443 39.7807 li
23.5382 39.6082 23.6849 39.4742 23.8277 39.3281 cv
23.8854 39.2588 23.9431 39.1907 23.9992 39.1237 cv
24.1107 39.0281 24.2596 38.9347 24.331 38.7985 cv
24.3375 38.7858 24.3359 38.7874 24.3211 38.7874 cv
24.2804 38.6952 24.2414 38.605 24.1991 38.5111 cv
f
24.504 38.3622 mo
24.5134 38.4628 24.5678 38.6116 24.642 38.6759 cv
24.6573 38.6853 24.6672 38.6952 24.6672 38.6743 cv
24.8156 38.605 24.9683 38.5369 25.1199 38.471 cv
25.1704 38.4469 25.2435 38.3996 25.3067 38.3996 cv
25.3067 38.3655 li
25.1276 38.3611 24.9392 38.3468 24.7518 38.3468 cv
24.6776 38.3688 24.587 38.3622 24.504 38.3622 cv
f
.813937 20.2105 mo
.460131 20.1009 .373044 19.8586 .477965 19.3933 cv
.590312 18.8912 li
3.231 19.4823 li
3.70812 19.5889 3.74767 19.7488 3.69277 19.9974 cv
3.79628 20.0201 li
4.06907 18.7942 li
3.96663 18.7717 li
3.90041 19.0673 3.76939 19.1205 3.35212 19.0269 cv
.691972 18.4324 li
.80983 17.9075 li
.933429 17.3573 1.16527 17.2878 1.46878 17.2878 cv
1.48498 17.2208 li
.691972 17.0422 li
.668623 17.1521 li
.733151 17.2812 .739508 17.429 .671098 17.7284 cv
.267279 19.5436 li
.234033 19.6875 .196957 19.7941 .161514 19.8683 cv
.11949 19.9457 .0766212 19.9957 .023345 20.0347 cv
0 20.1364 li
.792784 20.3125 li
.813937 20.2105 li
cp
f
2.26899 14.9944 mo
4.25641 15.9643 li
4.67643 16.17 4.70557 16.3269 4.58608 16.5722 cv
4.68026 16.6175 li
5.24177 15.4668 li
5.1481 15.4207 li
5.01488 15.6929 4.84757 15.7275 4.46164 15.5402 cv
3.53783 15.0905 li
4.38581 13.3536 li
5.30798 13.804 li
5.73346 14.0106 5.76508 14.1571 5.64142 14.4081 cv
5.73594 14.4534 li
6.29301 13.3124 li
6.1977 13.2662 li
6.06612 13.5392 5.89335 13.5651 5.51619 13.381 cv
3.52821 12.4119 li
3.15021 12.2279 3.06532 12.076 3.19854 11.8029 cv
3.10408 11.7578 li
2.54696 12.8981 li
2.64232 12.9448 li
2.77554 12.6717 2.9321 12.6459 3.32135 12.8341 cv
4.22896 13.2775 li
3.38177 15.0155 li
2.47338 14.5705 li
2.06956 14.3727 2.02669 14.2079 2.14865 13.9568 cv
2.0542 13.9107 li
1.49134 15.0622 li
1.58579 15.1092 li
1.72402 14.8257 1.89128 14.8103 2.26899 14.9944 cv
f
8.48948 9.41194 mo
8.42163 9.49352 li
8.64385 9.95202 8.57933 10.0668 8.24639 10.4673 cv
7.85084 10.9437 li
7.72336 11.0939 7.63188 11.1005 7.49867 10.989 cv
6.52321 10.175 li
7.08607 9.50066 li
7.31954 9.2205 7.38497 9.20097 7.66513 9.3383 cv
7.73135 9.25757 li
7.0715 8.70596 li
7.00287 8.78675 li
7.20472 9.02022 7.1789 9.11856 7.02317 9.30455 cv
6.39084 10.0644 li
5.22388 9.09442 li
5.87878 8.30957 li
6.12851 8.00988 6.23174 7.93489 6.58228 8.12144 cv
6.62566 8.06895 li
6.17025 7.68933 li
4.53359 9.65475 li
4.6141 9.72181 li
4.80718 9.48778 4.96459 9.49188 5.30467 9.77289 cv
7.00697 11.1925 li
7.36871 11.4928 7.35583 11.6422 7.17811 11.8579 cv
7.25968 11.924 li
8.89493 9.9586 li
8.48948 9.41194 li
cp
f
13.6329 6.34718 mo
14.043 6.11529 14.2773 5.77054 14.379 5.25853 cv
14.6221 5.69144 li
15.3828 5.26349 li
15.3303 5.1706 li
15.0921 5.30551 14.9314 5.28295 14.7037 4.87835 cv
13.6192 2.95247 li
13.4091 2.57999 13.4327 2.40885 13.6917 2.26432 cv
13.6409 2.17234 li
12.5514 2.786 li
12.6031 2.87635 li
12.8575 2.74893 13.0077 2.82718 13.2096 3.18318 cv
14.257 5.04374 li
14.2304 5.49999 14.0172 5.85296 13.6604 6.05487 cv
13.1379 6.34881 12.6838 6.15816 12.4135 5.6843 cv
11.5331 4.11909 li
11.312 3.72517 11.3612 3.57654 11.6156 3.43291 cv
11.5647 3.34144 li
10.4478 3.96995 li
10.4995 4.06193 li
10.7426 3.92545 10.8961 3.94632 11.1255 4.35588 cv
11.9822 5.87715 li
12.285 6.41036 12.8843 6.76883 13.6329 6.34718 cv
f
19.5925 .408488 mo
19.5677 .307674 li
18.5294 .571636 li
18.5563 .673575 li
18.8552 .598302 19.0051 .679876 19.12 1.13039 cv
19.6353 3.13981 li
19.6232 3.142 li
16.7911 1.01748 li
15.9093 1.24358 li
15.9343 1.34383 li
16.3535 1.27598 16.5093 1.46636 16.607 1.8501 cv
17.1219 3.86008 li
17.2498 4.35751 17.134 4.48336 16.8477 4.55779 cv
16.8735 4.6586 li
17.9173 4.39132 li
17.8899 4.29135 li
17.579 4.36876 17.4086 4.27841 17.3202 3.93091 cv
16.701 1.51964 li
16.7137 1.5166 li
19.9029 3.88258 li
20.0051 3.85676 li
19.2876 1.06254 li
19.1865 .659005 19.2579 .494169 19.5925 .408488 cv
f
22.3158 .726852 mo
22.4257 2.93458 li
22.4487 3.38594 22.3438 3.50295 22.0532 3.51584 cv
22.0576 3.62273 li
23.3311 3.55707 li
23.3267 3.45378 li
23.0289 3.46914 22.9169 3.34307 22.8971 2.91123 cv
22.7872 .703223 li
22.7652 .277745 22.8641 .134062 23.1607 .121179 cv
23.1542 .0145708 li
21.8801 .0774671 li
21.8862 .184074 li
22.1911 .167873 22.2938 .281852 22.3158 .726852 cv
f
28.6168 .568373 mo
28.6317 .457095 li
27.6048 .31977 li
27.5922 .423847 li
27.9119 .468347 27.9405 .666149 27.7905 .951264 cv
26.6824 3.03376 li
26.1264 .649103 li
26.0577 .359319 26.1989 .239827 26.4494 .274426 cv
26.4626 .169505 li
25.1864 0 li
25.1743 .104921 li
25.5034 .160729 25.5682 .33597 25.6764 .788117 cv
26.3824 3.78728 li
26.4807 3.80016 li
27.8856 1.16443 li
28.1284 .709018 28.3526 .532931 28.6168 .568373 cv
f
31.1094 4.76133 mo
30.5281 4.54873 li
30.3435 4.48032 30.3073 4.39458 30.3683 4.23307 cv
30.8039 3.04119 li
31.6291 3.34307 li
31.9714 3.46914 32.0115 3.52247 31.9785 3.83257 cv
32.0774 3.86801 li
32.373 3.06043 li
32.2741 3.02499 li
32.123 3.29305 32.0197 3.30104 31.795 3.21891 cv
30.8644 2.87798 li
31.3841 1.45342 li
32.3433 1.80475 li
32.7092 1.93797 32.8153 2.00914 32.7575 2.4039 cv
32.8224 2.42831 li
33.0257 1.86849 li
30.6237 .990026 li
30.5897 1.08836 li
30.8737 1.19441 30.9231 1.34383 30.7737 1.75643 cv
30.0117 3.83892 li
29.8502 4.27976 29.704 4.32015 29.442 4.22345 cv
29.4057 4.32184 li
31.8066 5.20059 li
32.1862 4.63525 li
32.0868 4.59649 li
31.7302 4.96161 31.5984 4.93961 31.1094 4.76133 cv
f
34.6244 6.61199 mo
34.3816 6.45289 34.359 6.28097 34.598 5.92002 cv
35.1337 5.10855 li
35.3705 5.26512 li
35.9122 5.62281 35.6084 6.42324 35.7177 7.45996 cv
36.3242 7.85883 li
36.3803 7.7709 li
35.9133 7.41079 36.3704 6.31174 36.0539 5.59063 cv
36.5736 5.7464 36.928 5.58736 37.1428 5.26349 cv
37.4027 4.86929 37.3351 4.27594 36.6681 3.83589 cv
35.4529 3.03624 li
35.3946 3.12524 li
35.6331 3.28017 35.6826 3.4175 35.426 3.80596 cv
34.2058 5.66067 li
33.9426 6.05982 33.7849 6.05982 33.558 5.90955 cv
33.5014 5.99827 li
34.5667 6.70099 li
34.6244 6.61199 li
cp
36.1067 3.62903 mo
36.416 3.83426 li
36.8703 4.13445 36.983 4.60696 36.7242 5.00031 cv
36.4984 5.34174 36.0776 5.55327 35.5771 5.22309 cv
35.2156 4.98411 li
36.1067 3.62903 li
cp
f
37.7384 9.03642 mo
37.823 9.12019 37.9098 9.47405 38.1757 9.74544 cv
38.5668 10.1418 39.2053 10.1476 39.603 9.75506 cv
39.7706 9.59107 39.8854 9.38916 39.8898 9.03946 cv
39.8948 8.32166 39.3838 7.55689 39.8503 7.09654 cv
40.0854 6.86577 40.4189 6.91083 40.6776 7.17727 cv
40.9309 7.43245 41.0446 7.83959 40.7095 8.24971 cv
40.7831 8.32498 li
41.3759 7.7426 li
41.3056 7.67149 li
41.2265 7.71515 41.2083 7.71515 41.1682 7.67476 cv
41.0738 7.57782 41.0446 7.35504 40.7798 7.08528 cv
40.3755 6.67517 39.8382 6.65812 39.4492 7.03994 cv
39.2498 7.23555 39.136 7.47037 39.1333 7.77669 cv
39.1278 8.33871 39.5931 9.21718 39.158 9.64682 cv
38.8822 9.91657 38.5075 9.8858 38.207 9.58392 cv
37.9905 9.36086 37.7659 8.82467 38.2307 8.36121 cv
38.1554 8.28707 li
37.4725 8.96036 li
37.5466 9.03479 li
37.6362 8.99192 37.6961 8.99192 37.7384 9.03642 cv
f
40.1233 11.7238 mo
40.0359 11.782 li
40.7639 12.8316 li
40.8501 12.7712 li
40.682 12.5264 40.7271 12.3666 41.0853 12.1196 cv
42.8994 10.8613 li
43.2526 10.6176 43.4229 10.6255 43.5927 10.8695 cv
43.6795 10.8096 li
42.9532 9.76164 li
42.8686 9.82206 li
43.0389 10.0698 42.9983 10.2193 42.6334 10.4736 cv
40.8155 11.7317 li
40.4441 11.9902 40.2887 11.9628 40.1233 11.7238 cv
f
44.9179 13.3082 mo
45.1299 13.775 li
42.6708 14.9039 li
42.2264 15.1075 42.0973 15.0023 41.9912 14.7724 cv
41.8962 14.8149 li
42.4181 15.9577 li
42.5154 15.9148 li
42.3884 15.6388 42.4604 15.5151 42.8488 15.3374 cv
45.3271 14.2029 li
45.5508 14.6933 li
45.7848 15.205 45.643 15.4006 45.4024 15.5847 cv
45.431 15.6476 li
46.1682 15.3094 li
46.1227 15.2091 li
45.9914 15.1462 45.8974 15.0331 45.7689 14.7504 cv
44.9948 13.0627 li
44.9332 12.927 44.8975 12.8204 44.8816 12.7396 cv
44.8668 12.6492 44.8706 12.588 44.8915 12.5232 cv
44.8492 12.4281 li
44.1102 12.7654 li
44.1547 12.8624 li
44.5047 12.7349 44.7184 12.8753 44.9179 13.3082 cv
f
47.1473 19.429 mo
47.044 19.4516 li
47.1055 19.7422 46.8473 19.7842 46.5397 19.6743 cv
45.5496 19.3096 li
46.4572 18.4003 li
46.6386 18.216 46.7808 18.2289 46.8627 18.6102 cv
46.966 18.5877 li
46.6765 17.232 li
46.5726 17.2532 li
46.6188 17.5301 46.5639 17.6493 46.2342 17.9707 cv
45.2393 18.9574 li
44.1498 19.1914 li
43.6548 19.2982 43.5653 19.1527 43.5087 18.8846 cv
43.407 18.9074 li
43.6773 20.1718 li
43.7817 20.1493 li
43.7169 19.8537 43.8317 19.7408 44.2487 19.6518 cv
45.3387 19.4177 li
46.7341 19.9361 li
47.0786 20.0652 47.1726 20.1397 47.2451 20.4012 cv
47.35 20.3787 li
47.1473 19.429 li
cp
f
3.06948 31.7602 mo
4.06356 31.4745 4.61269 30.4532 4.32263 29.4411 cv
4.02238 28.3995 3.03624 27.8336 2.02371 28.1248 cv
1.01168 28.4149 .449667 29.4411 .742771 30.4586 cv
1.03587 31.4756 2.0583 32.0492 3.06948 31.7602 cv
.87132 30.4147 mo
.650733 29.6461 1.17404 28.9357 2.16818 28.6511 cv
3.15488 28.3654 3.96331 28.6863 4.19599 29.4906 cv
4.39627 30.1938 3.95836 30.9366 2.89008 31.2448 cv
2.06162 31.4822 1.11745 31.2707 .87132 30.4147 cv
f
5.41291 32.8776 mo
5.56069 33.138 5.51153 33.2864 5.12363 33.5072 cv
3.20433 34.6027 li
2.82223 34.8208 2.66319 34.7917 2.5154 34.5329 cv
2.42173 34.5846 li
3.05654 35.6927 li
3.14858 35.6411 li
2.99995 35.3829 3.06121 35.2274 3.43758 35.0109 cv
4.34462 34.4928 li
4.80886 35.3054 li
4.93246 35.5196 4.8654 35.701 4.65061 35.8383 cv
4.69894 35.924 li
5.56396 35.4296 li
5.51619 35.3428 li
5.25218 35.4587 5.08655 35.4405 4.95333 35.2087 cv
4.49624 34.4071 li
5.78758 33.671 li
6.23421 34.4555 li
6.42707 34.7901 6.45452 34.8933 6.12271 35.1823 cv
6.16142 35.2548 li
6.70976 34.9384 li
5.50494 32.8243 li
5.41291 32.8776 li
cp
f
9.75252 38.7369 mo
9.98605 38.9314 9.98521 39.0896 9.70667 39.428 cv
8.30051 41.1422 li
8.00358 41.5059 7.85163 41.4938 7.63684 41.318 cv
7.56899 41.4004 li
9.54679 43.02 li
10.0918 42.6101 li
10.0102 42.5442 li
9.5523 42.7705 9.43607 42.7057 9.03394 42.3761 cv
8.55654 41.9838 li
8.40324 41.8575 8.3975 41.7652 8.50737 41.6333 cv
9.31169 40.651 li
9.99156 41.2081 li
10.2758 41.4388 10.2945 41.5059 10.1613 41.7849 cv
10.2412 41.853 li
10.7871 41.1872 li
10.7055 41.1191 li
10.4736 41.3234 10.3737 41.2971 10.1887 41.1454 cv
9.42319 40.5191 li
10.3841 39.3446 li
11.1738 39.9906 li
11.4768 40.2389 11.5518 40.3411 11.367 40.6949 cv
11.4194 40.7367 li
11.7966 40.2763 li
9.81795 38.6567 li
9.75252 38.7369 li
cp
f
15.0372 42.164 mo
13.5472 41.4784 li
13.5027 41.5729 li
13.7725 41.6982 13.812 41.8651 13.6329 42.2552 cv
12.7083 44.2627 li
12.5232 44.6594 12.3649 44.7242 12.1064 44.6044 cv
12.0622 44.7 li
13.5909 45.4043 li
14.8561 45.9889 15.7146 45.4768 16.087 44.6659 cv
16.473 43.8276 16.2687 42.731 15.0372 42.164 cv
15.5888 44.4429 mo
15.1858 45.3208 14.4524 45.6526 13.6554 45.2835 cv
13.3228 45.1319 li
13.0239 44.9923 12.9552 44.8473 13.1863 44.3462 cv
14.2812 41.9674 li
14.8957 42.2497 li
15.9132 42.72 15.9439 43.6726 15.5888 44.4429 cv
f
18.6936 43.6035 mo
18.9909 43.6683 19.0623 43.8056 18.9656 44.2396 cv
18.4898 46.3987 li
18.3931 46.8405 18.2602 46.9262 17.9767 46.8613 cv
17.9531 46.9646 li
19.1996 47.2393 li
19.2216 47.1361 li
18.9304 47.0723 18.8557 46.9207 18.9502 46.4998 cv
19.426 44.3396 li
19.5172 43.9254 19.6491 43.8133 19.9397 43.8759 cv
19.9622 43.7749 li
18.7162 43.5002 li
18.6936 43.6035 li
cp
f
24.7133 44.1012 mo
24.7145 44.2078 li
25.0254 44.2045 25.149 44.321 25.1551 44.7857 cv
25.1782 46.858 li
25.1649 46.858 li
22.9191 44.122 li
22.0093 44.1319 li
22.0115 44.2364 li
22.4301 44.2704 22.5383 44.4923 22.5433 44.8879 cv
22.5663 46.9613 li
22.5718 47.4766 22.4301 47.5701 22.1334 47.5733 cv
22.1345 47.68 li
23.2102 47.6667 li
23.2091 47.5602 li
22.8872 47.5656 22.7454 47.4382 22.7421 47.0778 cv
22.7119 44.589 li
22.7256 44.589 li
25.2616 47.6426 li
25.3655 47.6426 li
25.3342 44.7583 li
25.3298 44.3429 25.4391 44.199 25.7858 44.1946 cv
25.7847 44.0913 li
24.7133 44.1012 li
cp
f
30.0392 44.8791 mo
30.0364 44.8681 li
30.4655 44.5836 30.6116 44.2781 30.5084 43.9034 cv
30.3902 43.4683 29.9144 43.1694 29.0909 43.3947 cv
27.802 43.7485 li
27.8284 43.8518 li
28.1152 43.7715 28.2471 43.8518 28.3663 44.288 cv
28.9514 46.4185 li
29.0673 46.8372 29.0008 46.9899 28.714 47.0679 cv
28.7437 47.1701 li
30.3183 46.7383 li
30.9621 46.557 31.3292 46.1131 31.1863 45.5977 cv
31.0588 45.1395 30.5935 44.8439 30.0392 44.8791 cv
28.6772 43.6507 mo
29.0195 43.5551 li
29.5733 43.4035 29.921 43.6353 30.0397 44.0649 cv
30.1578 44.4946 29.9315 44.8649 29.4299 45.0033 cv
29.0777 45.1011 li
28.6772 43.6507 li
cp
30.1809 46.635 mo
29.8996 46.7108 li
29.6315 46.7855 29.5173 46.6943 29.3898 46.235 cv
29.114 45.2318 li
29.4381 45.1428 li
30.0397 44.9758 30.5149 45.212 30.6523 45.7131 cv
30.7918 46.2152 30.5259 46.5383 30.1809 46.635 cv
f
36.611 43.1266 mo
35.4963 41.2201 li
35.2804 40.8498 35.3024 40.6785 35.5606 40.5301 cv
35.5068 40.44 li
34.4277 41.0697 li
34.4794 41.1597 li
34.7321 41.0257 34.8848 41.1037 35.0903 41.4553 cv
36.1682 43.3013 li
36.1479 43.7584 35.9397 44.1155 35.5875 44.321 cv
35.0672 44.6231 34.6112 44.4396 34.3349 43.9682 cv
33.4306 42.4201 li
33.2015 42.0288 33.252 41.8772 33.5014 41.7333 cv
33.4482 41.641 li
32.3428 42.2871 li
32.3944 42.3772 li
32.6345 42.2376 32.79 42.2552 33.0279 42.6607 cv
33.9069 44.1693 li
34.2146 44.6989 34.8222 45.0473 35.5639 44.6143 cv
35.9704 44.377 36.1968 44.0286 36.2923 43.5145 cv
36.5429 43.943 li
37.2945 43.5034 li
37.2417 43.4112 li
37.0066 43.5485 36.8456 43.5276 36.611 43.1266 cv
f
39.636 39.139 mo
39.8898 38.6611 39.8052 38.2798 39.5283 38.0057 cv
39.1915 37.6744 38.5971 37.6277 38.0339 38.198 cv
37.0154 39.2314 li
37.0879 39.3072 li
37.2879 39.1039 37.4335 39.0808 37.7631 39.4072 cv
39.3448 40.9674 li
39.6865 41.3037 39.6568 41.4553 39.4657 41.6509 cv
39.5393 41.7234 li
40.4359 40.8158 li
40.3601 40.7411 li
40.1568 40.9488 39.9854 40.9367 39.6777 40.6323 cv
38.9844 39.95 li
39.1855 39.7467 li
39.6415 39.2852 40.3666 39.7401 41.4061 39.8324 cv
41.9137 39.3171 li
41.838 39.2423 li
41.3946 39.6324 40.4051 38.9682 39.636 39.139 cv
39.1844 39.5368 mo
38.8773 39.8467 li
37.723 38.7083 li
37.9845 38.4435 li
38.368 38.054 38.8531 38.0381 39.1882 38.3688 cv
39.4788 38.6567 39.6041 39.1105 39.1844 39.5368 cv
f
43.8196 33.8918 mo
43.729 33.8391 li
42.9818 35.0647 li
43.0708 35.1197 li
43.1428 35.0033 li
43.2949 34.7549 43.4784 34.7516 43.8487 34.9757 cv
44.1756 35.1757 li
44.447 35.3395 44.3223 35.6636 44.191 35.8801 cv
43.7526 36.6009 42.7747 36.7294 41.8874 36.1872 cv
41.0545 35.6834 40.7969 34.8791 41.1754 34.2555 cv
41.4292 33.8424 41.983 33.4787 42.6098 33.7501 cv
42.6615 33.666 li
41.7676 33.1199 li
41.7094 33.2172 li
41.7633 33.293 41.7633 33.3512 41.7061 33.4463 cv
41.5654 33.6787 41.321 33.7544 41.06 34.1841 cv
40.6073 34.9307 40.7144 36.113 41.7868 36.7651 cv
42.4846 37.1898 43.5603 37.2349 44.3712 35.9032 cv
44.4542 35.7658 44.7563 35.2098 44.8129 35.0131 cv
43.9971 34.5154 li
43.7339 34.3539 43.6388 34.1907 43.8196 33.8918 cv
f
46.3661 28.8934 mo
44.2432 28.2808 li
43.8388 28.1649 43.729 28.0292 43.813 27.7386 cv
43.713 27.7095 li
43.3592 28.927 li
43.462 28.9599 li
43.5444 28.6676 43.6949 28.6127 44.1124 28.7335 cv
45.0826 29.0126 li
44.5454 30.8685 li
43.5773 30.5894 li
43.1428 30.463 43.0702 30.3081 43.1499 30.04 cv
43.0477 30.0109 li
42.6928 31.2432 li
42.7917 31.2723 li
42.8813 30.9685 43.0422 30.9268 43.4471 31.041 cv
45.5683 31.6552 li
46.0216 31.7843 46.0738 31.9349 46.0001 32.1975 cv
46.1007 32.2271 li
46.4572 30.9949 li
46.3545 30.9652 li
46.2727 31.258 46.1111 31.3207 45.7013 31.2014 cv
44.7135 30.9168 li
45.2486 29.061 li
46.2364 29.3473 li
46.6891 29.4763 46.7451 29.6153 46.6676 29.8834 cv
46.7671 29.9125 li
47.1215 28.6929 li
47.0209 28.6643 li
46.9352 28.9544 46.7709 29.0116 46.3661 28.8934 cv
f
1.22732 24.156 mo
1.22484 24.3291 1.36549 24.4714 1.53584 24.4714 cv
1.71108 24.4714 1.85173 24.334 1.85173 24.1615 cv
1.85173 23.9868 1.71356 23.8478 1.54079 23.8461 cv
1.36796 23.8461 1.22901 23.9835 1.22732 24.156 cv
f
46.2078 24.1659 mo
46.2078 23.9945 46.0693 23.8544 45.8969 23.8527 cv
45.7244 23.8527 45.5837 23.9901 45.5837 24.1626 cv
45.5826 24.3356 45.7211 24.4758 45.8925 24.478 cv
46.065 24.478 46.2073 24.3384 46.2078 24.1659 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 18.0.0%%For: (Marc Wright) ()%%Title: (UoE_Stacked Logo_White.eps)%%CreationDate: 02/12/2014 15:15%%Canvassize: 16383%AI9_DataStream%Gb",Kk@3F5Zg`/@g]JuNUd3]h31ZLE+hauYPHY'].(dg>5L-Zd,Ina0RBR">Eh9U_'3Q5f7[bfd'T$A]I]HXj4_NjU<l6IULLYFX%$7G<r'HN'!G3e<hf3Tt&$&KAGi.O(^j;Fml`=j\T_i<Z-^ba=m-Wg.=WRX)ta;(]/c,pL+dp3DOdX-hK6G4NWjA&Y?KkVl/TgG2n%b4P"Zl>aRAQ9)'T3e^2Z-f"-a.m?V,@Ji2::-S&&Tqj+0H8)GgC)B3(Z:?hYk0<rrR#7f)1sI`D$cgW,OFggPFG`YqiTP"P\9)b]%%l5X]S6Z*p9@,s"07%gp4kI<ZNnCDUXbR(&-lokS'K`L(6j+tlE!]PgK"t:d-A#ESL]Bk9X-1tK2oM;@M$JZh-c.;Ba@4M-^XUt&%)-iB&j%KeGj+'HQ"!+1>.aCsh7.XBJ('M%!6"fF`?2D5QhNc$Ze56LBmduD0rrM@tNh\#aVt/r^hiKl8Xa1M^iDG`1OSVMN8r_@T%UUMm56qh%e+)UpT.[7lsZdaUb+uf@S<ib2DecX.WU%h-08Is9B#:FAf<K]$*-lISq1Pp'%$/"bL?l*Dl7Y'SC,f3B<\k&^81s;g\%/%sBR:Se-r%KY%)8\c=;_Ql/ce=Z'/<HX8BVk$SrC+PVq"+B,M(l`d_oM<j5.H:T]HTe@)NZV;8p;jW%W;'4%HH`ju=h0B$TF66\%@,81t'fP,cjdZ62rW:@AD.WA7n#'Y5C=cYqB':(]8NiV&qXA3s,PTr>XdU5eVQ4`?$=?DjT%nnMXG0Nn5N.ZWE"oWE\C;*@!!*#L%lbpbgHbg@8+P2amb"$-%s4%&"^NE;O!WO(_Q-t'GQdh,O-Ep**Is@k#YpFS1\6K8_=T8P36m.Nk&64s@f)uXn9sfHk(^@-PKC2UQ%oZ=kC@Kils:,p_eG@/35=`3G/=?l%0W5Z7\eK9i9:;u'_37EsmeZKBeq9skOAje'mJd2BkS[9*HK-OGJfLHE,7qiWQllXfFhSuN:%q"RkcaGPsHrOF/]?g8B(DB-CVrL(D(=iPr[A[t\,2N?7&.QJ5*]m?Lu(&rB&&rFh/k;6PJK@"[JEmHechdWe[E`auA/n[T(>.k)3%2-fM"H]gZ<\_0HL;7QBF[O$l`<jS_,9K[kA0['8obYJ8t0:8j+n3bT]<_I7\jJV6r&/@sX^['dN55_>CA173TJ*b'+5G@:bQjY!i%miJEH("GGX`RpEj,I;q-K+S)Q=&P^/9iOe4iX(0F9uVmR@TGbV"rKpe(*G6K-6Om_J0uL7J\RqZ1`N>P2MiPqnIug5atTKUjZ#^Y%:("WF<XO+)W>-``<\5"F5m<A2l!ucS!_<Yi?A6Q(>WVq:jV)AP-\/H&Ko%c`-1pn=Hn\/A6RT7TBRs3b;E@Jj!ngC%'R<j_0$Mir%a:&\CJ&5UZ5"3<C'N.Mo?O3hLHSEdliFjR%Y(4W;0))Sm\I`)%MJM\l%g"FWBh0L`MGo?6*H;Lg(/r>Z=siI?TibJM'Y'B6885Hi%OBJ/QMnuX9FV?)aP)1Hb'rDUI+^!%pJ<UO/Ws^.C!D/PCQ57>t(lXP;I%9:YPmg!2f9QoMNu:D_;]6i/3i.j=81$3YTp5gI?TAE0%Z;rj%E=-slBS'g&6A>q2%Uat2Ts^9;<i)Hb4Y0'[9<$!P8O:=J8V"^T$r0?5g=-H*+q_\WOB+ndKdhT(-TT.+'KXH#FN#]QK%Pt.%kf<gGC11!O4Gh5g1p,")PLRUuVDP)n*@Vp.5(^9Y3(6FobG6s9JlS@<$Fti$EY,9ml5E="5b3ePR"D!Jj_0P!Qr$>YW[&2/%mVa5%,r!N=O<^@DOlL^ujeUm`9$h11B,%>-"A,7&$Ci=%P40E[;Q#N[s'@uD"VQqt<`q3'd`O*C</slWUd-mhlOam&RRg.=?![\ri`.%O%?YNO[JL9RaE,q4P!@V,Y49@?4-Ii\n1K51'k%'(a,7rjk,b;f+i#Hg><_.jFX/I7n*Z1^jArThg80o"Lcn.uXXIW=&*SR`fZ2Ej>%7R["tV.lS:Xc6@X"V-/qTS=9'0Id&L%R4X'Qq'JF.ARU!\q@RcAQ40qP>Ed,fS#p,f*26B;lU%3@#8h/V(f^m\m@^eNsjp=U"9^_%5kpST6k^92@a"=Y.dX[*7^ki96sc<`3=Y<YebJ(_$,guors3id:mP!2!>*Igg"kSdJ16gaX&=m#La]V]'"iqK-ilN<.]Xk?7\p2d%'kgoblQehFeb/uF"e&%4.hi>!U@;=f-,@n4!%+\]"`:3gAQ7rh_5;;SaB28.!2<KtJCXmh<8e1kL986>)B3K@=GCQ6,pWW$Ar9OA%6Np5K+YZqdXU;+7V,fo-b5eq?30PIN<(R:(UGtOu,@MarGYfrPQR!7PCdOnm8hi9[2!)^B4A"K=$+1>3>UrJtapSQ%<DoK]BMNJ!%B\b$LPhM^,-&'IFKgI,SdK(VP@521";he>2BLR%QU-Ct1/qD1nW(I7^J3mD#GG[6dAFU'a^t$6)g0.<@#a6sM:U7&o>:9]pXt<lm%92l6%A36j!9k*0#6r?Q(6:(dilS9Q5;ToRujEO^0q$BMe$c)sBLW-/n=pG'(7g6[Y16;NNPgoJj:T1$\K#Z@9R7G+dBb.k[)Io]u%a/X:X"@HsQ.98/;-<84p&]8:S9X#FD-q3I\6;:0a93!S).8<F]N+tgJ1%;5=DH[uE9'7s+1\q)N.A8A)D$6:_k!>=h)R]sD;s/[2%D(A#+UnBIUQS8W*?s0UH18PGG:SuY7c#<kjc3"WndaFqX+tB"FY(m!/n;l'c#"?V`<L?Z!&JT:8:&KRe.B%@uEXSrU!"!%!,??SA%kl=!8C2t>r";QGAiMJr.&Q$,PK;Btg>=J[Z9%oT)lRJQjg58NM)3'B`<n4PcH!3!)H%r3h!AOA-_'+3&;"MSdAZ/-++@1V@27jE^%9`ZBP6KQFK5q,J^L2!Vh'2U*]Jd)r=0t[os.LmN.C,kg:10Q)")0DPeW%8C$"/V"XA?`)PTU=]G=_,@[<U6q^XYU`\*_IS'(q)/g%e,aM[NU8H*[?/i?%uY%)/Q=TsC)\)loZg@!ef![(XcO3@XY?FT5*jdL-k"$.XDLu#-P`BW$5:#!#N#RrO_'Y:R*^f[KEcr1HoV":%;5?H]7m*W5#s,4kFXui>;c&!SBVd<dp4o:YrCF5#Wc^=&>P&5Z:8i;\>/Pkd."[(?DC3=`FI(;(*EH66+j4R\N)`#A1b:\eMMQq'%[]h/46E=]AW3_/7)6fAaXJFkN+EC>Lg(ft&A=m(3#H07"E#Gc&?B-j5QtS"sN%tGcZ-7>fU"So9LE`Do!/"X:%Ijeg,H,?#Ei0)e%&\-&Pj4rA>J]F2s=C4!1pSI)`AmNusOO1M"VATgt6\A79Pef3+r-/88M.`>giXEf+5!-q;/fKKb1Q@,/Vo6Ug0T2r!KMD]qm7O1i%gJt*Oed8H,I%JpF$UBGE6k@W.`]j/n*9_VU+GoA5npl`FnVkUU"XXrlN<*8u)_D3qU_K^36t6Ri&T43BK-Q)p_%_]1eT+'NP.V^]%"?Qo#!0@5b^`;OU1dleXdQ<UlW5,WUNAZOSLXlo6j:!Pu=^A3umtjG)m9SWblQ>@7`B[27YGtJ(gQ*.-!8u*W.FiE5W$>"[.nB16%6+#YY825Fl!Ak"_Wei"pCM=KCAT^G,7&*B66KB[J$CjnkBQ4`J*2Z((^a!#=XAZ.Q4$4>t\1^g[TnOg)j,+1`BG"a9!%S8A"#qD3%^*k$g!XrOS(neG[UZcGpCp66>'nF;C*#`9QlUuAi=\uL7$k[!"D.6J3<8Ck[B[RO76kE=6C"6`^*/h_0Qip)LPD'uc'"(Q4!%8p#%:P)bBX,7O98?o6oaJeWBAF=Do-j36S'<_mr;FDY19<!(85io8[L&hRE/r]IsEbn(%/YU!9SD"j9GY?S.WZ<L\^`]aG9ran&'YD_n%DNgqll+SST91UekMG(2m?9HQ7-mVVO:,>t)U_Z*bJGlLBbGnksX>2]-)3R+aGe>J:4m3*6^oHoD0WmCC0$@/XP3#\F%gqQs@YR0M%MHcno@^J<Q-De:6]H0s=p1o9-Hlju;`hd&\(qpNuCOlsj'rDD@=[j>^pcDZQ!B$;'25:cJ1dMS.^l%,OmgBo;L2K<i"q9KE<[DsI%eq='Ve7V)g=;',U>*kp2SM7'2K>]dR6;8^_M[PDV?43oMp'q-hCJc,.Vdjl0%QR47B!rU5,&%UYJ[Ne'$9Z9UlMq8pePf-kQ?sq=%;:biKb6V?Bl\LlP%?M-o<Iq*&p_dIUh@PL#32(oE*2egI!qEFK,.15I'_@8![a[FTUs>^5:e-)21t*ImF!Kb#Q('N1NoF$N-s@o*%19l*^CqqcWL'"4+/)V[o3WRFKkJ<3NC&kVH"t2kVC,F9gDpWC%r^984e=[neLLUq(;M(PZEk32cko49J^;C,.i883oNDh'Q.#+`*%:3a_;)@^B@,c[5/>3M8M>oaV+?kp9i7<p>!>ai'.$N9NL95<82L#+7Wn3r8D5p=9`_(m1-9fSpF])i<`lg7]d7;fINRC<E'DFPDR%6)'D"24p.7\#,6h@s'"r>N<L$\n?^5TMh0:Gc_O6#u-"$)FnfBB[,iI-IR9B<Ki&?k&dYbV`7t8dn+C.;+X@n[Rnr<;]8I_!gV0[%jru((UC6&H/,0Pq\4W,IXPnZ/+^V?[<5grXq,Z%O&+6nic;<u^*lf$<2OKT)6IWuQ=ESs\00Z`W.mYAHX$a5<3*9d-hAY/]f@hBb%#g*Q/*&%d]*8!aS'29pU2asD\!*4Zk,o!*]=`@K.kaa+K3"AG+/1+a;fp..sY58IhJsum^C#3$[B'aYiTt4Wi^aID_"s+Z^1i",6%R7\r@BLNh^YomUs!5X2cn-LIE7\GsP@Mu:^oc':_FoPRB@-//o@X?j;+Z"78@kd&]1g9d0T`?dgdLCR<KVju0`QOf=]`DM-/,HHb%M(@1JLW=F86GH]+eFg^_3;R!gd=P.K(fmP@me<M0i`4q-NbGIjH)Wa&*=;<m'40@-oo*hQ8+-sLoWfHodM*Ds;/jp_=.iZZ#j//%%`("+5q]aR_?[CS:&MKp%0G^eeni5\%]3am<&>Q&Prc!h;nbJ4_QiG&DO$CR-r:pIXA:03bFLIbTXW$>OI!1tr5td[X7lA!SP]!j8%`$^ufa*Q9H>I`UEl7<U-G[/0tYMUf')cE^\O]"JZ8iXdn59J.1i.7*O;\luCTd.8DJI(>\Bl!D#(c%oN[JJ.38l,@2On5E[abM*q%(*k>H*N@e3OR$bcqM4+\P)I#"YMu=;%D99^2G1S)T/91[&ddWN#jm2!Zh-%&!NBTF-f-*AR"Z'B*cu^uCguJ6e.I%JLNljY#%PnK%op1Y$0l&aJpVX6bb5G((g/1W>PG8imX&%dpHtL-O:\"<;c/0?<[_mLi?HGdHnCkh8)b6DFhVNM:1%FtWc.h:XAT+d'&](\i*6\$C%2tQd"SbTDQmLcYVM7Y]dpEo=b`8-omHP:Vl)nUIP2g"cqi:Jn^]bp?H*53P_N46t8IS`N1,rLQ5@TEF+Dsr)d)qEbN2(/@&X+uLe%/MqOD:XYogkP]2mo7Kmi2u5_8fEckY:U1:M`.#1"(L%a\a0/rF'=1N#>V&prg;0qTCT?Z4W2^t61@>Q(f4nTjQheX;ItBEQ64Da:%ehK33=M`TlrdI`"(d^+VVa2@r<,6ur*DVPg>H7<7@OE\8\im;e^?PnAI_sr>:b;5<[H3]2"I;Np&''k.$rFFjWJM@h=:p0::eRR?%TRR2!BW[fsIFcu)8GR7fZ`sX%&bG4R43o_u!135!T4:P+>lI6PbPscR#!%t7Xko`i,l<OFUf:;n`M%$OHm*k#HYt/='g*?-4b\DY%Ath(GeM@Q<8MVp8J64P=qLfe]'7m0DY7L9JOs@i(2'V,0lh*&e(\uMM6.q2&r<\:9SU0b$.J:ckFha+!%'3sY?"nc37f8#HZ$Q0K%LPbGH([8t/m04(7J!H3A7oJMQ6BqC77SlqDqMoXepBE<31,Q'Yp`5D(dGOB5:kBOX0b8R7=Dm.>o),t[7'a,RaE/]lJ&Jsfhsk4k%*@K,cmtfM?T6u6ul5r4!eN/$Gn2pK:hsdEX3?hID7&o:+aB*F;O5s(5"hc,Uk6ngI'=%7b`7h[4B&mYd@kQ")I\P[eQj*"6^<>3a%!-r?icKW0n.E7e+M)"g@]`."fgj\.NI:?^QCZasgO9X_tf8+'SguTIEM;YR\Nro+k9l<gqgnHK[==J6348U51>#M+D25EhUhfH$\%LTeO8im!9fOW834iCNebiA,CTYk3atb)7BD<b$XUjr9^"`2d_09aGc5^7&i%X*<;-Yp)'%<prRqIj&CQ'EJp<`oNKUNl'M"iIP?M%bHI^Dj57pP,H^eZo@MX<]O5pmNjHqS`oO2B]IZZb517Bi=-7^f3Qb^uk)o^\1[Y<p38?4]!e;,OIip\Z(?g-BXkm^o3WIV(K]s3j%^VrE$[Xi"IHX\AL*%U^&2r*#KaULT4'+em->EVO)]H'-'b)opT2fal^j-u`Blc;e@5/NRLhJ+G#Te^p\NI36DWVuAO9Z6(GJXPBn%0ciP&L:1,)NbM##XtMMmeS;d!rtPMu]tq_s6/k=9ouj!_T+pL=7]`mA\&d_<^&?XY59=C-,u^"'E_42M]d\EaeZ`ER*kGHgEYrE4%S=ds53=J98a]FCL9Fet!9=X`N5?Jaf*/qL;q_k?\aDV+WC<'c(k@elUAo\l'EZA\3*(EG]fTZ(Ka'f$_X0Fl!o8RRBDfZnQ*0[Sg%*)2I236]OT*/C6fQ/aP!,fR::]Phj2L)cD\-M&S)@@Y!):H]1$J8N;3!.:9r0]\UK2$#D2rL^97RO>nN%*DqL1l#H.f"_8UjX.>'%f4O"1h7<%Z-K4D&i0-5%qNj+;pRZF#Jt&ZGnId%8iTmEjnds"*eflrB:VVkURm('tkan<$7.Z^Xr4af1Lln<#[#%2?8@1+<B_`,P%9MDg3-.!noV\=>6O_=]q4I[1$'6uKuB+oRap#VTe;s,U^0)RXACW+;TA>f3<m,:[kL4jE,s"`=?,<oV+J"1?g<&d0k##E)04MW[6%;i;/F[/R1_OA>-A8WD2Rpua).*p5JGHl]18qka+<Xh.p)Xf>@$\*E&%lAjA[`*P(3jT).n+-,6&^!!;-7[LoPiq8S>JGF)lV@]c8%ad";=pjM"a.5^j`SD9NA\MN?B-Rqfn0iXN8^eZEgs46+Pptmt(&H;!p+J7YlOC&PT/iM5"HB4[2If3<N0:%7'Ud!ogon22nYFa;E%E!KpZ%J+./Xoldt0pcYj\_3:\i:ro9ICT4@b(QjNiti=6`::]GTC!TH7%gP%DiGASicAAGN!MMrLlff`f?Y"8j@dZ$AMYP&-QjUV%lFiO]e0EQs?VbqO1nr#rFUk0a^6/j%[^RH@7#-5^/WQOeoZJ3sRNql.[Zb!`k%$RLj0t5)h4?X[:7c8L:UZJe!aadY7?P]8nmji8%$,=T*nmjhM`8!a"apbZnaRl!=+]#P.-X4ZU/`a)NlM@5Za8nYh`BZA)>M=K"CAT55)Y.fEr#57kQQCO8<RA^U`$j?/NUI'M[9fp,%]2D[IJYU^=kH'5X+)ad`X/pcJ#)7'#7;?ZrehV7#Fd9O;^5KQ0LsA6S?LK0'2@6rhJo6dF>HjM>2ln?g\+,Hj9ch(J)Ncttm9+f(%85a44X@m7:FBncI?Md`h)cCUV,?<@VNnAY)VSFH&pNL8/-Ou//%JV/E5gIm=j$cFp(btQ1ok(u%o-Brr_mK94(@TAqYrd>h[+f5a%Lrh(Ub+YhD^X/,kIkS._Q7="L4+ZE-K+1%2B*Q=1s'H^Edh#V"%6q\mnaYYS6',prK)-Z7.#f=g,;Eb7`9egf1Psj[i\m"1bp70_%M;(_`2WG[a;55s?gdVb4i:+u:DBk4?'0D'*]I.Ug)=$Rlm7dPt6)^OCEIGYOe9AVkj-ukF&)l,965?,A-us?`7elTCclbhhbjWn$%7qBj4clg(3A9*IF-S!K9`u)j'H%*uT-6I-PpJ/]=hcADuGE/Ss*cp-t\USALFQ_`aW@sr,L[rp6?%3&Y2.&dp:@=[!+77*;m090.%adl?r#4P3TJ,MI,riM*HMD&F=rr$b"nj@dNe`:n)Z*4?X)>Re*6PD\c=oC^:>3!pVX=\H\I.W".OoNFk8]I=[j]\c:oajc<UhV#L%p=7gq"Cq:H2upkBl?Dk'`ar2bpNtm5fBb$"Ai*.L8=/CqjF;?qZn/WM+!9h2aDq&^Y6HtpVUk`cN+-m\(aF&Gl8*7T+IJ8F[@^mY%rf]X-J,60ZIM1.TT8>>Crn:HFC;+@X,P>>o)WZ]JJf8"3rV^Kt57)*&X$60cbfV300aVTRCJa%5F3T#?J4!l)d4q\E`(EgA*6WKq%e(RE(_E$1nqWP8GET6k-b$nF%FJQC[e>eV"cF-aqNaUu;SQ,H!9S,]&K&i/Vm?LqYIe*^;mT4qoEc[F!Sti"8JIfL#U"HF?.R!lL%F'o@*0%CmAVTdKN.qs^ZAOhs-NlL+b,:ZIdg.kEj2bN.,5iisBgI,pqeN.`7>ZTe*+!9)Z2[Ce?2Yl;*H+,\+/o;f)--N,ZT+X+-%^UiX4"H?%P::]6^IfE#[`6$gc?RG_'J<0Rrik.SJ_^;'Xk@h[j4?jS]Vlt)hN#\J[5!;Aqa5lU>phWbDG0,ro/IC<]S"aQ(cb@dR%"ng,a.>Z=HI'nJa>*+r0p]lJj-goj0h>;6\?4c?TEVLjjh]TKDLMu2A9cUlsg>O9"%DJUTpO1Aa&`;jB2*F-4oHkX:`8d>3HkVQZ%ipf`*^2N?--,-(n(BCA:iUOnNn)EpB_.;QuNK;\8--Oj%N_$>A^SAtBloBIL4!MDlq[nAli5[s(B6*%OfXX51CHT9ARG<&W:('G$%#NAsDYK?_`@k5Q6%C#8b-brg,%C,K8(06=R[TKO'ri?<[$$U`G)WWVj[J%Y5Fq4)uq7(KH+Cr2)1DS8'r'J'g4X6]i\Ya#p"/E\C%_3isc?$qoIp,e,?J&cO'MQ[$bHsWgT&HeC*Q8Ti!n:&+T8B,SH0;HPn`/+dfHaAbDQ4nUob(HZr\V6ZN-[,[[m63_[QIpBJGA:SU%$FWF+N@#/(4)bN&-L[<PY(5a67;Xn7b(;"TIRn4h++_;lVA:7,6s3t:,Q=n'lj)0`eE_TD;HPgT]pl2hai;KRYo5Z&\$A6Ye,YF.%$\h#KpO>\K:O=9DYdlI?n.SQU#K8Iu?X%D>6XXUbS6366e*eA:rJ#PpH=AO%m%ptnQR:kCkf6M!A]#=kQbMX#^pcEJ4bO$..+Lo1%I#)J[<pHkP]C)PQ5ZL$4<K%b,T;uDELp1BK#e:Xrr<si=m%;&he2/C:If^g'Vquc78cdd4pdtlMBV9_=Q05V=4PZn0:;seO<+hpe%a&>ls\aC`0e75XCaUoD3h+>>f-G&d^FluSMg:6IpTW2Uu3kp72r&Si]aX`A2BFFc]U%&<KipR?7$S@&#H54i:^O5_o^<?M(?^N>I%^>X?XajT75V%HBs;Zoq8f1UJp_+ob7ofoA3oFb&dnSdJ];60[",fmJgq]0A(ofk8*Po[Pmgc<e"n>f*=J)I&aDe1d($d!6moSS\H%YmW>TGC7?Cbp=GR&r?BlS50'O/CuP!4i[4Y`&IUG)uo;i^h2i@9*_i]J>T@=&Q_)EjZSliG%A_PQ2ZZ<p+X\X/$T_,G2lZaV(ZS"%InR>#?'@='H=n3a,i^Z+4g@[Ea'U!_ab5M[4YZ;j_'5222P51.=2.`qs$G/pgT@c+1/*E%NHMZc=_FA:cKKaHS7OnML^A6J;!*8,%,IY0@Jla5;B>&f@GfYsq%-&B9)9)aV$<FPi?"7>F:Z<P_bi"\+ksf.kk%%^f1>H?0SCJ$'J5>Gmd.:%qoH$^ij]ba`)(8IK5UB4H%EpFE)i2^m-8o[=HY.)Us6H<pOK2XrKs"qo>,8<;-WaV9'q=d43$E)k?p$Y^AA/qMXrW@Z:__46Jk]`C%+,0/)W,NL%4:fCJ2U3X_%3_Zl"3l/)[Ar'kl$*T[8l6S0[88mZjAe_ZB:eopj'c5e8.KKWs2/5Is,b7OnY;%NPZ"ubboWgh_RDW.*3(6\2123_#*fX$Q+>V<O%H.WU<7`RA'n9Kfk:l('TjE1.sf_kKr&%rq1:/;nGgAVH>]a.&u5XtDtU,_]X<P!na1GMuYPHIm]c#^Fn8&QWJ^fjMNlg&;A%n@GQ%f2kf.J2e6(TPcA>E/Hb<Tl7(Q1KS`FJS>\@V<1(N7R@;?*)3n=$.-JAYZ,in,KgOp\4<m'TIZg5/)NZ7fhT:g<HL^k.A=mQ;l+OH%45F3JG?Ig4,`l`E,.c:*dke#^OU9ack[I@#@)L($Pk*qCd>+>Ap`6M61gQBi;E3.iG@/3W@S;*73oQ8t'a1o<\$5EX.lJ==B>s^K%CR0KE.q+kR[sRZ7$-<&[[4W$`U]niRKY`.sJJD\E/rAN&J4PEoP$]Mj#,\tHQP]ktqe'I`**:JhH<?7J0p,^[>sP<sF_&m,#^Q4F%A-2^ZN.F3,7C1nP_8cu8M0:R2",B)K./pdj^1\[\>D4f7KXLj,86<[tK@YdZSi&Br2YBB^ppdC5^c"$()VraAdo]G\^po<deW"H[%je*q"DW*fF18oe7jVUIEbsmd5^Ei44$MHscXfDAPAMj9.eluRZ6:!J_d&:$q.bM8BXEWtQ=qJJ8#fWB;Gms`s,BiAfF)s`Yo(ELk%coC9g%@=3j5G0Y'cD?C,Jt\&c.b.K*KX"+AlW-mcMcTJ5@KV?PiM[']Afef+^ci11S;NloGbAc[HlTD&rX-):\Q/%KHR+Dn5X>MY%Ycte(U[-*]Y*Ar4[8*aE?.,YZK4k?FY3Q,i$#6.OWbA)o%bQJE*b]1);QDi&]N6d@"%,Cs$p9LBY)%a3o)D:H4rOP&TK\TUPtORD%Ur>_WH*Aji;Yr$=I/b1G"bYk8r[)R<d8Wf!>Xr[e2)_,`d>XfW9"h`:DZe027K_/+<9B$@@',[Y4b!NI0p5/<;fS[.S4RZjp+\"f%73[h'OnPHp?gj[h\'jK-K/D[Z$Vq3Rk>L9(F%L2$eOskJ6O?@8WJ[6J<"`^#i4c1E0666*.O\l6gL;24UZ,\8Wg1qPB/lJqCA:He%o_\m_^F#05TN(8:H4M@->c]m=%:(O>3CYfr>g3RFj%3Ab36U,7(i7EJokTr#^@q&qfT<m/`Ig-%LM56+No$2;g'9GjfA2P%1iunU%i=`i@2eV/;=?I:MeiKE;p_8X9TbrMM[K&bf*3,UdJ/*77_5G./)gjDgYT][h2Ui^(9I4BkfB4!>(K0`qJke$l2B4kS+.#`_o3iub%KX8gi\H[$(@KbgMUZ8PO)8m+H"AI&rWb^Aj3ocYr"YD0Eck:p*J!S0P/L[8kE:6=d+=C7e9rZ[dM*2Hi3jcYAQt+)Np+YJ?6F_gE%>h`]mAUT?+48!?u>Q:<6XIr;\J0i@DfVsVulcUm='-Z.#c5nf[p)Bl"N&eaALTB.-l<P9B8`;Ga_)f0Iet_eO9<PqMr>lACm^JI]%G*K?N%?+%&*35""[]!jo;[6%%ql8\T'Qr/NcW3\TeC>+,;Bo>P?&u%K*&PlY]&/^hk@,7'QVOsl__ETAdXeSu<hnd[<M)@9e0:t%%Y-q5l:F+SGHVN3&e[M\9=Pp.T!-J/A101Cr9"!NPW.UdC&6[Aol&I#=-EK81g'5g[%&YKS"::E&_^RL3MGkLsFE/i542CT0oXs(C%3[^KpF1l/P.9GuH)rdJ7<>e8tU;(*[m6>$7lbnh6]aDD-'I6H&kLp?C,Daa;&/TR`0FcuGC6[e#V0b=p;m]s>#iMnF\gS!n'HIS`%D-NNWh6]e(<E^7b?dfgi=p%]'`JS:o2J\MTM2A=dqB^<CB$N>Tib:pJ8tB<e\0V%)$g4S`Sli-Sl9,S%B>cstYV(3Y;Qnsf+,[2`%^A'75:Z]%1]Z.,7i&nVhhH<q#?Nr4dpb'0pLA5oFB7mTPfBPQu&j+o,Qef#U"tS['Y0X8?5*E)1Y:iM=QJ?N8i\V=G!@gJ-HRfhl%6E<,@KfL\jjZ6Fq1]_Ku3.SIPG5'&'>^Jlfs%Z12m5'CI,Jh-Tp1Qu4^@/.P18@qIh4EF">HIghUtFrc@cU?cntl9Yf&:@F6uF'O%\Uh^jQfDH9MkY,Zksl6F4)eoCp3Vb+nL(Y/[o'>VF]keL`JV@tL?OO`nF?r.Jl_JaAM=]o^["ntU6%$'C;it<8b5U1cmd.$d&4tF%e/Uc(bQcgL/s<JM1.h;dS)4rC9(/C48rBM@\3LFR+$P0FnG+jUH63MWjVVb;D<-)UiWo/KfgBFF4g>?;d!NeV]Q5&K>1AXE3LMAO%K-""%ej(Um>#Ha'f"rO"0<*DidFYOFK1_oq%Td1O)u^ZA8C,(g=rbq3QH\-YK-Q2W?W*^JGJ[pr+l\F-:m2U6l>\JGO&MQ3luae#%cop;8Lpkd3=.dd#mPtFV;H@Nho)JB)"LWKAHOIL\JjVW=T%MKoG-M0=q0"9^\F2)Md#dA7V:_el?\&!_^5<2U"*e'#S.mqD&0`F2%m0G,Z"U((+U>?<::MSCU"_(S/kTtq92Cc"X641bQRK=-pLLd6FlZ=(cd_/[]qQD;IjApCog?O(sOI!9N6G:k@BnFs$qZ9J=Bl24-%PGgmF#NsI9IiV,$m\=tr;RPA"L<l^!gutfNBD0-H;fK+:$NM/Um=e9^B4DSk`S-BKmYeg*JG3,=]dYO8b0o:FheVt55&IBPH=[FX%TmBc>DPmbDZUVGa8onu%DEaB`RbfRe)\!8695"g+_H59&8@V"CQ!q%?CY*Ahg\h85OtTFe?*OVt*Qf,%JLK/.`OfF@_DFoV]puX1%q/Zj&YGbOaPBl?/;';BE&O^iUE4qID=OH0kT&M`):BHl'Km?gfIKR-GLFFab\9?FqEkg5)\"mt=qG0P<AWhGhCCiSI5*;>;e"CmS%nX8g,;P^7]hBlW!i$u,=QZ+/W@b636Oj^ApL@.#0C_mP>6$p2q$T'2g%5qB1*eHad)mh+p`(aAg,ur/%.3V-,5g5Vid[VIiM5f;`%B"$1U'of!Q?E4*Z,?X$ZM))8SL1g/G+fEJ[($=8cM'We6U`39<eHFHOYR6B6UJ88))P22[QM.88&@:%q-7Q!!&;,%[^Ocg%Iabif%2fYD@lIEd]UFrPTBC*D?RSlF\poH+m>noPfIRsukfNN2T%2nNVF/du6FH+3FoMn+bA!=S!'0*^uUOu`h`GjI1I`gc^[YNWM>L0bV%@=-O^gh<'k;WgXm^pMRUA=V"SnSIPL]<CmN)0G_UG;X4*MiEJI!?%hk&h+57r4m#k)c8kCV\PcjfpBm/XdU4f'Td;I""ND.Mr>>=%.q3ZQPT#G=?b'-@MN$5bYb&2:i)D.3dWGZZ>,Q&"oRk]"aSErXcHj&Sq6;Pa<&]f&E>gE=r="L?0kIVa:fB$raWLa#:@EJV$<J>q%Plf0n;O/f8KYk,fl%BP7$puAsM)U]Y_`KI'E,NSd(3X$7HtrdIG@JQa1TpPuEppu*),2t=bs/C4F_.TZ_io0U+aO_R`ktkU)9<)8%Tc1Y+(9^J.mh`jU*,Zr;kYeS6)]mcAFdd>n+RidA!b/2L=*F'K8-C!:0=G&iZ#UO]4A\V5o\H[^\5OmN>8<b[&l*,@#4Y^;0`Gk.%NM)-WZp9=_^Q#+pq\u(1PhYU.K"?!7g@qSnoap](6:H'i2lM86UM+'PQ\m1fj'=rgTgQ#@EU,V5[AIA;@gC;Yk&\SbEHA/5Z.IJO%Q`Zu.@-"htg<,lT?;XN*A;%@^afDdMI1\ce9&B%U1_M*Dca+82Y(r'\Gh-Tg-"_=+Sa*VYB@/\7k#/0`8"r[Gct2-ialET#f':)O%0A?RFp+"T^]2Op<!CN2gL8a&Oao1"BNAni%CKI[hiZ5oo-E,bL(m:P0""[NC<B<seN6G8U0F2Ff9QItQY%8H&Z\.Q&1P]PHj0ee]%]oM@LZ;4J2_UZKjo'<jH-/f8#e2hRriJMSSWZb$O['f%k6#\?Y,C:h?J\6]2UC;S63q0:q*8[HN7@uP7Au/Fc,BKS&[c>+.lb0h&%MQ6@7%8UDml?"PAQ5;n<FkVh4G&G]1ZmjPDL89gb\)*#bNh'g43^B5Ph*lB)HWrWClAZsgW4&#N!=CpQ<_r/5_*RbQMb9`Xf*t+:%Q7B)pFZ"U#Q?s[3M/!q1O2+CF$kPA4:[tKsja+*ZH>ocgeR\S<fee#gZF[m8"gBJ!ld%.I8qMa2a+s&q(':N.,+HG-maZcM<AP^c%n,R'`5\Z"_&M-6Kl5LD"@];?UXBD3&]a6GOY&(=X@2%5$^.GTVFI_I*C[6k3TWXtj;B4^teP*9%i%2RD1innH:o11^bkA1R^k(_C%)J\qg]BV!W;)Pas]cI2bW/J0k@8&:F,K(m+V`!C\]+%<1YB_@igaOn+9l;d5m"$5T8chEafI^_;UVj`:#tuXdFXN]]_#%Cd-Wb8?%cS=LEef$RPI1F56:HQ\5QQ(kq,`HT:e,"Plj&G<n,TTG&_tfUX-RFYSdh/WO=bOap<S`N&g3Z^9*MO)N$l_.BM$*H@et/,1:=-/.%<rROC74Rd")N?qh'BN!a*K/@bg-[)JbnZgBSU(sGTj4!RN0=@<e^%^fWG]hdn>O'R69SdR._YJDjd'"eFG]c09c7];PIeH=U<!P6%C!OTu,<R@RDCGg!&*hk,16^YpR\AmTN?(EjlKBSeXPs-r]f:iK%@<!UKK6*o@lTo=EPdBjFNSJOap9qoB\l]R4^*^#JrfXQ*oR+L%/C$Jo'5Lq]VfJQ8=j2n8;8YoWD(9Yg-?.s_\as"Q'Q`c:P6TLgb>@2b`or$ajkOBDGYH5Agla0@cqJI`$Gj;9e4kp1m4pkO7;JhJ%AYm3b/W7;0nW22iNnFu9$K-_2jN*K2R;VJ^i!9GJ(c*slD9U0E1?d.t=UXm^a4jiEQ+^[^EH8Wq)V]W4'm7fd$IDE$a!3n".`[/"%Bl.WU1QWkMk:9`L;^KNQD6t/g)I%qe4W9g<?4Blm:blT9RiHV'B#T3:ELbhLSYK3K0+?Ca5b;iE-4jIOOW=WG::9FgJ["fNh.oZ;%jG\hc13?fN*gBRcH`pEMA'.7j04bSkfP^"Z'VuV-Cgi^XE:64&X+!DQjpYh7GJh1&UfOuUr^$`$>@FksL,oj'>u[o\(';;E4S!_6%C]X_PITh=$Oo+*\!uc_]Oq<lZ1?r$DpP^_;WEVDe%RXlTdhWeniLYun<2=IRDkMsGLA2#8X92os"%D!fqiqsS]Y.>ULC=SF8oH9m%S)>]JjdOSF]c6CK?I=H?EFL/qd]'^(>T[g[:$95]`0.DOdN*73MT8T\JM@WU$gAcD]gL,3]"2J32-PF_QU(1nUta?C^Fhc39O62*%o7mVV(D:9^gnp`ODgB:P/;bV2)>1GM)?a%JTTlXU1-/-!3Wk$>Q"HhZGUK[K=B95g8`Y$9CpaC$c0X0/EI3ZBUp\fhG0t&:!=')t%e5YeaXR7%-mUrE"\Xr%pG&K%!a@V2Md78*?AF=>LrG#hk9tXfhBBN$!RI/9po4@U*276eY>)pm@lXILgb?sVuq3fe#Mk/*;DJSq7%If=#me#t#)H0-LiTfI"FU:Rn-\`[O=G'iU2^::kjh!T'(&"&VYA:*]_WhWSJmq&)7cORG93N8CJDerHpnbE%R5Z``k)sArC.n!F%%[l_:Yc\DpQ)d?&rjhkt^YLn2)g>loCKcE$uQ20+#^C!DM2/9nm#])CJe<6/2GPC?"2LaoIWO^mN_tNqBiF.)@)fI@jQ6Z>pFJi:M%751tR5@@B0[>1enVQnse?EIdFHJ+YG/SuZOO1AML5()*khjV;Xi4tGdfuN8G)1J'%bO&=(VD>F+ce3Cp2UbRDE%P,fTnr1o\l?dQ%&nfVY$hq$:SrU$r9:=i%+%tAAq27R?l7[$]ma&PI<@ZuYqQ7JrY8t>*4k%o<R-`=8J#q3CpT']OA8=B[=h=("%uYLIB`&7mC\oc$%.)N/n5&@-$Q20Rj`mNL4Z?a2^:F9/S2)a9im*SJ0X0`AAP2#G3!nib.;Y#^AWiPgZM?rfH+)ODUb>P4"4DcPbg`/elZ[;!o=8?DN%d=ll!]AmN^P?I^$C&P>`\&sqJ*\c6k<Wiufj;2IUPhbe1r)jETBf#@l^rOs$H!*;+k_GS$gkrU*=.!1&m@[d1o\gBL_,Wf6W][u8%iSTt[$g[(rlW<laV0[;Fs$Hh,gb=)ZFK_[?c-?/APM:E?:uPYrXKPWR*^AYPe-?EO:,3-`(T<SOf*CeQ%"O@US>/[hLW^</RG8H&%25nGFNka\*<mmi"c_Xl`jkq^DMY".l^3jq/^70K'9UB'8^%CQ*jX=DD=IB&/o&40bg/N"^f0?_?3f0)$CK[NqY6M41,Mq,(-L=4I%eVa/PVC-m/(R?sleuk5T6BFQsr"HbcRGk=C$eq5tb6>A$FL?g8.$^`TGaQ._je[ne4PEA@7GLR\ND@X7,#FuSg<rGT>0&Sb%(2^0%Kc`BU?%K?(Qf[VB;K"U%g@+\>8SOYc'A^'Q^[=dhZ4b6`[s1&QVc3V#O:'CGp-SJ,5JPI0WV+6#eEJM_dcnc?4qNDf3\_+gdSK`s%?>]#5*sKT^#P$U+c_RN/^+uC]i`l!sII`ac.V*>l.>g;;<t!\ro*,RuLH4#/2#*%\"#f$ugpkVqQ=`$k@gGM2'[fQjk;=GL=(ghi%_Q[!Voh$8FXhA$EITu7-[&;*!YdDCjgF0A9f9L.)HFM0EBc4NEAJSnOFq(P(Ut*"&E:Wf+>$a]l)uI,A>,T^@+NIUZ)ED'Xkri%9%l/Id&ge)u>>#54Kk'-WCkt$9[^+AZ.Km`1P3YY_(U@S%>3SO:?q3WVTnZ17qkC"L\H$u123ku0P&/E#DG;k!Wic/HlIGSWjRd6N$%]-.+8\`ES0@Q]'X;f%.3-5!D/J(cM$k>&=<D^F,31)B%n[IjBl70f>!$;V%.0,P.[\Le+i.T*X&<G*D%J$ir.;sQkKU-!CE\Q%5^%.\9oH@pdP7D/ShorgGGlDn!%FqH4Q,2MJ/qEX)i]Z,1fNZ%0S5>b2a99(gW[FsPPhVrDBmmL9(gVRGcJh"G<)-$d(KFAA/E0@K4B%e81^ZR!m3,45%Mgo\1]DEI*8#b,\b=E\tD)QYhI$ei$,p>_`7%+JG1A%Ip'<nW5au?T2q>]n7jcb:'%3l`ic3&^-_$:Uf^RWj3*i%)-'013PDI%WcW'm;0kP,=[?liKAY0_XPkXB1oGRhGRT*1^e$%D6"h_RUHp'gPYg$O#%mLZ6.eb^L@!D=r_oX1JloAm'=V+3?SNI'%"t>h[BQ+:n>L.(t3XL\2SpE'U-<uMOg[q">ieam66RZE5#c.tSQ2qr"Ja$\k`s0Q+p_/;.HepKs&;jTQEmnaEGts2OAGhpWQ-uZ%%Vm=;^(C%^]5a;k&XGiub?aC(lY/K$j0ZBQWO^l;E)-&k?,-$W$6P5lB)`BNqR]K[YCfs8l2;7&n[SG@u1&0&$@P"jsBrkKC),VUF%^aa-r#Z#U%Te'(FQNF$/#"qR'dhk4!$RRmX5,+e^HdbOd@aoMN%(6T7KI@O=f/pcX4QfZ8_?p39+hs%OP.ut-5_/lF<P9cU>Ntb5%o)Y5D#AosI8=(q>>(pg^ILS_h,!/RcP=1Wofd?[(aElgE='FBcUJ@_Qns@t?ROX6?R`l)%<FGQabk5?i,KE&(?U+cJR9VOO!/KYY%_p<u"[rCNq9dSD/%h!+FF`nl(!EOl>Y_*LEUuZqRR?&rO\D4pO)e\Rbo-C0Y>K)MBZ+&?/0-.2`X^<$$D'@?YS;QnA_td1kfXiZI%V,+Cb;e3eEelC0c)"9eQ'kYG7A8EOC.Mq:4jSf('DSNOQ_[/RhZ2:bl5.EWU4'<TW7HAThHQmT3e*iCEJD._ulb5aAgNW/\*0><:%q$m[413rC4*TUsJh;V'*oFB+-r**4,[om>>cJ'4WFbN-oZSQ-n:kY:s@:,p.$Fud1:YGS?IV#Y4N')`@]1<#u2Ld!9k>`B//nWa+%WYo#W4;a`!-*+hqP@q]blLBDLgiI:?9BkAnh>@;.g<"a9Aa(PR;W$83<ThLs-]9YK$HkV>0H=M_A*,d2h8SH1:>$L!4?-<k]Xg's%"*&B3ju/KIDD8ljD?E!/_u@,Ks/(>SYL5]P&?7>tIQVHS\Xf4#%G^J96SU[XOWEfAeAAoD8Q"&@?L.=*=fuqQZib?[OCK'+H%c@*%Vi#SHTEq^@osn-_^.K.^*u8Jrq,[M#'+pZ^FnXFRB34M!ai`Rkk3R1/E4K[(Wt'UY-B^PS/m]<6$WZSHZ.S.u.f%dOT2LFLjgO+m%gLC`;m46CRp>pa<F_Pp[kt,)^%rmuQpd+'8BF.B0e!e+ZX!lEeR!E7$VMl%3+FmXt2B*?.,0,Mn[mm_,4?eP78):L\.34m\[iI\;%g:A!UZjo^MmBqS9BlG/$VQ@!td`%dB:RIK.%^UR<-/^f!1U%JY1D3l32>dL9f[`^)O!e'i"/-(84Gj-5eBL4cl14Q%`I-GT,\%IH%l*X^poOkaW+l5HhWsu(J^WjW/G%8+*[KeKQ&YW'`CMkYWen^R.mPP(kjBgCW;=s!XMW*$*\M>NIIC[rd&B)9.Y`]A%ViA)N/of&c%D;IB+%RMH1nkEL&:#)3uI!WX$KR)83p\VMrGr<%DHMmA7=&C8m]$SU"Tg;e.Z1aYlc`LHUD/8d6QW@Fg`ug,/?$1*J\IDPj?>UsL%RV+D#P>0D5(;o1"bFJ4X>9NTa2nu`@f1[++=EeF-nZt#iWU86:\,'9F\,<nPH<i4W;C&^1]*m^s"DdAsjVrXb_`$as[3cUl5J:-L%q7BqU8aV^/CejIULYN:f@r_gNUM6M#jCRAU"H%)42ZH1Q*ceYdXqloUQfXuk3jG6ib?%FX$T<&tND)N+?9t4ke&h%#nR]:R\;f-;%L^aiC4hBI+$2sM\q9$Tir@q<))8B@.Gqk^GME9HnJJE79#R8HM7H%tJA]<LTZh`1*8Ud8bIbUkn`Wn>%rH,'pIZDmhQcj+]9JP10%V:i=[+Y!j-[SM#@E/u_=kkZ#'q)F[S1oVCpQe,GjF7nU+H`\mHK;bdBd(DWgAElipFKL4sXB)C`\%sQ'YoG(Fc53c!s-bS%6ordf%c(lb"q5qBEH?.TP'5!C]"02^r:Ma"5mso+m8*TWnp=nNZR-A5K)b8`OeNu[b\+o9[luD`>9=GCV<PKg2l]o*;?KM)A_d,"1JVelH%R0)J9SJ@mr>DL)`IA*PW_<N;c@A+_2CBq31>4-[uJP3/Sj&n'klAGipD"SrZ2+^8qmV[G]2Y)N%pNjQdEne$+hTEo;V7G8giFuo,%#l$"-k9#3I.Q@Vm8C*i5^78>bL*EZg9C,rq<19;^/=*D$*UKI<V,EZ!Td#/t5OVknaR2_FRsk>NEI7-mjB-<1PgEopb%QL\FM<u7%$Ko_:pES,i,Vt[#'r2+'j=2b">0A5J49I7<FLh(U]tW16!aXJm;0*3iUs/.PDa2.q9OI.(giN'TR&Xbi"\LV#O*Z*-3sPF(0:Vct%hj0B_gdeVE5W?O)J;\@s(a)lDeC8JHiT@M65.I;eVG9&[NiT^*;cksH=hr+Q+QZC*T+1Us#\!PL9>\WHqX0%]E0lUHT=LDphoM'!%lOi+F7q]MsDR?9\37PBC@.quKhWf*(jZ[m-YeHj!C<Tg8<liatBONcH5-7QC<>6^.BnbFmUc1)WUn,ToM2fT,r+VZR!,We&OXuLT%%ecd++>']([(b<[]d[br]dK3=<k0ol\4hM_H\'lV$uc^R"5%QCAHL%-7Mcd%10I45C3s%:&aSkS8qaT=FK_)J?LEke$G"W\@Nj1^%5e(&jceE9uQ8<b_21sgG_na-9Gj/aY-C]a>]A)YVpk!!/W7'H2$5VMdV*$i\@l(<&/t0>l8%[jf,Y2T1Z)I*]/Y2uNgt7U%0?(g;%ZVW/4JtV<$X2nj98BWY6Me:;WMc9/Of/u7CKs(a=n*hq0RO]^4(3f1j,!-;a=>-k+;rukEi;mP?HPW(pG`NKjao(j0/q3AsDHaH;%r3BR0>Zg.)%,rJh8o-HUB&f=*<%c]Q3.CnEN2\f?Z,IF.QDY/sIUJ/'eTSQ..msnk"S3o![<d!\K0D-?`H&SfG`)tprL@RsVgb'c%V=!+4S&U_JI_i^&Z0Pk>mHimj?0koPK*ipPamCtO>u4an-B,1F(Od>m"Et73A9Ihj.!AQQS8k-<c)+#<nk(38Q?Qh&oh':,%sd]c%hK5X*1hT_5g);bM+'Ze;0[k0n^:auCM=1X&71,mb"I$@-p]`)>hQ`r?Z2"7MRD1Aup"NB!lY"#^!DhJ2PN+.;BF6"u4Q"6Xr->lE%gT-q=Er46t!H!JW.JlU!L=jGA;8+uu2l62[hZmqEd!.]qZ=$Zg[PLiNlY\_2[eKtDZI5Pnicr5qU\=,!ent>XiW9<VV6kRH=RHuS%4>KX<``RXFrRSWG2Pc:'r$+C,kRaFomm&m<7ru)Kp'fh?k\V$*)Y"P80D3BIB:+\H@WM-]WJL8#QL+4[0!n_7#WOQ`c-OQ7I<DcW%:@3.Mkh#kPFF3$?G'Dnk3d7h.n<T9h+/b))_`%N*%TIPP%H?DsKjQF(b`T>'D$=m]G'=<i]n]]uHX81)2rf/,.#N]**.q0dc.fLi%'_JlIZZDTch<2tXoMt<>0ithU03rO21/$6IMO[SB,`h+4'Z""8fpB>D[mKq5]=iO?mE=)-+O@gM_Ki;I'jl$?op&-iS]sh'gY,t?%%o;177H!rM!U1pcSVkCa;(Q5_M_.W-e(\Eta6lPCf2(FDaYU.\k$tqg.t%QsZa>g>?!EAh#)WlL1C1L"^Jm'#DCEq0"aW(t8LtQV%5`SiGF3c1IWI?MFW)Qf3GEG(U%tF)<D[Wa\QPn111V\C+?[g(H^X"]1,<1U<"hOHB%M[ZF>MRPiYGH<u[a!X!S#>rj/0f<2EM:$/%3GP('!sEkM0Z/+[G.59Zf`Db6n<UmXd\<M\=gWt8dlMtu>$V/(]iZmTkU?5NBBRIKrM^]H`^$NYVYSEE=rOGp6KBi2C4iWiL,E#!%]7"SYC@]7T%NRRLY>nGl8YP?eBr<%k5Ges/(K/9>UE]d1q+?/50m0eFQ3;AVJ$&4II(="07>Fgab;QbFL%?Pdr)/nP]A>![OECP?%IO?_^F]ZrSNg&6crFX'^>AXXreU?uYaM?]m7\>81HW6BiM%k-&\m#:Ida`.r\%ab`0_aAdc/pP<jXN;[E5cXmV9S6b2"=A_?<am,%\f[*iCQG`L\s,oQJ_+$.%soTLVWG0a0F"F?@AE(pmBq_-9X;'-U2pjk%h/71`Q%V/"q9S3BbgEH^((EQ9[S5rDWe6@*(Pl^bmB_!%^L)KQ9<jsj-9i6gXLtp?iiMWseUb!nU'mqUFLFAU2\5hlZrhUs;7!MC<ptmElllm&6$!sgrJU4VMO[.LpA[&DbVfZ2@h_,C#>r+l%*53BCQFU$1In<0/7^(Zd887CD8BI[#SH^'a<HNV]b*Lc4(0fMk%JidX"#ms%9Y&"m<F4bD]6-8:ff3!5SF]+Ypp)Y+qs?K-&K:u5%IIbaT1,%ppf1*4cY8I#OnW)cgeU$^LCqS>]hYP6CGRq$gHESR%9ikpehf`Kd@,`TNgUMRLY<Hg(ml,^85(9D^U#tWRr5L>):'l(:%g*UY77RID"%;d&D;gQ!fFo^7&!GP=5UcfG$>KV]&dhu>9D%jA7^f_Uq^Y8@`EIjA3P-NR1?B/Ki=(uan1)*GqcFp:,jAjmCod%0D%$nB/k8[ndlClm9@e>F63W`#m5^;/6fEKl$YA2Bt:*C7.!/=!!.*P!A:]A`)ud<suh>@[-f,g=33O,4!FNXUO?$]l8LUpp!*/6?3X%20_'OoRgtNrclk(^!M>]$Yq%2kEnhX@8#Vj<l2Bj@UUSh$X9D?$$LD5R7"nSFJ*d!>!_JuF!EO\no%n/@>NTl*_+3`:-KD#nu2Z0%,ZuV(NBB_j1V,6[QThd55(6V<6X[_5,,ZH>N,j]7YE;,2")Z&ogXopcb(b,QW6U@+7<iM?AaHg2_rss&dmY-iK8-c'0XC@_>QdB=%0c++/Tm[=-1a@'uA#@Q"B&Z=$C$W(;6EMdZ`Kmr=H7\oPiRZ=U=oH7+rYtj@`bq&fR9WJ=H/5#Oh[mU+]\1fL1.rSLr6*Rk]=Td4%>F@\d7AcA/?e;1kNc0WNjd/#UqGE/H/bN2';p.\_\Z$Eg`)%s'2c8?npgFPC>aO[r_;K@;i1'\tA2>Ym`S^72>C:`<*t^<C;S,_&%2AGCt2E/eCjnA6Dp4:TH9^Sui`=)5gGF@pThbq#>_G.#6Ol!%`Ms4c1=uh]td*=U<m@Tt_WSJYQ($<QdmKpQhs)Mfp#e,2AI`k!_%q_Y0PmWDI\Sc*7A5^2L%50(lc:?QFni[`j7%^S%!qZq]>1oT]p9hqJH@CO]glX"c&)lWpSKe"Vu^_p)if[N[WRb^/c7\M!]6:3af%W8)[>/oJ___c2,"F(]75+<0a5PL#.=[n\#r@Ll6f7AF'[V].i5Di8JTZ-u5Bp=-4nh3g`XjjrW07D=b!f;J&J1RC%ucCLPDb\sXr%n+N;5?!=:JlRn_T?:'dnfe)X5)-?7gROV-l7uj-8(TRCLnpKEKWDffn]#kn]_Ru8Jj_#d8`H9h9di[)bbjC+*V`V0Nq7UhHg8S#<%Qi!C!YBG7R5B!#kG-0Api_EoRQLi[1^$.X5qo>YaKu#d/hf0T*fd5jHP=(I`V=_9(E:#L03193FFXhPUk9?6fSVA?8[SYpeo/qrC%[<L>!5Ho$rmW.mSNU5HbqK0)+T:G6*:@[b0\_BmZ#9?s'DV[H8Fh4roG4()65;Vo^^J-b3MBiUSF%6rTek[:m4C)V-&ahW&k0th[%OR)eHS^&7H83=?1:h0Q-mREpoc=UsbBD)%WMS-)s(892fgX^(_Icj9ImnG?JF;g%pDA-rl`H)47r;CEIdcp-GFgrg'W7/]d9Qsk$%P$DUWF6\uNCt9le.?^!_DK2SRU\nWTXj]f*UiB:Smdsodp)kEC417nX(YiltLeTqhME<uVi=7i6:@C0BZr^LOl*T=u*q%f06P2gn%0<&:6[F::\]^k(5koP!C3591n'REWf4V[$3UJo3;Nh'Lq0'?J$]h1fHB&#GL;n'ph+ShRJ4l2BO:/r()Nh&@uViP(EI9g^6n(Tll%]dV^nDc)RVC!O9<PGRO;,)CH`:4KM";:eR@D]T]rYXWfOFa\#)dj^g$U/%$ZR-'(T?CFWk=.n$m2nMcKe#c9NdoTriGH0qVh!Nip%ZJ!'bK!pa.=pVc[]!Ns]nu1%!5u'#66r*#;kKrI:f8aSE\4m!*.c'g,Q>E9L6Hq\C9Z'!b<qi`UiJbqB0++Z,pn/ag9[-5Xj:-37%ki5E(M]&7.@jQ;pFLjm_`,(u>QhF(0G[S!5%M-gT1;26QPO2@HVpk^DQgB,Ko(+oO^'NQ_:Y?'0l/\0fXa8^.I@Xi#]peh"[^$]*%^(+h]V9KI[iS#2<mp*p+/!XJF/o+gPX[*87\@m6eID6a5n;$2'-]bI]*u4OR7oPC[IJ05GF0fl\Y:';#TC-'EQ\&Um*M=6LI*$$V%>F3Xs'A'FYhD1iT[@J6AR=':BI+,gegDQ!^I*VHA^L#0Vc?am"n"U*+*5:mUjP7N,-LR2T^HT;":Q2K0'RPdZfC#a_T-#B2YFsZ0%2k@[_'Vi4^R-<CQ,@8!$s-aNZcMd)!-7aF>N';Mk?$#tU3nK[i>ea%Y/S,ULf;Hmo`MR7.2IEl\A\7;u@]3P\qR(23^lXpDf:C8K%eP"V40<DWK4rq%1i?Oq,eDG`ADs?,pmRAZ"8nTq1qcC<GBtp%i=t5h9Z)P8tr3g[X^!`Cr(9[*6<Ps.c!&O5$(,Itd1Fr-XncDMF%F<2_(f""6CFf(T&NRO8(HQbVoK^%V-3tJRiRom$A5Ng%&O0'Cu>4^YU?h][$6-H=;maN[VoMsVQ;s`\WFNVp_,085Y0Y4Z6H?8Q/%.@@P\f"G#Ck?(cj[9M_V4DUMU1sDMn:G%qqjbgBVnt%0F;lA0V\J_/@n19\"YBS/n3_d70lbDE6.C\g)hW],JN*GX'CU_smGNfh>%6*U?<\9*&gjOu'@1;,Ke]Ae^MJ!WpH1]X"3FR/SSkZ"h`/-J.#\9.0RfbE#61lK(#lbCD<F(oW(`BO/O2;'NL!0R,_\=3,oVb0Tu%C`2dF"d(d@c!]UI*`L)bbA7MIf3)^7MqUO/@I4*!c/h'JO2:iE5I.Q5XR<6D<+9Ld:t`Cq9gI4H_GWkk*\1`Nhf:,_ON0N=";>m,%E=.3@7Bk%o?dq,5N*s$qds+XNg00d$[Q4$a6BBhr6mBX3c$$Ht;CuJh`>hg.l7gTP2l2Z`Y(qe&=a?-M&bKR&Vp;#8A.C<'bL,>9%r2rd[`ea>]+`HKflAt$OfkF9K+VhS[6^j^80Bd!>j%d#XeX27UZ4do!\"`[#Dka9s`9WrP<SR!FrIQ_6B@dV'%1Jft6U1M2DgpDS%rm:"9Ae=LqQ.`'T^^h<dJ`]afO>tK--2j&\K+Q4S0qcbTmd$,[0VZN=e+ndeNYC59Oe=4?/Pa)A2S,A+Au5E(B/H,GeZs13,nE9m%S*7uOD_>3^:YlXG)Xm"e#FpdCjc5%FqLC.#7'h@]T2U]S6/(F_2n`j=D'.#$Ii`.tdBZM/a8H"^Q&g4QTq=>a(>OpTWPmg::lA%0%Tf0]O5,`>#SfN*LVXVsL*9JDS+BE3%ZeX,WbR:JBK/n)J*>X#$4r:OKA=!/3#U+E;]ZtXX[&ijZo]'3,08#2\0i-?`l'pUaZ'!#P%dRrlCWi%XMFkLRNX_=X`5ojTGR9O+W7HLSC64nEL2SKj&GF#=X=0S`Q2m*PaWf/^^pZB)QqTS4[rh7J"]JF#"(@"MHJNcg*:M<.a%:fI"5?u6S^A=u+>q"lrqoe'8L7TO+;*#G\9IDiW>\agptD&>0u5r"EL;(P/ZPjJ0J@2@7cfZB/j#HCjLkf(clK!Rb9)iLj7UIC*S%VL%*VM-tdPAJk>ThaoCc0+R]>VtIE,Qd^T*=u<9cF^N@4:su_?Y2%Su6Sp'!d(/GaPB1"0pa?Y8J)1C#YK_!cr[L<jS3Q>"PsVRq%fZ4iGV./q%n+HXp<kQHf$3Z;+-,o)q;2cA=`Rso^9NB:$6<bLQ>b?5>lF`MYp.@XsehNB!Xu]/b-\KuENqKiXL^e05Y'f*6HK+DP%b21]c5Xu^\a#^B.b]PT0*pTEGbh5JGCl`j?LQ]TR$URqRg_H/'+&4.$LrI1teqNQh*!YE?\@-rJfp4<+Rr(185YR]Jmd^,JL>m;n%a$E/]im9R!;F.af]$cobNZ"f-\"^DCYkVMT1tm`QF,tDp.Q35q=9GMnF3iCIG'9uF#-eaOE-^Z]\a"DeJ(T0?Xo^l_pB_!'fEsfW%fgu1RfJ!iLkhKk@A%+'`8'8KWMs*Fs(LN/<?aVMpr#X_E)\PC,Bdeo`<L\KM%M6s*n]>5,pPc>Nk#i*g/<4*mKF!E'`8](#!>sUt%0=F=<GASnVc3isQ^Q[dn?,@2:k.[,"LPR7\Z`DJVf?o6q6(Eg\HUu^J&24ZYFcu[IIB*N9*,8a.5g@02D?16FJ_8MYB6Zea`O=Rd%rP$gY*"!kJNO;onc;?XK\Bd@qga.dRKH`U5WNAX.$">%6nJYrU!-LCJ2GU!^&o"S=dOTsIFSc&8b\TuMG2Qh%ZWe5=1Ht`r^Soik%*d^f!C=!Sjgfck1-]$M<=i,fiXhLE7g':^bP-/k=N=812cm2_=Xn)W^n*(N*$6d%(Et\PILjOdgVJ42aNAc^q!4)*f#Q\B3D:sOB%7H_+BB1QiAZrps'^N$-8H#d2HR.$+J?5diQR,XD[#CuE3IAGR,JQhH(n-_Op'`m(Q]iugj(PgeAYg"*?jU%UP>iF=Z$E[,k&Rm_Q%*9[Mo456OGH1t&;L,,_%oUM$DRSO*QNSfjJ;69LT_W#6u2eoZX;-D\DF)6CWKSrLY$N["lUMeEsq^F,n.73nQT.;@K/LOFWb_t-S%oos-Vnt8C'1'`Z5YH\(n"QBmf/tTO?F53nC%NMJc?D7J!_gX#n08<"C)LON8HFK_mIISA8B(/".gB]&CJheb%SCX&\SA5b3\!1]J%hCm7f'MY=dED,oSbF,Vrj(o**-d9bd<]1H\fXS8QdPeGSO+jDrKDt_1?iu_abgk!5q`Si(G)?8He429WDD!&.p?bbErI'/MMh&(.%@R`Frlbq*Eqg3P-LQIoW<U4*.E3(4b5q!mC3!#(*35o;[*$Ua'G;RSMO%_XJ?7*3'=Kk'AP4ea?>oVY8%;J6Y$g^kTH[JAEXh<9G%bCUSAme_6VjP%u\1e!4*)iE,+@G/]J0@s:#YjZ#O*->V./V`2.g%V:G%,ee9^,JF,FJ7l#3!)'?qqb$`]']'Ug$jka)g^g:lQ4rE%Kp[KN]I#e%jJiRs9BiG9Taf90YR#&rCD<`%[Ho0-7qO*F_2rOHM_&sRG./k/h@;s[\/Tt3&29nADk!L/!:86!MB50%?eZFQ7^55(%j\prUk1*8,3Q@R#1W2FCf)\Y/@D<EZj^GIkS!nN.<:8Ji'(2UO*DO$[\Wi,*8Cd"3SR(iXP&f/!#WTn18kd?LZ.t<-Zn27sDYM.j%>[-j:iFjD\jXsCm=dr"4Mp!P;1m]^\LMnn$(D?nA-_NS2Ya-$_]NnqbP3\"@k@&bk94;(j/^Qm*-Cm:-9=A*2G#q?!D@;fM:h4pL%QT<96*]K\IP=+N(6"dgC@H\[lmgM6gL\La-FP[mW359J:3HX*qFOk9EiH+4q1[%/fdH&Z"B@%)u$P&RlkFFmDdW-TnFP[mWK@tjo%jj89ccrj*U]H`3W4+khiPGnI=6k5dVIc^HJk\LKe#PGKJ#(A;?dIqd2c$#Y)#1cLba#53D(@rQ22PdEu51,<X]I2GdV[,1VkIREK%%-nJhor""3Dk"(KHgB0q;)fa\'tqq]g$.S'-]Tt*XGVJrBG$2X/.&N4ZL77rB0H']_c$!qcPc8qS0Q!KM(.Nj,$+f$DB"bfiBHSQ%#Vj_T,$1B6&gV2:c"qQ.XokS=!VW*J8LA-#mkJ_oXUa$lUkb[_@T0(LF!70[0q`\WO@nSd=st$I0Sir=S'T*(LbRN,04ITdks`^3%mg`@R/@RcZIWE<8D`E!R+\jOJkC2?D^o+FY_-0ei=Gmb7(ArQ#,4SL63P>n7&i-p4%uE-^1ut-:>%ZX(N$P.5R:0A$YriL#O9Ek1%RqS<@HEYNQf2QB>jof(7D3ro;Cr'M)?k-e8lg4K1nQE%J(fIa#4?gS/rrk"1-p_U:oq\AM%"*Td68YJUf-)#1B:D-;4?dN`e*C`Q%TD:hd9[B5Q@fEIsGj!!n[UfGHhR=W;J9!]CN.?32Je2Ht8>hE*@\+Gn5q1s$'b[$G2Mi1X8R(,^\+td)oNJP51=qT'$qFsEl>;tf%ZCNe+$ta\aiKl-/"5pC:f%Y5X9>h7uoU<caI&(iGqJFfp.lt&D\*NGJBtF[X+k0fp*i?QMmfm1h'S4:u];C;X,hV#m;YTtAek+I<%:Y]^53-,p/E:`7@IrZ+2E#uVR[OaFgp#`\1n[o67l-&7JKQa0/?K]WtCdi[4=BY#^pIlYn42Y1B53YR$l#Bb'1LNK5\'IM7meT&5%4nd6\f\+/QNs4P<4T^YQm_?9[WOF_a*]b1,A"cGtnBQ!@EM5pr5m<1fkX2XDHIY:bMTC#NaaU/146T'HO`BoSX:Z=n<d7oT7V)2p%7:c$0V]BimVV`?$B^V?PM]pMib]?#kb`Tjs#h!d+=6]N(;)A-mk5Mt;1+3UV1%5b@5,J3$,;Q]d<0W.2hM;TccEfuNh!V]D,>9:X%E_\%BG1^B`4$=rfEXortosAAX6f#>0pme3)0p]YARsBKYiW8:8#1Jtj2m9'+nEtY@FH*qZ(4CZNRbNrf*)RtdTrVg)6q8$tf;JH*%0Ud(B_n]T(FT[D2*N]_,]XjbKf*Au76l;X4'&U#4Lc.i!PtZF=4mK84>4fS5O)2"Y1`t$+^:k3@_^Tq(p5HLYkJII1A&IBF3Lru8%R;AYCLO7>R<UtMsYDguYjhi7&D\SVthYD+kC$>ig^%lXDXVukl)T1[S\X\3mEB`0N-gl>WDhrd#s3,e`D4U%/IDs+dMnS.EUs6>9%a_.A0'7"#rdI6&m9:=:YpH$b2@VBIHF2A+b]k$c\CFq4[mgQ9/3Lk<SfPCHoJj[&5kBe!o:9LoWU$Xb?i$Y+7g4O2IAQC."3^l<R%L-a*A\DB3)dZ6k;1`:p4]o7gX0:e+M#IVP`]n^^)/U;`:`L#K.L'WZr$&A%W'f\Jl+l+oa&=iK$Fb-7]a'm%_HNfek[]A.W'HV8Y%H&!o$;2Wu!O""qXF4`>pp&8eR)6*88cQt(%)6*88h/@[27OgRGOZK1B)6)W&7$)NND(](Q-mSD"6lDt*,K`Qj)G*E`Q.%V;-BF31%J'C#_[VMNf#8S9h)%C+tf\"R0)JG@nFlBI<85J!#2AK!'A_0A/N@GZ\LqB=88;5OMYB0n*W`1qt\+KFOhjFi7kZ<d,(!\8.0`"a.%79<Ye6iU+F1;hJK7+a6'3nTG]a<pVk&`2b1@#lkD+YQf9RMPr^U5(*mp):N^E$R>82P)2J9-TJ9BY30b:*A/(Jkaq^2kEVpQuYGZ%19CiJM239e:^uh]DoOdiB6=ECf7'.Uo2Mf6p,'1)q3[e3V:ingfY3G;c^AFnD`:V<00`+na7e"\-,)UOS3,&k+6Z9j@90#G3ST)7%hjumXf]pqKHb+<pA*-rfL(ZGiX:!6uBC"#f?I-U0@icM29C'gnR7jIUbfiMfET`YSG3b9!f:=PloZFD=*>`!CSYPqO.W1eXXVl<U%Cog=Xe>Y%QD<=8BKVCU1D"DMPWFK\hYi?L:>WW)jDn'H4;$DM3G3K^Ua*6BN*o6D44>Z?8S9q.qb<IV=:']\:PG6/8\+f[W?C`._%]64PZd_4;'ElE09q]T"Gbc2q%h;dDBM-.jU<h$8b0^id7+8a<K01:9Om4j*=i`e)+U96TVSmIY'FJ$"0U=pAXFRVo?6Jqa,,c;lr%"*^_I/QdckU:ZrQ[JtmUg?fo]e+nT@N5ImVL$dduB<L#gH`SQun!U4R]HlZNrL3GC7eDl!VSbK9_a`U*j@:K/cblE"d2$"n/r+Lr%hXA1<lk)80_pc1S:7O)Lk51mq+F[)KPL3lWhJWjb%r'"kO$#8H$'%oHo#mKj4":^fRe?&)e`n)^2P#8L..7$$36XWGSWb.gGo!0u%VK3)h=l/-X8N*,<aP#P7a`h@G3?8+)T2Buc2P!c!S_IF/_e7G\8$1[4:$2M6IbtSX:>'_a\TH\@'Sjf-F5!NhU=Q*`VK;<tXh&Ne%flSQMl!i.Vn+D+^FABAgDE/rZB@@`)[JBg,;.n?<c*$$oO"-XE.@4p[2rWTGFABAg=Mg"RS'GaI0Y`Q'S'K&P)GrD`'.DHQhP%:?%S3Znb.3(16DIaIQ[0_I^Cq+:B(Q+23S'EILN]>(:31J2b/quie:$7a6(\3!o0k`J9Hd9\\Zg"!#^J*MMLpH8mDOheF2P&;*kn`X,%ZKVYnb'.IHH0i2)0Up@Eb<>;:E\U26O:m+V8@+M^-RtO>DE2TW!;?P$h;miI!USB:!.j1!plr68cMCWZ6bHL`AFOhH(W3pfk@.`l%^/mfsVg6l;RJ)e7ki?Ya3%fcupF@>s0>qi;T-<Hn_!+U@^NF62&d^@`1/kgij_"Vh$qZX:0IUCRp)DF'G>BVqbTbO$&T.1,*YD#E%o%U>n$\Q.]R6-[Ch@JEG1!(H.\at)Z`/XZqT=K#g/^+";h2k3h"q(rk4up\?G95q2NJHrYOf"p:F8,*Y,1/2j+eiHpmsX=n57=Bt%EI@!<h1n--X7*hF2]-!YXIcs-_#ib%YZho8K&g"FamHSkG2RZL3!a7,*bQ2h,gogIn"J$1_jj@cYMj[tUU0FZ%J`708Hu7l<n`,j%Z,8h^aKWpMdL65jYiV3I,X0K-*+e66ZitBLaV5af%s6dA5c<(,Rj1$)"i*TM)X=\$GT+^dbsQk&GoMnho5WaFah:iIc*=MJDE&>Z%kK$.s'#IcmE\t4K&f4)F-R1V(Kg<V6Ua9GYmD>OQ].T*4<^6XSQu<T]a>bU\$8]$VZBEWk0@`(;ka`]W,O(W;TO5ZSmKH3a]smaW%6@V(`[X2bEb=hs0k(C"tW>d?AU8MSE?81`[\fYE.I^R7Gn+"bmNrdH2pJ[V!UY+A@:e#Cs!/;.@Ohp:(#DV::\CM4J%#a@-q\p)q%W=1t,3-_S-A`@:U55kp5)u@6e8![NXhA>VH\Sjm+'DR9n@BK'-0ALhb4q>nn(+:T?H5(>rnqfnEb'RJZOmu>@3ubp6Kf_d26hl6j%q$VC6ghMkTT?[`qa7,:&=//Ei]u"BAKjTR1XM+2uW_))o^41LUrD]Z<a4LY1CB9;k1b7LP.g8]+#j+Bg>_2MG`*.]NGqWF,r-%^;%T)2!aHF-.%WBuulo[Fah6R_PeCP<r8C^=/!\N[AqP/Ln]@]NACCXWTQR%?A4Go?J<3=O-hD%@4>mS=jt0XY]OdRl6C1k$apjCKlm%?g/cEXoft)WP*NdlMVO`S%PPB-?FSKZfejP001/s0N;E%)dSKiNDkS4iE6<.EQqb'H68S5mF\B/ih#1F5IE5qePtfs<rf<l@$qVZ%0K2`EY!]sg8,D#9kNr`B7CnUDpS_Z!NZuNo0\FeCg;C)R)%tJ[7#=N7M[+#S:=;LDIDr2IVeTp\Z'=CuDl7>fhn`6C>.K)VWetFV%IPhX2M_5m8;^bjhI4FO]pfm$*Keh-+qTRdnXP>]a3m0U$dIQZ"X4\/qVP`0r]f>a'F7#2AAG?h9:.#WTTt;)Pp>hNopZU#hc;_Zo%e"*&TN@AmZ:W&ZIj88RgWG*FLE2g22F&Su_C)TnWB0!+P0&4nE&hf0t=,Uq),WthF59TDNA^Ou\gqSVM[tI+t-M"`g=a'+1FQsQQ%emeb[X%p1)8Yj]01Tm9Dh9YR,DWG*CSXM=DXgmfDfk(u(AdimEJ(%:Lqc/5oTh%+b1*_oHS3GVn,,j,X5J9N[nIoI[&"&n+lU'q!%W(hD\\PFU9%bf5%U4LQm4e6BBp4EQYVselLX<$fOOF-\^q._e-=3O3Bq=8qg7bd-)G'VkARfXV4Ej^#ZIH,B4#>@]68O01P`rg"8%-QtY;2"1<b"*%@FYbP2>$"-DT=_Rofe(V)dI\^V':l:acO\GoT/3-`bW-E9U3tKGRikoqL>;2dMUZ*)fF'?05\o9hPCD0`-bH6=S%;fItH">T&.AUFF"&2DgbT\u.1gJ<n+dHk'ffsT935-#3/Sp/j!`lDt_g[Bu7BlBg0mrKbD]=or`3CfB0dZQ-hE2ZECXh#,N1TDrE%&LdUBQ9uXHoLWs!"j4ZniX3+=duM&j6kVtZ^@%''7kTb_Q:2eV7k&ZMVriR7!X_\(iL=2@,7*"+\(d2Q%hM]aS8MW:`VE*3gJ[IC%oFfsl@6/dPO&ca_82b_mfK7NB>`C]64c2];cQbNV\$b\%e-N-ql_#g"hBs&b1D+TW5C]:bQ*]S96`%fBM,H?>&p4HqK0=j6B?C"U%n[h[5o`2#hqdMjAh0?]l*K4HV\NGEkk-K+H"A)UfNJ:o*X,P[hn%U9dh!IIq/3m*G(A#_r=b*;.J4-k]\:GcO;,;Z`H)N:0@.E;d%ZN0[tHu]4h0<b]+![Q"k$q9$:"\>'a(j]7!+=TIY7NOSuO>I3hmNVt[!q\/^?$G2=ZN/P'$t;Zp.%gGQJA:\(T62IWA8MeS.%eJb%phPr]3C_ssr[=Dr47AqiPRlZuT'KNbducl;k8K$nl(`Wd3?obuP]%i9=8G,'B=i*;CJZ(\ZSEHV]:n*[Y+PHhINuqp)VNqCrpT]G%h[T7MGPqs"7W:;NlaqW&;'EQB4RB\/hQQbbFZ5Q&]7/Vq1:R2(T^V`&^Zn=pP)52MHG8\-GY@W>n+s^VPA:l1("H!\&LAX3^$6F#%rCZg.r;snhs$(Ahh;))YKaiN`I#"AJ(.b;=5[%i9X9\lb#`+b?PkD]85L3tlkLsLmb`<<dGe99CjN9Jqg7CI>cN3J,S(IQYDeF=`%Hi;ec6M3_6p"Lu;n_[j8hY1?kJ"u*)k$Gh$&%]/uENQq?]mfF3Q1c<Tl_jP_Hf++tC?PWDHi;fn`]iHi^V/&-s,3EAq-Li7^[gjf%nK%6O>J6*d^UVm6s2=["Yr^gVIf"o2m9PG.rU9F6?W2;-f)!;Pp"Og`l`GX9T(i)!p\O8AQ&@$[@/'Nb+)npeL77[Ap\MR!<n`%g%pTStEhcj[8pUo,H+FF.En+GEo9lb<r83P=Dp93KG*r#4'#PV=`52a,'b?+CX>BMO^JG8p-J#a[[rIa"n\%f%QD<&CAfC*RpcF<Z;%RkaOVp\O:GDr-\=IDEOFmh8.ZiV32.&_(aUlM'93n\*91Retp]GCXNiHj-#/JCPV8]mfk2^R"J&J'n69me(qAME2i*YM]<dFltF`%][s@MDs`s#12=#]C6IH>?GHHX*/_6'&+9,Fs&Qo7k!$M/bJJ\ZqtLY5c!'Pq44q5qqN\b#E8N2.C6*`?hCTUo:YYXLh!;G!1-FH\%FRXYUhK!Y[XaY3KA++cJhu:+]%A*:rh<VPbg:m<m]`5Zoqqp[_!5%>TA+(0>H,+e*p<%Z,HVWRUhWqX`Qb)nhDq4"-oj5Bl"iKk2%^UN?_^?<1YHS"O!$J%,l)I59sjhK[<[spa2MELUKp\O9BMmf"6pU)E`a1Zs%SmD5#h!;GaF()0)F-(bIqYo:A<kl,_>JBR>If!!\%?le(tdapEN&FVIB\$p!mo>^/0*s8uW1$tDm9Y3OUBA2/hn=K$5F5l30PpkU^d>%>c`fk,k6Y,L;`6=T[$B?dg6Fth$c^,MTd7'2p%G.jD,FQE+[mk9*=W*qXaQ:L@-hKeYN'6i]rc$OYp*SPb(_kEj'c.,0/T&9>*O?7mNMp4%R:1)^;pW3f]oABKDpS6lnQ[a@'[9gCO%Y26d7h-<&;qHL:q0E#:%J%5BsHu\0-QFV"tBJ_[9T>+oSrqZ%"F6i%rhp&9/qiA;\pLf9+pZEW)2YXr^lZ7.9e^eSYs3jombg.ZN%h(V'crTQ<4/&+2hoYo"3pX4tdc]<JMiq;P;5J6phmn:E5q;(UF1-9u4rq3gDo["C505\4Hm(q)i?[mIhmW[h(5C9Y`onX"M^HDAa%NRR!amll)?C@f'<?QVH*c.U-OZR5gWD&g7gpr=n_o'VW)gQHAZ7G?Lq6SJGK\%V=^+('Cgir1"RI`sE-rl:4KB_+gjB"A%apEeW>%\9[f7WRL5KgM=*.3nf+FR%M,Qp<ER]h)t9W[!0djF6;b3hd87m5(<M(MjNQ&?RV,FB;C:BhedhJI>Vp;r.oD,Y?^mEqo-`#T:Z/X%nVY--]4BSYk<A]gA$E%t(I5((]62P/p6pgOpTD6Mh3b\IqTP.1I"2%?Yu;/s6Ak/Cpu`'geGT0iWU1op@G9#cY0A&.O_.&F(2eUi%UXL="\km(J/j=]tqsrb0hgb[Tk2hdGYHK"Zrop=T"+C%+ebdC:pq6"Y3tW+G@;qU2E<#k+.Ft$7`?/IHf59KbnbUZ4'5hGBGP1VB%=G(RpcLhj@pY/I0PPFgHr495BKjV=cMqa_&DV`$ehYcT`htm5uc6!S*Xk>lSNa9?X^-IH<5JD4Q;I=kFi51o<6SIr,c!^`&G;gW:%5F`Yln5Feks0+ZciU<>pqB,(Rb-anB?l37B(`pG8o@QEYr6(;a++=U4oKR0>4P8tT0,U-HHi;GoO$?aGKQHOX_^qB%^%,0g!Iqeh%M3;j+gHYL:qt8E:b"Z2`l;GNC\*+F8`hr_2XT?JNm@RbTlYZX&5QBQG/RH3PLUW;%+5(Jfq39I9[Ba;g8>CCCg7hXGV;f[da$1UE%Fm&L@orC_]b/\'9aI\@4T:31>2f=gtTD`s1^\R6gd@3V$55K*,q8qllM`6]eq0D/tr;#4d^Us:-HeMWjdLR^S@S/i`kk6+00&QJ"%BKqQ2p2Kb:h[^7O-Ja9?BD^Ys>F;LU8E`(Z5<\f*eg^Hp:&g1dr6qLSr]7LdSL+B.rKMd%L[3Djm/t*lg,X9OR-hY+DSZB`g\R21%oEVZM?9C\A\';DRM=fu7#Hmga@;Ff`H2YX!6$L9'fZ3R0T>,Xd>11aa&*`M]bM*QQ*]a2RZ_KI_T"Pd9*:$nO&Ua!>2e&uNIu[4b%F16L>Urlb'CnlcY]8J'3V^ju\[`Lc,?=Uu]rT4E/QgSZr=m8_nqt0`KbJ.r-r9hGTo=)WVcYo;m4QF--G/Q>[LfXJ:5;nO,H1]]Q%orSHZkq@FK.nr/$VfZA.bK3A1,K%2UEp3;O014c^7rNri?9WK+E]Ml7k^!*bZU6,?q>2]?iB.tB05DMdfA=5jkeo\-^Nd)@_)>ol%j($6F^3IZ)])C1>'>3EfD%ILK20gHL7meBfkJ+e&J4Pl>gCc#!`quG!c''s@gif#[rNL"Ej!Q3siNJjtWMj5e>7cs8$Y-pEq/NZh%`N.a7p$BZ=)a?2uX?QTVnQOF/feU;^4*Fg'mqE][0mi#[dq9E-5TBnfgUE0'SbmN``.st+:&E8GB"i"4Is1OrBb,W'QfEgs-XOB"%T:BRWo$;C8N171h/B_>rBa\pb?_4!;Yh/k<NG@6UDPNJElh\oQIpIFQ*:MUj_meAa3:se%_$_W&?2O(*ag:Z6Z._WZS_X_GrF2i%%e.PWl]J.E#8)j-@K5=-37lqMOC9N'_$4l$_8j2YKNmfT(r=^RY\?b[^c(2c8=YM0OdiGK5r$"]Dp<cCnc<iBBCco>b7*XmB7VTJk%T2"mf\fp6#4`2<j'Xq.-EVoI](],TZ3&YFQ,VCdA@h#U=Gik5TEomV]=P2`!=<Z8J$)?_V>?d'CH[4M4R%OS/s4&st+!4dkc0cl;%mO\K@PK^c;!k[]lQ#!-t;EEM:6rbTU$s,u00@Cr&+$9M?^"1SMXo6(R9kqc31L6@!LX>6.?@hV:LNYjf]mkj7^=t3o]ik/_'7FH3%/fju)Mn[g3D12'>9p0ed`c0?GH>fCVA1VIqNO+sYhO*SioLX<+_cM7!DU5^W2MWaViIuc[;fLG#;m:?;Q_3"-,*T5g<AF;0^Y"#K%>,*GT%o[FrkF^pIB\]l906diNk]3H*0$1k(!f+*[UHX2#QV;sWD;Rqjo<%+XT:^u8d.?WT4:*Ynh>(KI"OqkqnL\j%r5::I)eT][%/6+Q.886sWCjmKY/lachTA6I`n'd%jDuIK*`]JWYlQBDhCNQ$JY/\S5TkUO*,?4UWRQc#f/Y@:>WB@^KEm(p%_dE3$fJ33?KC`Hp%T<Re2LUE-?psVg4T1C%WX7>bUCS1&hcY]:VSjT3FYI2Ns;n#A/`st^O`t(pTgBZsFe!N9HN?(5CNLe`%'EA&_;Zi#mSOB>NX:F8r%VK-N`hjH/'UknD4Z,#fm'Dm7<SN5SJMQM?ee,`W\Hf9A(f/>gKW4(TEYj$O<rId2p0NNCPe@Bmt@CZ(#_]7;&o="\nrHUPRo#8m$%J)\GXkbes$4jO+sZ$2`FGObk5Y]*6Z:nhu7Dl&86jd,=?KU]HB6c:S46+=A1o<3'2eZW\dY[bFqf9G8&01e_UXl&<UrT!0ek>1!K%o&?RL],.ZK0<ah,q!GCP@:+hc;5<B\XH5`*>g2jThUEs!o<4)[CNk5*/'\sW]#JrDZ0*qQqT5%:h/'%&o0TNbYE!I^)BsKRgcDH"%fje"#N:mW1DD@?pMb'+/s/#hEY>)Y)i<=F)?G*l*eT!Ap]gmR%8d:6Oo]G2IS+k"\[^MkjoI$-GT*DpR\Xc[B+3#aECA.3'J,%6+%(\J:hWqF@FBLtq%?I7*NGAZO(n;!_!CS,KQ-;Lq1r^`?Gj%YU3o/5daYX<6\lfZ%%#60F;TkbT0i.o'a@W&qhe#n+@31gs<l/WZ,%=dab]l4`NSDmmd-@3;'?'[uc8PrHFf8Y8GB]sAfEE=rH?aPD9Sl'9:b"`29K#$\5lIf@2%ZuX0Ys6eFHQ_&$lG2hN5O+,our;!7G%DCjY4If%.1m#Bma#6'cIIf8Qbs7!Acd;O1mToZ?ni3Sd0X03$u^38s_q<d1$f8'C9Eqbp(YuAED$RNE3YCF-V`n?us'&%P<R"ENE%F164?cXmf6q3rD1OMpUsFUNTS^A[OBjIYhBg8hq89A+CajSM`(5B5f/;`JjdaqsM2,-1CmDX>,R]'hN5*K9+JBD5?6ZJP97+"mS9%=E_ViJ&ZB=9WZ:&j+iP4:MsuR3E_EP%;p&(?>M:5a40s[2D4qur5d]EF)S9Gq'3qp_PH%(s4mDkddK?RIraRj?i1[Q/GI"&rV>U@%caW?/>i%$PY?np5`N:=RX&i)lH2R/R,"nguI.lpQYiaaF>K_rBL$^83/O$^dN2*'VGB<3ZS^AC+b<lg>3Mehg**[YgB/<&gK#H\6%+6/a$I[i!E^E3?/IVo,?H+l^'f%AO#$]"/4M%RIfP8*IQ`p)kTDSOn71B$7oktU0nNLO2KCp.5'J,\#cT/-`>s54DHW>/MH<`g>]%ckYD,Cp^H)[MdqKq=(R\:Hj)JF`tfmDUnVqZ-!_%4+/*5n-.'Rj%mYb/7,r6$o[##^=jh[$l]M&$^`ZY?L[:R_\]c#r-7TZ6QBt(%S"p#Fk=peJGlI`gXlZ(tH>tr^R:>OZp:%5t4FZhNMa)[fj4X:N[52UQ(I,>$k-JEd?[_J>nTU&o^K6bo5C3;#nZu<_Vq8C2hUqYr%dh4;uIe<Q)a6SuX)Ll(Lifm9$3'YEeL<9<_%-Z.$?gG,7Y(-B:-P%j0C@7TroaMu@qn%@9)f1*V*.Aj*^&,^@PO@^q6cZ@E4GdG6%Y\AmTj2'\A=7*Dd?S7aRmiOlec54T/^MrnQ[tW)1G%>IMm9Ma?YC?U0qR8/WT09ROfRAjPh8$3q[1@b*XMu4ghK!b@O2V)jqDjm#%G$\OiHhHprb9-cTqT@*sCZ!uD?gdj_d=pshB0X#4rUQ:2=6mnVI=:5S$i[%[GB][M]Ct=:m2qh)ETgj.b,p/*/+,-T-It*Sa79B#%"gmhBa:n=F2E<u#5olV7GlQ[25SjZ=CZW<QJ^Oanj9]t>rbpm)OsXk^5")"+"`O,rpnop_#ne6+o:LG.V2,j(@Vt.T,"8TS&6.HO%^R$-FA;DT!r@at&'cCItj*r7AXN1rimsh8MZ%"$U6n_jj%r4u!;X_c,I@\\S:EOlM_NjRCrH##Zb7g4$CCFj@DuP1!rS`[\0#)l)%oiLMkT:EZ"%tFK"cFqOf^4,LB_bYL4d;pC8hW,5`G1t$#IJ-Wb<pMDWlj"V\7dfe@IH8sD+RC](0d]Nq7XC#KL_#JLOt>Ggq;guZ%DL!JR[h1b!O">[kE/LZ0UK$R8`Xct#:q7jDAM<SW2c'IXB<:'q5@+'Sc.0k,^gX_H@'5uGE7In2:l3Ger9Y.40@!kZ)KiC_=&Zq;%a>nD<e)*5O4?iU#G<adoa6p>CRu<*O`5;u/)g:lgX'k:(]sc*J<d_jlo1Zd2YANoMZYS8Yr+Y3@8t=ZVgNmChp`hPA,I,.GY3r&L%lu^,N#IJ@J\QC3PngA=.0/%gMrkoVB.k\p[0@$0(0mqp.+&?d6WJG)L3-XunM(@D+H?0VSl,TR^oWJ(-`H,dsSGd3u^c*bR7/Fjf%knD[0>TX%T_@<[B:2A2^m7W3BjPY0q^58Jj3k!kL[OrqGqub?>S]FL/k1J8@'n,#XXYIc20HbA#*pO6R1JbbcQQ8(Zhr_>B31K[8%>-8=NCOD&sqmc!)LY^]ZkG)0r5Kd7*Vbb0*Mq:iHaYF$Da!k]8REE?c%DMcgiPF2#QV$[24L&Ic!Y17Hf6c=Wfl%K-KC]>9RkMFO%.=dWYmB52l^"8d9bd7*)3/]")nH\d#qOo98Nn!iq[)eTM8KZ$Y]2(*:nqm5shK9Z`>uj0UU&P?8`p^*4gupM'n%K]Is7l?ce+?TR%khOeahm+ijFXk.Tr,SuSJ>QD^CHTDCYFcp5pHIq(PoBLJmctZ-0GEk:>s;]"IrXZ!'RfL]Vr'SR_Tu;;33J-X:`?t9m(bIOpsj_>%ilqur3HSXI]CkO+1j8'X6!/(&^r$t8I@uR2RYeZR%HI0nS]ZZ+rd'!se[T]#mFuc#j4uohn=P@*JI:O(hK(I0I5UHj^?:N+Y99dY%%S55rT"V!H_1N0V`Tl=4CM3.nIp4R4IrqnYh#7$.Im9(Ob9*'H*'/E3pD`-?*^4u71SCA]/%p3&pn*&*M1=d-mfQ/+h""``io+5t%&'?IG5'ut+$bGdeo^JL'%DJa1]H:ECI!o]+p!Lf%9tqbF=9D/-ZjV/bWMifW$tjG,m0rT%JJ!"ud&BZ^!i^T%`cq:sZ6)%bA2gWD%B>6;q6_/*":".`Z8HTspIFC"g"aD>BGjkm\6,[OXK;\>)q;$,gVbrp)D-5tEc(JYZc!NP,eq`9qb>#%7LKc:ikoADpb4RNlPkN<>%2B+NVI:ZfMfTZYjFVF,6Up9.)#><Ou5=o?YI+Tg=!_`F!I#<-hc[bEB6bdlp]PD7OUZ;M&B=r"p#/ZNf4?;G-;_u!hs+?IjhDI0#%.Fe&7aVjQ9R^'<kNl`0[[sWR;Es_)[+6t&7KR-Gki;6^`2<j@Rm"=bF*E8X.55)he[gnQAjur*aqcF(VrkEMiB,Y^deCse$T)CFU%1"S<A)KOm.X4Mj]JU%4Cj59i\[eo"_5(9bKf?Lm4a1mB.c#qjRZL21<^I4a,&(cihZg7>[qX1\tNVhHH?bEuJa.l^c4Fd(_`W'4.%%I!L%]/Msf]RG0tT=s-R4gTU=ou>d*:U`P/L[Xkalf%e"Z[T1XJ,B8I)/6VZnpfCIT=#d?Cs`2b&*mT(s)?;cs+9FJ>rtIr>jKg=%%OnME>q=%njnIT=@p^9a59Z'k]+s;eQ)F7UIE7/IAQ'ZJ_,!.9W`YInWi`ZnmTeT=hT+mV%drl(la7D0>HbeF1GZ>PeuW$S@a17P%Q'/Q@VlY#FWHsN@Qag%*S*L75*C4=B45$ffDTg[/f,I*61;5=W5p<j.O>A%7PYGG5Zj+`e,?PC0css14&'/[WjRKLfA[@9soOr(G%IArW\ijW``FrufPB/#ShVe3f3ENKW()-8pdc?L40MCDBFTmbWMep[qt=@fPKR["3]SKX?S:].)?j-7-W&r_5@1s(]?hjW=-eJEst%/Wh117L9?QaGCfi>Ii*C2pd2#!6#T3\a52=^(SqM@tKnGAVh,VSNtq9N`eVqI0/.o4SR3iCq8$7-&-4\KQR^J\b<oBU#iT1-HZkW%/qGmL4M>"/@Z#&<U2JLNCI;1WpM0#9/1[84^h%a"1q]@=R-RctT"l#*9(:>($:uA,9I7cFQt?,BOF^@IJuk-O9UA3phG-`>`dW9A%p?UFhS(O@L[&LI_2Gm4%D)2Zp/T$D'2MeNF%Ti,U#3tNT?k$t"!=C-r"uU7u!_GDpSkZaIj<JuWUu5c^Gh3.!,7%c43Xn]H->1u)%'<%D*g9'FAfa$"I>2,LXOJc\o=-Zp5)[U2-O=cr"jE>6a=<3k#oNX7VfN-`pD?\Gt\q#bW>\Xqd4+Vi2k/?X&RiFfHKIU766GXs/%rEb:TW$0_qkde-,!eh&'=GF$+UU:uh*O/<&gH^(U6!:"[RD+oY3`H!ejQL\?8X>kq"(R6AY)e7e[Y+6qJhU,_jZT%<1:NN@R(e])%pB9UN)8nq`G!\)8\E`rZ1ZW$.K+[GPR*!<Ao3C#VSGb8FD8.F03mT$!;qdU@gY(9K"3N_bk14^d[S.g:OCQX_%YZ$,Pr"_j&p:d6%g-d52=6ZuuNFhBb4&[Lt.$EI%:hb,t"g$,@pS7uZ"Inc1'ADME^F)1ASJ?A\1+qC2_t]Qm5(e8JpGmX@fJe([V)1'X<jL"6C$V=;%mr?FSi5*%(,GUYFq.:S\?f-L$%X]#s892'a$&95bf`q:F4]66C!c'l:K,%3i+$adHP%P\':9j<m5e.)-dQTQL"Aj,4Eb3F>3]I*D%flla6C_K.][1c<LAn#7p_7">b'*\`+OdeIE7rWYT+d?QkFsH3\#&,tDH/YbX2Pp\WPbMEJ7C?NB`98se*.*4+Mt1UE,Qg?;XmuI#%BYDk%nl4;BhrC%X0=_dJ9]RY$+fiuR$>l:kp!1RY;OPKT2_#).7fhHN.((q!Yo5!.(@.cM7V>h^7X8j^R7;4,mf^2pT9)ca#;oh)%4#6O$!oP\^`n*<bH8&b8?[aLPZl_tXI89ALMiccc7/db#ZX)7g#n3Sm5Afc:-O&S'h$W4XamuH^b7Q[bD4$$%&Xl85H*);G'j_=.%]U@mc>u%4G\$MKo$`&@_4Aj/6E8Cn"*kP,0hB7[=<VBd^P@4MKN[O+6.+JqJ[!emn)7i96frJ`6VTK9\/.uVK(^K7ZVDO*C+Q_Hm%&_tCnf*1p]b`*_iP7%NSkZ:$R-9X0l"Os5P4Yg=%]oekf%(R@3AX'V:)/Gd=]O*-QQF<73anoJ"cOERp[9]>'0JqW!'3r?3E#ueA%!uUA<Qa^]Q`<oN_Yj!'*9N;_)L.J+k$!`K<#_F!<n!k"YD9#]3]koSLbqq2,8e2ulki+e!T$@f;I!0U(oT8faQ\'0;2jLp&9QiUj%)jlcp_s-N\HfR5Zc3(GDc3lV%c4`_].('WP.&V)]FK`#19-&2)'ROOrEKlE;d19m]"=bc;<d[]Id?GrR!Gc4^d;MM$P/Cn8noDTl%K5367Mgg11"k[Rh:<tepc'fd/V2mJ`G>=3eVM*?dkd)"q<GK;p[o;)/c>5_q=R$1"_`'MJ?<(qegBGNi"b&IR-=LV429>U=fouOH%2NI0hdZt<D\PPeBC63KccX]+g8tg+W:%WK'J4d7r_@Fh@6pg'!D-t\DVN@&^-XmBAek4Gs2$Qh)>\at!!)(iEe7L2OWsdQ:C+k7f%5qG^!5AiFL.1Q0>pB5X/O\\UYMcFVqXX=2>>;]PDZRUq7$Aig3_Ah?44gk*bN1D8eEY)C1A6K(*$O5@$e:sQtJ3*@s;6Dj'+&LQ6%ppM5h3m\cZm'n#EE:[7d2?5WiosG(PZ@!_F@XscP=MS@/2DG!=ZCQDWhbe/"WFcg",r2MsJk/d$g&\%5A`5r_$rn6GbVR+,@[eGi%?j.DLC4b']K2U_BAs?rtl3R)YK-n`iTZTg>c!7M^C<#:!QbMCr#*OUq"0k"`2]K)fkBq*d*lcck5NQo[0:EL=R?&n,>EKbtPM&m]%o-',08lb0r#o3tA?=f*CP?@(*01m_IidCJ34&e5$`!dUGP?BpE-EnS69sY@M7:?W:EHtJ$oZGH%9O#fG4:-W037n;nBrd+>1k%^0%Wot[^J[Xu@jQ_=,$/#bs&U)hEDsY5YF#M=,-i:m3'sMVeg;JS*J%=fH8S=#YmJmW'<GS)nm05IB-!)!mJM9"HeH<1Kg^?*3g_7bT%p!Q/C^R(N#@f"O50$Z-1l3+eZJ(Q[nfJu2"9p^8nh)D$aHHo=@ZU*EY=++VTqCL>sC'kb7gdF`'<4.6*'9G"AX_4G59TWB&#&mBj%##MC6gdG#e$J%#u8oT\cLVMGeS<O<$W^Gg8`49IO_nMO(,-rYDdGF:XR&TJ1nK`??5pW,3Z)#B6K3EG#C/"n%2'.Wr+HD2$Qc5Vf%15kG&a\jZ+40UA6q_Q+>@IacX^10R*%(=Mt7QM%7G\fc/G%;P]!:CN:/[T`@3MN8S[AJ3)1tW8BW=k1Za=%B*Jd-KT4tO$"J]_XM%FLr8Tr=%s$NaXI$3%\0`6<>9cFLDcr"8>KA'Bgr[##J1*'alpL`.=daTL*%>@NcL/22+H>1Js*jVG0.SV89P'gAu+.:bBODg;LoE%aJDKKI/r"UI)3m3a-t%PgI!Tp9^)g4@BS&85aL*12+uH@`C?,dK<eanfVf!n0h2\V:LFa99l3i=nm60/Cnka,9g#/h7[;[qZH]9$%W#Cn:P-;-MW^4Y2OM'5E;M&jD@(QM!=K"]J%9*dN#F6c,CnODY!cIO-<,!LFj^r>%C/E2F"AH6YV7$uJa&*:F990;[<<I=*Nr3pe%'^*'PM@<IOc0D*KC7o<L:>.<>W3AHSbrBO4aqc$lGtJKE%J);I$Z)JN:_Q1Vr*]\-K,S56&R5cE)9-"Na^Up[b9a5\=p`\!dlsEG%,7U`F6h)mo+A1/O&AjjdTVc4uYV0Wr!qT@<P)dV<kcEu&1-oZK>/9)6)*kT+;%'8e3hF)6X"d_TcsthT%qMBN\8iJS;8`0arAoMP%m?Tcg)dLTa=O$3U)dlU(Jo[:%95MO9X>[(J01B!M>,\ZpP6ubTT`RNKDTj42<?p8LjjA-3mCpP+[:"nEWkIc\BUHTd=<9`e%]5+@%M@EPK8kNR!&d&k,LD+_FgSZh)`[hRtIHjNJ2[G@&6SXY=E?MT?!B,tr;B!@,&R>7*1Iusj5`JQ_X%TSuOYj-*KP.peNiHhA3Bkh.%lg<c9BMc!H'YYWjc(OL.grMB"[h#F,/iQs*;nN1)+>RX!$r4QB=$#/\8bBU[9SrCH#t>A"!W."k<-VV4loJ4*F@ALf<4^M$\CskQ%GXGPiRpDZAj]Y15%0Ods4;*DU(j=^<p'oT=3kk\RHF;dQ)A'%/S6BT2@&WtZ.Sf6Z6m:$5MA+np"d'`i`4!\Hb65em6(((N@&'Mk%:YBDlcd9P'>KI!kr":JX7E+oB$(0G4VS;1@`9h"$"4ZI*T#sm3ct")G@io)?`Z+NB7N:Y..+:1Z?k)6uD*+ap2SBG&["b8"B@("@%W$%dWQ_503=DNj::)lb*0^>oIEYD3!<#:g'&`+04+>`?HG]O"Qe1km\\i7D_FaB^l-N2>"IG_=A<+ql7%1;f+T$8,*4:@Vu<4YOB%9c]S2CMsu?FI<N(-W;??WJJXT+V%u%AoT.'8(iOdJ1]IIbI##')cXMHajM\58\g2_1d]9>(tb\:ZcR(g/2.3c+GSPF.9+fG.nj&2%8BmN$KfUb8Z:t=NN!I9k&hFsW[c>!$5Sf(_IT+(+6t4gMRAu]rNfJt,*Mb.d,EdbYho+s0[NliDL2@qX@#p.J=M)CC<\-/t!%`<J%12S?g%S2oO"l,Za!(&"5'!GM>3!Z\_.U0M*YAI5JC3#Lt.QkZ#L03&55W8+Z<0gk#]-Q5ja;Pd-I%0[2($7"SKNBtTa>?$b9glAl%BT5`]JGEA#6-55*d_I8."VS]VW1AR@LHmPbTdD-eGu[-5QI4iL&0/ZpgBM!j.Z&;.Ljc9$[;<p&?ij9(+c+`&5qjlIe0[eD2^oPT%SHtSib1o=C4MN1a[/bPn=K]+&!fM^;Bb>D%8/qK05t,nH[Z*RX!sCu>9)>Q>Um:Ll0rk$(,i:lcBM,fR01?^rT]]GZiurgU;.QA\%4pqcVYo@b'@j!6qXP!J3OE=Noh%:T%fWao\RHAa2I'mFbD,Q"_kA6L(:%l6$:%0Y8KNGEmCRLcHh^-CrS>B9@\g<?QM?rn6<u]DD%i9g`:*e6&Z5(hOE?JuJq8"Bsfo!HZ/K@"()Q)AVR-j4,6D?1'?&0#@n:c'r(cGRqX=L`/PKQg_VC2%u&kGM0C.gB<`(3IYt<L"1!%T8QO=i0OJ/>Z(6XYC6XqT%23hCq<gIO.L,WV9FaN0oEMpPuG,s>Z6GR7Al0s1-%4TO9;?Aa@sGfV])tFIFE1T"F*%K8F0FJ,;aQU%/T5&F`fIbY?87>A<M:X!=?f%`5)WXs(X"'9`Ij?c*9lS8+AV:EDHJ*=P%=/CBdlafR;K$';pd#&C1.o*Z;I+#CQl[7m=B28Il\bQ%>e;*8(XG1`o@L47X0C%1lN$IP;bKT0NcZ0m-UNDe$[TlDkI',IFfY8(01Vmk8qF!NAB\0QORp]3)jm$Ma60asabXm+dA!P1$XV^A%.[N1@6s+2%o:mm2>Up'8T]FT2pX4q!Hihiqej-t_D,q<@DMg?QR/GKJZO/!+N`P\)`0G#B!EuSa$TM8--]kIi9+,%e?[=J0#*p<S%$c4[%Y4=.(+!f#9<$AQaI^]qf3eOG8<Clg^81C4aor?(umX_WX'Q7B%Gqt9/V@qND)9!soor808X;M,=7WE1;:.FbGg>%Q_S3!a7%#4#8+eeD@FN.+U(-;]\_DpmKOIZ+IY>EA11]RV=F+V8Is3UDdaOr#g(Or$A[eW;N.$NT6I5,IEG!$eP]WLan+-r3GiHKY3`^MsI3%(a=PQisLLaTMPp0*%(DRPB+-+d8<_D!$IWX+"Ct*!/&ne29H:,'O@UKaI=t21bsUAPTp)Mf/LLb:r^V<#]bl)?$-G*!+`^b?h+8e%(5cc:@/uN.!%8$4!0e9"-q^RNcO1!m\uC:Y`5n!I&$[3`T0REg;@b3i+$FEAlf^gRcs4uN$HWZhU/hpAlPq/c&W5d!Da'hi('nWJ%+P\(J4i-;h01]O:h?`i&!Al["'sJh.7J$jX$NQDc&;\a9!;YPa-Z`Gk`_hZC!.cJr!srF?kpuSLG$>H5#^\h9R`!NpEU:Yfc9&:g%[XIMa&iP8u-#<d$CA]08%iT0p)MJ9Mc?C]fd#PF$;Cs'&Qu**UDT^@`U^Nu`brC9cn&V?clTUtZ7S"PnQDkbSEn,E^pgkX?_h/LW%79UGAe2OLb8N;l@'/Vli](QP(I..,rEsa!`&M?hI2aAAE:)4cIP=Q:<.eZgIAUp"(e+u5%pM;V@1mTjKK7nh2*Y+:X;lgR;*C8Kl%6]^++MYn$bo96X?;V4Oi8=%j!"LWM6L+%9J/OEbLWp5-+OiB]'&Se2H,j0]09I_7"elm@i?l>1,AMY?bTQ+a^[m%0/&Wl;o87,k4%J_DI4mO]P%gJ!d<:(`$Z6&p"IJi\=9)_3Q-"6uC;Gfk?.6:JfMZtcP#OFI8,^9r#Q9PG6;.Du9W!Mmu&g0/lNCl`ut9]>,;>sEL[%rV#uUf13AdJNi69%h+[3#V]oN71(5Cc`s)1@K3):V'a_SRWjf;fQ'SbK$+4j5S-[(H8pV>6P0ppdWCHTC@+MHcAc4IXAV5eK]l*+%6Egm-C'&Z'I"n8He,&PK'#/fm%bg>V8#i0D8E9tTp^AR+N8mYI_Q+Fi>16t8c'"mUTPQXU/[H;A&6Gm/]epNJF%6S`85FP!hiMS0%+:3@r?(Vblg-C;OeKm_-h<'?#(s7D&,StfpF$-o</L/DQ_,>kn[WT^@;SB?2C4jJ%M9Z&A0&(Ps4f+rDDbV'65_Yurg-@.))(C%i%&4Ll7Y//;o(JcD,eu-lq&_;^]K>U8863.N0H?B89=A744%8&^A+)i]@@T<Eh"FlR[7'bhfKI7Y(9e-s19f2C"loC/#O@PhhaUofs%.2]4G[+HXS5`dF$>0Jr.Qq/.9Pn>jp]?pDYC5-.t=YW2T#Q=7PJn64Xn9Z>M;J1Z$3.eF^VG!.QPV0!L@6;*2ZS':DS_dJpfi3iV%0Z.KbCtj+U@DSX<<i%"'j#MB>H*SlX?r=sKqgRV-@"=8[SUahoaLSaEmEbk?)G$HPia+$R(BIoDkSNB$3j93^aBKWEca4Pk(^:"X%/KFp*nZY\=TdX$*;*qY1+_aJj2Mha]'\`-caf;\,BmG^_jLfjLUW.Bl6fa&(F7lipXJ%X?Ya[((I#'p2ps!1R8R?V,8=+.1Q(`"W%pWnR+OY%9FLY>SX#EEIpfTmpc]$cU.FD/$MfOa-W(D,]oH0T/,EEW"9@`CPQ^qO[ic'jWses2M<oN=k:"*D89eAKJ%31b$k@IY\<%YTi_r$g).X>_/f;PAW08iZKKmA-=+-St/ESZ'[BZ[n;6!@PNaN47Zh?0Q'JJF;u:>La7!2a7LOYJK^$O_@$MmMk<sr[<U"BoLWDK%Rf2Mf>eqP]E7A,Y`34bY6CT@L9/CDgC>ng2)SLM0)Zki%D!PVb1H8\2FaOOOKC?-Y&j`\+:UtLR`?X6U=kOuNb`f^W^^qo))Dbk<%b<rQ)S2B$20]u^i\3#8$q*oPt&$Jc:i.*i+dZV/t+?E\ds%HQcD'-\I&j_2IQ?**XB:snSH[+?Ujc%9i4S&1H)96C"5b-HhfW(q/%mK?u&Ed.\^Zn[/7;ZZX;PQD"%EKI(H1PQj*To'CHHj!:.i,h3u$#MBR[LNiZ9fjpL-\c6b^W/![jFW1BPXe0k=hHG:'<:1[j_3aX%WS-e]=&q14$;Yr+Z$k12"?i+CY'_X<YQkLcDGX:e`aGuIEYa"l+LG7rQ%dP8qnX,IU.+cDPFuGG@1utf<;-DV<($p@HNY%!qkR)q%OY8c*U]<8\VWq?(0ni5K=]llQ^]MYpd-ui:Tk*No6D&%V<s;!4%2'G#-a5k70'h9q4,OB`%K;s#KbJ)QJ$1<tZ9-1e:'4/5^+r$(%e+ta!$9_R^_01.+9^:JBKaV6D!L:VtT]<tuf#PYNCEu6I^nDU$<XS_9)amWD1mK=r&EF9B0"*406HG_%PZR'qQN`hdT7ZZ0K9JK%%Tm=uPr#%&_%N%'>oWcEa\Bg2qoH<u'D%J\m^e5k!Yp?6.=br/d0Y+H)!bs3PO]nB[J3pBZ;72oEWZ[t]"YtjlI6^LL''ZQbUe.d:%GTk=*aTo$VFhuGDl6[pa,E#nDE1thp/F:M#R\3Y%4+cQF=hggOgRqQb3\80H_An<Fd-;#h=d#P1%J9hUR$0N+":VLPg$2$nU>Q/)%"1.!0Z=K#kM2-tA"<$8gn^9ioC%U<;\XlALlptMU/oZ3<kThdt^PrLUhTM:'cX'BS`%f,FS]+IQ]&'6`0Mhj_Odb24kg<^9Z`?qE%d+q9I5u&Zklq]X*fpO[I]-HO%]Mucf?q"TNTP0$B\(qu/aen9QeV$:.%DnBpF#N%@XA1.39OX\NjaK\MG=qTe:bHgo"3@P,X(p/T%11]mWVJo:Hiaq'I#!QO)k=\g8%hiYO5RC;RW?A3eKTOEtrpKlp9Y^3W;)&Z-@_#JhIdKb!@D!K2s2IABo#<Be;qX;Ze,JLpX@/Aa%!3L5`h5<%u]4%$[#up-##)R*'Na'[m"nd#pJeYOulEX8-KR=MuGr#tmCjLP-5\1J<'8T!dDWR\q4W9*9/4\pP?Ti+Y6$3[ha0*LY%[0[N#8((o,KSHseb!qLJ`SjB],Ah@'T<p,*Ti@RFAWRMKWJ9fmZ8+1mN?P@06?JBMd)&6gE+#FC=Pu#mleI/p7A*<Vl:LDV^<cA\%kcE7P2MIa//A3YMdDnK@d0V'2Ha3n0%5N7a0Pt)c;L>tV.c^19?#TH<Q$gD?,]#n2$i:(i(pFiEM0WWiQB?6)Y,Bos-!sDS93\\>%0oO/5#c03?M^coF+u&IZ=eQbV-'/nB(TQ_m7f`&DP7[3k"F"r[loFQ3;V#SE%Vc\IAt74%l7M7/mN=n@M;"G]e1%NRX*!6uIft+j%gJMGGIUFQ'"EW;0a"ilKPp4"2!C\X6JINR?+9XC)?^+M+K\7o%o44&S1?mO]2:dlN9`[gIkKq$OUneIB\1^</p;jf@*)qL"7^>+*%c*Bfq_q[UcK-otI?R;ZZ)7dSd#S@`K'\]!7>hNm<>GrK1G-SC(c6/;.6WeUHM]+%r1TCa'oT4o#,BS@-.VC`2Vh']BD*[]g1JsU:%pX@E4@fqajM+tMPP7!!!=V3Bs_@7khah`Uur$55G3!Q)udDVCS%R-ZK+T+;D6mYTU5/9uk4#aNhJei76J-._M5Z**2M-tJ0,:FHn%Oat$G!E"o9:(V,)1p/f2Q-8q-Js\f/q]Kl)1YCamX"kA^Pl]i\C)2AF8U5b6W+'6sJf8oeP!NDBqJK-:8k:!PdfW"4Ve.8*Ai][Z%dihY6K/h.&FJ;Z369F?tNaOS(KZ"H@K[FegOCF`IT05O1dA@E]<>"X#9'\GKT-Aue#6Yo"']HLH.o;3Fm5]\&`iP\$=h&&MC]I!=%U,e+R81Ij&BJqm8'M]B&-o%eM7uu`F`t%;FcN/#Z@2-MKNZa;Mam5,%XNFuW+hsF)J:JQ;Mj6&*:XDdno]k@\dcjPmVr**mX/(.6%d9rC$N"D^HUL2V(:q#L0hNO,ij&T3ha;bDDH=`$IWIp81^H&95crt/u6Vn5a78OECQVeWF[+@u;!l2,t1s`-boDAp)4+S#13eKto%V8aJ(I9)3!3KVo7]2UG7^9Go;+ABkN,UjHEi:9?C+UGeTs,/cI;#IVP!L2EpX^^jAh"#bP)O*nr;N*Z-`*O/kkK!-1$LaCu;(lmp%OGYk[&UCcbWOILs]`UFL<k@i[neC<>g5K8E'4.UcUPBqkgDC$t<n(&*j/g#+3%MR.,cdM=bc$cAdh*kVRlJl=!?me+AgiO:W)aHp%IE59&)I?;'`p%g^#)+24ZB>M<_Q]q.=L")j$E58q8(\5"Rn^-"X0$YC:h@_$^fPB@=aWQoX..<@PXMPb[H^"JHgTBBkWk8Fg8kf7%d"3ee:r`bDBYi2W66A.$)C0K%SP\udNAB^6-ZM'$?q@!$nMFR,50/6fW9=&^gj=Xo!orpOQo/1NhaB(E;P?`])6akZ^*7^QWl.TX%,>Ri2ktrKhANhbD_?gi,.XEKrG?jqrU<@:?FVJX6OYl-0,IK[;-R^17TZF/8N[25e=L'>.)\os*Af$TY?<1l=%CB!SP7iM0@kV7A%SWj2MX7D/C3.X\lO\CX@+&FC%q=(^"(/R**H=n4q_ftc@[2u-]kM.@,8XhXbbLfqa)5'Fe=[7e/8]Y?A&`!u[LN\AQ<%8f>hJu9u%:2/"G_6DS%X*Off`'gLcQpq'#Q?isin6U#@;9,RG33J]J6pZu!(tKhn,4@<:]8J"UZ%K!#`sV60TJ5RI6t%,r3tam(<QW>m4_RZT%bu-'GB)jDVm0,+gcHir@9dYMt27C8oW_K/Sa@+V>\dtaFH1Dls[kn3-Paa`:(R=i&HDaX9-`EjC-2.D)gt`Vl1GqLWCqbEFIe51,%"UfA(auVJTOuSp\&s`#bb%43LH5on#AkPS`4la.1mQUVY[nU6p$E,St.L>,i9X8rDQlf<.5fZh.5YdG"H$.5([X.Q\c=!e0kU+/B%"6<=39CgXM&>_-.]=:rT(KiXj`"M0R\!liJC^ZP[^a0>S,Oe/5r)?SQ$3alL5[l=aQ-p52GJW5EIm4Z6aR#Wh5YI7=Eah,kn74P-%ctYF2ZBSP<a0.Y#-B].-OY`Z!?7Abg!5U-c]n2d1%p*f<E?CE&LFAb9S+^N4#*mo)2fA$*(8)@WF^#&!aA>h0T,PkkDl['lh!5C3%HR*,pZG@!D=i`ZtYdEWT[9#.a:lpBc?;oK16.D^h2[Lo<<.$tP_a^XaX>$6K?_DRp6l7KO`PQ<nA,F3CN9<$*1rZ:07M)FO4+\</%li&?.FHqc_+l9K$eL&=W@'#-KSS-:c5'/A(7un47NN-M8+RC#Cn>e$2+\g$NUIKVZaTS#X;q)`;k*df#q!(?A@ZP5,O]2og<E,eC%0_dc$5e9U=GTq0RRHl7,-uif'0+#:A)?i]S?SmJc%T/q>b217)1f:n$0^t633^]lclGil;_3-MY"n9'7$U?a?&_7WFJ6g5tK'5Cr%f'6uiB..2@"q;"e01.HFkRWgk19]_o4JF+VP'*88@rO2;S7)CJ#T;k6HB;!/"E29%@7-XOOC[4RluL(j.?K2f#a<>T,Qii.7a%t^%2MZMoSiO,a2RVL;YXapPT=CO:=Z;137)Vq0ai$TkKM":]FJD$*<%Wo3&"m`OKHqs=[hZGKa>FIm:F,-9-2H]%`asV%^oaG&Db%YK%Jh2O<'eS1IYZcFA3m%Nb4Sd]:N7ei_+m`r3*YC7t2GB'jAZu&lPu?!q1Jo8:Pdi87apPR=@NO&UfR-UGTfp'iAuWe._Cq2/eP[c3%lP_ub+XoO:r/3DmXLke11ho%='3DmbB:'fJRjpj\qf=IB4#pObnHiVrSmt4f,-DW4i%c[GYKCJaB[=gml7CJQ=Wh7no!pc2aSQ`^%MGEBE9hhKSgE_SQ;&kASAFe!$Lr<8K,Kb/X&eY732HG70"N_X[R`=M='N9/t<t8CFk^Z\>8Kce:@X1g4L+Q5i#,R=[]TSCt81j+i%C7qJ(YTm?EC,[i/lO=Qe/"I7j$$T=$pHnOr"Eu4if^4m9GjsVn67?$:@br8jqWS-WO<DSX+nq@h`kATF*a^T9`t?kT'`o/k.FBoO%\fn@2_Z.9+*\7EBN>lREaH:h;-<9oig'k">JT+,S!SDaN.Zbkl]MAGoc6BZ[&s#.bX"H\<p*j9RBnVHI\1o=3N<p`V_#Q%gq#V&G%nc;_A+Z1G>+Nrf0BWle`"`arj&$j5Y+K'4I8K_B[57$<`W3Z.QVf)Z;rEWH<Br8(FGCV5[4uc.Mg?9$3:-e*@)\=_;4;u>C#F1<k%],*FD)$Wo[Cd:I<[K.+r!?%f_0UC5rMUPP%cEl<!B^7Lu'b[+!o.3\1:2%n3fBCD)Ji_)rE6Ydcbtr.u?h2:K[SeAqY`.(fn3]>a%-o!QFDAFM(fDmLHYlu*U@fr[DT`4oX0Nu%B30oluFpHMPW4qkh_%.K4!d-.L'DaU`2`R,EcN+<:EW[Y,(tRGcKfa$qX"tZuRD!.N%.[eZe\Fi#;kT3;MS/.=Hb2K`sH@1poT!!Uc[8d<n&uYbnCSW`(VL2q"(Q-at/hOZFJ:JO]"ar2tRhBcE..YnR#qDY7TVKOQ5^mOu%=E`gNeXfAYGgr:+g&Q.uJ/HRg+fGDGAW67EFu0<^iW=d%HHI!U*!_NR&h[#)E.R(=fNHmb8KdG_Jpg\:]X4jSP\YRm3%D7c+bpX4%jJ<Q/KWi6+jF!S(P%]@`.:+;`C&0M/[5*b)+poIVTJG[[7Bhm%T.BQ$9n&Ne2S6RbB6\?J15b8=&CpOXe;bM_Z:M>NSdSR;-rBRC%b1/"qTRBrBD(Z1;'S3kbREAEA.M6Uea!PInI&@E>HpLU3@lA>'M'QNldKH3_H`ND]JHDo*Vs2aS&uIL:RuOX+8KUR#[/m&\1]\2M%$d(4ci<=<h,g#e"&JU+!Y"PaS/J'Wa[fYZsI#TL5d9S51HB&?G9G<1Ujd!hY+:XUEhZ?,:VbQH6G(_W6Ya(Q[Jg8D:()M5V#WlJt%E>\l0#5giY2)6ESl2Y8p<h]NXZ<Tt(6^I#R\i,E)ASISEF4hn++O8pHP`q,-HNu7I^^:0\!r6&H!K02u8Kh+<1H-FKS!]1L&Z!i#%'cY<$1*u1+"O[Y"9fklf1QJ-h\[E:oGU=gdo9p=)i9CQCof]!h8?6"5%1hE:@:!!R.fn!NlOo5;D_Vn>IL!Y7Gu*5b$3G7qp(j\_%7`eV!B.8Rtkak_<'I9!b3F;nLh(^P.j,Af4Z"`D@[U1`"Sk-sJmM7Z574/mufChM'kT=[<Ubg-k-&.`jK\uE.qrV>W!9AHiJJkK\%p5Sf?9%.m4PHb;"YAh]j_*D%g(BpISg+u@i+o[mp*cY]*a?M-8]WCS'c!WlBe._YLaU7mKdd@20JL7PY8u'Hgj/?c^@pN8gKo)Zt%b5MYlLPOM"!QsX=V/AkC'^JYt6?5ipJcGeGjhoAURI^Po2'%1slNgUVVIQp#e`UDh1aqTAXGAp*e28DmW"bdNPno.b<8%?5Kq`XK%o2%aK;B?]`jh4K4j!L!)S9IYYQ!?]`EBbTFca(J42g#OI-I+@cjsX)gZQ&'5:s\R((''Vu/1SW?Had1fdR%6*Wq*.L42l.R?%>s2%+EVY?AU8qDFU_.Y"ca4(Otru1HS*pl:#qB`3W]Pf[B*')K:."6c>h&86'M?TUi\@d^7QB2=^WSZK'0-<Q^C`O6<0q_%=I7YJOpPD%kY/qn75qSFNrueqfj+/,Q!#nu]?1GZcP>]GQZF#K5d(EQor=/f8CLFVLQI3]gg=R&/=.c^ac3<s8eZ%RI")mb%4tT2ODMrPY\6V!%lF[64a^he63g56r_?)Ct7<U^'Ap@rV:(U\8!:&-Q-)]oq[UJ8HX\q!'b6:sKS$Zn7V1Jf4OPQ7`-O<r-C7?EA@:q56Br"NET^%nX%onZCg*Ok-^VSl7sRc]aNm_82KY]Nq=me0_?#/VhrdHRBc7JReV0\Yck8Y\'P(N=R%%#A88Z3!p$1#h39F,!I@,<*%c,);U$f3=gb%]U=@B]e)S3*3EE06:#)*4h*@/R3O'o:XH;>LNbWp[cjc2X<uf&EQ0:O^D&L`/@_EP9'K[9-4ID@6X`0;(\oDh\\m&S[eGfSK/.+$%`"JLE&^h-Ab=e963^R%7W*L:Km>4V`-2J0_QQ;oqETWfP5?H2RqH2=F0A5TjdAa+'2F$jZ.o]A(KHR<G;f*=o]i?7%O9XF69Tf'D%JnNZ9gJW)o$*<R:K$0[?p%Y,@_u6fE>Yi);)RO*q!+Qm&<LpN)HP/V1Bs"ZsO;LdX?ZSMn0<`U+i/be]ZGo712hVe<d/+S]3iKX+%$W;dpcZbFB2-kTo#k:*Df\fAc"kcYX^Jjgsj?b'T(h/\"5LeLp;'1go68&#Y%LZ:1D;T^EFqW['^5p_g&`n<UUb\#DXK:spMIL3T%afcgF7X_V/U=M+N\uV#FGp'.WmYA87qT*<7P>gg6&ccY478rA#JcTSGKRF-EZQ!c-W5I$..^$?iUCif/oZbDKMongn*Xn\_*D(l,%/?!X:9.9O9Bq\K`GOht'=[lbO>D6'#]CI/V2Ypq7:Wet54]-V^4-,TTjl"/S^toaT%J$eEnkl;>g!1C%'G-An?CEAU("'OrQqHSD%81h>GU_4I$e97F&O"uV.)ISlD#agOqNf(*cZ<[-WV'#sB[lb@ama*Gm8)q-0RsXp4ArE)?L`cSaD!n<]SD[!`$*u+d`?Mau,+BOT%L+_&7M+g/I/A.-VZ>rKh:,$eETC<$EHZhm:@m5[pV^.,L9HrA[=i,I78Xr%,eVXS*GK@i_U=60_C)XHA#>_pC'[mM8FI%YF<c?Mr%'lBR)0:UJb(NC>h[(g*FSMBbcPiC8,-r\6S#q@BJcJWeU8lC56kLYup(,t%g-$JV.dPh51_b1p-(UI5gMC(oZfU6A,`icsHN_X:f%-<CmIl'Y4_m=!/%CY>L_?>:l4I[)TPr2T4b%L!I%`9W,`pVEW/SpRfo@WY1Uk1Gbme^]1lFqS#Cdg8l5[S"27mj(f9eSkRRRK->6%b/0FoM!fo!j'348;gL'4';sT/HCInnlEURd.!"C;mMLg)M_\/P]VlAQgbO9>/&!eukqAil5*<5\7l?#%AE/%Qrt\mpc&b!8I5'K7%Qsq+%[[DDp@Zmo$Y=&_udoJ'P1/r4W5l0*JV6[VRI-LLjnlQLDjn/FA6l-=(W"93!Pq=_k^/d/?<i:d_\<i5DQ9+1k<uC#YWoq`.%;e>'Kp4<R3*"9*e)ES[j,U=L0S!8-5!4(83P%KLTa6,Bq8K&X@odf7I9fd%jXs%sVUq+7uQ!slp*$RgT;U:!T+cs@dLVSp1iMkl(%0(s06W2Nd4$CkG0VWTBEAHSBWb#8FL@5[#^a/F#YP)r:d?K@NUDaku.$E7G>ilKq.kA$o^+=o3h@L/On#+]ZH@bt7W5mm(0_V^:*%81`b1E.%Be5up#oAZu=N'3S55N4<8;1eL@R1t:kKijDfei$dN6^gtB`V>_T"-g+k%`=ZiD^K0NPY7VpX*Bk3,,-'-fA6$HDd86fE%>Sc?tmoU1AUU>EE&$guUdLFBc*m7ESIH9J<0Rd\#H!>IPFMP7lSIXHE`XPp^L+^.OeKeqLV1`MDicZK+ccp8Qq4q%2YG$Y1-s(LO%+ael-Aub.AYHdA^/ou+Flk%UDPB][Kei"^iYm\S#I0n`R-2#I^$Fd4%W<&8SF>0j".u5U`;N#L=0a>nWU'B7"a2K$sqRS/*=r#ER%%0O7D*-_U+.bBg?&JUJA($"*M&qt:%g$r(Q9Rn%cY&cND='jE<>)'0A`5l3`RZ0pm-M<e%%ML?C]d)N%Xg[uKl^=?@(8K.fcMj3/%+coFO#\7[HQ)KpH`tcP4218>3;@1QOKuENbd-4ATpNe:lCXA#b_o9g?%k8T><D>n/k#I5&90gIqTOu-!O3_sPD<e;?*^QPe^X=Nn%2ft3FDE)&`VuTf/-^(,FZU+8E78Ac0*9tAT=XXXbH/V5DX3<%=>,,')U)P/;8F8u=?uqV[F^kMoek':"]P>t$W@]C#&a%eg(cg6=%86X1&^a_#";9P:_d)Q2<KYGLWHR4&tMNgQm;W8-Z;(?cm>_BJ'?-fd0/A;f%$eq4gdPW?(Pi%ET^JP>!P&XUi^@]2J,Om8g$!dV#%/;-u-<BcdBkb'WoG#1`1>^hM2+#H$eps<Y&a[f&14MTDr=Z/j1"l(:J^<GU)2))CJ"k=h1Q#;J!,#lTnodR.r_*FZW=e]#/aP/ha%9(q#h4-ESY'>_8(Gd6.(X(!UM;<MtEe[ZA!OD-cM=,f6[]fsrj]].CD)TCRulTdh64g%RpGq4F3'ZY:JLek3AFKO1$@?HMK<0ltg%-ICr'#tIg&I5:@Fd0b^XP^TJ1]u2s2:>Z,+!_>-k7Z6%>Nm4=*:ASRG@WsW^-93QtRW%k'aXJM>%E::u%ZrE"!u1D*&>DJ28sc9+%I#$mj:_K`p/4CAAFH0g:Cd['_4=:.hbL[NP+'OA@ZB(U>#l54lL.u_<nJ,n"aADaG-20;OR#F4qj_HIqhLa9[q3j6K^%`md)26e:%)G/&kK"`[h/?6Qtm;?Ng[Xr>hf"OT;7HBq@JU!sF+lkJ3`#\]58*?.G317l:>:.bJP$33i]o>0+Kcomi3jp458td2RD:J##PpLbb%:8Cdu=+NP9Prg77+46Pj1Qsl9`U#Er9.)ifY$q5,=;76h\;tr[(KV27l;PuR)3o05=L>PD^!'AC"hh-TD[sbN<'iqtmN[\1ZG1)Z%g7mGEX_4psV(dFAYk-s0bL_P/oP&*]`m39H;XBEs!-Bhk]\$smos-*I;XE>r=%H:B8Zum%F`oUm&EMqlG?RG</5fPkV)P)hkG#VX%X)R.dFKE"U<=Q"<*OKinYal"q(0_,74pY]L*?R>S+clk)j`%aY]BSsQ@oe_d=C$h)-'F>>@X:u.eCNr=&>V3[SW]LsA[l'JX&2]]%NaBo*0kD#qOGBFSAmP@9<^o`g-JMk3;Ht705,dmN]PMqu`G?t=]F-IbS;Z01O@%r'=J@j8ZbBS:mDCLO-?peWd&O9Mfi]V8bmA<7%fKj+&%6uEJOX<kZTa>$@m>,,DNFI'N!,7S%(0C6"GY!pRk)SomP&4R6<4ga!%PO^[+H^-e[Zn%;rO]n1+rJ^<eZt+_!&4noA@hHY%S%\,4/S[mtI?HubN^8k"L0$`J5\VDncZueQ8F27p5\(_8KgRs-gs?d>3gj;`Qc,>e?PAhm6p9dlpp\70/u0No_iS<+c=#Zheo'g;%$Ve>^kMKrQHrA/'H<:g)\_=<H`lNM%;5+F6?uVL,Lc\.>La$MEU!$;8_oOKn86YUur?968TrHJp#Q]Uu*jgZJb[PUM;%'d"Dn8ll%CU"h9mbtZ'm4EK->KN.,UQ=6T_tN`absaC?o-fF<ZFUNK-&60A?Ff\E2@f+Y&8t+*lA:%MZJLb0n0@(T[;;>POj`K.r;_[%0C-Qq%/36/>[WbJOr(4F5NBfJ,&kG*U=`gmUpW\Nm6OTXY\(!gq+3PRf`9"6).3"LU=U7XU]%!d_-Elr58_u"!%-NY1V1=_/DQf?>\k.`_%OQZcl`l>m!>)nUEUg?;!Mkbl1AC-oG)ncGdjo2.&D3<]K"q^=d-#)"b.aa_0^.EdVS;;PWPkQ0Vc7>aC-Q"MbZ'I)`f=L/ulBo"F%6@XL/-h6f6!EdAf>YpXe*@M4^H<Yqt`ou*e#q5OM4MSN90/5a>F\#\Y6Dp%J]7buT8iqU*a_CI[@GVAd:((\RM5+7kii*5=J)o%)%a($ND0-rb]Ha"`MXcK[>e<c(:E#RW-&3E6Wd$>5ESo_FjPL>Kdm$3o/AA"gTl>/"18JfFr72b;[cgCGOW;YKV?&<`Po"^uXqC72:%@&uhuqKOI1%kqc+XuBgt-<6Tu>W$93Bj/(u4TWF+-]gSrf-I18!*KW?m,`rV&0kS"*+("odWA$mD5iI9':kh('Z.25IFCh/\0?*j%_>sml,^4i6T3b_mAW"MU.#?8T8i83,7#n$K\r7h+;NJ5_CjofePp;'(R>-]l'hYHGcPP:Je-ieL,''Z?;cK8oh<1d$Je?(F'"*<)%#=P4AO`mP1U8jLAn;Zru'6QZ]8#FO<Ur*m_;tC!LAj,N8+F1mE4ed>kM4WR[1*db?Wa8=HO7cN8W._<V(oN'!#itBR\Xi<V8?.n2%.XSSa!?:F$]cRrWUZ5V=C)4$o&.RWAWhd?ICYUDXQ`BUW9j0.o$\L-2O+V=hGN,jt$;'jpM+L]FDG@4=XTqRV>rDsYP6SrbPr(4^%^;o*+rb>Dm-K7CF65McTd\nj<S+N!bPJko;7=7@q@>VhO2R@Y]PH]+U/2ArY;N3T"N9\gk)aFrWki+R=M5hOCIB&cgK?ubm^BlPA%RTdqk*R'\ioFe+a)2rSJ%RHn*K(:WLKfoK=SIq1;)iZ;Hf:o0541-hGS]R79h_AFR3[PHDJdC-[$INo;ZqNmXb.)5cqH/k"Lsu`a%E^Mj$_$RZkQocJ]D-8\$UE0PD/@nK/aZ&N^X[oZ@Qr%^G"_&jWg^c\IenBq0$4#cAk:/benfT3O)0\%3%ND0rRDi(gP&@%bMPq;<%jg(dg\MPg06;tnee/153.?*.#+X$%qAJ?4r/P=,3f4*@PK+(SShbKR+=Cs1Q`An)mJl$4H4f_#nf2NbXOX(noV>I(iG1.oMQ=t^0%g*I1N6XCZ_62\7qP\SNJO;cOKNrCoc!0A%J,-@S/9Fp5Z*(0t7A5PoYh?FNgI\_QK>#E'e65IW1!43Yj/@#^".<hL>=t+OP9!"Qq%.O53QX/3_HnOe@0T5!J@fY\D]NXACbpnLiGGb8GTENUE,MX)D<1s,eH6#bDUU,r%bhhljl-Q9,"Lc(=no/g_<+9\PhCSM4`i"3=$%W(MeDQKebgf3,,@S;kfl0bW+[7Jt,9eH1TiK3Adc8Q?+X:^MF_Y_C45)t)B].I"Vp7ud(]<m-8f/:qA+]rl+8FAb7NESk%dGdDSr%7P!s#`T6ejo\q:86VFYp<eE4!SdATGe(>kMFm_\p,X-JR'*:hGSW^>[LQ-%Wk`GC*M+qGL#]u85KC7l&apge5*ag0HE1REWPj*iq%iW3/UlN&<^R.TZ-.dFs1B5?s*2O]/h-*1Bq4TpPH(HeO[.GN!K4tV]J+Gj)HG&)_j[)c+*1`;D]$:ccOnj*["?<<Ai;q7Jp5prXN%;*.Gp=u<q<&)W_=M:u="qLJbm5H8;1L_3gn`MuSE)JuclM;B\-T1.:X4N#imJ7@_+1T0;-+FCT"?I+_-5ZK?52BbJd.*L&6m#Tf9%JmKu>Cn)"[gtgB<FIZ,OaEAg\;AbC)U<Hc`DhM4M"@1,kijn8tW0mbL:]WIFk]h8ss$_+3ABu(t.I!*7H"EPF6n5Oc#t35)mb0'0%$i"69/<n0g;0?.o(:YP-.u&LK9WDhs)o9am6o;mocN+AM9AfWJl>C)pnlSX4KI":TrY06g1R[TCTRZ+a0V$:W"IidZZEe#hA4/!O%MHfp.M*@jP:%CqBC^.Qi<UF=Q!5@7uJA0Uc=C8CD\\kP)I$:2]BJ>LaP?cNBKu4S+?@ZBB1R*is;lK`X#7O/eD^J8[%Bf%DeHR+J%X([:FFF:kP\GHK_p+Y(D,6:,#TD>#HOP:M%[j$.l"r!^SHQI5b?pGXVN/CU6'GEVQlrq6gMiI=dO]`fg;AdP]E<m*c!e)p]K;.Q(%q^#E)J#bW*h+Gf36lI[36_NOT1E>@@&EV;;jWPLc_$sj9PJ3>:J5933rLW210<$<OY<nBV&o]5)[S]Qt!bCH@LFo^j=/tc%!$dh\%<?JO]^`QrV/Gq)0\4Ok`7QbOQmn=2OcH\1`HmPNKX++f';jOVt.[G?b6-OOJ_B;J1&IPNm]icfe7a&j'D]k4F:IN.m.j.-*B,O!d%5NZ)T"]Qa$&OkT0I]nh7"H0D_9NVu_UE.gP&]j.@76q7empX$h!&@*]V<7.6'OJ1pPMZ5;Z[Grl0P$&i/VpkW'n`jdN^,j=P$,MR%h3DR@JLg-j$lo4:Y7`od$;C!=i!l/HA_pOo#u,ihbG9dZ!b,/\3Xf:,"bX?"RnbuYRQ+3CY=!h4?d&)LU)-*,`9M*1%$5HP)A8$9%B^/1O$RA[:/6P`/#ZN`SLC+h!TNDo&@lU+]NL+N.M(cYS!sgPc-lcAK6_;a[']SQ#kkfF'65l.fF@)?G#&el#Jk.)\#.inr>GX"a%/5=RlEiZH8^=(WGOHNa#=D*GSPX5uj]G<Gg.\u-UBh/=1,XpV*<O5N/m_;kGa&p'd/J)n,g)u4]dI]06qp4!K^Y_H4S[B3Z8WKe5%S$DYf@@-*9_rT2-KH%'hG>b<J(K>'[)'Mi'MN^6%jkAHuq:.C(nnP!7'qRV'V\V#!U3'kO;*fWUYipkZrN*>%4iAmJ8\3/&hnagn%BcSp*7)"a+PFgf+GF\"g[fFK%7tU@9dR&!t%6d8/2W+`Y=\R^3]$$@0!)`r1pNH_6hihPf$0OEtXLV)N(dL?X?"&9k>V]f/=f9=E%Y>&11I%aUtZN<l^#^"s2@HO4]_1Mm<.j-pkL[:@?Lf)7<]J=)Jc'Y/rU/EA4E:i'DX4VZu<mrU1h4Q4icN0h)bOn&t"\A1%A!.d#%c*-unB:l%F:hl.;L:^lI`<`9@.)g14_.037L*c)s6%R!RSO.eUEa<qliFiOrV\#C3#4*2:M]il_WQ^5p+>$NiQ_JX)<:2<>HA80F%EPu/%M=7LaX$Jg@foU_Hh[W*e,9^jS6KGNQ#$*A3KGJ7%?sKf3/0?*XG$R;Odqa(Yq>5k!?=<t_-`rsX&UlD-'rC+55h4qsO;q8T%h8fpX);.c%JQEPZ$lsnP"-QnQVITf1^Zks`aDX\.n(;;&/du*NSRV7HMN>Xr$[latM;<nl`<&V='(U@5!(3'9\sVEr\W,FM1Fu0E%H#:?akEt+ebX[?TN/=.[=^(q&!ac#>7Zi9u<l$8EbraaZTot0C;28#[&rl*9<,u##'DjJ`/m'=<0a?s/i)1/P"i5LWE*8f+8Zr0@%qR'Gt7W+YL&Vg'=7"Bi),;AY7RJ0UBYWE=&$?XX:DJ.+D0l,7GU#8]jLnrq.&d/j2<X_3CJ0G6-&d/XUj:uNeU'_0th$VX[m0D^a%=mZI"M@"=>^%&+-25D@3LnH;o;XFU')j+)2>/7T#5UJB0"jmW!ha`_:8_fYb&.)fu*ALr5/X87Y`@UcH7%OcMf&:D]CP21;$Io6Z%jdRZ3W8%jJFQ:uGm(JqtA\j2s"rF1?lculB72S?XQj-!'h=t^81'2"YWQaW0(gKqh<LF`?1o'\D1CVI:4t?:a&=E[lBB_5SO>q^3%rDhXkhB9_$_ZT<hNS7gY1'n"#N'(_Je,fbQ&*u8'IFB(qd=j.l$5,!fH5oMOM/VgGY6j)ZLpJT68<@L:6`Wq'8HZo7)I@\sJWHDH%=UE7_?lIG=)tlAP,+oqJCD9jdG6>sV[a8_#iA)%ena5?:$fC7[OO"-2==%<qOV-OfT#8h6(mEttTH):h<;76g;*YR>96ZrFd=H%)%Pkf8\:gE3#oi6m[!a2f`)^E_s@RI.&=XJ,AMCE;If-3_XdrAQdY84heSXp3qp35sE`@uj#n-tN05c0\t'1gr-_X^^k*QDe[9lSli%n<B_<4lK4&+;.@:_NY\'B0Jk_c1F$ODU#akOj4+:'uKaZ/k#37GGC<gFM&o@eQ%X_orTag_S\%D1S0U"/Q,"JX:&6;knZ?]J4L*,%*A"L=UQSh*UHc1>(KUYPZL(l*=9Y+rQqe,_qdJQmK7/S^+<[g)"@Q!GI[0d241UWMk$W<2`EM't&jaR2&?f*nO:d5Af2eG<dbg"2%7tS8K,!gcA@RV8imE=]'XCACJO>^k'`QBY"hXqk]Wt8SHW4nq"5aijhPa#8X!pBX;U-++#i`@]n\I!pU#q-VW#XpYR5]R89"<M-&%[;Ze60+FT;B]B?jXqJZC48KYl%ZG.ZnG:Ed$jsC7&XdM/Zn[e*VG%]j27nVdRQ1n8?Kjp'f"cE$l4aF'NF\3PcV\4(`#7mAP,@_K%a(_U_?$h_<M`tcFBu&h%I4Hc>6ePO-j>]YsqYIeGr\Y[o,`IcnS92*5;A6<!mucIrPUY'`ES4mN):gc-]UJNgBc;l*-DJu,_=C/*%j/5e=jm1gN@I'pe-f)c+al:daL2]^&(8iZ2`38=Oq*'iS=YEX?4EG8KGdqg:@EbqYkXmgl*JBmC=.$YLUAi<9q,JMYkO_hCk<k8]%a(PeVd@udJh5ofFOOh1=&5Gfk\?(+B+FB8nQ8?fA+WArobY/k,k]Ntl-#p#teXb`GR_V;e;H)L:G)jthEQcY,am4g!a%]O.Y8Z%E%Bn(E[jXf@bi0R`De8<W.*?lkXNRq._Ol(8[b@iG'iYEijYc;f_fIk%AFGf(YeI<PXV,8Cl!maHUmdcd'MD,+n3.OCU73t28Kt+_=%W4rZ!Q9Z-ubdQRnp6?hGo7HIlafu5T9LY2dWUn#ZR,Q4&"l^e/Cs&n'(-5RULZ/SHdW$i,e("&M,-9O#%GrBA'*Q'N<q2W]`<523%fE<<gB(;g7UPiAJV=?87Wa\E^#5i(jA20Fuh(>Y*E^C*U^(%:sGdp,<.j/!U@4G\<rLc\L+Aq;[EG&.#=bi6[J,hMMf?aV5q*i=q%7bF-_$WC%jNfp";YkKA=L(5]*F-&uFdHPBT1E$gnfL;,t.<uK7]*_`QIY(l:?GB%Q;KVMV=0%I,9Mi3Mpr\/Q(tkD)23Cn@",IG^%g#PO6K%Rs&l%0Ti)CjOk$?h%CFdX#[CU7?1TKl1OeSe6\/Pf[R[6'LSNDmXY0(kB/'RDZ$FZ;-Vqlk0%n:;;5W^4XD>UtGk:5BS%%X2aA0*#?Pp%d(a3&h"8g45tNEa3kc$O:lE>4E5`dQp]$0c-..gFL,qAb-Lq[["8cLIZCp=<\b3,rZR$*XM!Ug&k?#MN/o0Tf[t%o%CeI0D]UCaKnL?!;TY&XXD%<%47r$0<2"fJc_I,=&5&4:E-ZcjCL<lUD3@\0Cq+Z^$$f+d??H1[l8VueKm$>_Ui:QjORcu<bZYg>Z%.8rF2?[:,c%I+95l]q&`B/eL*OL(80HrY(KU.,5LV`#;#gOYHN;MW1h"^e;("%[f$a5/.?"75N'T\-&>+,sG6fp@5K+F5q0<k2(+%FX("flOW]\],<WuQHW@n_iVnI)cD'(%M^C6K1E=)=P_1EWhkJ#.:@Mc<8VB;-!b)R%o9VZr><L$JSQcWf;SrBEGG1.<?\f9`fVLY%KI]>ba&p)FCeEt5@7H";WcZ-_I)OK&Y.A_0#o=aJ;>lG)+*]7_/J+1o!9C\HY<(B\elG&7X&%=AA`(1+OLFsk;"aXHZd"[C-S!&;%>]a%Se5p2i+]NGG,p\Ou](32>jC6Or1M?:l#h(P9#-P.m\'Pp<]2RMp3$/1d)l3A"Z<MmCmJb2,D^LMElCL8Pc7Q#RP3CRtYr/'^%3Jm(o&q]=A*Zc3<".<:P2G/thM!0f]?XjTH`NNsYK()0E^"U0&Nq]XHFaVK@cW>Ic3EM3rQ\&)]!.R<Ig&J&KmunG$!:BQqlA>9i%nse/MhEP&Qmkj,p$I%e>N5Q=qQ</Q_.!ec[-.61a[V:]oN?/%pYGp-=*Vt<!3qN^k&Q7+(b@LtD(sP]A6Y5Z2H)28cEkj.M;[8D/%;,Vu[mld[`7")'r'a8@=Ndl'_ql72;e.J!:V8VdU<"^D1#SMVB)LXrG)amo,a(]WV1(k6(X>2Sp,VeRRAP..">Fd!8]JF]#?4n+*%"4(JT$ZL1sV"=_s?Jf<.J3^DFO82&B&T)Bf#-*4^_V'<r"3>kaa.>7[Q=UB"-r2[rKP?/Z-h=Z="!GLE>o@<BOH#`A&r*74#7?_.%iLEpB$f04PY:a%G9_=p.G,((UG)VJc:P+6M=]0n`pB[EW:XM=CKNS4S`!)*Y(^^"-Liq,`-[Qh"X>uCIZjo#S&>(hu9;8m,_JD);%Y3L*c'%3-oEYDC$Wfb*#WbaJr`kW_b.ce\\AV-k$\b:YU=f`\%>L!%!$(DH6H&P9['`$k0`:pV-&?*$"9m2SUb;/]pM@?0JR%cBP%HJBQ.=*X(3TjhQD]lkW3Ngdh<9;IAkO62qt<jPUSdjr"u_<jEd?F<A&2h=-u'"]c&Fo4+\;d&@(5`/[2>(osQ=,'AUi?mHVZ%jL.%^CMHbV?!D/79odm4%)B?F:Y)M7XAFLe^.BZ5_?M-'BpBs+j&eTeUqRtZHM;h6]2;h#=f4JN#mUqLgQ>7:N&[qKbg%$r0)/U!4dQL%,+$.=,jAoqS5_*0QE.V(Ld5=3>N!,Vh?I,.1Dd_n'c<$o1lSq@;.Dk'\I"bJ%*k66]>"Vn"8$,U;C7Bn0!pcihaA2&W+:aeq@pOH%4@F)#%4kB!ZmR"jTgU(,WeY-`>-9n,`G'R=K(XsCY5(T#29Mt_blaAr4\07O[2]O-2V^C?V6G;g1of[l^S;7-[):HpI?&3:5TM/R%M+fIf/.ElgbH&X%iZ5h1J`\i=^8J&H$$bVuE%]Y9:J#s9P[H79T;-uFJGSr023=b4eI@^/S9RQ!Qp=uJU_&75e"h>k%C#f"5RgXF%W)(<m!63>M.Xb`'eSe;i/!(h<:Dj2)mLF7EAR1TM=_n-P`7?SnUrBbqodL4,V_U\\^hDLpn$Z"\Lf,GAk[SX4>L)Ap6j1]:)R"@J%;Js?6gPtagWg)!H&Y'G:YaXglBaC;fm&l9]=n)ARH)_s]G6&Aq_4I78]%86T_iT3TR+KG+E-E%=m'EHRHmT;qVg<A\#3MZ=ApqEb%e&b%%k[)YJF`bS57PU^%(ae)b"[\Mc'e7q78Knl9MQ&,65F/&q7$3P`)Kk^Y0I,el0Te]']2J-,)P1CrV-q6<D9A',`#9JX"aN\"%W[+=f<p1&?fr1RJSd^hkZOni03oXI_VC!ZZOHq^F:Ed@K3@.'0]m_O;+g;Z9NlW:98I*(E,o(XQ-AjLC)"l.:FO%3!@o$cTA2=#n%L^pIL--$TIRN(W6Mjm1'R<m^*LnnbuMt'9iRH$'J/4@lq2D+`1LAPD"+0!Dm#Uf%'Tj!)IDor)g&6-IE!>TcJBI[55'jrKu3ggWD%F\3j'KrM"\LKnK+eghH7/>-<WhBBH)5sI#=Y_*XP[r=JU,,RI'/idLU0e!ht?;H5=.:Ds/.g98_dNcd-Q04)?"c@9W#li4C<\F+k%7V"si1G:-3;pS:%""U[$!`4$^bTn636!@&5?@l5>e7"VXaJ2/R=e,uAlfL'_cl74EYdutLc[-F?!#j[Q"F@(qgV3oPii1S5mL%+X%jB#jKTT0]i5jXYgb_`?pJ3nGM2(M*ZWP!;;k6tp:U.BN)+"erl7*q+(.lhTKZaslY/JW.lWuQ00dt\rDOm)VT//l.S77#uK=)Oa9%bpRF7_2a]uE&D%S?"Q`ZN42dUVRK_'F@pq1qN1+2kn93ZB(Ef7N+Nr+4t[Ro9KFS/3X&!D&\=*d8@S6SMB%hBQ#2s#Y>h-Q-N@^.%KaNV\WO.LZZB1*ji^SH8A/7h":TdoDJL"$J\tYVKOY17=]qtr6U(LO)m*(o-/f`W1&KGApiG0nh"Jk+EIb*aHimA,iMGg2Y:uYdA%V2Qms:cn8*RSZe:rIBi-8;O@T+KR8NQ*D6aRj&8_K,n$>8H?obV]D]2n'S@B%&D!ha!aK?dJa>B$Qh9nN*^24QnW]DMPp?UdLkq)%S"=Ygq,J6e#Qh;)@R':R+NWi<#>%D*%0tG*X9VD""CXfP=GOeNmN4tt)Pfuf$bje-$m7i>)Ps=L8@:l.P0+^,8C4Xa'uE!&N*`H7%.Vh!nU=Q$<$pr7:^k$^:$ljLV6H/YR=M+kc23r2K[cPQ08@29!JtT+mr)+Me-q*g&Tb8QBUSn=s9Fs'KZc<64UVDj47-4Z0D23P0%>]@+]"&Nh[oF_racaUrL+rW#ml*l<THHJS%Y#4U3SW^RWrEG7eXH`8m5V,RZkE=D4WCD$N/4F3YU]K^)=qR_Nj$ipnC,u_J.gi5]%,U4$e[?(dBV:Nb^CQu'G=c9Q3buC5NUtAC:_X_iU+bZS%3C%tIfO6f\1^H+A9S/94f+Sko:pj3!%$8rE=J>s5"Csp=opgn/KJ0_`%Ua*0VZ<#V/i</h`<7=@Q)^[Y;am:utePXR%!>C_A_?DYk$]>2"Fp=&O>/*U;%08*CPlU6TJk3t3_Mt?tLPfh!Tef85rGY1N%&)n'%&L:&GPl@0Y$X2Tm_(X3YCs!l*>SS!("d(Qd@38#$@qbD?i0[`9Lg5*pD-H(I[F_eFD@e2I\m-jl4]JeWp@+TpeQV0nZph++j^M)t%3lGV)nm"f0*4_p]<I"NCg%pnCgL4Sr&0-8`n0[X9W/J+$Z5)boJBXaa2h7EHDI8*]4NcNolO]O.$AZNWjY`at)rH('n)9!L%,]AS%LL/p72lRNC-gU_X2"`+s(Q.9^B-*75os@H[O]+5SrLY`B]?D!O3MO_B(LZno/DX?]PN6k]m>pNEOA,nnjlMeagVq^l029Mh1dO1l%>Op$58_[5s+VO?_8WXG[lNpL>j1nH*\L%K^(/p-V]^jjh'@Wr/o!]1l*t+8r9L.?AV!!M*2f0aELk$^CO]fHd:@bJ7]"G@oQB=.)%>'N39$hRp4ApV=PJC6\N7tRN<6-ZL'LPDZJeugGn%mT:1p<cja23;AR;)'\tTg*5eZ//1$$JJ-<1O1&W+q5Di9_4&_cB'G!fd7:9%+2UAr8e2YK",l&aJJ93'R11);Uk^@YLe+8qCq'<)Nac$`9Vo9j_2YGCUaD.5f;7c1r9qse55-UVJC[LPZRtE46cQ(7KUY;Dn._O6%;A&3LYHNPo1>dWIOd$OPp%pr;F3(t(Jk.=8L?`HUcfUPQm0'A%)98Jh8-^q(&H>eCrNY&b'B^P@%MgP?$HRq]Mailj5).b)9J6g7%?u3bunl4$<6iHS=7+e7eG0?qs_*j1V)h'4;@A"F'BkUW5X%>Vdp+@mI.7;D-MZl)a.GEq0*@f2>JQTNU*K)1O5[sA$RE4kYX^=dM%dmVF'*73okL9(AHCjD3_\*a.Mc"6`58D2tZ3:,70BqIRV=85nb3JC!X@Dt\8^@tfae9O,W,fH?0V<PZj+<da_%X'cn*U`<5VsCT&%#%N*1pR_c,)fe7S[Gg!!2%j.,P:B%SeOYsA1fl=aJMq9LobWE112]EoId[19SM[*HoAkO2mU\LJYVL.nFddT(405WqIVUmO3R75^%,LX(&q_YeVH*#nuRu75"C*jYRS^6u3rO2BuVq&G_-b,ZD1jf'tf7-0MqM.PSS&&foJ3!.6?@H-H!DVnNK;fJh)>gW7qh(-uDkA9)%W`ugl^lS`EIN+UiJ0d'ErF[%gZ:`+.9tf@aa"V_l'ea0;H)kH=:)>5U><k]TW+gTUdd-Yd[4lBFAs^fsFk\Y"5H`C:%R<&/31O:q%_2^a_#;D05[<]tANuA7.on2qu]1Y*$p1D.uY0mcaOlaj7#AC/tHikZ9C=lQS33ON+VeJ-W:(+9HQ^,?q$`JBj5Ze*1)APsICFpNa%mL&RE".JAG7pm:/jk:8*o^l1H9#Us0JtQ052:gH2ct_<2j_^nk:KND"$OiOT^r4C]kH-C;P(H9*<7_OdTp4.@i'Jkh#V6-UgdB7n%GWD^D#cdPJL(59^3-?KrD^+kHgu"c%*q,CSmEYULXKd*OYuF>3L#OCV(nZQZC`]D&^"J^a$3?IgEK$m,$+/r05^Ia-9%I_7OM%rA%N@)TZc@ROG7"Z6SPc(eNEHrF6e%K!f!Ri/o[TlPjN[gH`AU*@J?Y&V:q71$).AR/7hm+$I??TH](EqLnX/Kr<[+\UMm)A(?p5rFj%NMTuD%UshPZ`YUm:NfCQZ9-j&,D)!OX146Gq@nRg]%g7O[S@$kEmV9lJTBgN^\-f$F+q'Oe"3g?eh7)5@RE/ko`qcS4eS2]o>ra`%<Ni>F$B63qbFt0u"?2;[a=Q5uI#Z5T;;dc!k5@A!Z,oX6+\&eT'%agH%I>fT:FRtCMQ\*<Md$Gu$V1LnllX?d_'&HS$>OB<>t0`P%eKE1CQE&?3&\3lq5A#sRkWdg5Sf1l%+hX6K\-;C;5#j5>VpJTe"[.dBU!O_$qs(;bK,+Quh7)5m$+'J1pFP\."kms'qr<4K+$shN%QW;7@b[*1B0TFpRa/NgH]cDqq/#r)qW[^65'.6Z.>X,=E/)ArY-VdB+Y%A)r6s6)*cUhl^n0&1`6+4;S@]t%tq&P?BTDRGK4X\8S%94m>^.8(n<Q=I@G+Tti'eLl/^))%c+1:D#MFT5"<LS5XqRdX%#^^a*b5;smJRRaZj0)JFea3%"I9IYD'5`F+$#q]jlEhEfGMomQ5%oaEp>Hht9iZZIgFOJtc$gE+OI#<,8ClVlnnmU"!fq?Y:@[l>X<Q8uU4m#29bV;F"gJ<HM@D5gXkQ7\bAf?WF!E:l.t\9c6)*8PG:%S$&>Y9ad_Y"U>(f;RB_WZ:&^g7)8G/U1D/<_W3d(#._&lmAd!b5IkCgZ@^Tf@uN"jW0VSg&44B0/JI/E%&!A)""Z&_]YPH^KA,m;%$OjlQ*EQ0^[F6d2-igTfnZ#LW3b_4?;dhOIMqu>\?$:G'ZnnH^TeAT0?0D/Y::0B!e!?mGDNtRR6LFVp:<W+mnJep<cT<)?So)\t%rqc2B[^*b'5-i*(;#f]Y]JfK5a^8d`2&\9T%)+j.mK97OrclVER^$",MqQi2Man_9+]K>FG/IN%5fjLsKRo9YTsY#tVgH*CHk>Pu%*[me]!6pIbRkE(2P/sp,BsE1+`PG*Pi\XYNQ:*]M\X*c1:GHdA<'=6/nWYl"RJd:f/6:k[%gVQ6/j#$Oe^@51pteuL)\Sk-Vf%pp%b4X3Kle4!H[u5X?e2WC-_pHhXT7+F;?HYL4#9sT9]+nJ%3qc;YaR<C,HEZ'<Kn!_ZS(>c:*1i>E"@8iq(B)"X3t#"XKE(`TUA+b^%D\;bp84R+0l4/If^i=I3bS'SW984KdNk<a2.b/57b'N^4U9&)MgT\e(Q!J1]8jmqSe9<pJ<G9G7kUG\g:Z>=%Nk-Oh?I,29'Y!P:%"KZDhLE93_RmSRX57+p"7d4sDVd&!d0q>B@o?W^/oAks,kp.H=2^E$)0D!M2GAe`"dP<ck:jP:jrf.8+JaSqg@aT@KXTi!B7fCdI%KreSg"JY&R6[)Z^U^Uj_aeo(i-9!,gs$1/pYpMbX<?Uc\?IKQr%5?WU=uAb/+<LX"U::g#,d<Ha4[eiW=AL_jUo]iS_DOmQ%RfIM%7;![7Q<&,4iYeQYC2R3#*bFSf0d1+5p2+f!>fJ\9>!c*[mT@0#8!<Od$pqsnr2co;OD!OUEAR;5Ve4U&h/umh;b']aRes"^.Rc:O%[^YlPHQJj=[--c(*2OK94?)@8)W&k`WhQfHCCXl0SebY&L:B)%rnn-7$)lr^hRnCoDp2_jQ&Z6W5QQ#rR5n/h.;h/(FI.$\[Q:]l%!g<2@iERt4,o=50KW<%t/p2f#>@BK54pRO#>M1cbO1Fo.>-7L[\e%^4fi(uWKm'Y\'rumUMm?D"X+8WtaIk[]`E('+h6?U^;VY"_%VLkfkkfSE>=%u6BaIPPVlrFF!)Og3A_5>9MTV=>J+D\a(cgC;P3jNNodA$8^"-T'X8hm!.JlaE+4;GGrUr]TB\&_i+(@.n:a?.$\%eMMBWfj<,tGL]m#Vej5=qbP\KT;E*[3Bg4(R&T0n=QWbYk<dEn"S=lsQo8mk=SC#J>@N*uTSh6m-.fE%<R<>8ZF?dM!ia',oZ3mI%N>t`j6!h8o@D&GK]4X_0X/+9ccSV\>B6P(RG%m,[B5PUjdH:_4fSqBT%/QjMJ+,iladB7.gSupJP&0n&NeTP=5BOt^/]T-J<kR*$%a\`JpMHp)1WU!re-2]X5fVc-lLDR-9r\[C7@gU2k/IR>&&cdGdU4CI(DeSRh?BE*5a[P4P"r"P=%L3;@cHVK#[DIcc'*0sA.OIhV%"\f*QR[Z$7/3&;hnJhW.cX3n.$chSQ>o1n/4Cb.1ItaoZ]pn.6q2%?%c#^TAI6VLN!Lt-=kVML/Q*.joq0cnW;.Um<e+,N>2FD.$%C59hGOKJ];PM!'e\n#N&s-efY@7KC#b4bf9Z%fsN7^\pV$37RAI=5hY>>B+HFFag_pNlW;`7]g%r8%XI6c3h+=-mg5rIsI(`^FG=%r_(bP'+c#RHp8:qU9WV)#?u!s,UXbjAhhgl,H5pa%VNo6ir4"Li'f];e@Gg(n!5h9Cd"!&EhX[VO'eQkL&eC]]Q`8F'5GGQ#gsJr%]k2TEooc:IeindZ!g6bu>VGrb;K_H(,62ud?0/elUXZ_?_QW4VU2g*V7<(>VJECs"g31qD/WgiTHamE(*gUko;A536*)Pd/./)[!%f&n$Oh%$I?=&k_A(*&O>!G9W5kGAa"$UC[]k[qth#V,<Y=!IJ8`2cBd[EYu\YA\jR;uX"go]%6gcu77Sn$b1d5-4Lf@NG6Zi!ArI%q$kg<ASjFf6O((Vf(sc087,$S>3XcK0L[oFe,]"IM5!&XXWoj1'3T`IRVC;^X3$T-(FN[G<\>=3a)1@pAIA\)5p1=>lSf54M(d?*%>%F+h%/=60,JZKRmQAZ(-`]!\;$\,p;@r::Pa61^"eZCA1eXa+Dea0)R3[mR\D>K?+,AYiOr&eNBCD^aKELGnOoaeBct,q_Y2Y`]%d&ap@r_'BXlh!DOHV#6[O)i<*UPLXOc2Q[lW8;?GkUf#J36IHLTm0<^iq;<8U&L%rD<6o`!Gt[F&__PGe4^(s;'20'pkB"U78/69%XOa:Xh7X_B9;6iO6T0=Vq&iQdcZCh_eb+6Jl<!8XlGlgeS4/lq:P6"`H@.a\35\L?nu4`C7=Jt_ZT$We^U55Y_-P5lXt(a+^8bah%f=TubrP^QZZ"hU`%u+pE'6c:G'LZT8oD1%VcRf;G5[?CP)b0\'[&U)eB5kQ-)\L@hDte_AV6k-M7-4Z<W/T=9FBp2>$_FurJ%cPM%kB@3+R8(9p2O<[U[U?Q,@tuAL>,6O`.@Qf72'X8V=Se/02Sd\MnPYNC"uMA.l6O"KaDPd4_01GD!JP?g!HH&UPbS5]6dHIJ%T&j3%eds0,oQ\"9L/^YFf&jP.9f$B0TWK`1\A8.s+,<Q@Fcr2[f'^0-DiLmGCAY^[k,7h8E9ncO;=k4,6M"DW-D4V#lN!3c?aToad+,O&%F9@'%]aL%c!"D8H'Yj:]*-Xs:(%Y\ASX$*0:KNa*n*$K"K*_5LJX4uhiXK3Q$`.a9+,Mh"4r$\ILGJ2W>Yj>46fY4G52IF:RuGI?%fPAQ)-pTPUN9pSE1*nGn.\Lc4)H9'ATN4eOfej??iY(3Q?9R+`hJD^^3iHnDMRPpi#t5t$T[ZpXEnof-3eR?[4Z=4I&0#S%fM's<%i:?I+9onQ4(RuY#Qo<fQ*Mcdqr6G.N:j^HBpCA0PlXY.aWiESJg$2YiV7=$UG="pWW"L5:lp]WEq$G_R'Johrc&ArT%*>$^BKUf#%Vr$Q-X[cfkf@$D]9_5DtEW`7'Bg5T_m;(bnkW"MemW-&Cp7aV*h8QC<c[JC:c4.+$/GoHp&Oh76cj2Cagb8NN&LeoODB506LWEVF%k1Tp;hPHEe3q)6dTCV*>e%'<dr^66g!M%7Ki8<hnOYT_g5Hdf(k`"[>)'+X]P$bHT6VhTTdcLsIW^c]WbAX.ZlL()V"7pDNN8QqU%kP]2#J*':^]LNc`g&c*%orm_;oRXh("Fn)Nj"d(8F"_=VM#GJKpbrPOX-S<+LIJ0BQM*$V71M.MaiSLGr;Q1D[D3`_;2ZC0W9Q%9%GJ7u8;9i7#6\&6$g#M?9;EV['9NcCNePkLb@jilT!Dq(dauk?38pK]A,:=V,mN>A]2ZqOn5O-_'$h?)o$-1Y]55"mOWe?)h0#(].%=Fehks&3=nkIKVt]f3l7R>0^J(AA*SI6aA(*hn*pW'=gu_e<RM]M_Y!+aRrdnS>]MN9)qG:Kf[D`:STP9KL4tAR_tN`"Ndcku_C'%jNt]ek.0J1KNtM5p7nP1q#UB`&Y;f\U?>pX`^&gQ#qG=%b+q\mmCKnQT)Iu$QJ7W!V$g@4:1<m3PBcA!oC\sa87;kA5Hcp7'MfIk%2a,8pn5+UNj8!K3,S'A*m8JcRC1QQIa\Dd*qQ_2br"Z]r$>!&:=?t097>^bS:^4V&9+Bu/.Br@N`1.9"F6l+c(Q$;]?Prt/C@4S]%X,f9]$iDWkl?oG>DEa?;VF"bCr2t3F4oFPLVuQKeG>\3Nr-<,6S>n"Seu80tHSQ9lT-a.Yn4Mf&!L4gdYNKJh]Jgi=:40o/^AJkC%OIYX_`6aP?#/;pphRYpQPOVGNG8PJ.-T618r6F/9q:QB$$6osQ-Fg2s/pN>jE\<>"4p'FUPi$&%7!T.J5G!5lSGIPC=@735#MntM%)6(Eof<=ds'HH#+jnI-F1CdE/VKbk9Y-5YB.@8`%7fAe*3%_mm7E"IfP%JpuK"gZRDd)b\mIIBQfsUOOC&Z[W[M2S,jZ@H2X#WT%%[(73!;G^M.G!C-q^:GLG4>/jcbQ,o#p,l\^AN>#YP))M\:=8NkQ)`K&s7$>38R#QD:i^-j%!1!lVM2*[!_!GMG!bd['&:qu?<PXg%CNRU9^>mX7qf4*968bJZeui"66.jp>(E)=l2BH1eUHe$CnWFt]-`AL9!E'ngEpD$)@VZ<2Oe9@"b5/`HU4s+kc-(/LojstC0iK]O%)_B!XUh1Cbgge&`HJ\R%RJ,ik<K6^N@FZ;2i7m#:=eV5fiiZV[>LKBQrTsRcFZ8\niFJd/5?3_<5?>Z?\YnY9@oH>4;hulh2i<r5%>Qmp'^l#ubacceiS#Ok5_8%srXip>%\O3+1pTIlI5]l%OF4gEG<#k)J"fehb)30h^r;m]FH;sBGIO[`8q6Nn0'FQGg4#=soQb[i@%7a"CE.JbADS^W>E=t/!J`Z_lQ5(@i.)`e=s;K\$9V*@k[fqVo,$MnA+G9HjOnRD.jC8kC`YEkI?3f,t2O$HTr\R-PF>2=h@SJj8[%FTb_BaAb4Rf`a^m>hAq;"0\sh#9IX%MQjdI!5?@@Rd,X:AA(:Lnu=lkn*e'uq4bJl,BFH._Y+@Pq?9\OquO&Z=R6`?D,eTYIE&Ie%OtfNDDGYo'6pU^0_iY@kqKQAm*iu"6q.u[_HiX#2gp+qMqU[t2JC-58cmr&ST)Lo;SEPcW:(K1:jjO=WWL0Qo/HXYV*QZj8p.e.U%g.m/H9ckH3][g98("8LE62LT@!H)0O5=NScC`5@QnQRe*YBqS'l;6nR]<+UG))Jm%1.(#En(MB_Ts%)9%Io;.PT3Jq,#F1V9UeX_%BU40c55[M84%:kf"Z!?.(V&.ViQRHB?QG>CV#$j`p]SPskhi:HV>.$TAg$3/!PC2M/8p5#S&J,4dE,VEl2JABAWqC*<OB%Z#I:^<%3m0?l>)mrgC_LqJ%7]S0%7kMc[so/RclK;-/JXf?qjDn>=0IkHV90Q+?<'6\7^eJp?WSS?<.@%r\qOhDLpB2OfPE`BgbL_1lpt,1%n4tZB25I>tQ6^ZDr77(4c3.='%.iGopO\d\h,(YtB&:X]WW6UlEABpI;@^:.5f#\BI%78,@>eSAI#@#r)i>?N[3LSBEgQ>HUR34#%;Cd^)<rLUNlKoQYh&*WUXE%n?X!AA!:-Lh19(?)[q5rTWqA3-n/I$e+Tat/T9VcXNNQS8P!L7ErL$PX/Weq9$M"ccbZ<`O4,Th,"%CMJ647TTQ7qtgH*-TsHrfm\p\l5?46gRlNNU70u#?*s<tQNh^,L7p#U#O*SU48JdPM2rEP%R@R<-As)Lb*:VT086OEh;.Z+ij5fb%gDm0JWlM6>F;&.=Y\=HtSj-hiZF0\GoJ*sIk@@>,^fVmW0'5r,S,*8YouA#3TA#G?X&U6E-P[s^!ns0+CTdKug5ktq)i>\5)&@Vt%nBF8;1]We@g:BLK3U@?LcuNmLm;[>eIVp[fIB@n_r4A5_b&IF:!c)k;Wmn6qH;r7F,TKL#hLo+]+@7rNF0BiB5SWs?=LY;]7l%^"%l4nQHaE#.n8O/Vg:/M^J,X?!aL+54c<;^9:]a6r%V7MCZ*Vm2Bgbk^f=_HT$BM1qLg49:dXMVfSVOErH,0T.R,GVdDo>c-nPuj!&%M*.Y>?6/Cl^&bV4!6L8VA")lH&\m$hQ.`m%ReO<Ih$l\5O=L&8*EFkSBmsO2c5>tS\,UO5Yr->L0J_7a6pcS-J`;Dc1^T\fKR3/U%X(DE[eK%C-_s0?Po>k.3dXZk*%@fq>&-BUV1q1n(*Shlp9p^I;neL]HlK<+@7<J(NnBRNKTmj]!ZY>Uj,C[S,Rkfi>J;C0W#X5n9%VAQ0L;@BnDAeQVj/Jle:RHn(+=%7(`+^GpP6FZeGSE),:SHb8>%!$+>1UC4_+Qor#_[]a)Q[VZ`^3M@?k$i.=:B@IiRH[5@&h%SS%>IXcR,-t=Zhr:Uaiqt=M]<ns.%^%Ta+;OCJOXsE6)SUhK%62h[kOCX%((i%3m!kZT(N)K6;Vpp4(,PrLRN7eS7HO!!jD6Bj?StQW%<EHn56j<;_$IZoN5JQ;jFQg;"MR`uKULe!:jR<5pa&WP4Eci`F&NFCaAsuc0*&$HGYWl7F6/;&jIk=;b**pPk3TYRpe\-\D_uASI%cH%P9-"?q>S=0#W"Orq<JUn5C-ED)u#onI;U>:]3@1a;1W`9R4Qb_ed;iIZrA-+N1SesrpPb\Hb"T_5-le[=K0EhZ?'`m\q^$GLe%DY_a;r)e0G($,\snZY1Flq)!`Utg?sK0U3Q]Y0'o;./mNnHgG`iJ!MIBYY"ah^\Xu%LJlFMdK?C^F<[hZW\EqeFJQ,pG$=u/Ocb=%],g`0m"K&'YePa$[iA#2o4>I>l021:]J+Y>o%-O>4+$1hp.hVQe\S7O+d,f67pcRXkf^qD,J/"UZ&QK5U)V$rXjgZ.Z$EOT891<M%&A/(VU+'S]=9&>/Fg/,76A`7H\^lG*Zm9k*G?mY&Jm?.`Un_W\s8:*rQThU&D@NKsmIR7?4SaSk<<<s-^oLCe47oNOH3HHreSe`=%pF'"t!/d3!CDTd[*5@$p]!GRI##475s8:<=qki5JAnZ]fcaDe;d/t-,[Y/CB,SYm(!D5[q9$.L0Bgo*CYPHo$f/p!F?BODh&QS`!%&9YaqB<'YMhVc/D<)KRD+/ZM:n;ek_X[rt*Q:JD"0rKg\^;cQggZI3r%PKGm7CS1@`W?\NROP/T:2"0)-ki;\^Mp>Y>1>#><P00k%9m/W6r<"H0)]?p'a_:P58LQm>qlbMI!Q0=X]&-imo`5":OQ&Dk;j6''-L)LM=_UEZf9$F66TYoli2]B'omdMan<:Xb$q7ZMDq"tq%-BM<)%(GtDKeZZ":fM[)/+7s;0a(;_VL,@Jg>^?T*QYHr\hhtPTJ@lbp3#ff1eGu45UC-XkbSEl9Rl'b(dHlNkVY^FYpfhpTM8q.%]t,.1/doGpn_HU2\%4jU_Tr-2/,[a'<KS,gd:^Y/3Le6VLP/khJt(%-`4<.XELT2!3sAl'L]OVn#1C3o4XH;6VFRq_#_#a'.A5Cs%CF/U0<DaH\;S^68$cq$AD&7F_k+ksPI%QS@UlrT-.;3!A)ZD>Q%.pFof,1*hl`4q4o,7B$h<XO<I*Sn<;m-#Kb[Ei%-pIW@&-WpS%/+QE"jfkGff)9W<d6q!0LuJ'0r(9lon5.4=bsam>YD&p0+XE_9!bIPi35E8H^r*B]5\@]I4Ce#Ja7gpZpqB5GLk(4mM]l2Qo'"S?%nnB!cK\Qn8M$@9U+#M4n0_&<+.pSKo2r0@e:8uSknle6aZ=dI(SZHB5ZJ5A2\;'8.`s:6\A5RlS$1GnmP]aTK1GFWK9rBd0YGuiu%a7<0PGC$CBHp_4'!g;,"lXp2LM[9gZO%:PKY!^S.qt%=j$pu;S9kc3\-?G"FQ1<!L-E!0#aM;0%=p#HX_Q)A:<LF>PVJ2<k+;:/l%%S"XA%qm@D"9fX\;^/i"%Ra_jRQEU//d3o,O%c'>E(oNUQ/VNr&lTO=V_$)MAA'?1ibDh#qk>!eB*QkUa]t/.>>#0C9p-%j=B/5]%%'T0S'nfV'^9p06>M\np=5_YpYGgXE0EuX$08dd]9k>3*R0gRUg-$^$%-Y+cpXCmjVCWktg;k4NlRu3mT0Tj]!+"'8Tt`k"D\j)F%%;C;J`u[IC"SffbOa[DHC3#:=PQ['T#5j&89&bbd/"ikOjtLH6h)$acmR]unlLCdGdP^MjVTp^@_]XAkPSPdPC!)-?oZaEc4QJY4%l;Au#kd/RfVW@&llf6i"9GIeh952c/!3#e']$>(RV!'q68^<[;CJ=="[]>2';hIB:Ahh(:P(718,X$uiTT8\3D!L>9+'Wim`G]&\%eiDEjUq<po'#u+1q=YAZQM7$9hbRB.D[BU)*K*3aGc.XD@OVcMA;RSAZYp?H:aqTPe&/K+(ldMfSO_kI_#O<5l$rIp<Ct.?<1dE0%hl0Y$-"R@V6TCal5&k4co'k9?i&-=ootXRo:=IV'R!G`ZQNsj#O6jd=[(:^"P85%_P9n;[_uQ.*1mbq-J6_j<0OP&[*QpD!FJH@=%T53,j/PT=jc?O,2p@e",@et%/&pYupG%JYqE\f^qq:G%R0\t!7Q^E1:00W^3^3L6#h[5@u0r=SeWBMB;[/E-9"TgaapbJ<E1Tolr%CqLol"qRiWZ?$3Q"%n$hmL&uV_sRc3P<!3V;Y,gR-[lf2"p%P:P_r7;,q3PakXu+n*e+Ac^S/>$<<;4F?4$#?KJLB/e6/V]+^e\g%a)]_2jJ.)!=>1uGC7#idk-+5)0#[%@Gg;hN\'<6;*E&a1bI,YuQKAF@]2-smI`OLkn$*aJ7`&g[Og7d-8/P@P0$-?Z2&!0sA*@Mm%"`"=UT*(Fso8<:1(/S1F.a&q:P]SFblE1"WC6]dI;7"?>I),eqg:6far<SjTcV]<UWU7A\!YgLEW+5"GE>^Ko_#n.>=]'Zqm5E#o%6*7,lV)Scr,Xs*Oojes/+'?b=VKBm?ibGRdKQ`8E/';@WYtu1g2Hm"VT-IjcV[d54!@8!0^!qB12"`YC;t4A/q[O'G5cK<.WJglG%&*[kP<Y8k`'iI]ICDlmLXH*84oe48YF$j,`$0KLsgoW6^)+g(>g/#6<e4BT,cT3?&d#Y<VXF>"R-d,VQG.Ku)lKd&SZu4GTBR]2?%@\q*B0nWT.N'`F$8jcE[7m%J'?2mh#F*iQ>q$X3]U9"e)fTYk'g.2kD#Fs/iHC"I+6"?h(6(m+oi,5j7O!(?$,_i[m&bU?42'2$*%SV1RDqc;mhMCp"]j=MF\HBM/("Vq8t?L<`Nf;>2l6_+6JRUlf3W7U/W6![.D\SG@^DXSYE'2'7'R/.6jhg`Jhg]-lm<?h:Q\UXUt%&K9^0o8gZE@X[0HDrM:D*>6(T"qk7jindW8?)CfWW8+PgV]N"P7Bgj`rI0D!DlE>`_H58a;iY8sp=)a>/t>^70htLZ9F]/!F[O\J%mMkb4UZ&a7E^+cqF-S]\nP?I,!`:XGUsj?O7n[M8+hq7T!m>cldt<-D;EL&uKoeAI.ek'o@r^0u78!Qjg`)1!*-s4YMf@$kN'Qn#%J'(<CE'c09&=3iU3n>&`ffVNU^^]L6&$2!?=h+ZE/e8Tq"Mo$fH`hk5*P_5=kKBa\/K_1A"ghCOj>AFir]iD2l0s8J/\a0Gf`BnK%US^)#"!LT\MP0$]RKhfc(.R'[WZgp%O.)t\J74'INE%"lMQie5ptL$:dB^;F7RaEAn#7?oFZE!4;'3&4>C2?"[#F:*%iBpZ7Mu$r%CG5kUqsNqJr]j*u<;"(;EhDEjO.^p6Y>JfIc/^[A><qB4!^ZVER$9r62;7Uk/Gf'S)%"bRU"H%`MCVKsA("[=VWjoX`Y&]9'fjVt%7/I6qj?7d)3SSaE6STVI&%#PaQ9i&+-l;1+Q9$okS:lZDXN6:ncn6fM,O28;rVD+r3YQ>$mp)!`j7OTPb7D81q[YjcBi(LmXZt08%\R?3*2bm?9fUr.4E7aq]<LBNDHbe<Vp&B@+p-5T<+ujX/<'=fG>Kc#$.lD._rOh<.K'3'E?LV_k+%)ii83irOO1^jRiE9!'YK]DR%L=]XB.!.K5DL+kKo31l%%#XZT@2%DkonK*1'$%f"CXKGul?t:p)6"i4Ik2kiMutF(X1=X\2K\+tXo[>uc.MYQAFAEM'YElG4=Bl@%W2XjjOl'h)%>8HUJK/fUYf_ZK/C_3PFR$q=#T5Th7K/1/3WE6&6UEr.P?F!.N"&<Tm&qXN`dPs9KW88XSX,$XLN]'g_F#)5=,;hU%a08'-(ma`c$Q\C8c&s0AH@Z+Z&P3Qo(C=n8+@?^NJO2.h-'B.8bqb01VIlWo>FkRqV?e3AZB<MRQ[UX`m(X)G.mVAEc"2M"ggoXc%(r:(jp"nJ'LcdaeU>]NP!@h(t9g)AH8\_[N=Un!;F=O];H-@0J+JK/hLg?(8:c(C$Il?\$!A`-G+M'Hkb:i'A^UF$^+^03[K!");%Tm#u=FJV0&eLHWhZ:HgfU<gEM5]_L0K/-G<>.WifLJXf7*^$hJK,BJo-#uUaF?2uG^L0b!J,\tT]0ZT$eBd<D'[Y<Nq$WKA"Te.W%DZ8.eIm/9``b\h.!H)ei%ho&W?g'@KXo"uqM#giO1=QV9=kA7%K!D1/dPH)+LiJ@BJ>0RU9l!#%j]/h;nM2aT6@u.*(!tBG^;.*3%&_Ee9HR46bKTf]-L5&UP!ASON+OnN(W&(68?$+Eob-M?oJDKVkf]3WnBYN!pJ13img@P(6*0L[-*11>JC"WX='m:?pc(@A'mL4lQ%m72Tha1NYWpXdY!G[;46nCgjk:[p9rUt<LLq6,9q_&4\#>aE\t(<XV:6q]<BW,jX5V%qAJ7(8K5ZN((GC\SVVT,j"XF>:jEU-cQI%m@o@G;m]u"XF-l)!Q/g24B[Hm"U5!i_uo_s_YH:eYh0LL08$tBDYB>qZLD(&Zb1)qKqVYABh&\nc`qY):U6rW#&)_PDj,!R&*A_C%CYmt)Y*f@&Lj<)mKMO$b0L3bH!&k_8Cj)$'YDq$&"ioVsfBdI,PgH7VL2EDi2P:luY7Q=L30(O9L<\h.'h\4Im7HV64'^S7E+CYs%$rapm$iIDnX=6(sp<>'>asVteY@V+^Sur*XoKlB)-?)<%>*4Hh$loiS6H(MSgd5Q(6<u/dWtFUHmXneIlRK\YO5%Z7(6AsJ/,YEk%d+rkd;;cr/:bVf8n8\(($TF_`dg&mWd+ooc]q'oJXi7FOH4=B_*`(_q6UV?$\ke>1WWOg$(^9:PQQM=4/Mim2hAgjo%X7quc;IZ7%L!A!3rP>m-l[4"sS[GV283-jhJdRq/O#dV/`+$F5<._@.F`n<R1dO/%FNql&Z,D/[,o5sKoCE"Oopi^DK,9855Rs;l"i2j6F'"ZL%gm=CUoM'N*GY[h9VE5i\5'6F.&BarCS*gYflbD;eVaGFEWBUtPYBO#HlAd=W%W*Vo?8QR=9VT.YX'siIf.IkN3=ZY#-$N5"Nf*lS%cu1i5f0X7VaK9PhJ3oKMi*sg/!5krMW&kcNA^UY6NdM^:O'fkg[E(Pm7bt.r),V0:R0BdGOJ?DdOa_i501RnDmG9MBe%F3"YXKQa%":uZhRis1"(a+TB/B(jFPY8&1&186]]E)`VDiVeObd*51S?G2.%!L]NkE+C:gMo3MC6a)9.,+=tio%AnF$j+KRCQY_0_=?[q0Hpc%0Caa0Cb3$Z(K=`)TmqBQ<n1Kl#L<eC,D0r_[>sUW$mS*;%^pQk0IgO@&(U\p=a#5sh[g`SoZrT3G:A:%VjKaQErAM[!(T!hmBrNi%`lK"I&S38BgL-FNJ?-CA\j0HN<q\'<9c\O=%lqP`@VU'QPq/Y10:F+PN7asWj3upqMY2.brbnBaF#Zq:Z#d03L4d)T!#Ku1Qi;`^%\-h\Bs!P_Kf^t3c.(72]q5L'%GWYrdR2ZX$.\nYbb#`0(1dN/,ik%WIjR:k'^NdSo)?/92r(ZR4+AUQOF,0+3.\NH*\qcd7=rTPG%3j=o9r@pjdiN!6IPg64mn&WTf?NmCgr36<e0Bd\HO`=:HW^'Z.$9qPsopIP$j&(dLdL&jOA]=%8<s8iip?kl(``lp))foWlC.,SG%eot67fD)]9'e?@SY<.GiQEg<LI?U[H>k7iYF'Pp)_&T3MX_b0.fpaB@233rs!)8A1hu>t9A;.S++$?YYLJQ9>;q4l*LoG-L#bT\U%2iBEl.R#o94QkO/X;S2nL08SAgt*t=e/9._][cYeTY^fL]-H0)UJL62<ppF7?6CDPLGPT(1911+W^";el!NA=>EP?39SW[qkuF-s%6"od*Lo)sa(kTYk]lSL#$*PFpS$RI!7Mt%:hBDbYS<&-$TSRFNb2]k-qP_I+afd+-$DS7X.&?r=Vt_AV_WU97K@G7=>Z1C"3-npr%k%X5GeItXVh)S)[lYGarE-\M\hEJ*G>&hdKVkQjT5i5Y_hURJJO+R=>A6O_2c.OV>9&l:7<$ta@Yl"9^f,L^#V&8@T!3)B(![db'%T+o0%H,4KhkohVn7-Vl988S1f";IY[]Ym0rj6D,)7dS.WlX":nb7km:YC3!0.MMGtB6eTap4S1hjj:X+A$^D6HTSgZ?>&T7GVAIm%cM5QFp)VhK+iX2a9\N+0kiC&eS\IjP-A345X<XY4ofD\@aco/W#GbPgFL46FO05CXM,,ocrlFR&aZ-kqLg%^!N;+Us<pne9QkDBq%!Z]Qbbg[*L`SXiMXagO6#,j0dW]8D08D$&\74)^G^<Ymhol#CjiOltp#9^ViZJeCFCoJV^is@heNeAORhVpU0VQoH&s6li/-a$4+%`)ZiZRC&Ap5Q.]JZ>[k1+Tsf#nSF)i.0tOiTmS_'bG$=jnPdX22Kd<(1,-Jp-)Y=o_3Gt.Bpg+PA0VG[VBrItqAs#]J+?fT2EBNt%/6`=R_&+g:gLsd;g4X.'c82Gl?-*u&hT_9^I_gAlTASj^2nfs*[IO!TgF[dHXNa>`8E9CQ[4._BfDjj#F+>)dOUn3Vp"LH:KVLF]%.seGQDE[ksROj)Z@I6!C*d2-f:K`HVS$*XJl5O?S.%SLC%O1KY0_ZM&_u9Q[.])aL]"t6j9QKk$668ShD0"YdgC%qrO^isQ`LTAX%f-;i.Rshdka7F)(hKi]7^u2q0L`*@FTOT_akGk`.)JMnBn$k`l8EVol^m'G#DXn-j2(.7"S=;_&(5dPd!sg:cd,"ObF:Y#Xes$D9%6JVSI;Xt[omEGE0oBme#hB4.A1dYeI=K),bhC;#%U:hgV_UQ!*k:=[q1)""^,M/''Gm2V!4Pmch$+#i9@LcUrWu-hR[:.Q(1<fq/%-cae?8aimdrCTRrD$#"\R@Ig]4=1_&Gs@BcOQ71&H,_4jO6I!9[dJW^GnBlKIc-jQ>?9lI]_4q.Jd[/hbuR"R*+kc_o!L`dn_-e&%W79k..;Il;X\6-SffaF&R!DC(J<l[2dD;=(jfp5of5s9CLZq:`]N@6B$d#:=emsW"QJ[F@boUR-)r8\J7golf7?rCJ6)U(b"H]G!%p#:W,!il+RVQ6+GMcY7TQ1e+=?Jt^SpRe$//$B@e'\Eqs:$;RKB;(Zh6BT_8]0&%<m`i5(PU%23OVMD93?hc-]u`CB2ZppG_M-Z3%Xf,EE+PdH"[6W9!:l&R1UsMg8`KnDh@0$?!(S"F`X.#rFUe/st2g5qMi.3dVm>==dIVI=3JrYg-QWa&*L[%CeSfCX$"*l0uP?)FL%BYuLb"Z!CYSfcudR:@M>n[c%o]S^<d_S*28O&`?aH]gWd%P=c`]g$q'SNYQe9@J@dij+.>os>OV)kZBOg=G\Zh2o1K*lgim=i"6<%PC#qlaWhiT0k3f-XsCMD!_=_T4eIq5ERl,PRqBuT*])rhKF$9&^4uBeK:3LuR`SefnE"&uO%I(MNoEWlUubT,B*KuDrVlGU:sHuK%_)e>7hU"NrqW!5_+e5"HSZI!\-1Ac![0+?X:dB;SWlnpn,7H\rg@"@0dQbd%^[jE..nT\Gk>O^WJ\#PG(<13YLJ=rXo2m*<cI)Z6%Z>8K]$TPqCV!.%KLo*5PQ`8XZ4.rF[?[sHURpU,i9SfQI)g?YnY47IIR\$;t"=mhq[A6=b(kj@RPH6u*Ft'OZ3AD\771CkE6Aa^q%m;?Gb-F"aIaU>*>n'S?ZZg?W^I0=:OXlW%^Ao[`6-/euOTW5HiD5o%k%Ki0rpcG>57Qcn1!?#PAq(XX!`_2@]cP>2-FA=[%![4dJ%8?9&_,``Fnp"p,Gpmu!H4FeCt%jlNTEJ,Y<0^(]3$EN=D"U,d?i&(aQqJ;Aq[$5IW;QD[IS+9<MZb#_Z@Tf/5(5Ntj3HRds72/<t%n,C0XZ/8NSP"6tt>NP<Y9SRs_SXD\1\&O/?ldNBu%XZN`58:8L'??EZ\tX/FA7l?SZcslr5UE$0YH7CdK.TD&r^/@gPK?Q=?',[U%7;bBFSBPhd%tH:A+Rkq?T+b=U'l>_NnD%PKR,BpnY;L$R7uFjp$fUAHmc'Z>hVVmQ(t@NABMQq30&>Yh+q0%e<XKc0;?5^Vfcm1i%?U0e0+#I#Ir$;Ne6A28*p05'8BD#IV*Lm.1c,5R$7ZD(d0+!1/q$SAq,G8Lh@F@]AG@!>BYLLh^r\gls#3oMS!:qPt[j\C&^s"jP%gW)o,1t"@!6M-8upTDE.:KHcA$g7JmqT"IU9J7e/mT\ERUV8lK9ZsSIhj9O.)hAiAIg./TqM-#:[(#3Hg!4R[Xn*Gh*cDS(\h0(O%$lCc@T]ao#5Yh)E4?udbj@&pSr#KA/2;UINPH16=p>1>66"VBD4Q\oO7)1VKKs"N<?m5)7Oj!d0,N60bkTlMpg_mqiP3%9Mnqgb!%s-bTl!=^PX4%Z4KdWOWIH`*sW2[)L]2.V9iT:WZukp,A@bgeP@r#I5`=7_khmm=gV/-K@ZYC((s+Mnu!?_bkeID4Wr3WN--b<5Mp%e&hZ:6CVb>533GIT(d#2V#`Vpj+]JhCBhQ.p*tP)f9u&n,#9j;K4n<gJs#7EBgtk73L1)S\?nf#WM`2_rZm0h-:1rp;2Sgcb?3RX%:&k?1/i:J/'nERuLItcu_<KgYXKO@S50W2l,LqbC'^(9:;aV]E[YpZ/^a"?U;f;fm8B]:q.:2gP5E4%HA\W[fF2P5$QR[RZ/,N@a%&1cAm@=@g2Mun9_s-+<#eGK>_=gKQW@4@9BqK(NLLc(P%frLsIU0@&[$G`XKN&O.WfQdo2\'/L;?=B&]XA7rTH=5'CL6hk(8"!83%`i\\G]In5N8@OD(':_,`V+c/[i$R(P$^)[8A\f,<)'2?_0=?6dZNA>!FS;efj/2LW.-Dt:(;JH#K[Ke7*VA+7LsFCLYZ+Hs?@=:B%g%h5iM+$kR@eFuXXfe_Z<#Laq*lP6kRK`e@]6#,X'7Sgr5(J"s-rk@E,YT"e(N4W$n59!P&_=S+ZH][\"Yl$diH-W,KUlm;^$Hf?%[3YRD@Kq91[_!@'l4t((0AU(D%oA-`%n]aAR-AoiB21=T*nT^NgUl]UP>Yi"#%"iXR+9R[Z!<c531,`LMjNbh<Ntr+N)<FuCq`S6%qZYE`h@_;iLAQO4(lK54mAj=b(kUZO*CU7@XE[fF6Z]euf1R\W>_;BT/p^^<?of>;k?c7;FBtK'?F':X'4`W"KSunI,r=\1L`g-'%7nq[V=D^ib\8uahC@D-H9^;Jt<IbQfD>ER'Z"2X2nWcW'eLEHTBt,#2Pm-!J_oc?-#48=/h9;hBS3;VM\ET6C]4T=(HM/F060pgc%YSO#K?`52Lqu_qAY4]YR>?"LbOuBV].I'%TZW'P'"YHjLAeE$5Bt>2@&'-JXh(;X3ial\B@80:3QbCk/Ku\>L&D`H:mdCsF0dk.p%U,#4e@se*^<*1rBgMlO[<mc:D>,m:5e\%KFSNL\GB97Oo-d2/b40L<9o^_:9bT>@><*<<ZUk%e$JbgaUmEIE?nf9Bg#r8.qEf,YG%89t%`*-M90\K'$HX18"HR%"\#h,b6F3\As<72@S);3iEE-3p?)@;nSMX%oM&$mT5LB^U)@a4o[k[$_*i',GC_f3j/[ZBB+3!]42`%d^="#<\^p[i(fi8eR]M2`T:7k9XV=-oL49ccg?#Tk>UDQR.Z3soI:bc0dq($CLHa/L.(2#qc#&2LP`rG!4N#ip@5XEAL4IMFa7'[%fkT9Lh[7tDITKD5@>[fRJhB&dLmBh!h<'+)2g4TXd^lL?mU#KBE"E'uWspFUEr'CF!88FjHEM@^?Pg3<O#1l[iYOR!:Y5kg=#$ng%Z[\WK($H>_o/pF_F:bXU)X+`@-2c:MK8EG1>PIEJ<Qn<+RrK6C9rg%`B4gM?1,o@KGh[?=E*O7K)j2Ub0"bM9ZURcKTdronQ]4Uk%Ett"Hr79n)nu#U",8[f/D/K/n-A-R5%9!:V,qFl5fYL!cbh#eIWJp.gR\ik6>IFh1n4Uem"7F;L*0ni-8\o'iBnkhRc#]mY6Nmi#%6L$FpVQXS&fCnfOHb/IuCO;p3"lWKfV]U$\!*qL:%g_=A5`TLV[hHA[ko$%S>5YRRr-puZnWU\CYR(itDl!E"i+4*?kc:AWm9s+3%KFU<[!YXrj=RD"q5E<V9FaXC\7q$jVW,Z4BN>$a[+cF?rBX%AAT_B#r)]T6]j=%ZF!:$HZBRT2,fYIXSMM)B3!0PCFHG+?R'e-al%q1@(62?`P@d"(cNT3$HTTH[e#)r)n^g`T@3Ni&"^+hQkE%OFT*<01BMYD=>#Y.(^R</:"T$gM2K`3$!V>^W]ZDJuY9:]`Yu!u2K(%XL?-H^F'Ycc=_A62YhYI>)#2>pZL-0l";W`&e%qen#%7BiWbEf]iP.q[r[__gWS(>1Sk3M:d.t%1t#L6'@8#S:EP%$1J,^NU$_i>%b%.3tJ-YfSh:,H049#N4Lr'>/N.R*YK[2=8N]Oma1upUB42X<<_TlBq706.:Pa(-e[;=OB?E\nfB[2nG?H@>rGq\s,o\R2DSa/IL%Wsa4W]ue?XSG^aD($C\=N"*Xf<]lUKJNrADSVrIXE(&]qpR7]ND=<s8MKp(:^rY?!flHZ+$#k\)A`h$gPU?c0:8nr*!VLI2BmN0_%)H!)[DnR\.%nJMq6'p$>kIJ]rmJ!gC9Nlr&)B<\Y4%_:[](Z_W>'<;+9Ro&dN:S_jKlT\Vl&Fenb*[OQD\",#f%6jQp-^aoS3jHO%*3\S:(_H?B7>2IYaG(95SMpdfP:u$R'cU+O>:o;]kL27ckN[8=K:qtaB:aTS]-"IsW=S\E@&M?>+9h.!D?bR>GtW0LN,b3tpYH@7%Jkf.<16/lthD`BMBB>4?8IVVaPm[Z1AmC[&[ESM,W)fpMBB-O!C.C<I/6N&NSObaq9EZ3kM4<B3GI%FjX6H4dP/Qu2e1E3F.X'7!%aM6/pd0(Q7:)Uaa#8/tK*'.=/Jn_(E!(3Xl(M3#]M:E\-H7jW%Q5Nc+goD\eC#RggFfAp*(89V7o[153K"r.r_5^DYRP-(Xp>ch:%!?0>Mm3B5lcn/Rl6gjG(=Qnoo=G*J^c;-YofR%[&/2^B@?-[.<[u?PMr:hE&gOIN3TQA5(TZU*8\a6MO!B(aTdI;j(L55DKRf4#,%#N?R(pXo",C(:/-)Qn,>cU`6RJlWk6YbRLq[7k2V7Fdu;_^tp]r7:,d+\ta24q.S([[NLs=T]5R1=OAUWb"]HndEm<'\\fGr>h@P%d^mC"_cT8!%X7YjoB0@CFmn:BhJ(u<_Ru2Ec_#l48IK\1^+`7<YY&l<8:8uHEDVckNQ"^flNAo7H;j3bdlZ,aEeBY!%3DQJLN.9n%iU5D!H-F-)BVl-mfRunoC,#k-9M]W4AP6(!;RI*/0t0rX$sJM$VKA0EHJ-rJ`RBUTrRf<JKQYtRB(_]7Ufc<I+"IM$_no2uI\61E%dhLco!_(VC35,g+7>+N)]'Y8f<o.4LeN1ocoQgY)eFf8Ub0Q8<O>@aEF8O<N<d"c%46C`-NLN$4nP89XpSIi858p9pr*=no#itI?%TK(atkD`#B0R"tL>X-Oj7X9.P9#SpKZ-D/EA(9+LZf*=U98i'dMKt.c*hj53B'*%_q1.X=4W)Jm1>[p@+GEL9WVmdVn>a$TYl9*u%bhpIH$4aFO::R#b\Nd;7dl_W(LPAWs8\ljgP'oN;`j-)[[Rp&4Qss`%-9A5,-o@ja:8?GNE9*T\M5>`c"KniLVY-<%YA@P;5p'1A%-"5L9ijkNt!B6htXP7>=F3/!tf]BRP.,-PXkP20-;Iph*pTd1SnEI3@SO'3IWp/NN42NY;/Z[CShqdG2%b9ER;Qfr"FmC,h"=:Xn%`Z,tO-2/f(I9>0D$!+&FUM#9"8-\AWqj.(]%mB:&lhLOhS?;8S7s.m)`^Z>+;=$?B[DLV&bt!eJ1^X<(]!Ar5pRU3Xms.cIK-,>]%b8h5t0-HDGkCSGBfu%D2]"*]ADOL3mNmj;.WMjM-nH*r<VU@UNq.+q("]Vm4gII%eNm"GlL*RIoI&uo`g6YT\$dXAb6O?(;+PtoU%D]M+ijfWNP@22OcJ=R(^h<1nq\)_TO8]-0iTEN\jJ[d]&:>j.t]<f$TbK-a['^)eu`"?]71RBCG;-_B;h!E3;<BU"#o--&jI8lJl%6HB(Of7".S9("7OhB+S%B1""M^SJ8c%NRI/C\IL)p:(61O#Z@"!c$&c9j:ii]&u5S!PN+qCa_)nRnhB3Mb+e3ic\R0hT%`$3YPjN%Yb*J?VQC5qccdWr^krc4d[u.e2$JR>_4q3Ec;(e^=nZ69\p;Y"V#7Hh:9m)?YWjT`.,BNOk>="<Cg_VNTn"]?Y^q)<O=;)=5JD[*%^26%!p$!C/.:g,=;1t`:l.*!hhhQ*iPf-k>ABRQ&SQn1(MT3A0(H<8\Y'l6Gq"`eO5mKXYI5%^!kK$D=1VSNELYnc=eeCiIBA5a?%Xf[BFIpS#[%RRc)oIW^C\2I9nh32I#;KIRq8EjWs<T)ba>BKo6J,I(V`HA;rJ9L"'!Uf(X+[C.\GRS=IK(:@)j70t63C94bYZER+%Qh^&B4)C_r.:dbPJ6#9)P]!)"c75kWdW>hcDUlLK$?C>q:R48Kb<h76J1HXl7NUKY,*WT*XH=M`>cV(nY_C[!=SP=".h[ALY$K]k%A;CB%F3,4lm`<4]MdkR]#VqnTjHdIHmF!NHau;^C@*71#WWRi;+bTLC2HPoAZ9&S:CEQW712G!^)]q?+N1Gb34%)N9m>eDM8#-?U%om(8i_c.0#.Mg<">IC]&4!9freKhrW]5t!\oWJnWcf`ih3)#^gM'(JFkKps#iI+jOo/W0gZDe\;YNcKZ$SX-:i_AtHL=1&'CZ_=V%a<n+\TLMjK724[]dX7L5m".^:LF^Y'^#DZpUMG>XmBj)IGTIq[e`qt!7B;DO?Q!19#=Ph*FCgVR5]p!=*6$[toPD+WYRio<A]Su)%EhWqAj/S#DY59o&p2g2\:,D.!6RH,#g!\IF80AdfHMd>UYuRI+%t>D`%Cd8!d9aT->JO'L$iM.5ROWM#^XdW;=?SlK07AeMqKtOU%Ir!NoHBsodWB<2Yei@e&$g=KIPK*57fU%(l]R,\]eWpX@kPR-%LC=pd[lt:iJ=:>GF*YNkEd9$s=$*m!fJ&f0@36ii%htO^n!Q_I%YO>JD48H4,O,/'SUh$rISj<c:mu(997""HMin<n*'YO1ek4ial:2-(;C.^t_RG`HFfbCK7L-klUe4ud6nc?Cog%9J*]EK%/N[r^(%hqB<TBYN&VN/kB;pHf4^A'*RJ)/em5mjiE19Kk$e1o(CN6iGc##_M@@KTT<UhK&`1C_jIWRUU"gg+/Ku?Feh-PiW^#3sUr'o\b6/%$eXs7]UeR5!?NoE$O3+TTD;$/@K11SMl\P!D;I1pZ4:`82-&L*b2aGCFX!q:j84fjmd#Y(Ff3JiAIu40hAh%]9_DFl)o!ihJboE"%p._s&r/KI&.-9*?W*8C;eBpH)*DbAZ2msIX2U@\sfI$L(1e7N,p\9_*rM<1:%D-!Dje*<?=Su]:T7tl<Yfb%rQUbM9$`A]9qM)Z<%c_&6YH5kV+[/8*rZa2G:e;KUe`dki17/1j6gMU.#DHAsX84`:[SBL(f3f2@n^0F(>9NrHs>P<Y6h^HEQj''?3A_+mRea'XKA)m[m%#cG\fQI&$4AWR4j1@8ofZd1BTLAK)<;)FiNE1XG7j!i-T\NKJs>tN.[,D'oGKU.f"/Li#s.V&,T_P`Uc+:_UX/r,5,Po4I?>4e-c%<.(>-4%K9N0@\#H#b^X%`,QXT!o\[iaRE17<]_?SCZj"Y4uQKcp!J"4%<4nW;q2$Zg@".Q1bP8@\8XTlpGEQcaeNh#r!6geUV]?s%T9%m7RpI0ipLE(Y3\'gAR6U(PeW5FGcg/-NlA?-ajJTGtAGI2C1GMb'XlPogY*lP`,nE9)2_u7,Y/14i>Vi_=WSB9`V2)Gp)H8bi%4)VE6%,BmV;ZEla+>[B0j_)nd.&o.XIB@t48uh'ST;C893llWl4Y!&!H-M32"3DeT1TB==I#HtR((II%m?(U4oLEC?_Cnm:?.c7G%_Ns+_TN3&K'TTtC-um=a$icZ[PQC6$5.@K0cXQ2NA0)pSd_@4LTV8LrlSQK/Ollkc$L6*aon$]b]D)5Kc6fj\8#94$O.9d"eDb#W%B;:4PeT5YO?AS#t[WD&Zl..`K1\81NEG"4M2-/#.b!8F:q)NpCQM%?V9%21::./5]K">panH$7):`K52E#.@M3Sdn%`MWSt#J-@u%[._sQd'D3R'Z`*gC<fhQEGD9[)pZ^cFo:)Yl;[%#Hji$WZdUDR[hjHU#jmKn(N'+f=`51]Ne%2cs'N-,e^hcV^h@,c`IVM;`@qYD%lrXP/Y[FQqCt1+^B%:?4hdId%")YAi`>@`Wj)6X"Hu(S=s7?9:?pd$$,i?`D#utl]1&\iif6N#Kq$W5.D`PF$K1%FpI^(Q,h$/])%W;(D]bN-GT=h"j#C5h)T)R"Ng9SSi&\nI/hWc)%YIF;,j(/W]%[_9YD\&;U`1olkRW5fn[VO-8bKJ$\hSi_ZRj6:GrqIH!$qoQ9(%VC4S9/%W+^mmin<Q2cFcmpReFX]k[jCr<:?(*Fgkm\eTFA<*9_E+FXDiRd*';0$-=VWiJN@=XFh41-*Z[T"fY4=9c+QbOJ,%;Fue%.dZGbMPL!u^s],(GOP*D(X=.JN]fu)hmA2]m4XR(']1atZ8&<GJ_5&\>Iqu)&RuS9:*#BP?W>10ne-4K3@BF`MqWQb#H&@GB_eP9%_d[$=Y_h_E^FG\Rc%P.YgW()",1>=%M5]-rILi?#\':nF!+s04eQa'mcnM"-U*@t8\t9M*bS^/Wp/!;pDgZ+:WZUR'6Ck;BZfJ;A%HV-rQ-,\Rl##%6g"nP>*q4Z9;ek0.=5*np9(:fX`m5`5<mRCD@ig1ft1Y9uQR+IYa)!hk.6_E@,<00a4SdI'QVYB5Wc"6'^l*_/^%pLmj3\VMk\gKH1_7,'VkdQF_R)A@]bPd&?,o`fKVVW6`1;$83;l!d:9r"%/dH]HLtpjdF,dB>me^7;o$Etn_`GPkSR&Q>1BD(1Q_%Q<YSc!=l0bKEt/I]1H0-.K3q!cJ';<2^O^QT]>`e`d<re6?MNL2%99t4*QX:$;,incXUAVr=&M',Rf-niWX5OHmo86JtLBLHR^\_%Kd85e,T/.:A8KQcHAF*CT9&FdrI=[[96j/tOuh3#k"&j5lhn??-;m29Wd3+tZou"%,SW\A>+U$!]oE/(hR\\/DBfVrN<a9l?Sg+I%8j.WUZZV!4h/3J>XI\LTZ[KL4I-J@O7R-^CmN-Ri2T6j8Q4S^t,#X4^@EVr,(o#mdr)d=X^V?ZkS_EZ,c)lf#\pRc-V=?/eZY,;9%.HC$B`nJ:UkG;bZgl^E#mX#d?QFA+hGei67Vn]5bg.IfHI<p]QS0lpsWjS/K+?;SIETc(ZPcOMe083]'P%2*8N#9am#$!p)\p!dj%(I#>)1MCMaYC.Sce?jFY"S\V;@\eEj:'FAJB$&sa*Mc@Deg+/%O/m8]Jud=13IMr4Z*+"P#d*5VSmOOocKsFq:Ma$VQBn?5T%6,<%4g\t-q5f:A#4XkF$\U';q.o$[f7%cu?fN<9`LZlh809WM<XmBBr2S"&>B(FLI-X7\oZiApV^<r9Brmpg:UZ[(&SDj!Uj\+6oFhg2%eXm/lVS2&&gHKaYNLcuj=OMQub]=dIIZJn!'33N!cS=eIR>7ApR5Xebo'da?-T44X=J^]%R)dH#GQ#blnM4q"SlGRu@C8:?'9TCT%VpDsp7_bNhId`REah)>RVP'u,/RaKUBV8bbI/P,9X-1rn\!EMYFAok&X_1Q;B=/`N;s?&!bG&R5@m+j;hiWB>\1J0>hlo^Sn5MH\%QYON1W79]"<^fuu10C^YOG#f-^!C&:;)t`j?iA3%A#4KD[$Rr/kP._GfSru#V(3'hq7BiM$Yhi10T7j?IWEPr+R2$;DDL(J\!5[0%/L%9\6lr__<2E4jUj/dkc),.Xa]2S`dQ':VJrsjkpb_@of/\%V$1!aU@DB+]I+BSs?K_0Jb@M?2Z#m"kJKU;PM9&V2/8$]&Eq;:;%=InTL*A<+H-)H&t^*C4BK0S[5*XT"2\Q/1Ql@cpZ6d>S:gf\=7$:$j$Kml7H3\VGd:VhiJGiTpkb(0?4Bi`@KYi+@SL>2FH6OG2N%&"/YfleSg9Q!@&Pk=QdZ6l':^^14Oepc1R6)hkeB!Z154-[gVNJ71$#S_u!rY,03l^kXKc^Tnk]lRpNSX5f6EA1E#sZ(0%*rI=c'%Vo/a12O;!q"8lZ%_'/^52B1db`bC#&;(fa_s-MY%3,f7aM.'u"JDeBRLj&E@`![@h@b\OlkE0VB!G^`%dO,eeRJd,Jj"k`P(k>ea%]OPM^*br]CTj'uM2/Ld(AJ=!uBqg^@-QlqXO7H'b.tCkD2*/)5!H&f]RB;5$Rb,Db^EAE+7a;"@<0lDZa$8-*/ImDI7sJdG24TQ?%o*USgh:IIq,"i#!a-!3BomEnu]rmMJj([5bE&dcIB(=`giUGW2dsh5f%2"Od/4e(pFJpn5gqO)-c11W-T[A%Xj/1m4Hp=KqhtN0P%\q.O_GR,clr0bA5+]SHKfm%s`H8>U@e*#njkQ]*1HG#SAfM(^Y0/a\9N^9htLa/>@[(G1=o=FCn-luA"9/B*bB&1'`_]<2t^LrFM%=?UMNAi(tP?iQLa<i=/HcHT32Qb'.^=sA8FRRqYp=UZmF<N3--QAG:pimlnHZ2S$@>.g^Y<.BXoj`6hMD;>_#kFmio#H;QA"lHf`%pPajeF?Ed$nj]C+ir0);5t#`3+B%mmqGL6O2#2SZ1[4F/Z"(@!=?:(P/mu=#6$2Y&hn<E0d2b3P@(V`U6i^b&"Nf_%/r>a_gL?!R%]C$'`jU#Vi'f6QMC@*ZrVI+Y)"i7oInKuL2AD\in4j@'i1)u3Hp[n`'N7J-PdPN5!r]I*m+>t6Up^IRNBtX!Pn>k!a;6OR.YrSW.%7KQ,s!Td'Nneo]]gO/+-4SK8+22L""h:W7^W%JL'8kEOObe.j*lbcYtaIp,Xrm&_V<#CjXG'D)%hu)7XKQa\05HaQ`iZrQn.`_Kq%654$RF#A.[EA=oX&Pm8(qZ:1H)a5!cROAV\GNH'ZmBk5gnuYWHHI;0qf5V\t`:XqbVCc/ta,k-+rpJo*f&d\lpY5b^g$A6L=8%A2%I1P/*kP@rsaJqfl/HaM5j#t$uN`qH?E6ZL,](-N=Nh5TB%*7A1Q/:i!V@gMQedH#-_"#FU8m,>CQlZjEIcRTe\tb"LJ#t2RTKUY<%.CH(=M8PN*@edT^2,)@U4]uP^6##5Fi*[bX4?7G:HA\Z-\hDq-QMCSrG5&J;Z'hptI.6'c_kZV,cF;d[QOipK'r7K^HpG`-@V=@W%K1nA\T<0'ql->pQ(l`JgAT&B+OnQ18W0`5\`@&Hhh.M58=W!f@7MQ_oQQ?@AhHB11gSo.^RsP@pZ!\?g&HVW7-m?p?eL/W*bhV8P%8O^1SZl]'.>>ANWeoGN7it*>Ne%OhN0+<h:r=S[SiR73eSa>fa<(6MI9=i(lq]c=N"Fb]KJ82fm/$=-a])Kog"smJ;o(K`]k8WFG%iB<!<JL^8iolF5#M_99g3W>[TScN<Lg3l.`^a&`R*_XmU^ZD53D5j1JIHK?8S&Xig>Fb/iGWV:0V#\6T^M,Q\'B^QeVu>),\3Cd&%3M4<2J)3+[_9lUen:@7<7Yb)d_rg9`@d4E>8%bp>,Ch%W:j]Y>n-7N\p9sSP4\kF6EWeP;Z=]1#!q0HR26OpSB/WPS\F8Rn%?N3Y%#qc]Yppi!NI^a@Z(jp7[]L9br@4e.*fDC%(*_T%S)"g@h,2?.Uc>F8='U7YKI&T/3J5`p@NTO[*-Qr%^"]R7.T]poER,e=)esV-:%B''f+'R2lc3=]XVHF+ZlY%3E`C):$^FhU4V!ZLWI(D8P:":<j3%)^J6dn'^*pYnN`e1fZ/b;?_n.nBHh!o=5%Yt@$*6,3,mPO['<%2DC[JIKOCsUrk6e=237*d)_9F6W$\GjE!)o*E(W0U;SJhMukELe>2PE7iLV\o_$8A[Bn@Q6*X3XoNp%.7@"h\hRRE'0`^g;])$qM%Xm*3\mMj$$j-V<FBOuLkpC4&<AKTbh\spN^BBJ+n-="M-^$GCriE>%31Sk\_EVr^3-H=;fNXLKh`H!,=q,&O*TqQ8RSr:S[PkT6S%Iam^;WbJm09As+2HGa4jJ1t?1)lFHdVb7B_+^q.YW3W>>St+<@/)BJ:^?$h$G$&H/b(L/,q+b*Y-9.2LYc.I8IZ8'/!R9T#%(ZNf%Ndt<7.M\8JYDc'rUh!)&(e[%?B@NmrqJ'3nhU;lZ8&3n\;UjUNiVcm-KsY't/nK?N>@)R_U)YOq-g#Kh0(5YL^\9dBQKDF^R*jk]%$2k-EITf-s$D3>(Fp?U0NWre6ppJ7Oqb</BZ>FsEHM-s;0Z#Wk_!U;5UV]9_A#--R"4K?g@t]2]FdpedSS($,X>6-5B*qKi#dp6f%!5*G'HD4PTq]07g3df6Uj:'$*f)2a$VL\%Ql)Wq2m8(V[E\Z2k2J0*W`V@(\I=P/do5\2I\O38Zfs,NP=f75T!ak!kfH3K#St9.U%9/,F![upb'G,!^),JM#om&!Cq%+eXgU'0t4*RKWBTOR;qLaas8=Oju]iOYHNGMq(6@t/f>ojq3g'=<&2$\\"DduHn87^0beWL;_Q%ps)V'C$+K/SHc'$f(<`442F^8XUg/56`TJ6?IEa@YUU]o^,Cp]c*="a7:`B_oBetO)f.knU4<^5AXXabQBSE5FeJ(mkguFHNfb7X%I@dLHh9+^SX9V_I=K`<LdkT.?QDfZ2#X-2H*D_WMI_Z<;5B7<qZeU%_)SrlTVjs>8!Vb8:U7r<B!(L$0F0"^%)K:&Y>0attZ!C)_%E"tLFoDVldCmTGFG\a.HI6Dq39<bp2/j;nm8nMQsHR=osZ6M=nE8Rmn-q.$u(?s^"!U#_4XR"J7R-<!UoYL2@btpE5DR[=ohY_'$%h>+7(Zsa*^Jj.#KC'u]ps8M&t]O2<)=nVUI8tl5C;sQ3J$5f1idA\'F1KPJefgIm=mL.Hg*E"n/$42LEf%SU\7YrpUe=UTsUQh>V%!4))!_nH1#]<'2FN(MYodXZe.SH,5D5fDL3jPRN1_Hj*F<-#;I).jg:]&F*n+^k)cR!^mmWPodoD_&s/C1>r#JtW]>UIsF>;\i39%bYp!+JDeuh0ds_b1HUmB/UbCF+V+W1[IKr=9B3+"`@[DhF>Fd[TVfp1%,P8c93VguW4IFrjt\Vo,(IiB6RQYD5g6E;Aq1>(<Z6[(%ER4&&p0+Q_8\!pKX8*IU,$7Npm-=)dbOQcX6A(&7/Tl:E*<s,4HL1eQeV@eL^/cAQ(e=,cc:DU_hepU#Nft@(\%CP6_cQd(LMlC5%'nt#R`[Fa-GMKO32/64A?%!fo%--!c`Pas`@*HJk7'Rj"AmiqmOc26+X[T]^giAT.kLnY#'`5EcHg$dYml\-2kF^Lq<osS)0DMH4%\c(jRnYgT\ep=ip!bB^l.MPoN8hId3\&.""'d@WE!gH,pZ,RYf0u`%7=1eHhbWXXDH,MFgGIk\G9m]L;?G#+K:3NIWWaYSq:5k,O%0!9?sl`I#\Nnrre]/_"Y%_%oLcu7e.MJ'-e_aQbHYFUYg+kUp=rNE)PWTI"*)8*lMo)TGUeGi3U0L,B<L4U$]5^XQQ8[6X?n*_p%%A0Vg'^d:Jl?=-HSS%S^Nnr1P2>^.]7Ig./<UE8iH\eMB;1YRkadJ*RBVX&LX^HLchQ_Ds2]JZS<"usRMYYQl;O>t1`0hXjtAo>6C%Z6)uScH-sRa\d20BoPajX!JRr'$POd\[47n#A23jHd>*j!F)B#ng*V5STQL@Rh*b6Pq(fMpMkNR>k`k&?O-Vuc7o-j%>9m@s6'FY%a7&d1UJ))(e>5-\a9\lY9$o4=:_:I\/AM:0/40<F!Y9NPrf*f'!MVVX`0pd+%>;g56YV8r=5<##CDX9j+\,:c]P^_F:ddN#[]2ki%;XYO7TuGQQ](,q5chUXZb^(,$:QBM9m!spX/IRQQ'a4+\o",(!bR<`'0q^>>LpBMA<XMNf>$3sR6/=c1`@;0$j9VDhXVV[)#M>?b%:<?O<2_.k%EWSV9_DIM=i#@Z[2*ul.2>(](\:]2],'@5l'FbcaRoV]'WiE%*>,c;53Gk$sB2.SNRHqbf$>#40d%YiT]\D%/D(f^.%P`mV4T7=27!mOP+E8F3]I$JuZOf#8gZ&[!GPXfQ$=A5F.I;4n9J!R3<Pc5Qk?%h1A9!ahU_@J+?_c8?l$o&>7,0#)^>c?V7Bs.G3%'Z$X=cWW/S:;qR@*Ip"6_abJQ@NjP7Tu*[r2=>oiFa8*g/12r./Hod@"37h,VqL%s<UjB1.1Sm_6Vdm%)NL62kLqa1iM&+jNbGg?%<sGNrit0#O&H>QV9psSjXo1P4R:EHRf,e0A8^taliDA(*W_'2$?)Huo*OE1`[4BRBTlT;Nacd<^':jf[GF1mHaETIme`=j"7_hO\%!411kQQ+;=cBJ0CGW5"-9R^-p/<3oS4<@C)+>NF]oC?f22r'Ue3OO\oereVC&-c5&':i?caWfki@-Cu]aVdruc8fDZ`:#t:O@O!;%Cl2_X+H'IEOdt)@+CPXQM;uZkH"2H\ia`hX'%u`u/,D]a%EKl4,(l9[2q_YqD5Oq&/G@`Y,f8ZQ6+LRagZ],BJC.4`amjege]k1T%OhU/81HQlb?jc^UHW]QTUk7lui@hVSMjPVR9U_#FAmQb%Eu:[=\76INhSR?Oeq^ib+TTR!_tm1RE:qSPHrE>LcdI2go8YrKiYUQ!%,BZg<4G,]PRY^@eeO303'h$\GH2uY31r`)r?N_ftB%td3Y/mmBYb"f.4^u`[g]3\#eueb2N,CBRAEe!@R48Jdr=mbA%EP8Y.$8#^%E0&.PrN]"oTK!EI#k$bZ?ntG"^aaN"2O5t:*CVEKXLE`&no]e87+p-(j$Z%V6X.3t:&./"\2Se(CUuoe(>g"NE4bSH'mt:Hm@6W$%-s$V_i/[P[]%fZ,IZVJSOM`9rb,:]3Z#0>T>L]t$c*L!NrecTcN.'<K>FoF0DbuW]bTR(q`8*\E-pVJlk[\N>OFc>p]7"rWV+X2$%M(b^ZVD60e&Kj]XTR_SHlq4(5.VedU!W@pWatd>VIi,RIZYdX!0O?QiU>BS%F\^[^n5B)CH?KgA<'pmD:ZjV<*b7RmRE^IkJXi/d%`E'u\n=54+c]\ekK>Rel?:ZL$%U5q/nC&[O+^p!mFl5F$b^"bM=Y8/UV;E)mn(LRk=QS;mUeW0/6qKp59A]e/b9,q_:qa%4_EKKb%5sWSKW%4K$dmOb6m&nZ088E$$)K_sG/A6Uo<c$HYe!&4?QmS\J'q6P">VrBq!6U\i^7OL7?dYlJ24Xl[2:BhC<+!U>m%]rZ+#l]A%VmMj'+K$^9UO2^3e"stXGVtq2gWJ5e=.<$S5Vt1u/S0ER"D#/!"Egr=5sVoZZ3qPW6S=B-q%hL#^rDIdApJT&E@21ArdEGUBV2uK%f5?6LYRXAG0o%?mf*2ZQUU03b2Y-ord8\cRKTpoio,#n]GLL<]/.NA[f<N^</pARCf]q![7b!>aW@6g-aU$YJJ_CbG#<gl_Wr!US%#8s(8;#pk@'_[g#>0O!SDi6*hJKNA"K+fM_TFJ<Tp*(^l<L'(/2.X`9NmK&k@k'hW$?dQu"(Q>K,`<>p"([nS`^j,JC;3\,mSLm#%dEE55V6WVfVeJH^R!_=oG5X<1V\>Ik8K`0*h-dWLs2dSq>*"JoLGK[u';1m#'Z>t>+7,[o&)@TtR:*pL1'K6B:"1_=&P5lHCXh=,%epb-cJl/F:hZkHTY;A]4g7d/d:p,SV7%d9_W9C,*=c0ic\6_orXjIm>9Cb./SeTOP=dQ?9J<CZ[.=)=HY&$^G:u'Y\ph(fWC^<(\%NBsrHs6r3S<8OWc?>c"T."&,HX646dHtO1n<7F=okdFm8@NKO=I#RaL+s=p-:/q-!BN;h*m-:IS0P`7,7gb`/LA'6WKSr-2$5!Mr%U=!d\ZfqO6@LMRIlGe7gO3o_kWCEEdg*6^LI/-MZO=kn=Wf=^HJf(O#l*;P@Y^ZAPM("E#*<+"PL7srWOkBnBeTK?u^&o4mio"lX%)7G\%)2D6#Io*W1UJ[S!EXC,u'&5skD&Y=jZ?rZLo`<HM*L<!_::g`1$*fC4aUNGm=b1<U,6tRgC53^/6V2f$YXb-h5V*]k7NbN7%#/UqMH<?W+/]VnT*O6/O-.u0!M@I;LN1Q(fWp/UA5@Lt""bQq0<`"Eq.%klsgZi6'DF(tZ)tBcl&<JFGQPCD?.WdT!9BtMM)MXu"%ftnmN`etT^/o+Wl->WnIlJReA5Rei$qS0pYLFj-8`@"'aGhd]L.P@]*DKXF:?1Y`u'idN!JJt!t6Omk*7;/`L;1L.T(L-b$\`7^o%5E2KOl7UB96mN[YbGqls$4p%Y19lY.$E-oe2(pQ+/TTfhq2]9BOj*r``4bqI7**#iD+179G.=gPiKgAU+3)0YgH-i>n.lT]"_j4r%c7%c.q9VB;H#0E?e8DPlA)&,d5Eo3F(Au.,SaDm]*g*_Q*uiFACCu:mrA?js$U_.lNcclXB".HMHNbN5c]F">6_l]nOMbL%_V/HA%Ar(a93lJffY.g[*X4Q9<qH9=A;kn[V)T@ns9eUYT?>3#De'%O$37PI5iV$K-K#/04>sCJigXhq-;J#)`[*e#f@A5"@D7hfG8%+?[%$dO;57rtLT@*W_]nQX@TYc0o)R,6g82BCB<ala/S-lg[+dU>)L!4H>C1Ra;M'WAMSH5HH=<1HJtKN.&o7>qP6`E4W"MLQ1KXY=J0%=s9e60UD#5(p'VRPp;QN&g5L"+=qFFg64?'@!4bdR,Ask?9[(V-jN4K76>+-%Z'*M&Zh6/8i3m9iq<inJM9'ToE&"c!lE=:N_?Po%MXhLXp3KE#99H^k;1)Zn+uINhD#]5(cpk5sm)J?F%;;h(RN#D]O?Yh^ZnjS7LX>*lPD!,%GDcU(JET$',5$#*pb2:l<r/JPY\Ca?%!q7LXGXIJsl,#D/lqEdT,Ed?rg)JNpK?ul:?mm]k9d3P@iR=2a)JRHU%ABXf1,LK&oYM!b%m%'-Yhc%W'4L!h%1gQp,#]GScJa/e%h'"Bi6Y[`\mu^ku$E%8],m%k%YOit>6,!KV%Am[?g]SA<7D;LWSl=<*%/c,VC"Yd>"7A\;!81IRe_l*c9!*VS[Z,(X\CRlg^0nkA%rI`+3;\T<BBOUtX7]&_F3;j>l3X\s_ZdJf/pGp[nR>ql!6K&L9I@r@p!>u<5[;Kl4;&me#1q?^uERT%>Mm/C=JK"cB6D@<>#"@Q[%eUq.b?>siQ>7[JQ==T$kH\Hp4\;)<>UCV#4,<3<I9LCIN)?gu\)/\]EJPc?E-c_8T0$<FA[>T?)J9S50X]R<p5C!J!2Va1D9a4;K%nHo@n,*n$fmU=+9Df7/-1XYGl)5o/ceP^U$#(Q5NfpLKNg7b64grr_bSr+;$fW>XgMon$#k3's4<Z"p;3K`$/T8;h?.e'Z=XXT,j%-t34rR78M*>^X>D^O>cmh!<&D\\,>NAF4mdPu+B-M%o1Ar/XF-2bFWu'htCt!62N!hFmDq"E^,S&`CV1Lk%Hs0haa>gM0>jB^5(.%RHr:8!/i8)lGOI8-Ua1u;%6d8E\a<8V/e4@.M4[pk7AN_L![i+&Tn+[#O(Quc]@k$0('..&]1U*on4MRX)/(F0#fRT:lgON@me3@%#Sff?Y.2u>4u3^U"??LW,"=+3RYJ^Pg129FFA3;8Auk$h-A%J$B0L$D"i9RKFE$P3>\JK4XgVGs=U2B/+\-hJQ"NfZOd5@QZ:]HQ%^nkMLXRV6_Z_G6iIB&u7]dMW>?pcZIPl$#JEV5X_L<D;(,?N)SARJVtq`72Gi2b=)%!-K6nf;5m?4Fs3j7W;?]l>^LZP2\uf8kc_%k)ol%^Q3W'[JXOJR*N4HZ8+Z[/Yb*3/QJnG[u^*Rk1I/f5QHJ%."&UfD\mhCCbmY9W'N=8^YJ&u?t$>n\&$H'c,h&sq-12;iAr#'%A\gdUG0W]snm4"`$(O-060Emo[qDZ`>g?"A.enEc2f3FN(YZ%Tg/OfIK'<k.j0Gr=P>IP?&:U7Jrj&OcMD/;C/B<#^A2%T6%L;Z"%'?25['5:ZmhC7aZ_kMneft@fk^*ZFYPjGUKSeOrhGr:H(]p9=)`geL2j;XRLe&"hYVS@gD^7pf/fQtLLGMln-*4S#@.S*>/A!Q`:%V/7""jh*a%+kF8M"0MfK+5=NC1]2$J\c-%/)kRcKl0_!RXf=l3^<P[K/OsUYZIr-acm_#B:W#8XRUGC4De)Wgh**45-Y,Jt*=7MD%;[g,o*OpkWp_LiZFB3>Bm<#9+L&Y[4ID/oAA=Yc-KRJ(i_h=h<=&=Ch;Jc@MA$NlUh;!p\#.+;a7<CPb@4KO%'U;NGi@O5Y'dELZ%Joa:AU7q]>*h^=)X6+0aDfl7a?'5,?aCm-,ruYV:Nbg_Y",i24k&BZ+d3f3O?b>*:h[%s'2XgS$"u6k?>(,CV[8Dhp78Y<9,Vi$h%2;P)PM:g2\J![ak#m=r6N=9!j+YJ,oo&o%p7`:!M<k*PA"jT^hVFhk+$I4>[q9l'PqfAp*UH+Wj&Fr[s,U#m(dZT<@/LT/PfV!<Z%7U`fs>:9pccJl&IGsk!B%I2a$m'Gne4ptEo3GG3LO<F'=)o.YTD7JP^Vdhq92k1OB>R[))ORVaaYo9D%_O_f=Jop?l$GNcZ*ZYm7%_NWqIRMJV[Cs+V)$9eS>'rUOtJP)&f.M^)g%Y]!,^RM[1T%_-8%%5C4KL;?J@G._OT>B7%"4G=+>$/"fBC0W[d^!g)#HLVl81`+K%\Uc8BAt>4tF$8-o38#@E./-mH5<0^:A4n-ABgPKH$>b8OLga=_gMhCMQAG-'faL*WN^MrdR`.XafB13Kk6.FGAHe"[i.3qf5gt;b%ZR=3e>$)FYQ>UI$W6Pot5!JX-RirdgBqkCP_mBGCNH5)0<%DO<(gXpY\h^&%+Ml:U[kJsI(FI%./V%cl'd>>od$?@;Kf$*\,X?IM%K+-3ofJ/=-0THE1@ZJ<Y/60\ef^rhU1O`cV(^5!lViEkYD1MU*=H8W`laYXK+'BSt>2==]r(Q/#(2(gD'fmq4M:0<dDFT^+q$!(`%:bduf;.>rjPtklnW=BJmQS#nlfE)f0pd+sno?Drc&V"D4dRhVZ%'2>&.0fs4Yo6tX3&^qi1FcDA6oKS>#XMZLN(@_SPTmFt@0.g'%6o2-KI:_p^Il/Wc&AV/YI59Pe^ml<nit5jZ1Kp4Im>72>bF/NhMW23rEP4101=26EaU)$S]NU'5fG(:[Lef>f30:9O&I7OLE*%g!%edq7aB^,Tqp-`C(,`;q-#)O/a3Z@LlJ^39]LJl-#a>o;XC#ZHgOhi>IQdOkZlrc1L&?D^!M.[h?_2+mU<df^:/'L`KES01^7-\24%4P+CoXpB&*4?]_i_F0gd&*&+ff,/JQm/,traEJFY#X\5&S/HS"$*op^!=8K[HoWSVrm1W=li6n??S13\Z1C6`3Kb=9SH$B\"$hI&%XhW89@Cd/Fk<@UP%`>[J%0-_[1GXbh*(T7Q>c6J'ojEH;DZ.A:*m'R5ON\>e$WBkL_R,\Cn_7fFa(!FpMk(m^%+F<jdm4hR]Z?u8%bD5WO;4"QL&aXN\n'n+EEn=%Eo#>@\?$uL<Z<$qaVQg8M4_jquYBg-=Gr<q?p$8ao]M!BK^@pX)jcI851TpUpds6-:HI=3#XV&Al%"]/,OdD79=f6LPCp?eBh2e_L2^"YbFOU=/2IMjN9gQhZDBH#e^IO8,!POC<?12c"cT-oH-e"Z#[0O0!)rlh0Hmr'j2aHK&5Yg&40%&%kg?\u0RNY9DUn)Sb^NA"e52Oa`Y;m.[RiWPEqrqCu+&Rs1tkfkL=JT,h(If$`Qbn+0k1K)f$Nr>=?Upmh6LXs^ne%?\OYaYM<E%]O#X>NqdgI[[oJ*q`,<6\:!#N"SYZO]4W\-"+SFiIIMG.,B[^0Wi,/E"#;npCNhXH0\sRqPcfHrij!PH4uY'u_)DgaUYm77J]o(p%[AJ>(X1&4\mL9!<BAUcjg<puOdn>>B[dH0%ciEm,o<I(*5^j6I[1^57ZbhRNg<Od5qfhqEnXn..AME3:U!>j"RLXX5"I[:^N4lhn%Q:#;dNLE-m*bDRd`^;).XPMVff(!C/kS?q.]E85iiHCYR]Ij_6Z+Bi*7Utc4m).fp3NSoWeB6J#o6tgA"aiOP\g[.f_Z@U2nDKr7%k>OsF%d-('n!d(c:[U1Pes6SgH[XYo7nme(7]H!Sg6%--,8bC'&IMlDYk*d)Z-4:-d-1r7%$<fd49uU<PfFp`f%hH.P5=,tn)ID'%M0(O\'LIUWVoU3EJs_T[7:lilT'r)T])RJu?Ab]N7t"WV'qVCgATH<$ZG(R>bcM[)Mo>eYm&N\WiO2\e.cMJg^<IrU#33,R3JsAD%+PS,82>;MhCf4T,@2D;=]CK!9g;*QR7^<e9n5]@^U1l';V55S92F:M;A[N+YRUG:bdj"Uae,)qTBXT`:I*QN%/\HC]Mi/miNYb?i%*.r4-TtF3RN*P(JPbFf+/M>cp;eS@jn@G*pDf%<D%0DoZ-?AkTUC]tcZQbYo\n8AK5o&ZJMMbN2I`VUBH.%;$7=Vpq@T8t*36S4R%]_W:q&"+6p4ca-9,6[!On(7V)7&XXDet?W`Y\4$Yjd4K3L<AgDoE8;K%u,GM=H`HH60,jDX?>ZVW-RqD.Bf:g_NWe]U82-]hS,^U%=k^!lThl7fq"iO?6Li%1C1`#oKPCL^O&X%D4iVN>r9ad6B?'Wa_f`)fRXXdtG-#sB_<)0W2-#;^=3f,We/lGJKaiAq?U%9!F]XBK%bE`p*\W)jQoP[ZHQ,EYk:#%SegbUN=R6`ZC6:^U&5AF\/'e2K7&P?:R$u(ZP/!--'JX`p`.H5j`=3EQkq+"o0bh8/uG^ti>1V41<%e^,o7:e7ie"X^@8+2L^Q(Wa)N.(f9W).f!"T<0d>p&W83Y$[`>MpS0L/-34i!8!J9hi1Nnes&5A@RVR2/rlEie4D4Mb')*a%q<12%K6>10iPbSWn<"N-4Th&ZVK(*EV<=%'>9BAf$m^]U#<V;D;#G:r=^Bp"4CQ\tNHHM\.VFO9[M`H4Ak+o<LXB)aRDrM,RbZRQiMI)c%#=VP<dZ2nlNk4<"9FFcO^_oAmC+9KVUg=D4^pNJ3nO6W[<:?ao85hh7Hc9n6AJjh"A_EMK&?p=n]prR"^J/]Y$Zp&/XkVk)-<)Ws%gP?JSJ/Eu)8c#WuWo4_EXQkZ]kO=3f1WmY)XGBaa7>#M#?lJs22VO=QH@60.FRF)6E#qbggBODO%XOl)/.F2cR-V0OrWORaWGR!D%qgL;Z(Lbj)&"Fcnk'iA<7T*0sHYT9#Q9tKDk_*la$SKo-Ic@nOd/V5?F^RZ]0:9$R#*Yb/.W>R3KS8%*+%l'Un2ibM*HX:B@0k%g%XL<!,:L;%[ml$gm].5'47b9I;7T,F[RSA?R8Um,sS*+N/G)W$_Dak4DVNE<c7,sMuIbB!JA@61o`;Q2B:P+<XREcLlBS<2l/OW9c%;)-`9q?uc;%p%?G:#XNZgASq1Pf:_J.%X;VZbc(YF7UgA\$'doi1+ed$IU!g(7]GSlIbqtN9dLQIYgagF,_hOSf5>4=pj,3#K\mL%Wh!Ot%=c/TnEat;"R+Wrn)YZj*Z2,_nB#I]]+5[mWOj49CaE90!4k5BC!,@_?L.rJg8Aml2!,C"GIE/*U%1#sJmP@nA]"elDmI!]%CT'pfaDJ65UreIn]jk&@PXkrJ1*a+#<.eUZ?VM&7@ES1(-utY;:XGL!#;FRo#^82/B[Y>e@[E.K;prOtH5k"_NPj#AVhS$U";EqS%3-]_EH2<%d(ed=cpYi/jM3r&-c#Dh1SrmF<*s:R8.oK"fXEuM+"GA3JQ,s>tJ2q8415k#B'U's)W;!?,kVr*#37..)QA@^]lOO**%On:W'1'ghNj=0206h%45kABmjd-g91M8646JQ,\]:O\r],^\aW.)=8ECtd+b];^oQ*B1JPVm(JH8kC>B0]+<:j0&GfeR,ooag3F-%IP3[uE4*[MJjc$$CT9\a\%^:KBT$jtKrM=,j(N;fJ4-dK3Q^er,dE`^%U[_Gfg^W'V+f130#?L#U@o`aF^7^MYgeG!_dJVL]m%uq%*YtTBWuFlI3WtNLT)a=[Y[*bth&TQ3/rLgmSPD5'P@;rp;62`JDe`'pN!QhhBo0sK3Cko:-ph;9"Um5gIKk_BQF!Z+D`p2c7&!qB%C#G'<9d"L!OfLH[3+lZ",l.&65/.1+7[S]iI4D!Ii4o]%AFP8ucupYa`6+0=!`Bu*/.dJjg`Di>A4"ar0LQb_"buL_%I&kL9;3''%Keu0`Hd-Z;2Bi!7^u],\%%u$D]d]Dso[VV)(oU:A5'iMi7(<Rkr??lT1\h"<lm#<ecjibVBZ-]X6IRGoO-P98:\lkN.*L+;r10-"%k3B\(QqD5s/I16IRLZJX:]ut&,@G^]=UF2.^jDCLoXc%]kU'SphCc*dfp,39kb9D,j$:7lSJp=(UiCMgbBc2h)+IgP_]*_H?\9;r%L8%%,]!`=OWpWXQQuB-=&^dak8@'6)V.s-Qb>mbm273GRjjgMUhBtSdc]^hXmX8\O6;^enpm=CQhJ)Rm"TSA%hbe74]3&2m7!Vh'%20VVH5OUCf#)O[$eVe.i!R^c07H5Mif:6JS#ZpnLR;a_UfjA9#mI[M.aO/9(lm`[*hL[;tC0hg'TQ[BXS$Tim3F@t6K+g,,@Z\0B%f'bXbZ)uVZoouj'MEIIl6ni3;VMV"'5eqc%GGk^q5.iq3^QW9!->u9t&5ddSJu2jt:%FfF$%d;H9t1UlZt_UTJK:C4GkrA*Y<K^)%ZC9l4HP8!eeMP%iLtnY"V,kom/TSUTosYX1_RR^qE*Y"`CCa=J+b#`S-0@(^N1]oMoT#C9&WH>O9QC=#W4uV6)W"su6(\jpoNIma%("N*\2R-;YOi=-p241&;X05jiRoO+icT*ErCF,@,7F(/dFW<!rXl1;MY3P3A#pN0VhbScgHhU^+S<>8GKS,M'g\W]Ji&[qD%GseY%a(d*"R!fT#ME#?n_.P'*W?#e#6Xp(?n4,_?2%u.l^>;fkb]_jp6:RM_qD6Gi2Gtlp<f>oF?JkA)O__@:F"9uTD&XS39,QI)p)8L)%ML3'<ZDb+omg0%NR/OSBA7:!^[afIa)r$m5pYOm'p&6][d'U)SnR'7]Ho2#P#0G-^q@N5#aa<W\8@WF\-!4ZZ=VDM;?I&sX?RR^i%\,1ak#6;NM>[$:g=9^!/dd"5`AQA$W5H;`(As+((qVZM:-tau9CJ7;WIr%QA(2C624K)P;+Z8>K;$,[T2Xg_1/q"ZVo4#jW4Ss8u%O5a=)LEAL^JA)db.n+?VI5mRq)&9[C$"i:.ADLKp^htLkm4d/b/k*OqD<f2F0N$4NDfF6+p"HV+X])B%Y1f!O*4<4reW//<j#ATQ%EuC3*SnCUB9+B>r4>]qUjfUk5@)aY!lbNjem7XX%2gdJkeF_#/]`:C,"al]#JF<08(Z7U!^M1W3.?r;H?m`!Yiqi$Oi/*Xe>Es94%VDn<W&suWL"NgQ1!0`#\n%f&*Q^%+D!ep!\,MI#feBhZ9Ic#i&(-P-MA#aTp?`@-%M(T.VVldN\+DN?*b+Sp^@ZTk"1Yq*TaBlRA%q7jnRN#?Zq9*/_-[m6=:J\pZTpQ5-rGoQGXe?Tlm#J>!2*Y%cB:ck07CVj%$@*tKXl%+8l#Q1i02-%p"&:<4E+_Hld^&(*_>2\%l%#dt+C6bJ>U#mGqJ63/Ss*/H\f]so+9JQ%nulZ&6$65WrD)'kRkZ`.qFJ9(cNi7pm9!B.(;eI/sakfgp]n(Jl/aFYtBG>V[?I%<;2%BKkG!FG#+"4<8=6L`HABrN*-g+8pG4fO<9<D/OscD]K%;&KH;'r'r,_8JmLZ8A#V=G0743j!1(rS]%Y]";:8#"3atN2sj"r/<_a6%$P55.f&;)T$`j!8&ed`KEe.JAf63gAmHWp&=dPI*RTor57jSO-X0J8EZC%Gf(p'Ye@ia,!:-+G<DWSBQk!c%cU2)F'Y3"A#jOj,m%p;m?'m8n3rEG]B6,0/E[En%=3*J/X(=sm,);U;Y9/p9%i-@4$nTOhp)F!//J;!LIl.lBS<,q;4&G2,5rq!eAE7*]3Z`8Up]buOe7%=HQqQn/f`##o6ZEVBMPJk<RT'Mg84lO&qh'mXG`HHD3UR1e[%GU`q1rcLVPA[s.B0oN=eXL>6M^4$9K@#LB4<8PeM_lg1E=H,pEE%O7\S"Uesk"e^SOk;4agAX?3J\RWd/ODP,p+nMbj0FlaNS?#t=RpUQgqRpoYNFh=J4e5h&O*ZjUse-CVIA/F@'F>?ic0jA!Bp4FKP%X/..mpVNE4`o]RWACF9sbH30nVAsSPd&Fd5G)sajmZ?Z?cq#_lIK:?)ZNbR?!d_@]St6[=3767]]gY[U^:qcM%!jKipg#H8[Qgo1%fsk4$FOreWl?J96+uNPGoYWHTE>%\5%O?"h*Zn8b8JbW=^gT*7n+62fd'QmD$m/X'.`t3I&1;FZTPDPf`'<?rni`eTr\9T]L2bG]%JsLh5s%7)iq0up!oQkc(D3YP(o;(n6f%a!VM3L-gkOn>#gCOsjY81"Wc]E(p=eB>nO`j'3DLL:s[$#4akLZ<(UKT!$7Yrt3mmfhG%I=.I6;HucBV4Pa[NKR"Tj5nkgqA?O/WnqGg'X'Bbi34VS9(f/0,*&f.JW]FcM(*0XZ.Wg^ZOb/J>$i^RAm*#Y]1Pr^4l;l/Saa)]%=tL:gSZPqW,kf>>mB2pj/3=m9=#UZsp7l[Mn%"%aGJ9Xu6eV-`CDfe5PT"JqFK/*sH.!T&'CQ`k3'0,Xo_??IS1g)P>(jGN--KUh%5U-V%^(<Ksa;hR&?O^<#DXe.UT1%m!ZlKd"S:!tDrHW$mNVTV8l\8pIbOd&!Vj6/Zm.>CF"EP7Kn<h:SQ8U=EB/*%C],8b3)U$=!%jZjiNmTHpZSI&&r]LP/O$-l-B@RU4Ve6QLQ,4ToL?m<PpP<@s[.V1d/>gP):SEb(E)5o"\(,-Z1BBAdf(X+_iUjE`uB6mV(q2Ms)%1`^f1H<XNfh0%bohN+:n=7rZAqp!nBe+eu<G%R@DdM]]5e#XTjWR`<rHp'el4;"/+n=O)R]*/]_#F-;=birgCa%dnAZ]%%@#QSrK%h^Y*>@2MMUEu1<`2Ou9'o=BL,(@HS<9&"LE'G(IYKl<DVk[T=>I<@19#%DbqAG1E:Q9\t-':[T*V_[`1)=de\):h8ig2\;VRAp-c%%m'?p]a;(i#t>1cO>(<tIBj)VE$:/E?U?+5GZ3ll"FUKX28nc<c`$"HK/H2($cBc/'4jb(PQM9X;3nRb4XhAJ/3)()JU0qdVDLsc%QGipmZuo@N,rG7:LWC+Z9m-Crk4>CKb\=nZJk'd24>sOd)Ta,#\a/S+A2so#e&<u\9]4C/4=p>1L\'k8[pYb#>B>16,c[mQ6o1LW%hG\cQ1e>koS$N@i)LbYRo0Old8Ck'\OTXsJi%]k.p"KbIl+L]&".pUXA>`q[3E0%29J#/qC$N>s:kGYmb9'NOk[-7snu+6J!dng.%/M"Q9qK"DfmeB,Cpa;!l_R*:]1S4'"a0aKP(41u/5j$dC1!gZRAp/@RFA-/D1'\8PZ"WiOs7"E8\pO;QC)I^7>k2ul4<&?`V^UNT%"&dPf!pditkU(-%(u-P\_P!=lIYQI59Q#%cnE"'C8Z\[nF$D5)[TO.GB6eh(1$Wt8aMQf@.,jKO/G(O@clc%h(3OU#!dln3Wi>qa%`U3Bc`g9-f3P!R4==an!6<#gPj[n%PUYWn0*,_O8&(n[VUq2#b.YMg86bH7dFf7%uPXejs98oi_I9!rIen"=pbf!I0K]>R\Ki80B%$pR*eca=/6fi4"e1\_S=Vl:=T3@eK+EZn]`@oaGtXN0uW7]a[kVh@rgH<ls&R1C_ErpfJ2"T3j)r<<<8/J#pA'3oke[P/C/<@(/Z%3T,M+Pd0Il>"o95UDU<b]8j\Apg"$JX`2Ak0(:t,O&j_+;cP-!T1"3`P(J5L@oJl1(Z9NjEaW7-62u1LYXMQP=>a^5DT:>e=n>^*%-#,__cebcL+\[Ep8l&K*:XQsGgTaKe4o#lGS<Xl+*8T9<1]pLdD\9ROBp.+lh;DgTcU5XB#Qc51^'fO`TIdJ*WXHA$=Frp>QQS5s%bk.+V/so.R,UKN;9[c7#Dq@Qi@ZUeM"\%MY[T!A`5^bk[",HgL9na"(:_RV%<?q-aFS9U]W920N2'K">h):kE0;JiI6V$5UNDl]Q%VCjW%/C)&'5/d[M(s<RR8ETrsU(/Rq`'JgW>%8=Pc7MITp*pqI;5uCndh7lM'9S-im6%9'^V5X]OoC#2S3greqq"IM/U?[e!\@'a%4UmZ%;r0jRB.GQjWBj5'\BOFE>TBUN-&I7r7#Wtq66l2V9P;'QC/snPk:K?0,=sO(S>M0u8CNJSY]YVl[b#%P":P,9X\@_M>>kD:%RC$NjCT,VFZjS<O2cWPI$*c0;:7<cVjT1d&7,Li<EI_"p-8_9riem-9lP`s2[S]V:GL]Q,WF<PW\Md*kp8sWPl5X4nYfp]RLq(#+%M7J5WJnfnHlW7kr+]YAeZrKuS9`8)2#Y@i]b!Kf9d*\d%A<G+kN)t-UX"hoP=5?.h-T;]5B^2NKGRAJCVIlbrB2^U,%_[KOU$75V%5W513PZt:jF$^9s!hLUL9NeF2=E^T&18-iL'qePEe/bB1Vi!hgZ/H:.mAbB"`X^lheIcj&**Us`cUA/&gc"h?^sY58YTYNVW0_DX%b@FL1#F%Af\Hdhb\<B`e'SJTpXp!&nN:e5olPJE3hXahgTkL(39O6Hp6`!9TKClCM<P_UCj6U>Ddr!rQA8HU.3uC`gT</,iq@GIt%q,IFjnZ/QgF&_ttdgK4I7!*im%\fV2-?6/&Vi\D`hHDdRXWS`Z'@W(lO8i4^B%!ELBjBKP<(qcOQ$Y7;S6B4`7n80hFD^M2LH+0d%D:A;pc/]Am84(LA-GY#B9LrBpV1kRL-;2QqR@)+[9j^bdd'VCVP"p0IjKC*m=d!">?^sVBo@<DtP4gsm033d4M9?@W4o8eW;nrGi%Ssqsu9hn@4NMU@2.oIg!;UjqMZID$t6K=mkBc$$12QJb0<]8(]-\=iIZ;+ICQ)1fG],YOQcu]bGb&*?7Xqah&\hn,=1re*ZZ>ln+%Cm*Ih]*`6+j?7]Ar&0CYobV&hc#Xhkm:`Icn%N*DjS8)abJ.1:(-+QH/ZSqi\k^m5U$5ZL/82!#Fq>"rA7W=,p9lXu\`CNoMi.+9%Y3Kr`+X2H9,K!ibKPc?T<u`)q"-06Se[R3pe-1BmkY/:8XBA*H-=V0!PXBGOFL"!.rnGkR3b_nFF1ap$gljaE-?g6/f(4P1TU\%`%Oh<0BoBPgSjriJaCQhiX*k"1=r/B[m>,!:`67NgN)!cbEGcE"k1t%HiM;oglP`k$6nJ60X0]4L;&"K7O84_NtK#VUeamTcE7)Y`L%^iYa)S(NnKii/kt/B40]T?TYYa<l2S7f@=qL.L&KID7&+&j-_loJS0rN*HKO'rQmR+u--3HFimrpE__2har:gA`WA@Xk5&7pe%.D%Fm#M@^_r$=/T2aq[]BV\>s#+`dQ>U;il*&6.]uS(NTEOKP=,>S."b]<3>gr#R,bdt'/Hr+k@PFjT'G'<$t^4["O:kSV"ae%))ZeP%*BAj^7DMSfntLSD#,H-o\tUUc3!A8(-<oeWfE2#am;%Yi*?o!W3nHZ`qB"Lpl$>BQBNub8dJ.lU:h"f2J)q+#!jk:(/%eMPkUZeB%%e)lc-r^m2#Pn@lhs"M.)\*>)8UAkjOt?8b+!M!]PNk96G0/0uX*'k59c*K0UIGQ$5=+'/8rA<pV_n(DX%gPbJ)5Tr(nma]2/YPo%F\ID(EP=_)WFSg^>`Wkm[3Y0Z8Q"OenZq5uV0dg".>k>(Om?IBiZ_V@,+b2Z/Dua%7\46?rXXh+P]P6In'75BMtr8B-E*N?jfR1D%OCoA4b_Udr5lqQ65*I:NKJ;SH^FQ:)hbT>u0=RD8GLQKU%KjY9"mHACYZkMPKCpUNU-*kl@#KDBW[=5Zo;@nD)2@I':_jO1I239U%WJ&f6bs/qB&^d0>ECWO$fm>EcoRU>0)%:WQ@r.^;(tmNcUeK4cI#`'T$fb_V&i,*[e8+eVh^qN.,^oqXGtrnuDsBZ<Qqi"A'cE>s%qm\*J&`,GUVZ$A>Ld15l`GsC7Vl@N*H(HLY6T)RoPlkI]7+#=>p2*SKpDSOgDLj,f5V%tE':;XX@.NiZnSMEYX][lU###qpGMhCf%Z"jCR7G@]_;jE<954mC9n48m"MM'HVXjtS0a0MKKcj'ZKFe7@c4a-uI9=flpr%K+bXtQ[BC4'#n9W-`I]9@+MN3R9hpD4".G4\Cl%@3),/Ck3lC$`.M$VXeI)/RK&XV%!3$?SBiNOm5)=r\]t+mb.5%NOe-#T'j11cEi_9lk0+5,.kF>8oJC^X/Ud&/Me-F>:^>Q^?2D6%ZD<(G*lnUeOdS%`;ePYdL=(kg+]m)C4R$C_4XkUs-MecL-aCVQc75,6Am&E,Gca!IiA68;.6gV)ptJ3_4Yb)IEZGJ<j=guC5L]"7%;QTO9]%hk0e,j:spM>T`H]a1[JZKVt4Q5Y7L3ksea4t[fNQ4g7^$:!\J.hkB<G[am&Ga>(N_Je(iNQLN#d#FSZ"^#eB;LZe1)iqi%2D]>poW4N=d4&.U_)r_,n>7"[J$/!qPG8Nu\2HFP\(0GqK"8D1*h.:>nsn=!)Q!W1R$7`aBR80hY)9!XM%nDiCCOKF`!-J!5;8hY%7)hI+N%GM\1]id`j53fs'hrLj0:@M2,+UmDP6bb=n+'bqfOp!R%V%h,1?<K,bG.X-\LOX=iP$YGV^c,EiOj<ppGbb`.>nq<eo]M4%+T=YJ2:E`Dm,]=CA[8q=69u4Q27[77:<:7hne]4`>-,M%7g-7YV'PpTHXE,S'3-??q(L3lka#Z>7cR7q.Q\j:L1QRQ3c7C^'mk(*%'V'SH&dTX`'CJmN$c4/Bb#[?Jkut4*eC"P:5e9Wj:[]p.M;c"$D%Cq[mI3"&:_A0%kjs5OW5H0@DCY-FDtg#8P"r<%'kOW.^tbrL%4e/XMUO<YDS8CIY)70pf*jk@^+LfdV59l1HHriF@,WWfAS!&i?"/$-fZ.`[RHbN0O/:7%KFHULU44fbYHJUqQDbN+G=*U7KVgc*h%>)b1)K+t_$"gU6C:($HL^T.DMRpG%^fL+dsO=L)\Npci7(QgeqZ(_aN&q&(Aj"%L=Eg@-lrPaIYf=T&sC9+n"A:@\:]0<$_:Q!%M%2sZb9V!d;JJZ3WQ1^R4g"Dd<$COR/2?G^gZJS9lKLf,fBAca&#63F]aA0`$1jN=B@;N4Al:WMoV?0'H_(u8:n'Gq7EA'5S*!j60Q%>?E+/6gkqnd1a%.7AI-)-cKDl.2V*^;RVX`a(4^$OW:EfSY*G9JJP,XF3mh4HFs)TdVnVPS)?uP[INcl&_uALgU:.U5->Z\`q.VF%g#osliNaH:)hF7IUj.2&\]3GD,f8"u"TI[V.%435HqgccSg)Ud)skAHl/B%e:GPFQGF(QeRo?Ia28)WuSZlbgh&D6J7C<&cE:T+j%]hN#2Y4PXg6qD4P7tF[o@(Bi?.`B-tchfKr`N/fZh#r!W.=U,2#lL;]5oo.Ka8W)U)bTXu=Ps^)U,-Qi`('+?VcqfU`uc^`^'*uV%DS.F7(`%iQ,#*CE5<(&"iY@IGAb+^NX/6#8LPef`"n0^CY+,n*.qXDu%B[dTHuRPXmo^'bDUmYF,rIFT8+h&L0#--J4#Z85BfdgH%,IlKi7&O::$o]F0+W(A4ddXLs4qr\Yrk,5Lr&`>-0<Y>rdpL^Bc6.HJ/l4J"U-LXnr'N8Plr,S>W5jS]O:kqprQ\7n*<f53;lc_!%*8.j+AaX%Rb"!dXPn1[(@5?;+)fh\CW(AoaLl/@%FZW<EQp>l(`CHmd^SV*j@7tNf,tocR)nI_O'Nn!B+AMBoW2G/S\F)@0.4$@g%A78ZBPhBk%Lk]h,"CsBt-E0(O$;>+*P[cLC@CgOEr@PJ5$"o._o]QSkM+0r]Q1[SC1j$=HHrFm&\T$sM[ie6qh`<M5:*1H0]J(r6%(lrC8p+hS>.;B1B]1<?+q_Clb+JrjfpK0s-k4Q`U;p3iU-J-C]'L#7??O77KXjq9=#:6BUHVN$Im+#i3S!Z[jB8e_46B8V]hV0[U%NP'R3L-@J6^a01qBW)T."<nPPb3(<L&r$!8DE6NL(7uB^XKV^c;OXJ[ma&c?q4.EcOn.gZC%oc'VX)`QiG3Va0PElD_.^BX(DGRH%27iW)KPe(+J.;3T"o9IQf>bj*#?BAJNb"s*$V,5p4!nM6)Xm/OcF?5[RLBQhR=X(Q2!ri#Wc[q$!kAm(Qd,TF!Bq9`9]O7ub\OA?%F3&T'+SOi3F,Wk7"Js69#cgsB=[rNNqn#ZIAu/<e/m%H'C4eCV@H?)tB&$o+g8a&h;[E$]f(b-9F[iKbCdpG#;=?>aGf"PKT0:9)%'Efls.nuds;s!g\LM9\Y+L7YHS17h%ZVP5Eh,JkEI_uNk>^MkUV?-E`Xs+=%@,KrsFF<(FiqMd\'c`qR+nlKMW:]Z:=:)LLAnmbO%C0>Za@t.;'GOLN=/>+s7ZQaV`ThQlQbB*P63??/%VcS+L-?p#RHKE_$!0\>!4K7)n4!`#B@m\Xt37@#0_RsUM.anINcYG`S+)J]I%kjA%'c:ZuS@)`cXmk9b3&!gX+XB#9#G6q]_kHJY$K]@?dqo1C(GNlKRJFRE+m%bQEC;A,!5aYq)'OTrErY,u/^Y>h.>fc!Hknm7%%T^H't5mhS+l"rI%,7'd%JP4$Ii/p>g8^FsrN0ejd9kSK:b<@gGLDm'mDHl;!Y.KULC$D/%[u)ba8aBnTG@^(IDgK$_Qk&=r_BrIR%dB?Ft7X'ad[;fOF?-^nU"Z$_]M].kXhdsVnWa[UZMJ=iMi_F'%MVbud*D,Lg,VJuM&Tmf2]!Nr2".u9IoL@C\m4>MP2/OSO9o`,7%8A]dqQ2]-WC=Jd=EH3l'dRjmiO:d*U9Wr'R6+6,3(='1FJAVIKqj:!DI8?&5INLCpc$^S#6;@ZWRuhmpR5t:THb!(`_d2IsEG&OS%)iO:d1`]QtGN`B-U]iZj*m+0#B"ZjiqNYhX7(q^r5BD8=JQh6F5@#_Y7NK%(cg=C>?;AD`f,?#\MWZne%`e*G,F:6sYb>YY50MCm%/P&2II*n,nYrd*h2IR<YR^k&Z](&49?&\$jE6"?d,/>%\_0bE]7aUqH0df62:!@Nc.Gup-op5DO6Rg#3CR30)#Z,pd,:rQ_08Lkm%T+!UV=U)Qa]t'S(W[CMrPqs^T*92D<Q;&6,jF)(bD$Dqh-#Pa#PX[Q3PWKRI1^!cuUr6LI\d)<$q#&@3J)Kt0P4BqJ\tbuC!Z\!0%O4U#Z+gmD`%Qe/F"(:kUda44C1VE`nZ=`:Lb!2ptlm1F8Qheq-*PC#GK*'6Q7ASPHm]]V2.R!FIGkLcaYB?tek`..7;Du,r)&l=Q%$^DW=8g2k%Fh_Z`):i%('G;eZ>,g9]!ho-lYeYH7'B[SMb^-e6\S4YX.ufqKY3RD/,`dTc5.T[S*Gk:#DZ6dLWG)*1GS.Yh>t6g2%R'96&H5X/FW-=S"/Jf_r,0/6Ah;0Ra]9TeMYt/trju+h)6a*BX$c.R@G_`Vc2SMJM`jqUH3dP`pnLGJUYr>Q'[+uRFZY:L/K+26=%Y+kRaG>)RcEgL2mVfuL&iG3p[H5ZY>VUn>iV$qeNqM^</.)dK#Q^pb=s*P\_67,F.r&dhU5/'][27GQP2?aErhfb6V-obXj74l2+%H^W6FeMTq\9f>[hOa\\9X/^$bn8*l_G0.''Q@%/bZa?TM>h6BuOX]fi1JVZ8l(i$!INk[`9cmtfe71JBi&jq!\I!M(DGlV(al@8=%f0$q_g4]l_fV&ks]aCk6cME9sp?,_.$KoE>h0L^;];8.I;atjc1DQsYMnuGXe.D\\Emt'(=T/6lAH_$rlBggB0n9qVP"I=Oc7NL-%Kehs:4*VU'10&XF2;.1EN2:H):7$;40#@=C2H`BOUO.Q`]X05=I\R?t)<7_8[h$B?O/"S>aeeq*[^f+<X!4@m'`&ohFGo25#bAm]%./8TMZs1Z*5cH(DFc6CIXkZP7d^*B23+Hd,"mS_0&htX3qSiNr[(ALk4/V?s(RWC1TgJ<5)%<lui*B@3VJpR+RP$l_i+IE4;us:s%\=,;6C9A?Hb8TCL@UVd_PN;(lK-.eD<"\r,%@&<]bj.8JeBLa)[Hr%V4_n97/3=&d-pLVLb#3JOU,#F/L8i;Zrc(*ROaYlh2a-t3%4l]YL-80OSIIRNIQ(CmlfWpK,HL_SoRd/rM7_QO,:tD_r1EQ.N"Um>O;kJ`iT6K[QfXt;<i8WCU-J*P,/3R_Mn0DV=dHt`Y+,5j\%h+=?_E[SD48_5-6CjK'E4.0NTpES$0r`oF-KRr`0^u^>Mf]fUsM'F8f*H/M":C*jQR,#-GA5b;Yl0Uf7@J0?:Q-_m8\Ir\X,sCK\%a`o[C;>qI)@o"UW6El[)5$U0EF)@k^D08nERg[G>s4U[ATM8A5Jq;DY\B7#imT[\&2CHjLKIKcQ)>mY@DdE1l8LWp^-Hn/Z$R\Y]%?,XuG;"fJ;\cgn9LQmm-W'#rhi$i+IKI3F:Z*S-O183qXh,#ep06C=B&12R2+CUK/YZ]JtpahT?KFGp8l/t=$V1qO.&AF+;WLdp`%Yq_ie2FE>rBZ&m9V3QLOK1#-K(oN`tN[cn,am9^N+P$)H]>8Jt#3LM>[1%E@Q'"$^csI5:dYWo_R,DUP+Q_&4dY4/7&-ucY)QO[,%BAY6O2=-(++Gfgif9\5e,lWPG#'j`Ejd1@$9D>iKjB3^EC32msd`A/H@%%&-ik3*,kmXD3Ee@q\:G:,-(bOA)B^4pS#$HA2.01\>%Kd&L!OE\%Li\Obr/@rWIR+D2_;D<(p3/Tq)#^oLiC;\O]Kb$1c!mu4M0!3`H+eLZHER0E4lTbF07I0n.=`';uD4U-f`@#(V*5'Z8%q,K5uKaD_OFSC*A_2!s(f]6!O@b)D*Rs-P^,h\2eqF1XBKD89k[.V;$Nhr*BdG5.fmQ/RTKB8_4mndn1FZ'<^0O:Q58Ucu1a?o?`%/)WG^,^OAW0Y!Vq8&_Q>LTC",Bu9]4[=Qlo<$UhHhe+Ls7'L`.X-gT)ejLu^C(:NrK]V6/\(iigis;"BEs0B2la(@7`V'rl=7e3E%++/;Rog^ds_s:54),"hP\4)h>*(j?N#P/]7hjUsf_^CDbX[`hJ.Fr=SHB6\CGsTlM"@Ist$1AeicF;`n<6Q_N?Z.:Ep4;?G!gP]N%m+eHTp?4iZ?=D0"ZJ8<"_ME.q10)43;biE!+F?V[/ELc'Dp%XoX;Y/^h3;'d>,qBRk4Ic,*8#F)4nrR[+@I?-1cs=VFk?QAlK)qo%\,+^SJ58>Tc4tV\9Kg*$5PH135b=d40,$)*_=:a>j(g]/bTj+6X['l-cX`=+Vr7?s#@aiT`842=m33acgW"RN9?5".]9J!'GSLbj%<Lb55=(7F;L*;-NX4N)Faq*JQDBEkW=G)Prd*EN@CJ,V(VK"ZCJnBTC.4.2@do[3*IEY3h0FLa`<H,,F1rbIF+9OsjO\+Xt#DH<9%@Tl>5SMOS*c3GB1/AkCS$UM:Y*pVS7,5+Jd0:ioH#eT2Sigg5G=A2Y_X9I(VWdBtk#q3.MLh]2sV689HIj_siYM#iPV\Aek"Yoiq%N!ffTPds8X>UuZj1TT!NpU+`9[L5j^,\]=jPg"(5k<pO;hDITTN01mF?h#k\$uI*V4g_]_pTH71cc>`<4uJFb]\=dX$a,QK?#%_B%g>;]@DhC;OKA=a4l3aXT]T7"b(N2>Kja6^+JJMX/($9Hb#HYRGPT7+E[($In01c0t#]`(YhSAMMZu+^$VA+rFfXc"8XJNCKZG8.@%r_ONl=tTNI$^TT%E4S\:o-*eZiWHh%@u*)5+b's]R80YHR24EJA90Dl$9V]Rj3j<l<p."bO2!,jjML!_3I$gC/^oTNoRP`VY6k.1%-6i^C$Md=r/"CTZ"Jl`:k*8e;OPpH4,.HgpJ+hGeJP'h6\504WHM\sP_6dEXWm%kIFhuSm>SEPsnB^7(ZZW1WlW%f-MR1Y>`o)G4%3AJBLk9X'Ni/Hi8?j0Z0IWKFB3rA!,bT[*=^9JON0(lpF:7iVMa:UZU4<-47p?f#VJCe(I!LZ@r-s_-]Lbqh'kbg*XRuT(REF[M`%QEOh?a\,XU>btfNFj6XCs3ITS:T?_<ra:CRgd45c6S0Z%Ys#+WAOM0%6G\&GW&U.W`0(*37#Jo39m;O*q<X4MX$@qQ#(jm7hiF':%e5C!iGV2c8eaffq&-s7R5@X*0"/)k\ZP9m;i_9<HRdt4KdgihW#Of/FG?B'#jKt?DO5:&cdm'K([@;rV(^e@gh,O=;B75eaXLn^Y%3`j__Mt$N5n-:uk3<_nr5Yk<DU!3i@bAYDSAh<lLR/F77/TX6]ScI=L?_hZ?!k<5>M&e.TYd,65H8ZUJ\ZQPd^De\N"*8O8CJRrD%iUEI:H:!,FN'tbE=drHBfZF7@e#TbSelXD%q2_rh[pr^FmF"F<9am'?GmolE=j37Z#qBM#c7'3Lm_21fa[i,jB*'%,Y"[/\/YC<E%6NVNY`jF7F`K8T7G%j"6'gkk].2I[9#;+$B"<!Bl`l=2<TL3a2ZC$AmIMXl!'1>01(/6uR5XP`J&&R)m@`g,Vj:=R>YJ(dWPD=/+%);>E;<_Jb@d8Hsdl>0bN4._9a<9[a"FMGFCVDa<5W=LR&f<=^ggaMn>1K8oV7Su0glB.n;"+IWl6gaWRo:+>iESZ=Ck_Vm)W_UK-%cjK';oqOf^aLo7*C$Aim!(>4Em!&#06iNV3<T?+WH/<1R&:(N/+X)&/#Jl:J6b96bB?tPR!>=(*p-kA<J4(++e?s$PRm8]To<IH*%[eG`_G/CZO*[ZFaGLj<chYQ7247ir)%_#WV>tp;n]#jZKBfl)OPPeN1VCMc$2+iqWoK2C;j]MH82>RS/#;P[HXm]gu`.3p^N114S%,-?@6L'O<7VPPl15kr"K@Xd`!,'uo[5F1<QG8Ii'N2EPR3ucJb:mQ*V*E0d+gU@f'$uR+0[A16%&[g#R3j[!@fXR29T@4XdS^)XR%Z19Sg^L#4/cdgQd!QJYQS:P#j8Q`g>!NZLkZtkTlWQSWhN%5N"W]G^ZX7<#$jHLr^@:UR(Mp2&J62:+2.te^JS[RUKgdqbHU@;1&%^L?L"FnTR;ne\J`F#R>nWR2Y,r2su,6A;Qi*"5%6%pF3_J6t]I7V.jr93eV3e6T&NTP^ae%C@rjOR-<5ibf;TB_c<\`,IVWJ32B(%!VcEbWX.<O0t%bSQ%-N-!SY>f//JTaW3g2?+Wg0r,J1&`d[IY$n2OAJQ^#kSR]kKFO.K;U44iL6^*WYh!lt8`%K^'5k;*F)4;RZp%ale(IG$"tc?cJo>n;#-HY.n0B[9#DEGr.B6#kCLG;7m=4CSEA;0Ku?tn"QdqSkT$!lL:_#Zo&"Fb&7@bgf65ALX['j<C,qc,UqM:%Ga4@>6f0Ssi%Y("`JG*B6)3FQ0$Rjcmk3Gh;`otb.VchN5eLgE^t-%LI(n%l%%F229rO.&q<,qgbdGPO\:ptpZ7Q(-'ehd<7"<(e%7U!IrG;U12@ZPpCP1mQ^'KZOW1^suj$["=bqAQX_p7_YG;!dXX?cE+Ie0+=2g\uq%-,HN]^&NL'au5e4Z7:Ng@LO'<[b18VSZela%!KUD&R0)GiPrV06:ep,d0u)SC9T%M1;*;:h]YFM\s&SemLdPJ)P[X\K'f?ZneNn<*>It"`VS4<MOM];;m&o1C>b,UqZ_"5#MRP\4%Zk$7YrhpH7hR%0/7\<#jHI0g]=1D<1;`W7j8PD'D2;TcUZ#.UG%_5$-IA!(0SpC&j59;]PMVL2&8u>O+qX^j*HS#'K<,Fe3FdebN%*4Nr^n=A!p-MiF7'6g<-Yq#Wf9PWu[@0F9CN*-$Y!%MEmf.ta+VME>$UILC7d$r[g;@&0jn"*%+1NP-96?8u]ibtu.8oLMfqbV,j%aYSbWYd)5mO[40$#'m\[KhYd=;'KS912TfM064UhgZhgmXMQqh;_^u$YW/BPQ%1BcD&oaU=*TS:P,E\jM%MtO'kh@Uc]V)2_^R=L%_G.0Xbg1B.EpB[dcpp&T\s'%KTb-:A:R9s/\#SY_p7T]VoUP=<G:RBtdSsZgV^CoC711h<Z+GZAlPsaki5M*[5%kdU&7!Wo)b3E>%6T8`k,ILDEc^)2;/"0XO'EK($5I+%Q9p7/e9rF^>\'`5pGBX1p3GqQAPVcfLb'5,9TT=iuB)gW,jtsYi9PMG@Sm5QF`#CXBlk2L:%@k_$o889<^ZD0N\?^siK)bYiJoS%6Z-^V6TL?FpVj^rtA&X8Co<C#Et8hZV9a<_-*-9;DET%?,dE^$pIR`H3P#.I@bU*^%pdKdQC%FC[N">Qk]d@^=>6Z;@i_[7.X3.kKcA^-kBPI(1gtpqE;cTP:E9p]d:&c6mopHROr!CoV3oVGlC@hMU#tE9I2l#PHpJ'n\Ytfs_&!%TejU4<,6uV7@PX8'JsOIHoM4gp(9T^cfFBdR-*85"`\VBoAaS<j6">lll8`,46,"m"gr6SCI@PWG'@eu"Bn;^W(uj91J%fGhJO-p%TYi$?r9R(O<47A9n?^$IB%"(bY;nJSkNJM>9g,I4F#*amIe^u$me&HO!T`6+n1eWO^(lZKi=Fp6)p:IY%6=akkVTU>[j@%U^Ze#Z%Hl;tHGu=KihWP$MUG<GDW1r(^MFj=8WSmd,9pRn*K2>r.l2K'c!kH:[h/7Z&+;,&0:nMJu0"*ScB\./_X`>0Z+[iX(,Z2C)`X3D,%V5B=K3Jsk"j,SPl^IJ<MCZFFe!h?d#Bc2\CriC1,Dg]6,&pI8o]u9NoLNttNG0rk*WW#Z3hY41":5,O.I.l[dLL\?L\sT?IV6].:%d/7b!Hg^3#OFDQu@:JcArc'b<XTX\=9B942)$T5*dJRUP<n@e4?&XK]cRg@,GO_V;l:Z3!+/]"8(<eK#cQsesVq'0IRHrD2"Fls,%Y93iN/k"Jo\Xe[<^&!j`i6Ph+^kCAOms,$qnFQ1?'>Eg?^HRWm3NrHc[.jAHpBoPp\pkBV.Cc>aoQohNJ5HVW5Mp+sJ;s@!3713%%;"#)*"VG)Y]uF`d8.R7#d>plBCp*aef&LoDdteNF3mr+l0K]1lHCYq;glF#p2V*ut^/]Rs\P"!c^Q._h["P0DMpTA1Ua<[P*=64G%*rhCl3I^*Y7fd%mQH[O&nhlC3H't1[Bcn+NBkWp%Rmo_,NCMD(E"1/M,+;u$13o_(U#R$ga.9WnG')=G7`4`*-6KTD,b0.A1aX_%%Tk@mAlkHdbZl5V'DZAMr-Wm0%-9#r(LE!d\(\Z$=:O4#5$6I]Z!"BFu7IgG"0J;+0];028'BBa(^J?K18W%I'lP)nlj,rMK`e9I#%ocOrIk^+K')aA+.5:]ZFnG?ef.fWVDf#g'JKWsVP&&U8+=[sF7Y+_g>DZ95=VP4aA<tZ%iZAo;'`T+1'[E,[s%c#mAMf#CXJlj3H%Mb)shWEG5[`rC(R2CB.:2WI1o#6&IB[ahU#.B4sF"p<Yk?aD>2JTJ2q.=0`G:ArCV0DVudR)FBiZG[P7iJ<3t_:JDWOQhQI#:6'8%q-EZ=)l]f9p)51]RJL7hQ`8<*)Q@@/W'uV"*meal@IG6Zj%\"k?XLg'K`1iWjn07NqcOl:SqP!QR#o*)8@-c%"^W%1:^`;5Q3.T6%681[5NKhPL.?_0TIsi30<11^1S+i:!a-#JnLSj$3KLLeXp$nbC\\+FQ9ha_[[8'1,#(C%BPlGnpi]3N]-21?Nm<^]a#Vl^>an-&r%L#G/`d-)F*6>OT;B_?Y=QuI&M^eYZHV,hB6ciS,E>tj,("K%^/$V8NFAHH(<&;G"L$R?gTPnB0'3AggG/)pB\]@4(<:renbGI"Qa%':"#38<U/a#TDK3)RjH:-n1E7Pk%eC$h"(+maJP;SE`&%HF&qMnE/!7I=V1WgN<I,U=r':.5[`rYhe11QYCt,;puVF^\V2B^Y@92%isidpG2LdJYE++AqBk"'A/Ts"f_Q1K@WK67#<3=bN!#OFd2LDX@qYp9GqRBY=r`X-#o%n:-"h:d[,n0N#@#cLl.eq`eSLo1n1T9d%n=Z;bn[;]q#S+in:ITF^hG@PKk93[c>'3(b]gO=`>IMeCnU\lZAJ*;Tqea3_Go>XML3YSE(@$f+:r)(uMVcUH&*ftP#g6"Oj\FG2%W,I*#c/A21b/["Jg3B%br%nTI%SLC01F"l/8_'f:p4&#SL-=$+C@">,*&YB,%;idOPcq@fR.K'3EaBd-#oX8"kg,p#J"=Q@Z^9J2%=fQKi(Y?!:#P";:7n4Va5N'I2Rb4gA5gf,ghkn_4<>s=um7WG,Xb?+]Urbig=oE[(SVTuihfr+sa9+V*bo$OC!Y4H7]siISNLm7h%C%c;?D=jn5(H\I^rs1WI%N_FoG=rs>?2&`*S'LUkbVTJX2m3G]Fd^nS0u=Ct1pOFG34u7n<n5V]6eD.?Me-<!S0"OSR/<$6laC9S%DKGH24%+&.L@1]a4d(Oa2iYK=fcN-^Wj'_q?/"4tbOB>UhIW1D8n>l!9+?OFjkpNg4*!W/70M%`:b[1q2c#-p9-+KQhG@<$>%U)j%&!17mW@uA#*B\Srht&d><!DLiN[N=mVS9il"8<:gG&2Df@4EVAJ\$q"P0.>9$QLLd%TDmu=6#%g;1M\*d&cST^71:1jLIS+"^0Zf%8=)AcTEsYA]KqS;bG:I9VBt\\]>inu>;BJ7QUq\;H<L$/\)uSuJYN=5o5lp]`4KA'HD5LCIuKl$</ReB&"f?UH(!%O`tbeTLYuRi%X$(C%MG.R?ma/+q"N$48>6DaJQAfb"A6&DI6/*AKm]7H$l=l[Is)7(3iK4q!-dN5;]Jl4fjW>nj8kt4,L"2]%3C5fE^>9pr.@0h\%$F3EL9GnLbg%OS7"hF'h?R$8`pj*75l/HkNqb\+=&7VtXo0$i<IMb)OOQ*OI\TOF)H0\XGemaAmb*P:(c2$[8T*Se.qa>j%r=Yl6%+G1"-A'sp3G9$\_j*1&/2H*=WRoA]WTFqMfZ#E54q(aR6WZ!gfb`Wm"$?,H"=93ha@-n5p1L&>2jM^o-Gd>?FLaG#KM*_M[-['Zl%0@OogR#b9p(sVAmQol<fDP$VpWhUWu;`Vh!;B6M$1D26u`54S\JLR*9`RM#=XBfkLHV*?PagL$8\:G4@>qp:7*/!VH7&8fHFoVi2%L4Z$3f-<banWegDor4;&a`Cs/qg8uA9/pWHCe93QOn`YilK8_ihig4O)pIJn9o#5bTd&.=P@V`/kLWAQckEIF@Y5]JlkiDhIA[(r%1_-B#"l"X38MY9MRl9mU4'3t2'.uWA1KcI-WF)CgB7mEX)KuslKlX&+HW\C$1/iT7Q>mMr$lerW&\CeqH@kG;,84fK3M&$Bl3&eE%o9L%DTO-?6_FPtm/fXtmgiPT\13JWL;LF5CToRjbTN%QJCorGk_TCT@:Yp1ejt=]\Or/8""2HE_]`+n-9oIA!g3Z@6`B(>BjPl1i%D3\7GTZ:M4S5Wc<ei9Y6lDuZ'm<LA*dC(<+deGk27[ZF*"^(:4VHl%2#L&B?]W*Z\Jm22+c9p(=9uh8hlWmHrHBM@'^MR`i^LMYU%+aLs"p#1,aDoIA3m9=+XZ#N:fL_8g$U8F/d=oPf6D3U._pFg4u=nIQg_B"H((U&R)s6<d?q8*&8C]*LpDWFgTP:J7P"$bruF3E1Z%n'?dRbtBXO=RTZf_t6m;Mu(tIrpJq]\:X'AK_`s\i+eMAT4g8[,+DY=V#*[ao74ro;Q;K,JVsAQ(dTNu6ep+$11oTNBoYqeR`FjI%n%]0M0b\!\9TBQHD\JS"^%bt?C[Zu$cQA4&Bp^#[S2XQ]l_;E8A&>V&5'jG]ENsR2::dVAGLtSu2k2#mTl04ZJmofK189O9ipgID%)[fsW'@aXnpL,]g(I=&.::B*q,;.6kIaF//`nSFc\*GoQ5XFN6%12)Lj\)/dP;HVn/GIE]&1cp<R&2da[2\ajM>RhsX)ULeGj0@Q%hP;s_A:i6FPR)"fU^9acf<]'g2bcq`An<A@FG@UEU`5uk*87`uWG*'b]&<+t*`bF>;bt!55)5P2ocZjg,mZT/4a]rO\oV_&0`sZY%[cnkqk@G>P9KWKuoUHQmm9QoE,h5@t'MlF=OjW+:.+Y.@"qF@=nr/F%d'.m#Qeq6e9lNrdLN.c&*&EFhA[7#UQRadbJ#2?^A;W].%2t?=04^>]i:D1,2dEr*`r6iGQ:[Na0.dsU;"'g`+?_.TER"Z:F&&;m\nd:)u`AChOK;/8Ir&kHo!6ECeBc:WHfoGaQE.u_$$tUpM%bi`HA;ld'jph30mdUI,E/hOd(pmnXQm8?SV]b&3QogF@e1p=Lur]#nsLqO0ikn;V6<VgI+R=99)ke_.cgblG@W8ZF'LLMDg?*]qh%m[8$#44FK3eF0:,1b!uaahb0XNH@iY^H9e3^1;c)V#6b!7['M`];Pc1/*2qVaGIWBl$''fj3XAcAgrM(*6TOZA'u\MV-SW-KT1^M%[7`7=,X*EjY.Ns8HJb0YSNLe\#j.MT=0Tu<JY&6r/iF;BEQnoQWer=kRDPpU*g-oQa80l[k"L.ub)gP-#k[bN@NjArfR*)^lETh*%8@30GBSc=l@I^02q@SSU)B2?7&N06Qn4@+=,7T!1V$?#3f2W.3c&1jeDAW7:S)C]4Q']X*;1O$Y(@;ee*E\7^q[r;\lE7hcr^VS4%@op0?LGu`'gD'9GU'*7iaTSE\!o_e).%1hFZ%J&,WUSh/6i9ZsakO&O9ig1APan*:nYZZik]<[K%i#*i8Q!);!prHRfGpt&\r4)$%h9$ffP7b0o-0R#hg2iT;Dmq2_hnMg@l[5KQnlP=n`b&LC8XmAVnZGhNl=1]EN$OJrS":Y>M%:;W4+Ks6-'KuYT.f`K%$]qX:r&r"%outJg9@2goC#J`2LRV:`nPM/8.^\%Y;t%\=Dr'oFqCSt?9`N(%HDQm'4'#0ui-687Vn$?!E"e(Z=?Aaqi1A*9,DZ\(c5c-:PK8C(%\]Rg>.Nen])Q^r#0hkn960.P*].IR6B_Tqc"=SLF2/1h1M-VTi)Dct2@OTDH4QC=]fQIDa8H0U[Jksr?"80BUC)WCGHsLVebLc0U%"k"C:NY&)=CPMrN^lQm>4j8W9)_,37rC0J:[G"64^ImT&hQpOQI;XiQ65d0gn[3;)gA=LSUiT%if!^j0\P[VGB3GaZYHqFf*A`J:%^G;7d=2Vqt]kZ:XdI*lReX*9.g@_S4Wc!e?0@mP!5M$_IDuQg<k@<hTU1ZU_kW(_EI!_)5Zc5\s^=UnecqnfP(1lNSh/ruJ]kSrg%"O3ps/3b9:Zt<[+)QDe-*tK^np1qS_3:8Za731bJT;mhJ)nL[*]4QT+mRf'm"9X#]kCcY;9]E0[Xe`.mh]ZBo-34-_bY,3YZo,Q%%3"fuU\`RN9O?`''F"l\Ik2VP[;J5`P?g_DL?CM@)LqicV+13bqeGM2`TqeqY*hCM@H;5.FmdkE[r;^e4]K-h`,``I,pG"dQqJg'"%b&e(eTDl5(_[b7I9.Gog_QY+Pb[A*?&?jss=.?Q)+ts:njP[b^@TZe>cra-A3.h/<4P+!Sn\[[5fckc+78?;B-k##V`d%g=!%c50%s+<EZC9/dT7i3X@l&'&@PQA#1L.e3b",gNR*YcN*Qeaf&#UX0"1;ANRb6Ce`P$UdUpCKc)De/_I",c3iTU7P+0?K,t'G=W_6\I.m%)8'nk%<>*+e>''OV27,7E$UC/*+=2O[W7=!bd-=EiFR]3nmb4baY&aT,M(#m',!5Q.aI?SPZ+\W9=o`c-^[!6jD)Z+2iT-@hN"I#%"&-Xjk<0^Fq7?rI(U82;Ie,)HXugI)Tj=Tr,T?a10RBZg-ahB&`mHi(B009<BPKd(["ZZ-9^?A6!V2)iG10[*@`dtllI1U`6(.af%H8/>upd8ND?.WF]]J`S.#1_g&!f'HiE*YAZ21[,$/?"SeoUcKcYDo9++d["E/!+gqJK677[rA?T"1YbgN/&`<5k5%]3EWZTif!pS%5'/aUU"#7b)0$M#&iDf?oAPVi-;=.LD8:5"]L=KH;^>ou-Ai"HAo,H3f=&te,46WklpZm=^bU;_X1DfX](9HHc.ES_Ta&@Jp5;<R%hG89['L/S=a6SZ0@Z]3AJQAJBW1J5lT,XTrcYqilcoo"3s-I^i1n@@"j*k7_^Wn'QGJaAb9]FW]>PV[=Z]J]BL_&j3nPZQDj9J1;%$+TaVbWM3F5m/pW^+J&o"^^V9.n"V:>#Pot+o;+G-Ik3jN/DOJ4$]f6iJX5K:QX8R1,=p`kT[MY97rDB`U>oZM30"DRP`:5Y'(rB%IS>/gg=3r0&o6&=Wd8bdDhZT,q.-cYQFeXACgsnf]a@B2.V0!mO,Td-`\dLC)9P/TWeklm>ii"gL*"P5AspJ;SYkNRe)&fK[P_&+%0O"&6CuKCVDK_u\($F8QQK.JM;X0F2))7XI\OHb.Hm;gF7(oF9O!;5b@CH^m-,s*nQc0!ejbtuh]Y+G`.:`cs?44h_`a)K<jjKC1%JSE!oPN\YPO9d\a#ZIe]h>;$rK\l0)?e5\GTARX:j7o+!CQ)L"9^iloU?.``Fu<Qj+>kdQ]Le.>).a`M*sCm"V?"7sI)B\%#1Enn%"4(srIWR.Nk;a:LQr#l/1#M9]qV@[_[W\VFKSa`V0dTXXON,O9"disCA2$$S`q(G(ADLI"PX1t`W8+-qQm?6FJF'qg.-<>rlSY!,%M0VmQX@O<!3Pm&j)5"[%R]W`NmE(S-,4[JMXD9OuWMh+hPGP"(mY0o8'U!If!K'6V`ILO:=m[J&@)6p.IB=$?7%$ILX;1n.$mIkT%A!2oTHXU*Z("M$*1dFKF"oMF=!Cf[A'n0K\$mJE];.bZdABT]Od',);D)O"QM3Rn`$W@]S"f*?eH+1Nc.GQ*o;Oi@lSF*Md!KITI%-67ERl+NjLBFT7BN`r*MaGs9!4%t8Zk6r4;3Gd_\3U<FH>@"+!3kEA=b@-kgo:ZW'kC1/s32WP6@%7-L7],0`5/K9_>00"PCj8(m%(B<pfdq_cLd8CETA^tbe9?HZ'7UO7=S0M;4@p6io9l2Fq!.]CA\>?;pVW#R[;tp%,S"LA>2G*Wb[(Vgp_M12>4uqsO&"uMZ;@8eL%m(J+.O)<-\3<MC^QE!"^,`C*XXfAUa=pa/>G>cO@D8Ijp>_jG19D9`+)C_L]aaq`q8N^H!b7m"aCh^KOZFc]W']1&>Yk)%g.8Knj%UMuPQ@a4H^pfOj4@JB=L0gK0=g&Xo<(l)L>N!K]@PAc"B`.WC6HZTFR5?fM$e7f+Trq`*^++o%,7en(^(9:pi6cR5A``Zr%XojY`%S57)8s,pZ!*Jd_gC+r;:XfQa;nm5V'gF_U[enGK>4FrIATu]04^L%MO3CePR=J5Mm9#WZp6Er%rqgS_u\A[1W)/a,i=Hek6[OGTa%<[Z@WC.'=F$m:&LbF@T`&k.*NT+m*8kf&q;(0LL^IRr6!j>:qo^Ad*9-FjhVlg<D\,!#8lf9\5;KOC:`6XIZqU]H)C\Z8R=GAH6b%fH.`k$J`#6=O$u?VPVKUl)15^D$.ln5/PjFZB.!(NK%$*+J9$=nTM;^Y*.SB+W8;H9dbEr&o_+t+J/P98BQpPj8dcm70"7'`OF2N%(Zq]`eGsHG+ZE8Wg>\3tUG`!kC?^ZRRDK;0`JKCX*:p$.k+k%,`[J'FH)(9BAM!tG:\h8OC>*qNEKiOIaTk(ioqlrhV;I9X%rBE7%V5qgIYUa2pKCtT[A=0VMReeE@(18Jd3+sp*lER%Sj]N/T6so+Bk@tWBH3H4l@GBcc4R,dJ0=LDU3eo_`Vm(,`IBE+rpYdoQP)n/M%-_K]io.;j<9tU@W@:n,,lm4;:mq4YiaF3\89iQ54&>fptX,tc=qGo]VSVtsr+6(cg!1!)BggY>+O=TW(7EM^087K5*nSujCYrk<6%;M:FUF+0JhV=ul&bZ.0*Hb&i#n/"hO9D%q>-eZeJ,.42$R%+\&f4R7&k$-/^[&Zd>ZEc/*\dZBi=QY'868ipFS?6+tdo@ob2GEt%%f3Xo48'^BTFgj_"2WdB)[^a_GX@7AbU_m%09f81@&i5Q:+m,Z8^f1:?WNVi?'h5:O1BZ;B&(](.52OUSUBGe<I[SJ8ermHU#NlMB%@U]uQMZ?j2)f[oO<9Z-W\'M8i=MD]*)!r7^^0mle?i&8^[*qti.W3WZ;</A0j6V"7C.hM#84Y%iiGRB6Upr;S[B@\f3=<O^elU9>%B58e7IH#Ge\:L#i7R/H2dpg%K">J1LVZ!N9aa'9mOfR(*=f:NYYI?7/7AcU67c>m7R;O`l^J3WjO@@L!:P[hMC(ofTTJ26OWBS5M%<24+@;B#S3nqh(uc&<pjS[L_b8,"NZ[U?aYcR77f#&+e'FFBL^hl7W5ok%gR9duNoh\T9eg<lg*ZH:FG$b(o;a^AjE9IsNo4b%>e%:URJWp=,'G7?#Iq)oC+Cs7ejTn\'Z>Af`e7*hCUMZ9]@%dn/SePVJYf,=en`Bha>S4t4l>+TW,ZJP1jo`@+s/,[Fpb#L"*I``mHV%B9;YHg]'m1Y.oS6>=Xk5>.nZ^9:U+l]k$#h<H*@9"F/4XTYTUp$?4)M)AG5RN/Go)QX8B.jLjC;Eg5^`2YrjtF:n/[7_F3CQuoHk%pS+!3#'2H>%u@\`L!hr-2CSqSKi:&iRNaG\_jud\3j:D^DX2rQ$`pG=%DqsCBir$%HW?<FNsMB`C\%5JR<hF!Gb[O\P42ffS!<Wt%/`G*X1HPr(WocN[U6c2j0?VkI."#8L'Ob0Ub%P+5I$+M)%suCM_1U)R-O=GO"*&HOWn`K'_`PnknUt";eQo&o^>Fk*QIXA;<$Lh?%8B[7\ab@b%:.F]mU23;?jh#uef]l$1^)I;QeEG^O5L,uX7ad.jE>g]R)dG^q'"fDq3#n#RN4imD1+t!*L7^[#)%PGk)N`m%ib/*i%_D1kG@2lX^7^>OOR'Uum8]*'$Yu\c[Ih%t?h&Z@K0eo4K>DYK'^itmf#7H@ENie"JSSjsc$<]D4W`Z2<X.b``+!:JcphCc_?]m>F%rThWDYXEGP<,?.nE]Z-uo`8tZ+$"(.*YWidV<0K"$Q=sf'VIFI*!m:.,`^M*!0pGo",U2rb3@qt4nmR4Bf+/<'Zm5HB^GB6S?Lu$%>FlfJ7k+B:"ofYUR4RH]"Mgff@JH3bqqGZ>l4&s0/(22j/c+I9F`'cT?I%kZ1aLq=?K.C\!P(hV(O0f71cXdlBL2AP^YgD%`mfLX%93b!QHjUjFi2$WmEeXE23fW@Ma#QJu):Od35%0s#n+!dXV!?#EF2]2=G=mO8?W#fe41I"*HX\E*1aD.tCFM;7'?Wu;oQ8B0?40fo%`3)l[\^`O17P21V2t0jr45:u7G5"K1PgFN.Xa_/oHIT?q2!&3F3CI$s)g(>^mg0CVQc[Y@-nrVYe*+OlpblE9,N!hQ!!+Urb8>3O%5O$UtQOU"Cj,u&?6.:K>9L<#1fj,K3IRbh-TSPQJ1G7@]=3U\@Yt)A3i?@o#]>"Co6_`_$;?YrW%?a45SK[r/,*E>f%qWTo<<`Y"%o["$fh!@.\"^U@&Zc3rO_E^i&<oBZt8$[lLV:3NY^OnmN^VfK>I+%\NC2.(;0mu\;[EdP>3L`RQUjs@1e""],,3ea[>f>!QHAOAM%!=D_M#`9Ad',b1Lr1eZ,s"WR+"g>%Mb)V*152g@9`b\L_lrt.N\`jfWWNsOK:/"EQFc)r-.VQ6.A98M6RL5T$QVgFDise9>(!aG_%X$/nMT"b'&AODYGJHAriF;-F`fO$PG-;Io#VF)eF[@Bqje]BVuTZ."=!\:)UWe*=PKukifei*9"`hXHL&t1^WE\[eA;A9%1e.po-%W!JdhAW!?J?BUb/>Hp\_:9t6TY7rGIlYj9)jPRt1>-Q9TEt33A:Xc>0A]'iK-@LQ%e'b.N_9!3t5i9EX:jL-&eE9ie@I<&npm@G9%YJGg'FhF9tE[!TklV3#apo+8'(F-ps$t-S<Nr@86[9-_UZ/;;kLPOP2P>Ge:4%38g3%Eb;%Y%R=q([gT!?AR.1TAi\Y7iXPU5?5)%4cIOcR[Qi`"mNK[OuE+c->sL$(rL]+F9e!X856RVN[48c&`kM7#'i2RXY4bHQ^PK)GWXi?%fE6uN8.XQ=/YHJluKsih=ZZn9Nu4!%V!7'%4o3@?%h)VnQEj<A9>SOY-8U+>UC:=Y`i-Ril^fMNcHIrnTFO/S%!<:P+LSLa7%dQoKf0:/%FOZ&jd&D`^?MVNcb\B$OJ@R[%!P(4R9(Vboo&D,'19FQC?QjD_'b/L3$_!61ZW711l'b/DgTqc*%aLchkuJC9dC3X[PftdJ8;/LQ(Vbir=5"ql2RLV(^-6'?'IE-P%hnfqLTp?h%q!nF(!C"[6IPlM'HW<1eSFKIn<k+"kb+#rL>uE^=l7s+*b%1o3ho<L0o`0_[?kb))^U29RHPdL\A%:>E>9:u@`*L+n%Ug0glT)'q/QQFI;Bfm^IB1H4L]dT1&,TMB%W6/o`*';FR;<0_EGoV26SlN0cSm60@=iW(\_JqWH;4C)%h,-W^8t\5@SW2eNKZdnk%]*<\RbCIa]AAR#h$78IM\dYF@Bj1K!4mssb_S1D)XEP16HQ4Z=7g`8IY#[""&#E3AQqHZOB=f:[ee'J2,I)p(aUKq*AY<U;EdZr'%O@,B'V)UqDH?Uqu$`Y4u%pe7bUiR2/31^Hri^UUEr^4>>)/VpMb8t1@]uN-dR7n:Ml.oL&kXOFZ=_LGa`Eg:F)L0_$Z;Q!X(O8@N%`0raRSSDVA)G3i'6Bu%VNl\e%U17IU5VP!5cATq9GZGeQbVaE?nYDmiQkWo%T6rBJ3(Q^8T3^<g0d(XZ.#.&hS$mC0kgsDXkAm%P%9ehqqQB''WnX<_dRZ##?7$_;c@,0h)JKmc1FfO1Igs/HG0\1%2&F(D1%b%4LW&R2^1Q0b@Loo$A0Erog:7c)gBiiV;`i2,P("=-j%/N<<(^.B>lDODb0dL/2QTSUG_UD;uTCWf1>FpXU4qLC8Ck6DHq3g%nREP(16>=3DrFEGlk@)*fU@1tjUk\?iCEoT/I(tsDFI7Ps9%EJBF,_A;h$acP6\h7(tsE%Ml(WV,r3Z\lAm$JBfm2XQZ3J>';05,LXS<"$WPY6p8VDL#6ki*\[+D>pIN@re'J\lPF<<Hrt*@q1&W%0&S>".mj&*q=i(Tn.2_h6MIX8kRHkS=a9Yrb;>5k_A`"%IZB3U%ZcWjM\M)U]g058FJk.4!s00&`)ma/NGhp'HKq<VQL7K:(/X/t%Vh%`nN,7,FrAqA6-MB5mCXnJJ6p!#5He2t]CM.O#f?TmZ;>]esNg!!,2qGB%Ro/&,JuiQEmuM1+JOf1Q0=6F?B.jqmd37T8"jp+F%q"?bV3VM%\bL@\OPe807^PmZ?EMI,*q\Kk;A<ba80'C7#O@>h5_=IYi#$ilR_*(Bae[sTtJfA,HN0.hG^X<:r\$Ch['a:MYA&6,^%3(X,^ILKQT0aX,)pgfK2JAj]j)Q-Gnh7Z:AU[G#i&G!>_K#RtSnMh!X&!ok(U'D$MYs(RDp-1A`]'!@s)->[2JXn1rd$.@pVjJ:4%$iN;\cLicnIpZIR^?u?;DCGc*[@\78Ce6i;jd2B[:1(2>B90EBN/V1C8IQq8-;o4>$4PY7P<W8WJe]fNf\l`X[@gs1``-tEM8JuI%4)6Za%7q%D.JK@sC,r8C&[D(aVN[/P9>4r\JLsg4C3lg.&?FlH"5?+"fFpj`#M,e@FjGYL(IknF@8)u=FEBU&.8d4=,UJ@+o6Xnk%MJo0XE\eh(q5Dg(M;Y(;68aWO7!8`JL*0#R'jh:t?4>thlCJ)t)5_RGK?siQp@>%hco]39P:k'Nq2fW,@;<7c\iKnhi(bP;6Vk3K%=:og99.4Fn1Qo_p*(RhQl"]4G\67AH\SRJ(ib-691hEZQ*tYZs^?Q$U,*0cJ)gCdLMOSkeW97;==]\Pf[.VAQ#C2uAANT^Z"*API%S"@N-8Wr_o\0Idc-;d`Q.K)ui+ONMKWdM1\/i&HYE*#k'_p\*0)`6WCQJo[Nj;N%IDKIU7"IR*VYDUJWDd:N/chEF_8K(Sq2E.*h%LPEaiGVQP%a8KbPVf*HF8Q32!$&e=q"_aUE'/gt9_Tblk"l5h#,FrPJ&K4^E"EG_V1/ng1"'0+&4@SB)_=Q*4!%X%a#EF`UB$3J<%PD02#F+&sgK@PVJRNNN1-8!E1ikhmJF=^g7.LMB(ms>LgOItHQ>JhC%d;J"1Y/.QQa*T@#nPN_.-jE6p9/^R)r.D'rrU&t<I[<13%3u`bL[_?'@i&+4fkbJiBDiconGEAII%Bf>`.&D^"8TtK*R!H*ZEq2SFFC)/U;Z+Of_UV8'.1p0#Wn#afhFh'Vach&e-Id`J2%:?h%p%X-M[/)<5cM6VhV?(W&]\$+bs+W'#HI@JJ%(;Chr4L<p4-J\uIe:r6%=#ei]LD0mln3%Lq>ocSSl@rGV:WL18?'Mud>nD-T_aQq%,6!>K/M7_SEcd3ZJk+>g)5c/B(_$9Bb6i!KpOHU)H$tWhOAtupmfs:3N,E!g/EUG8EZ$eK&uQ&K(`"SKHiSi]67,1hb&T9+R&35_%OrNTuR$(4>a)%cL7EJFE;gJ>0VB/%9Fh^WqZfeO\9#eVS`"s*=1\B7lRi-Y7RQ/6?ZFB(>-[U&nE,sPa*%6He,k92U9IGWf#\aV5%9_c!23<CiX!;Rfm5t,d0B[G"_G=%S=fLUQqc5/P"V.l\7`gC]KP>SV#,7SV:iUo&7HL:$33q6H`8eHZ)qhFZK-Wr5=Wmp:JY-COt%fRZGIpcOAo9#e+@H$;Gh\sRV(]HZiM`o#T-NF"7)-!+_\Yts07P")jSn27"s`Q?p0<A*9eq=IYG_1idh4.&$\A,M@JVW!Sl]"*%)%[ga1@1n)^BMl_5URp>h27uau5QC:R5]0+Tt(,6KnS=X.#hFSU\5="+42!L#S11!(<Q[j*'O6Vi64H?\2fBL`0+JW]SpHb1^q\ht.%7[lmu;1c\&R>#^-@%7K:"js!jA;CQFIpJcgD0OgC+$=85YfG\L=2GIgalGGVMRe!\?kkf6>KjCO@;F5!b=>++kA[/6(TI&njcgEs%(F'_^.@_tYKq%Bn*[H*;\#qb!0`:8FC19cO/Df7O$dSI#KP;EA((O`D]*+,Xe`"jW"eZ,_j_c%Mk/G[*6BjW\pSG%tPSnIkg*A^R%.0JHMc:s460%(]Ds$&bs)?H'bTo$g8-8mkJ1=S61[5/?;+]:C8g_h>p%imBC:LQu!)W^.Dg31rFn`/_nlI1nS2.jIWYVKWtab2:p%ae.%9c5oLVKIme?q(l?,AG/0CbKkU)IfK7"#49@$]UJ&[e+e,*D2>Y5CcBK-H^@D6VKA1r7Cgs\Kp51H[2PY.Y\>-]!f62;%aUj#%YXJH$;U-n]5ERdSrA.dE&;TqQb$r$[k5&@ql>njskb(TaPGX8)Fkb:]Hd0a2=ne)l\JgT(2J([\lXC*7L_g?t+ukCEoHeNNOMN8d%Y4t&7lci,Lj9n%PPFM4!]P!CWkIGbm2"d$])ZrW868+MW>9eFP:BYn..FV-nW#k4Rd::/cHLpJ?.mm7U0$C/F,$T/i(COOW5:]DP%W4+\FAD:W-?#KNm3*Bh9jH?p^(rKl#?[)Fj9M9`%>ts/3lWmVWQZB1o1B%4FAW.AsD\tu*&0nM;BFEgbHj&jX^@cbVAL@mo;bi)7%>bErF!tmn.&eCtjhb<(i>'&7m;nUR%jQ;1c[d$u%XE&+34T^Go[@uBP"coY0JYJTDQ`f^i,$1+H-#[d#5F2N%%[Xt9"P.;H-GE3o%8_9Yg3?V$0/cdYBU7l1P(h>?m=3]Oig?7d*_[[dRZq!.FkXe)0Sj(3S*>[9XroGC?R(.-*m)e828@^`ndiQ_#Gr*24]`jpQ9S<,\%#W:a:+=$Ee^kq0K2e%,>;n`(d/R1)%72h"\e')OUR<*ei/qpmqqCGR=RCPOsZj"iP,DHY8dYD@[?ts(6\g;iNJUC6<b5s!1n1s2T%da63q,8'K"B&%Por#Icn'BAhqYd:&,++s-.@u*^HCeLUeQVlNCdC$?(/j\*E5.7^&%_X*L'D\31Ek*hJeq1B1?UBL(2Tt%V/Y*\#%e`)#&`Y9(]=rH"cKKe)>>Aot1Ia;L*HHA2I*4L<b7[+2W7RQNu1B.)dFKgCF2ODp%Hk2[n1PpUfa'GRF"<O@%_K;g$eBNi8GRu(O%NcS%jU=LPDY$j?pYCT/hg5&L,:_c_=Z1_gFR.`NY@0-q2V?+PqAJ1m9q<:)#Cu`5N'a8@nFb2=rO4[Qor4/aqlDEb8DC'XE[HqPe%03O7:2Koo;oqjm!lrG]B&Q]';42oZ"Y3E$d!OZkJ2/^N)M=.tV^_B4=oeY,L=YZJVrffJZPrr0KZeT386?/]o28mL7`dcH7^T*;i%dTX*Oc)RO=]cF"Y]5,SKSXWNXCJ#7NX\Vou>Tu)&J6Y&Y<OAO#A:X0FAfs=J(Z&6.o"i:W6&7nc#Y\0(lE/V!BpugqFLQ>E?<l=<%e>J`II^Z>M<Op]0[=_Cn4_V>O]:K[ODg3StFp?$.@?Tj'Js:MI[d-KiJGa,oX9!RK-AA@`C%edd6EO/_4WL*VXCHgKG*m);oQ/.(%$PdZC_@!%G@@r@Fr7ShZYn$cqib7Ldr:A[Q(2^8+s2u2S@ON>.IILr4E0,pM@eZD#AA(HHN38$%3;Oo%Li@1-Ikk[k5/a^V.MCGU%W#OIijuXQ!M0sG2dMoe[+FZ)-IRVTZnCg`6:EZYq:sJ*S(5:PnS%6"oOJR0Yq:5A4>V@anM^?uF)<i<A\`)Yg:onZHm>j\Y!a,Af%d*bebQfifuGWIb?0I9N_^XlU?^[pa&nUTV-q-?^$d?rDf6NqI9O?/`_[=p6lV?1>%-$^M&C&Y/WO(C71,M2!tZ,]]G4a=(XL5g)Y%5-/$0"&%5bK>2IAJ)iN4U@Q_.I$oH`qD'ZE*$S4U2t=3mYq*6V%$?<qn5(GqrN;GZr!`Ne]`2K[o0l%oKiulD^`c#U)&Huu[/[nC%CY>s<8ZH-Zs,`_5L69&YrcVWYaWMb'":I]'6`$YnOD]6:l5gLdcTMes\lDnFPi[non@-$_3QL@>W,Ng"Tj=bl78<X@G[LWUm=e>2%&YV!?GFu%'ctEBaA#[#d\>/kZ,$ct[Hug9`&e33^'e2#WO=tqN-nl*Cmo1/LTj7ppiUA:+bXAlk!&[aF3RdLi]&`ZVa#(<]D48',%atQN>MJK]p"eW[Nq!&V7.Er,,*"&[\TVUl2?m,fl(1[6/`grg%5/13+pu&[?F$Of[4r+Mk)T&R6cL-c>p\Yti4#7[PK%XOGM9tR2%W%ZcH\DjMO40H\\JaW#Q&4Ru0A\V\'aN1IZ#eE5WNTDQBp!S<KUK*==`p/Ec9Nec9BBi,^aj>3=Oj]SL;D^*L?)MJM4V4X#<c?k7%]<>$1EArMheW$4_37GN[.(#+?L_NUtdC?7e#sh#8$O?_\L=:-DJ8+H4DiX(2188!W4('B)Q'hTpL^mYqAZIsCdp,=[1mX<Sg^0bt%??gee#o>n]%,n&8lTghEUOT]tSHVEd1siisHt8T0LehPLnm[ab$M[%aP-iX__k_+/KmKk\VU^hm8:KER*gQVX]":HYYKWA!Gh/HE%eoRf2:[QJijL,P-b$%/oHRCLq+B)3KDLdD?08VtoT)P=2\-+`IMebY$.^WMiEUI(p??!'bNs';JAGHtTXdim/'PV?d*&Fp&UUrFU%O`@d>B`Z_+UM[3qN(gDh;%j$i]?BRfAb?=8e;.fr)$kA1`"3jQ&JN.T*I*\+efUR%Wo.=r(4>$/CfUb@PIjCPB&Z:CD?PX`Mk3TM%3rIO/bXr0$n;7:cAP(<6]I$h'G"HE0c1E\`!g3TgS)iE";biei;Pe's.8#fo-DRhW7:b?rNQ^m?=>"P&6#^XsaAB-:(Rgd<Bo<)j%W#j?q9?%'n],QaAUsu/k#7-An]c/;OH@V/>C+UekH/UaU0Vstj=(pmVb=EZ#/>LCr>-QZTKaE3?3Y3+.FTUeH'Z7l@.6S<8"?#(J%=J%U8J0PFsTba64>],I="*4EoWNP[O.oc2]lgftu0iQX!cDCqF1;.@dD#-,XnLVqgOGo02Yi@2ZS.?@`?e>:-s0p'+/bKJ;\.6Xe%a;a[i_@LmZ:_MpkKg=)&Q+AMa<FiJ#D(.!Th6t8XWYDJU;:N-sfWR[N6=X7$Z_c7Fr!*eDRP%aO[h?3F;TZ:eE\T#;LW`*B%CL5g%<'YfEY)Q)fW.l(9Gargp*2mr6^,I"@>r=[X:f(u=n_SqPd_S/pO2W4kKs1WSi@,=<(TAi#]\O(20NSXA'9FYs?FoQLr8kJJEo7/D%qE*^lgTPEjQ:!jZ"Y77.+<>AD!HbZ.&?#lH34b9ohjtNDkHQSR1<=FGS:/6#Tn;_,"--(jS$QJR3*685]69L[>X2</[5CN`<3Rg%%Q`8GqJ0Ps_IbBKK/ilc5l#*&h(@8_"W;^nJi;Kb8((;gJ0F=3fOOok7")3/f][KC>?O@q[A1igA`?i0&h(-!o"ZOf;%(QII-Ku0:%R2Z.ao:n2r3(r(@ld@HmWib75qP04"#Lq6?Vl<51f4F5I_]E`ciL74;@=b4p]O(h]hm91WlL]Z"ge*h@'Lgc*kG]F;3lT4XA6KEK%W/@3`n//nc(<3+cj.<"%Bj)p;3?88'+espl203#M4Z.>,N"i(GWfY5iN5F0L:5Fo,S5SWP)$_bo2ThL0BG2D/)2GJVHNI\XOhVNS%02fY6#a80u.$Os.,H/^K&YL^_[]O/Lr$e6JT,<Ehcj'U]XFhIN9gs[e(d*$caOi@<5\7$S*_p]o"5,H0U5)CS^7bH\%fckM.edKs%(Wk/tg6iA@IFU)jcFlE=a?Dpf2c''#1d,f.jpE+?Aa%m.)F^\?jmmZr6;1g#)&5>K'l5&QR(BCTmbRiY\fBOji$LtK.PB>hdX0e>%)(/WgrX^!=#<Phm$l'!?mZlb2U,7@9L#sJcbsQ]:-Qt-&_=SdT1ZOfrZ=OkmU1_4[KU36=d?g'F;Gr@G?;'>WP\bj"O9Q%=jL/Mn%QTlE&QWGGo3k@P%'[8&Y7/;\UZc_U_K>T0nq"nd,T(>*V(G$=%;u/2Ce<MP:q5rgZYG_[ki0U>pP^bLt@/$[SY5?%'DgHGCWt*qA%_W37n%Uh]@5^CYT-Yn7<YE4Fa,I$ukHkB`TBI5QS!X$Q3$s.`tr#K"=D`U5`K5c4/\KZ-%%QdUTqK$s@*gg'g4pTA72J)-jn#@]]%jLi/Oj%u2DQmDjQ'rFTPgEEKq_8e.=P"l[0oW\NsO'H1p)G:Ff!hiJ6g>MEppXdsXh"7B)@TSopXI%-[)f)BPB4?7_a;JIIap"sK%p0e\I0CneV1/`\6qbp\CA2-)O(33rcgjW8jIW-=1g^r'R`Zre=Q-YBO?i`GaNEYGf%8r*1\8F2^HEK;am5LT(RDGp?<T$Oeq\XAK%[<XhSRLBc#QbSOgSu(nfi4)m[:.XK\b97]r44Ggl^ZA4#f?)EoXE=-h@Lr?r.7.*aS8dNJXE.8qdq)/b58GUL3*uAn&[`HF,e\N#%Z$Qlhjee0F#nRFg?p?-OQMb=MbjiZBG4'm,QBF>tPKRD=pfb'eP#(4sasD\>ID!%2J/S;G_N4rsO=jXkgH^/3l0jWteBoSi`ufR=%lXK^j`i!X>gM>uN6(0p>T%)e-c>KjYcM4a-CLM7:iEm3uH?3A4LFC<oM+-Sim'#bNC!m3,9.m\?&IBZ&'N(o_h_fJYRSIF54Kuck%rK@+BR!_VH$_b31]3X3h7sHL'_9^nS;_dRA^OhP#>EN#NL@:6m1AWV?B.W0!S0H+nFJ[pnH8]/or:-uba!"6Fj)m[_pPm0ib0EW&%;)X_8LO;U+9\6j3ALG2)La`0N5PlE(qscRo%oge4IoPL1%]i`%M7Vilo6)^W?tc@q6c&<@s8IprKdtDua-;C\k4*HFf7;Y5$9@+5%foOT2Np`B:<T7X@m^rB!n`6%W'P$?pcm`T-PWO:gYAdV.UP)/EGn0>E(#>M1MlXA,@gQPV?,Y/<6K9,ulOHhJD-V.IX,(71;:U:)%7$l<<%BD%^BNV$@a&6$)`^OJr3_iXYriX@Bg\.C"F0#C,Z1EuGaokDK2X1Q/W*bgB7E:UCoefNP!QdU9gr\jeVt5nf,ut6$T&n1O%CZR^S(FP7_obrr9U][pf.aX5W+7dL3+ntaB\puf5k&o!@b8aSr9?m^\Tfh]r*j7ZT(muFB7qi.`%l90[5Q9an3!_Im%d_gSpo`Lf%4;L@qF9/efR6aeB7KaZ)eJ-"IBK>nh;=SCV%:N4Q_B2_C(+UD(C5*StH?=s?I5c$OA/<:%_;tA8HpW?!b*3t\9rq),"U-:g"??<b%pRRSK_"AkKk<KKS0ptJPdF^QPCB_mXRcGS\[Eu:F?7([Fc/?\nSU(`bh"kD.!bZ"lE&!j/di!<peP9[N)WcJq*eTs4`+E$I3i9*b%;9o+_m$!@k"CFpEQ_Sm`9qK-2VE4<?!MF%)C+$F2lJHu.@kqbIg[L9@kj4.$f0("<U#M)G*k@J"VAVT*.MFp=<qji:dcS#=39+GI%o#d``W43+3c.-9ki(7G%:*jq)nd8m9=p=DN^Db?aBdtYsNj;j2R7/kf`aq!=ZBUrF@)SVR9nXSso:9BQ9ME_CMt>g2-lE)2<1L;3%^aJRUQjuJn("Y/\aTpiZmenpE"rMlVeXf-1lQqX.Ie_8)#`Ei-*_bHb<h:@FaaC(D%r`K(W,Ci->]@TpC=J6e-ps,7))(,+eV8!<%)X\Ic+=`c)ek>%j;NVeXQbIMi*nfr?"%.lWERgREqh`a.&UM=3?0=bHC69sQ.)9@44G-<UM.ufOQsjZ/F;&c+HFP#\?$E(3,00<A%(IbTlP/Kl8G-B1D2pl<Z7<BMA2+&BrB:Ect94ju6;S%IZ?2:;;1\eC7e3d16P92DKJ2\C;LQl7@?3Qe-]8B6HM!IN?X&iI]MO$r+%$sO&u@+U#[[`&s3<"ba)mI<ddAed$m`qRblfmL-%hCh[=._"kGnn$Soc]1Yu6L,&qKpe^522+":q7\>f+H5tcg[&'#VHLOY\9Ehg%<5KO8Qg?l^%u/gUY</_jH_7@ZAIKr$@/<b1%@hHb8jJ.ooTME0A>D:^1_G\jLf0p*E2"f9V3>ok0g*7P<Vt"o`C[bG(s3cuj-<8g%0VSkG5mf2\@Zk,&Qg/&o$O+P<Bq6RaZ.&=kG=M>]G"Tk21"D1'mFI3ZLig;X<o]XrEWa*81'u,F!]8,pFRK-qU-_aqJOIfZr11*n%+V!.6L>TV(icelE%MVD%.W>/pPXj"VgAY?9lNKO#9N-dh&@l/1%F+SX@O#OcdXEfP0TPPc9d5'UMItGt$0U\4nb>;sMTQqU0/sZ<%StK$u@jK(fHrsIC*>a&_7.H8Rm).IONh]Se'/><kSto't@,VU7glR**BN;4CiHh$AY)^qZ$)iCqOB;W;:B3'NI(b_qT5OYFp^^'8%/ec@$!#jEkm;aU#>R2+qAir\R\Ya8D):p>m/eu%\BHr=fAXo2?qpfpL)Ucl1a%7YM'=O_L9Ja*5:3ZrHU)Fq]-'LQ\1^9^dmYflH%,o)HtA4O,8ZIaCucp_1;jA>`";"C^b=!94D6bnLA5iGD8TqrL''re8Ao9/A)Ynf#Yc'\k:Bc")^@JUSu;A'I.jN]aI>YZF>@&bSq%de>=2.0(HC"TfY8pq^iokb7oR`V(L+/Y_84b:k=s0PZds&3j2eoC+i=lZli5bZ<RZ#r`_#on%e+:aSUZA\L$$P8+/`6IlWG7sq[`%]5U#lb_/JZk-Z"K$q2TCDhXe:EQDLM2TSs<mL-U,IYn=J5D-0Gm#8t/KEU#kaRT])7s2,r#8]7!;)Vje!i[%-^92Q$psOeJl.RW'%8H^=*NQ.r^%1HfWaeaC*1)I/Mc"NY?Sjh*6.=;4M-I#3s=g]>NHA5*(--Hh_N+%%jU6nilG$Pa@:,VlV#g*M7QE(l<&urVsSUk,W%.HtP_U8QP5BI"2f$oAhKNUTIJb7KIb)7.2,oSZo,pW5u"\MuR]^u!^E;3S0"^]o9IPF=H7,T)quRrfSo$/e>@8P[Lno1Vt9Jjsl.%)X)Jj#UCn/jg/6[4p6AA?-!f?a7\HtM-a8g_paVgU[Ac'JghhR_WU_EHr0G'L4G;,A]@(1*)TeiKYkK&Ra6;N1-jDpHPf4Ka3'H/%KN1HW?)BoaCcqe-dl\eDc6F;)Rus]VHpG3aYg(]4ZN:#/O:SY:.-3bDZf0E0Hj:W(#q)lrI06;i`@;2qmdB"_*:Xgn,[R&G>iE%Y%X?r!NBB,<'>;a-&$<ff.ESYoMG`$>lPjV1agL?`ZosS'CV0FVoZKUkQXbB53$/i*gFcf.gdc11oU=<`0Oq,?JD/nCCElo%@:?WTi%c#'\p("FNf+\bm<aA>FZdR>AVb)1l%jq6m8hAh&`]$N6*2V9$E&<Nqa)ki)eP(i5OMk4a!gk_Z(N%LtR[IQ/+@FWtf>&#8i*cdsZ%=,nK^rA%Ae:Ok@JEsj49A[utV&5Qc[aF`eJ-W<k-;<'iS3;D1tB!j+&(d;7F&I`KO.8t$CXl>WmW%WP5-%l0jnu@WVe3"JO,lg\L%^&2p'QV0t22,FgmmnJVnpdr"r2/ss'eZr-9(F'5-K`J?IGOB'6^"4jMZZMsT5!_3J_&aD:">R&/C`dU766m]bfHr\j$W'.<<qeuQ%Z.d^c!AJV*ARD(/!uf;&FKI8J_DmRR.iM+XaqOq;9Y81<[3`]Z9m*Z<+#k,IE,:QN"$6e`3\X,r=J`pE\32SO5Y.p7Q6ucuiH.@_%N\XH^W7i?`%h+ej'Yr?F8hs,.[RWSj1t%a::2gR+7j'us6R\-Jm3ebl;h,G-).GJYD9%Q(=1VE*$5$5r[Gl0"*TFK;'6Aq=[#b.N%Kaf:lACdPM%tVch%Bt\%hh8H_pMWX2ip-es4CaH\XVjVKHU9p5T8=%Nd)OGT7Nh/sM.^8)=-LP2&W=V'60abE#Y::D%)H-0dN^![%^H,>I"O9:f53=k4.B=7JT00p;^'[>KGQ^AfZ].A-1k?a2&`)Vn;O4_!J9nW">]rSV0h7u+TG))eLM)&OUJL4q-hfkn)`(Wt(niu7%52S!tf`Q64,7`N@RA\9M!cXhr"4koo.XJXA*AQ='pUYtrWF"un7_*fL3m>KBW^_c/Sa;ZN:gCP'9SRg1QZM194Y(RlQ=K?9e0EWF%r<ch+DYB,\^`'eV/k&Msb(U@%T&P[l(Cb@1q4.i<W5F\Jb[b4+hTi4J:3`N&-aOK[b\f2$fcH\sY8rU3DG]d\F^S2P#l(9n<_7G_%,Z4f"!lO&NB`hAK`_1-G;Xe8gfG\6H5XRq%^+YZf.!%\P?A!;mBb+TdncX<,@Pn<n<'tLk@NUS[&*8nEp9ZUlAesrNF=T"7i0d,W%bT+CCdO_eOo[%S1bjG?4VFV2VZU$?&hT?7Xh[I<U\4/c7a[9UU47f=OY,CJqmVp-h=4L^2(j&A'5>CoH@e0Re4'./of."RP_C&2#%Npr3"FM,LK/cUVX\#_J`pBY&kaCgo\"sIlVdZuYXr?U17<keXbKjB;OL18US`:/1l0C[0U_EcWn[6YC%"&jJ)U^8a2nM3]S!PC23%!?6ngIpIu"P#E2c2!:0m!/d^8^G^.GUK-BWATCrp#4X."$Sb;Q/n".^q+JYm`VZd\d;./ACDNbb6DK?ATOGHm5&'iJan8'H4VdTt%*bT1E%D!Ijpe<\aGW>lfBF"W8p>">)nu#qC3\/h10%9s3OfJo,K!@BO2t`n17jlOZI/+M^0/Lp8e]Z1PL*3oF_T[<F^1HG/h9<Ne%h^R"aTf.Q2*R'_;n^FIa&7dl52pD_.EIYCR\!h:m27En5FY`S"4Hq3kM'H7s*m]WC?u#g2e5sqLTj]f)!RHC(eE?T)qKNQ:^cA^&%$Y2ic'QM]HPdqmCnc;"KoUAg`6FC6biu;WB!9T,$(t47LlId\>4eqk@h4#28!O\ZaF'MDT%q1]]3C.p8_pH$X8M8)P(iVEhD_D.$%#RW#tcB/.2_qeF<O-)B3&q"]6=o+Ml+AP3bJ2cpGd:[q"DXCm4r.u.cZ?W5[B",Pr[;lck5QlbdnGCOr@f[0]IgNI(BNaO#%FH$b%!KSkP5Ls:Rp-&W.4(CQ4hq*:QRr)G--@)DchsM='m_U/"j4Yrln,O+L>]:F<K\:a#4lt@!5b[?#1,/e2$A=X03toC?pJCJ''rTn3%>_oB"^jJ)Y;FXt[Ar-Yt`69PS*hWBUn[VD7UdJ'Z[U(Mb742q[0nci?maY5V^!',#+eKY#]Ut:6]V;!]@[]_^+hX!G$\KnVdo6d[%q.>($g'=>-SS[e(0*c"!8U]H$(I\Hr"^&RN0m&C`/2ra[C4bBZ\s0\E@&gk*"ecXLBoZ_2W]NqbTLo)^o2p;*KIIepe7!_(^";(U%7LB`iG4'%c"_HUB'CZP^e?K]*T/F0mPi?[nI&ATJPb/NE(B0R)ntmhCKi`973*q2.c:Gr5MGWo0h-?9^/UO[,`Y,!?o2)6IN.#-7%p.2bRh.eV@]\^Pad@'!\:6N"Ja"#[SQpuC_\=TpiQ,fti2c9LeWBa$n_U,tW(gH?BfT'b`#]nXHZ0Vui5^)5:W7VEi@U<#0bHCJ,%Nc;@QG8%Hnlq^5p^UifjgL,07+5"9M`k!&.JB&rVD6#BB"Sm;WDH@'V>@oBUdhf,7Lt]9O4^b:\S"Llr[)0a)>=&(IUP6PQmu4Tn%XU*;n95?g%T0!WO4G$YD+l]VU5p;C5>R[sk<YUt!,b0%AfeX@>o;P8XUF%TjS+<4+$mc&m.`Eunq].V53`.As=iFC:$ai#f3HV^&%*uJ5OA2qHK96;0FadnlE)m&k-<&[J4J2bM^'bd?FVIqWS2d1Pe$h2NJAuL[e]3pDF=TA`GW>9")2G]:V9)j;[8tpuVXs4l"P$kUB%nkf7^,LD!I^dD!n)@UCl]Rdd&%>HI'#l-RM%"]Y(mRSIZ7`]`YMX]<qr3]+2,(-b"o!.qX=Ji&"-VDr+ek;):Rs5e,1bsYKE4_c/%c8SL(5\!6aA&bj?^I,e4l5<1:'OZM5?H.5q?josp3gWqV3]e([W1C,Jq66Wb$n[.7`Kd=Dhgosm36Q0i4M9[L++KN<_:>Z!&h8?(%eW'?;9CYi8=M1+a$A&B/=<&pJ_"5=G'^K%5%2TusO8FnrmWqLd`.L![34`klBgBI[7W>iBjhVeN_b]DtFgR9E!u],q<EqAU8tM@$%,Mu$JcSA9M;1>"%JW/\B37/JZAJg%C\Hp0E!#e[CBR"0LD+5ZaWru4B/=0T`_KSLm0&fYb!nKD,<NI5IiATXg-\]]@*>bWg=3V40%l5Q-]h8V#j*^cTI(q4Nd#!id+jq%j+D*ag2NTF^Tq.%):O=F(;S>.@:J/f->&iW>48g%DT-BS@)Ei^NiTHsB.-S9Aj-'e#s#[bBF%*4`.)OM'B,Mb>6%Rc"C0.TF8Ae8Xo`dE)U"bZXr+Eoc)HoIAqf8k](VF0lKRZ^$W,Asla\pY,kKfM[,Ib.PmT]jgI:Q':']?[6'(%S2%(W`;p+p/rX6bS]a@Gdt's+rlZVS4;I;d(8Kuq*cC7[rT>BYb'.Hg\D&l0E=`i&Eq![N3:0$7,+qeB?$I(YHuR5;;M)1q9StZF%M'Y@bmO4Mii<5=N+&-<;oC'LTkfqQ!,YX4;Ed*pmVFC:`,lbS#N2f1Ql(FHZ;q#!2>."2AgqM[[1*W[4AK7IHiZZ3"b)(MWnjtgG%'!P1)dU<s3"Mf6<\66)i^,"YWP\GZfh6Wf4*o5pm:3_jI@jTe?99R?n3$'-hkUMgE=eF$tW@D*002Ld,%tF3KYQ+1_fB_<XIJD8U%N.:`r0E;%Jnc(e$ro&X1%j1f8j3O@sq=DZ,\paGQo^cuCs6%l&a'X;kp%ON^J,8X2J"D/hr9:]JJ,T<0q7$D%om^D\5E\82nDV^n%q"ISa%gE@W6N~>%AI9_PrivateDataEnd