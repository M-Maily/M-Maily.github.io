%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: UoE_Horizontal Logo_282.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: Marc Wright
%%CreationDate: 02/12/2014
%%BoundingBox: 0 0 530 86
%%HiResBoundingBox: 0 0 529.4119 85.1377
%%CropBox: 0 0 529.4119 85.1377
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 282 C)
%%CMYKCustomColor: 1 0.8712 0.4217 0.5183 (PANTONE 282 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2ColUncoated</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-12-02T15:14:43Z</xmp:MetadataDate>
         <xmp:ModifyDate>2014-12-02T15:14:43Z</xmp:ModifyDate>
         <xmp:CreateDate>2014-12-02T15:14:43Z</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>44</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgALAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9QXWpafa3Fvb3NwkU92x&#xA;S2jYgM5WlaD6QK+JA6kYaV47+Z3ne90fU9R0nW79pLa4WOSys9J5veosU6zROsULI6842aKb1pVU&#xA;8VZK1ZVuxxvkwkaYJL+Z1vPp7ac/l+8ktja6daR3XOOG4VdLneaCUKttRZOMnA7022ArlnB5otkO&#xA;k/mpeNd6rJ5eEsesajNaxaLoV8HgtoLeFVjlEMAZ0mYpAiBYm9RuRbio2yJx96eJ7lovmTRtaa5T&#xA;TbgXJsyqXEkauYebioEcxVUk+aE/jmOYkM0zwK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq8G/N3zDqS21zqt/p9tdaVM0S+VLoqsjNNLVaRzoYpPTkjQySw&#xA;yRMGFVDUpmRjiwkXzLq2t60dZup7y4e5upJme5nmFZJm5GpdiA3t7dMyxEU4xkQU21HVvLVxr9vc&#xA;wfWItAl9OS5jaOCS6g+EetDGeKxseQ+CTiNiCRUZEA15sjIX5JFd6m15fzPbI1ra8pZbe2ViTGAC&#xA;61cBeTAivLx8MmBTHisvpb8rPM3mPVtKmmt4vrev+XKev9auI7O1jt6cvWeNVX1bi7iV4WklB4le&#xA;XJa0zEyRA9xcmJfQFtcQXNvFc28glgnRZIZVNVZHHJWB8CDmMzSXXPPnlDQb02WsapDY3QhS4Mcx&#xA;I/dSO0aPWlKF42HXJCBPJFoWL8z/ACDLIkaa1b85Z/qsankC03FW9NaqKni6nbD4cu5bCMvfO/lK&#xA;x1C70671SCG+sYfrN5bsTyih4hvUcU2Wh64BAra7RfOvlXW7r6rpOpQ3lwYjcCOMmpiUqpcVAqoM&#xA;i/fiYkc1tWh80eX5tZudEivo31azT1bqyUkyRoQCGYU2BDCmDhNWm0BD+Y/kWaK0mj1u1MN9cNZ2&#xA;kheiyXCceUSsaDkPUXbDwHuRYRuo+bPLmm3zWF9fxW94lu940Lk8hbxgl5en2V4mpxESU2hbP8wf&#xA;Jd5c6fbWur281xqql9NjViTOqsysY9viAKGuJgUWFl3+Y/ka0luIrnWbeKS1uPqVwrMfguTWkR2+&#xA;38J2xECthpvzI8irAs51m3ETzraqxJ3nZQyx0pXkwOw74eAraYw+Z/Lk2kvq8Op20ulxGkl4kqNG&#xA;rVA4MwOzVYDj1qaZHhN0lAf8rE8lCyivW1eBLaa4+pRu/JSbmgb0SrAMJKMPhIrh4Ci0O/5qfl6k&#xA;jRvrlusiNKhjPPlygYrIAvGp4kb0w+HLuWwiLD8xPJN+0q2esQTNBafpCZVJ5JalBJ6zAgELwYHA&#xA;YELYTnTNT0/VLCHUNPnW5srlecE6bq61pVT4YCKSgtU816Dpeo2um3lwy3t20SwwxwzTU9eUQRNI&#xA;YkdYleVuIZyFr3xESUWgr/8AMXyRp95dWV7rFvBdWRpdxOTWLbl8e222+EQJW1S58/eTbW9urG51&#xA;e3hubFlW9R2KiEvuvqsRxQHxY0x4Ctoi983+WbKXTornUoEfVyBpfx8hcE0p6RWob7Q6YiJW2tP8&#xA;4+V9R0271Ow1OC5sbAut7PG3IRNGOThwN1IHtiYkLaC/5WV5CDRB9ctI/WiW4jaSTgphY8VkLNRQ&#xA;hO3ImmHgPcthHx+a/LcutrocWowvqzxC4SzVquYWXkJBTYqR3wcJq1tAf8rK8ifV5Lj9NW3oxXAs&#xA;pJORoty1aQnb7fwn4cPAe5bCaWXmPQL7TJNUtNRtp9OhDGe7SVDFHwHJxI1aIVB+INSnfImJTaW2&#xA;35j+R7l5Ug1m3doYHunFSP8AR4xV5lqByjA/aWow8BRYVJfPvk6LRrbWpNWgXSb2T0bS9LH05JNw&#xA;FQ03J4mmPAbpbDxD/nIPQ9I8vp5ZXS9Kt7JZpLtZYY1UpKYAkcDysSlW9ORjyY133J65fhJNsJMT&#xA;i0jyFefkDdal5iI0/VoNTvP0JJCqmdpmCN6ASvxRn9rei9a+Nly49mBA4d0CZ/LTWFqqJAxXTL30&#xA;0aFSSzsjR8CJ1noE+yQAlQRwYF2Luy2RnlPRvII/5x/82appsn1nzU0UcepiYAS28ZuY+EcS7/u2&#xA;ArzH2j1pSgZGXGAeTCIHCaTf8irGx1rzRqNvqOl2t5EdKeVdOkEXoyTpKohDgNKvLi79V2rXttHK&#xA;aDZHd9QWdpBZ2kFpbqUt7eNYoUJLEIihVHJiWOw6k5iFsYB+fQtIvyw1uVgiXFwLOIOaB5BHdo6o&#xA;D1biC7Adtz45Zi+oMZckJ+b81is/kmWxuLS3vbvzFaXMd3IgkRo47aZPWfg8RkRfUjH2x1G+HH19&#xA;yJdEj1y9ltvzC83LrGo2c9wnk1oWe3ha1QN6s0giKSTXLNJxkDbN0YbeMgPSK716lkH5X62XtfLV&#xA;nca9p99z0WOO20uztytxC0ccLMZ5PVuCOKrxavpgt+zXpGY57dUxWy6rpfl3859XvdbuotOs9U0a&#xA;0+pXVwwjike3llEkYdqL6gBB49aY1cNu9erGNDj8oa55C8taNqzxCxvPMWrw3VvKfRkVpBqLRHi3&#xA;FldfXgKmnwkr7ZM2JEjuH6GI5JzpVz5g0zUNS0TzTWeXQdEvxa+Y3AVb2wmeD0Gkb/f0fpMsg8aH&#xA;flXImjuOpZDzSa3gkh/JHyV5u05TNqfk1YL1kiJMjWw/c39uaHblCxLA/wAuS/jI72P8IPcmPnm2&#xA;n0zyX5VkvJYbHWb/AMzafqt89wKpFPNcmeUyLzjLR2wYIfjHwr1HXBDcn3JlyQ3nrXElsNOWXzBp&#xA;uo36ebdImS+toPTtoYV4MBIBK3MRFWd/35IUirLUAMB5dCskFb/o+20zzd5Z85alLovma81u3v31&#xA;W2ZY4A0ssTWV9aqxULEjwp6tWJU/aatKHuI5Uiudqk/mO6ufL+iP5hksXvbbznYxPrVmES31BbcJ&#xA;W9FKD4Uojt9kcaVpsHh3Ndyb72X+aJNOtfzd8gWsbRQcLfWf3K8V4mdIOFVHT1GR+P8AMQchH6T8&#xA;EnmEv/NXR/L8PmTycy3P6Nm1C5Gh38FuREtxpEsbs8EiqP7oSpGg6U5mnscZNFEuYTr8yvNuoeX0&#xA;sNM0mSOxmvLa8lt5jD6zF7RE9C0toqhXmnklVVWh+ENQdxGEb3LIlDfljFrt55m8065q12JJ2ez0&#xA;ya2REWNJrW1SeVUYfFximvJI1333J3wzqgAgc0hvtZ+r+f8Az/8AV/MGm6On1fTVnN9D67SGO3k5&#xA;rFWVFqoPFh6cnUbdjIDYbL1TDy75p8s235oee7y81K2trWe00YxvcSLFz9OCcuAr8WLKHXktKitD&#xA;glE8I+KBzLDdIT6hd+SvXRrDTbnzZqV7oFnc/u3h0uaNxB+7ejRIzvVVP8w8cmevuQOnvTOfT7m0&#xA;sNY87+TZFvrn65q1r5p0i3IkF5aNfXDRTIFP+9EMUivGf2k29iL6FPmED5ilV9RsbGHXLbQ5pPIg&#xA;gnmuY1kDB3T/AEejMvF3WpWlWpuFOEe7+JSmvk/V7PR/MnlHWNcT/D+mXnk+LTbZ79+CLPbXCP6T&#xA;zPxAZoqOvOhPzyMhYIG+6g8mN6jrGnXHkjzFJb3Uam58+Lc2xkBB9JriGRZTGxR+HBGappsDvkwN&#xA;x/VQeXxX6nJq2nya9Z61A13q7eYNO1zXbe0X/Rb/AEOEr++s7cVLKnpqZkJc7VYkVoijVd32qzLz&#xA;D+Y2h6l5visLB9M1KyTRL+9/S8c5kmtomQLLGVSqgyFU2Y126dMrjAgfFlxbsdN7PD+VH5fz32qa&#xA;c+iR3ugrJapZyRzJ9XmiM6yStcyKTEEf1D6Irv0rk/4j8WP8I+C/8zfJOpTR3mm6HZarf6nBdPq0&#xA;F/JGgt2ZY+c8KMoAkeZLhgX47sscY5cTxEJ96ZB81JpnmDzJr9roumwS3d1cOVs7JAQqs396QCFC&#xA;AMp5sQOm/TMuwBbjEEmk21rQ10DULzyFdWem3Gr/AFuJTrwmdWhegHphy6xLGOTBg617mlBSIN+p&#xA;JFelLtZ8t+YvJ/mLUNB1YPZ3KQypcCNiI5oeJdCG6PG7KpHv7jJCQkLCKINPZ/IvlYSWdpB5iebT&#xA;9S80SW8mhN6NvLSKEyCCsDFZyjFmeQw8CimMswBNMecu7o5AfTllax2dnBaRlmjt40iQuxZiqKFH&#xA;JmJYnbqTmIWxWxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoDWbbWriGEaRfxWE8cyvK89ubpJIg&#xA;CGiKCWArUkHkG2phFdVUPLPl+PQ9Oe29U3Nzc3E15fXRUJ6tzcyGSRwgJ4rU8VWpooAqeuMjaAm2&#xA;BLsVdirsVdirsVdirsVdirsVQmrJqj6ZdLpUkUWpGNhaSXCs0SyU+EuFINK+GEeavnnzJ+VUNz5p&#xA;0rSBcXVt5nuoFOo60qv6EszQTSyO8QSKORI/QRHnWVTyccg7cqZMcm3k1mO7C0/JnW9T1rTIZNZ0&#xA;5r3XoI9QtIbn62bmWORXZHZltZY/sxsWq/Idz0rPxQAx4N2ReTfyztJLay8yxQXHm2WC6MEumzq6&#xA;pBcwsjmGWJndmLxkhJpHCI3HnHxJZYyydOSRF9AeTvKlz5fS9WXVbvUYbmYy2sN2/MwRt8XAtVi7&#xA;8i1XruKd6s2NKVtgDI8il2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KqV19W+rTfW+H1Xg3r+rT0/ToeXPltxp1riqTRf4M/Sen+j9U+vejB+ivT409H0rj&#xA;0PQ4/BT0frHHj+zy7ZLdCY6T+hfq8n6I+rfVvVk9X6p6fD1q/vOXp7c+X2u/jgN9Uo3ArsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:ef438c27-4596-4645-b709-2925b0e68ef5</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:ef438c27-4596-4645-b709-2925b0e68ef5</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:4bc17f29-e522-4228-a766-1c131e8551c8</stRef:instanceID>
            <stRef:documentID>xmp.did:4bc17f29-e522-4228-a766-1c131e8551c8</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:07+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:18:29-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T12:59:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:02:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:47-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:30:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FEE440664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:22:44+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F85BBCD703EDD11A8D1DFE8FDCD79D1</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:30:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:676AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:43:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:81784906200A11689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T06:08:19-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:07:10+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:11+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8661C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8761C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39:19+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811AFA6A99C165E9A27</stEvt:instanceID>
                  <stEvt:when>2009-11-12T11:05:09Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0f67131-f09a-4a71-ba1b-8cda4a15bda1</stEvt:instanceID>
                  <stEvt:when>2014-10-06T09:15:35+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d8389546-5e54-42ff-b69b-d2e8eff724d7</stEvt:instanceID>
                  <stEvt:when>2014-11-05T15:54:52Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4bc17f29-e522-4228-a766-1c131e8551c8</stEvt:instanceID>
                  <stEvt:when>2014-11-05T16:00:29Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ef438c27-4596-4645-b709-2925b0e68ef5</stEvt:instanceID>
                  <stEvt:when>2014-12-02T15:14:43Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>296.999935</stDim:w>
            <stDim:h>60.000478</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 282 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>87.112230</xmpG:magenta>
                           <xmpG:yellow>42.169830</xmpG:yellow>
                           <xmpG:black>51.827264</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -85.1376 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 85.1376 li
529.412 85.1376 li
529.412 0 li
cp
clp
117.788 31.6816 mo
115.01 31.6816 li
115.01 45.7612 li
115.01 46.8649 115.144 47.6103 115.415 47.9954 cv
115.686 48.3806 116.211 48.5736 116.992 48.5736 cv
116.992 49.1043 li
110.513 49.1043 li
110.513 48.5736 li
111.319 48.5736 111.866 48.3527 112.156 47.9098 cv
112.445 47.4668 112.59 46.7193 112.59 45.6673 cv
112.59 31.6816 li
109.935 31.6816 li
108.665 31.6816 107.742 31.885 107.164 32.2907 cv
106.587 32.6965 106.262 33.3676 106.188 34.305 cv
105.642 34.305 li
105.642 30.105 li
106.188 30.105 li
106.678 30.5634 107.594 30.7916 108.937 30.7916 cv
118.538 30.7916 li
119.921 30.7916 120.89 30.5634 121.441 30.105 cv
122.019 30.105 li
122.019 34.305 li
121.66 34.305 li
121.431 33.2953 121.022 32.6056 120.434 32.236 cv
119.846 31.8664 118.964 31.6816 117.788 31.6816 cv
cp
false sop
/0 
<<
/Name (PANTONE 282 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .871122 .421698 .518273 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
138.729 45.6642 mo
138.729 40.346 li
128.754 40.346 li
128.754 45.6642 li
128.754 46.7482 128.907 47.505 129.214 47.9325 cv
129.521 48.3599 130.075 48.5736 130.876 48.5736 cv
130.876 49.1043 li
124.257 49.1043 li
124.257 48.5736 li
125.059 48.5736 125.605 48.3578 125.897 47.9252 cv
126.188 47.4926 126.334 46.74 126.334 45.6673 cv
126.334 34.2452 li
126.334 33.1198 126.185 32.3516 125.889 31.9407 cv
125.592 31.5288 125.048 31.3233 124.257 31.3233 cv
124.257 30.7916 li
130.876 30.7916 li
130.876 31.3233 li
130.075 31.3233 129.521 31.5443 129.214 31.9861 cv
128.907 32.4291 128.754 33.1807 128.754 34.2421 cv
128.754 39.456 li
138.729 39.456 li
138.729 34.2421 li
138.729 33.1177 138.586 32.3506 138.3 31.9397 cv
138.014 31.5288 137.475 31.3233 136.684 31.3233 cv
136.684 30.7916 li
143.241 30.7916 li
143.241 31.3233 li
142.461 31.3233 141.919 31.537 141.617 31.9634 cv
141.316 32.3909 141.165 33.1508 141.165 34.2452 cv
141.165 45.6673 li
141.165 46.7606 141.316 47.5185 141.617 47.9407 cv
141.919 48.363 142.461 48.5736 143.241 48.5736 cv
143.241 49.1043 li
136.684 49.1043 li
136.684 48.5736 li
137.496 48.5736 138.04 48.363 138.315 47.9397 cv
138.591 47.5174 138.729 46.7596 138.729 45.6642 cv
cp
f
157.535 37.7235 mo
158.081 37.7235 li
158.081 42.1724 li
157.535 42.1724 li
157.336 41.3918 157.098 40.9035 156.817 40.7053 cv
156.535 40.5081 155.921 40.4089 154.974 40.4089 cv
150.431 40.4089 li
150.431 46.9651 li
150.431 47.4235 150.532 47.7466 150.736 47.9335 cv
150.939 48.1204 151.285 48.2143 151.775 48.2143 cv
154.974 48.2143 li
156.119 48.2143 156.91 48.1524 157.348 48.0275 cv
157.784 47.9025 158.154 47.6702 158.456 47.3326 cv
158.757 46.994 159.08 46.4457 159.424 45.6858 cv
159.97 45.6858 li
159.127 49.1043 li
145.935 49.1043 li
145.935 48.5736 li
146.758 48.5736 147.309 48.363 147.59 47.9407 cv
147.871 47.5185 148.011 46.771 148.011 45.6982 cv
148.011 34.2452 li
148.011 33.1301 147.866 32.3651 147.574 31.9479 cv
147.283 31.5319 146.737 31.3233 145.935 31.3233 cv
145.935 30.7916 li
159.127 30.7916 li
159.127 33.8518 li
158.784 33.8518 li
158.596 32.9773 158.329 32.3981 157.98 32.1111 cv
157.631 31.8251 156.874 31.6816 155.708 31.6816 cv
150.431 31.6816 li
150.431 39.519 li
155.552 39.519 li
156.249 39.519 156.725 39.394 156.98 39.1442 cv
157.235 38.8943 157.42 38.4215 157.535 37.7235 cv
cp
f
183.615 45.2636 mo
183.615 34.2421 li
183.615 33.1704 183.471 32.4239 183.185 32.0016 cv
182.898 31.5804 182.391 31.3543 181.662 31.3233 cv
181.662 30.7916 li
188.125 30.7916 li
188.125 31.3233 li
187.345 31.3233 186.804 31.537 186.502 31.9634 cv
186.2 32.3909 186.049 33.1508 186.049 34.2452 cv
186.049 45.6673 li
186.049 46.74 186.198 47.4926 186.494 47.9252 cv
186.791 48.3578 187.334 48.5736 188.125 48.5736 cv
188.125 49.1043 li
183.615 49.1043 li
183.615 46.5438 li
181.896 48.553 179.862 49.5565 177.51 49.5565 cv
175.574 49.5565 174.052 48.9794 172.944 47.8241 cv
171.835 46.6687 171.281 45.1448 171.281 43.2503 cv
171.281 34.2421 li
171.281 33.1497 171.138 32.3898 170.851 31.9634 cv
170.565 31.536 170.016 31.3233 169.204 31.3233 cv
169.204 30.7916 li
175.824 30.7916 li
175.824 31.3233 li
175.002 31.3233 174.445 31.5308 174.153 31.9469 cv
173.862 32.364 173.716 33.1177 173.716 34.2111 cv
173.716 43.4846 li
173.716 44.9827 174.127 46.1618 174.95 47.0198 cv
175.772 47.8788 176.917 48.3083 178.384 48.3083 cv
180.559 48.3083 182.302 47.2934 183.615 45.2636 cv
cp
f
204.57 31.3233 mo
204.57 30.7916 li
210.096 30.7916 li
210.096 31.3233 li
209.211 31.3233 208.598 31.5308 208.254 31.9469 cv
207.911 32.364 207.739 33.1177 207.739 34.2111 cv
207.739 49.1043 li
207.178 49.1043 li
194.204 33.1807 li
194.204 46.042 li
194.204 46.9485 194.388 47.5969 194.758 47.9872 cv
195.127 48.3785 195.744 48.5736 196.608 48.5736 cv
196.608 49.1043 li
191.05 49.1043 li
191.05 48.5736 li
191.935 48.5736 192.534 48.3413 192.846 47.8788 cv
193.158 47.4152 193.314 46.5996 193.314 45.4329 cv
193.314 34.7139 li
193.314 33.5575 193.104 32.7264 192.682 32.2215 cv
192.26 31.7167 191.565 31.4173 190.598 31.3233 cv
190.598 30.7916 li
195.298 30.7916 li
206.802 45.0457 li
206.802 34.336 li
206.802 33.2117 206.643 32.4291 206.327 31.9861 cv
206.009 31.5443 205.423 31.3233 204.57 31.3233 cv
cp
f
219.292 30.7916 mo
219.292 31.3233 li
218.512 31.3233 217.97 31.537 217.668 31.9634 cv
217.367 32.3909 217.216 33.1508 217.216 34.2452 cv
217.216 45.6673 li
217.216 46.7606 217.367 47.5185 217.668 47.9407 cv
217.97 48.363 218.512 48.5736 219.292 48.5736 cv
219.292 49.1043 li
212.704 49.1043 li
212.704 48.5736 li
213.505 48.5736 214.051 48.3651 214.343 47.949 cv
214.634 47.5319 214.78 46.771 214.78 45.6673 cv
214.78 34.2452 li
214.78 33.1198 214.637 32.3516 214.351 31.9407 cv
214.064 31.5288 213.516 31.3233 212.704 31.3233 cv
212.704 30.7916 li
219.292 30.7916 li
cp
f
239.48 30.7916 mo
239.48 31.3543 li
238.137 31.3543 237.027 32.5406 236.152 34.9132 cv
230.748 49.3542 li
230.229 49.3542 li
224.558 34.4919 li
224.027 33.1177 223.569 32.2515 223.183 31.8922 cv
222.797 31.5339 222.246 31.344 221.527 31.3233 cv
221.527 30.7916 li
228.177 30.7916 li
228.177 31.3233 li
227.109 31.3233 226.575 31.7342 226.575 32.5561 cv
226.575 32.8266 226.642 33.1332 226.777 33.477 cv
231.26 45.2956 li
235.514 33.8838 li
235.691 33.3944 235.779 32.9732 235.779 32.619 cv
235.779 31.7549 235.233 31.3233 234.141 31.3233 cv
234.141 30.7916 li
239.48 30.7916 li
cp
f
252.897 37.7235 mo
253.443 37.7235 li
253.443 42.1724 li
252.897 42.1724 li
252.698 41.3918 252.46 40.9035 252.179 40.7053 cv
251.897 40.5081 251.283 40.4089 250.336 40.4089 cv
245.793 40.4089 li
245.793 46.9651 li
245.793 47.4235 245.894 47.7466 246.098 47.9335 cv
246.301 48.1204 246.647 48.2143 247.137 48.2143 cv
250.336 48.2143 li
251.481 48.2143 252.272 48.1524 252.71 48.0275 cv
253.146 47.9025 253.516 47.6702 253.818 47.3326 cv
254.119 46.994 254.442 46.4457 254.786 45.6858 cv
255.332 45.6858 li
254.489 49.1043 li
241.297 49.1043 li
241.297 48.5736 li
242.12 48.5736 242.671 48.363 242.952 47.9407 cv
243.233 47.5185 243.373 46.771 243.373 45.6982 cv
243.373 34.2452 li
243.373 33.1301 243.228 32.3651 242.936 31.9479 cv
242.645 31.5319 242.099 31.3233 241.297 31.3233 cv
241.297 30.7916 li
254.489 30.7916 li
254.489 33.8518 li
254.146 33.8518 li
253.958 32.9773 253.691 32.3981 253.342 32.1111 cv
252.993 31.8251 252.236 31.6816 251.07 31.6816 cv
245.793 31.6816 li
245.793 39.519 li
250.914 39.519 li
251.611 39.519 252.087 39.394 252.342 39.1442 cv
252.597 38.8943 252.782 38.4215 252.897 37.7235 cv
cp
f
264.134 31.4947 mo
262.214 31.4947 li
262.214 39.8628 li
264.462 39.8628 li
265.804 39.8628 266.859 39.4777 267.624 38.7075 cv
268.388 37.9372 268.771 36.9172 268.771 35.6472 cv
268.771 34.4083 268.346 33.4068 267.499 32.6418 cv
266.65 31.8767 265.529 31.4947 264.134 31.4947 cv
cp
263.697 40.6268 mo
262.214 40.6268 li
262.214 45.6642 li
262.214 46.7482 262.367 47.505 262.674 47.9325 cv
262.981 48.3599 263.525 48.5736 264.305 48.5736 cv
264.305 49.1043 li
257.717 49.1043 li
257.717 48.5736 li
258.53 48.5736 259.078 48.3599 259.365 47.9325 cv
259.651 47.5061 259.793 46.7503 259.793 45.6673 cv
259.793 34.1822 li
259.793 33.0991 259.653 32.3516 259.372 31.9407 cv
259.091 31.5288 258.54 31.3233 257.717 31.3233 cv
257.717 30.7916 li
265.226 30.7916 li
267.079 30.7916 268.56 31.2428 269.668 32.142 cv
270.777 33.0423 271.331 34.1904 271.331 35.5853 cv
271.331 37.833 270.072 39.3311 267.552 40.0806 cv
268.106 40.4348 268.646 40.921 269.173 41.5405 cv
269.7 42.159 270.391 43.1883 271.244 44.6265 cv
272.204 46.2227 272.952 47.2686 273.491 47.7652 cv
274.03 48.2629 274.591 48.5313 275.171 48.5736 cv
275.171 49.1043 li
271.424 49.1043 li
270.654 48.1772 269.723 46.8164 268.63 45.023 cv
267.465 43.1357 266.551 41.9308 265.89 41.4094 cv
265.229 40.888 264.498 40.6268 263.697 40.6268 cv
cp
f
286.01 30.5262 mo
286.525 30.5262 li
286.525 34.8202 li
285.979 34.8202 li
285.854 33.6329 285.424 32.7068 284.69 32.0409 cv
283.957 31.3749 283.033 31.0414 281.919 31.0414 cv
280.931 31.0414 280.134 31.2913 279.531 31.791 cv
278.927 32.2907 278.625 32.9567 278.625 33.7898 cv
278.625 34.5601 278.875 35.2621 279.375 35.8971 cv
279.875 36.5321 280.957 37.3487 282.622 38.3482 cv
284.558 39.5035 285.859 40.5132 286.525 41.3764 cv
287.191 42.2405 287.524 43.2296 287.524 44.3426 cv
287.524 45.7788 287.014 47.0074 285.996 48.0275 cv
284.978 49.0475 283.752 49.5565 282.318 49.5565 cv
281.486 49.5565 280.426 49.3284 279.138 48.8699 cv
278.608 48.6831 278.27 48.5891 278.125 48.5891 cv
277.823 48.5891 277.59 48.8235 277.424 49.2912 cv
276.877 49.2912 li
276.877 44.3426 li
277.424 44.3426 li
277.434 45.7065 277.878 46.7988 278.756 47.6217 cv
279.633 48.4435 280.659 48.8545 281.832 48.8545 cv
282.944 48.8545 283.835 48.5581 284.505 47.9634 cv
285.174 47.3698 285.51 46.5789 285.51 45.5888 cv
285.51 44.8495 285.234 44.1413 284.684 43.464 cv
284.134 42.7877 282.982 41.9143 281.232 40.8457 cv
279.805 39.965 278.852 39.2691 278.374 38.758 cv
277.896 38.248 277.542 37.6884 277.313 37.0793 cv
277.085 36.4701 276.97 35.8011 276.97 35.0722 cv
276.97 33.667 277.431 32.5261 278.352 31.6516 cv
279.273 30.7771 280.473 30.3394 281.951 30.3394 cv
282.763 30.3394 283.647 30.5004 284.604 30.8236 cv
285.052 30.9692 285.364 31.0414 285.541 31.0414 cv
285.686 31.0414 285.786 31.0105 285.838 30.9485 cv
285.89 30.8855 285.947 30.7451 286.01 30.5262 cv
cp
f
297.171 30.7916 mo
297.171 31.3233 li
296.39 31.3233 295.848 31.537 295.546 31.9634 cv
295.245 32.3909 295.094 33.1508 295.094 34.2452 cv
295.094 45.6673 li
295.094 46.7606 295.245 47.5185 295.546 47.9407 cv
295.848 48.363 296.39 48.5736 297.171 48.5736 cv
297.171 49.1043 li
290.582 49.1043 li
290.582 48.5736 li
291.384 48.5736 291.93 48.3651 292.221 47.949 cv
292.512 47.5319 292.659 46.771 292.659 45.6673 cv
292.659 34.2452 li
292.659 33.1198 292.515 32.3516 292.229 31.9407 cv
291.942 31.5288 291.394 31.3233 290.582 31.3233 cv
290.582 30.7916 li
297.171 30.7916 li
cp
f
311.719 31.6816 mo
308.941 31.6816 li
308.941 45.7612 li
308.941 46.8649 309.075 47.6103 309.346 47.9954 cv
309.617 48.3806 310.142 48.5736 310.923 48.5736 cv
310.923 49.1043 li
304.444 49.1043 li
304.444 48.5736 li
305.25 48.5736 305.797 48.3527 306.087 47.9098 cv
306.376 47.4668 306.52 46.7193 306.52 45.6673 cv
306.52 31.6816 li
303.866 31.6816 li
302.596 31.6816 301.673 31.885 301.095 32.2907 cv
300.518 32.6965 300.193 33.3676 300.119 34.305 cv
299.573 34.305 li
299.573 30.105 li
300.119 30.105 li
300.609 30.5634 301.524 30.7916 302.868 30.7916 cv
312.468 30.7916 li
313.852 30.7916 314.82 30.5634 315.372 30.105 cv
315.95 30.105 li
315.95 34.305 li
315.591 34.305 li
315.361 33.2953 314.953 32.6056 314.365 32.236 cv
313.777 31.8664 312.895 31.6816 311.719 31.6816 cv
cp
f
331.381 33.3996 mo
327.26 39.8937 li
327.26 45.6642 li
327.26 46.7802 327.403 47.5443 327.689 47.9562 cv
327.976 48.3671 328.504 48.5736 329.274 48.5736 cv
329.274 49.1043 li
322.592 49.1043 li
322.592 48.5736 li
323.497 48.5736 324.099 48.3547 324.395 47.917 cv
324.692 47.4792 324.84 46.7286 324.84 45.6642 cv
324.84 39.8937 li
320.938 33.8208 li
320.292 32.8111 319.767 32.1503 319.36 31.8385 cv
318.954 31.5257 318.393 31.3543 317.674 31.3233 cv
317.674 30.7916 li
324.84 30.7916 li
324.84 31.3233 li
323.582 31.3233 322.952 31.6093 322.952 32.1813 cv
322.952 32.4415 323.077 32.7636 323.327 33.1487 cv
326.948 38.6961 li
329.847 34.0986 li
330.273 33.413 330.487 32.8255 330.487 32.3361 cv
330.487 31.6609 330.082 31.3233 329.274 31.3233 cv
329.274 30.7916 li
334.301 30.7916 li
334.301 31.3233 li
333.625 31.3646 333.101 31.5133 332.732 31.7683 cv
332.362 32.0233 331.913 32.5664 331.381 33.3996 cv
cp
f
343.098 48.5272 mo
344.129 48.5272 345.036 47.885 345.822 46.6016 cv
346.608 45.3183 347.001 43.7892 347.001 42.0124 cv
347.001 41.2122 346.793 40.539 346.376 39.9939 cv
345.96 39.4488 345.44 39.1752 344.815 39.1752 cv
343.816 39.1752 342.921 39.8142 342.13 41.0924 cv
341.339 42.3706 340.944 43.8718 340.944 45.597 cv
340.944 46.4901 341.139 47.2025 341.529 47.7322 cv
341.919 48.2618 342.443 48.5272 343.098 48.5272 cv
cp
345.658 38.2387 mo
346.512 38.2387 347.261 38.598 347.907 39.3156 cv
348.552 40.0342 348.874 40.8766 348.874 41.8451 cv
348.874 43.5414 348.234 45.2357 346.954 46.9269 cv
345.673 48.618 344.155 49.4636 342.395 49.4636 cv
341.418 49.4636 340.618 49.1146 339.999 48.4177 cv
339.38 47.7198 339.07 46.8308 339.07 45.7478 cv
339.07 43.8532 339.754 42.129 341.123 40.5731 cv
342.491 39.0172 344.004 38.2387 345.658 38.2387 cv
cp
f
356.756 38.5825 mo
356.646 39.456 li
354.424 39.456 li
352.641 48.7935 li
352.173 51.3117 351.655 53.1433 351.088 54.2883 cv
350.52 55.4323 349.723 56.3191 348.697 56.9489 cv
347.671 57.5787 346.57 57.8936 345.393 57.8936 cv
343.82 57.8936 342.581 57.6076 341.675 57.0346 cv
342.159 54.8025 li
342.705 54.8025 li
343.048 56.4368 343.978 57.2535 345.495 57.2535 cv
346.637 57.2535 347.642 56.8395 348.509 56.0125 cv
349.377 55.1845 350.09 53.2672 350.652 50.2596 cv
352.68 39.456 li
350.433 39.456 li
350.527 38.5825 li
352.78 38.5825 li
353.571 34.7108 li
353.988 32.65 354.668 31.2294 355.612 30.4488 cv
356.555 29.6683 357.68 29.278 358.983 29.278 cv
359.588 29.278 360.313 29.4184 361.158 29.6992 cv
361.251 29.309 li
361.891 29.309 li
361.283 32.1968 li
360.643 32.1968 li
360.507 30.678 359.836 29.9181 358.627 29.9181 cv
357.084 29.9181 356.041 31.219 355.5 33.8229 cv
354.496 38.5825 li
356.756 38.5825 li
cp
f
378.804 37.7235 mo
379.35 37.7235 li
379.35 42.1724 li
378.804 42.1724 li
378.606 41.3918 378.367 40.9035 378.086 40.7053 cv
377.805 40.5081 377.19 40.4089 376.243 40.4089 cv
371.701 40.4089 li
371.701 46.9651 li
371.701 47.4235 371.802 47.7466 372.005 47.9335 cv
372.209 48.1204 372.554 48.2143 373.044 48.2143 cv
376.243 48.2143 li
377.388 48.2143 378.179 48.1524 378.617 48.0275 cv
379.054 47.9025 379.423 47.6702 379.725 47.3326 cv
380.026 46.994 380.35 46.4457 380.693 45.6858 cv
381.24 45.6858 li
380.396 49.1043 li
367.204 49.1043 li
367.204 48.5736 li
368.027 48.5736 368.578 48.363 368.859 47.9407 cv
369.14 47.5185 369.281 46.771 369.281 45.6982 cv
369.281 34.2452 li
369.281 33.1301 369.135 32.3651 368.844 31.9479 cv
368.553 31.5319 368.007 31.3233 367.204 31.3233 cv
367.204 30.7916 li
380.396 30.7916 li
380.396 33.8518 li
380.053 33.8518 li
379.865 32.9773 379.598 32.3981 379.249 32.1111 cv
378.9 31.8251 378.143 31.6816 376.978 31.6816 cv
371.701 31.6816 li
371.701 39.519 li
376.822 39.519 li
377.519 39.519 377.995 39.394 378.25 39.1442 cv
378.505 38.8943 378.689 38.4215 378.804 37.7235 cv
cp
f
391.77 31.4947 mo
388.288 31.4947 li
388.288 45.0137 li
388.288 46.3156 388.445 47.2046 388.757 47.6836 cv
389.07 48.1627 389.693 48.4022 390.631 48.4022 cv
392.519 48.4022 li
394.768 48.4022 396.536 47.6754 397.827 46.2238 cv
399.118 44.7721 399.763 42.7919 399.763 40.284 cv
399.763 37.6192 399.058 35.4882 397.647 33.891 cv
396.237 32.2938 394.278 31.4947 391.77 31.4947 cv
cp
383.793 49.1043 mo
383.793 48.5736 li
384.577 48.5736 385.12 48.3578 385.42 47.9252 cv
385.719 47.4926 385.869 46.74 385.869 45.6673 cv
385.869 34.2452 li
385.869 33.1508 385.719 32.3909 385.42 31.9634 cv
385.12 31.537 384.577 31.3233 383.793 31.3233 cv
383.793 30.7916 li
392.262 30.7916 li
395.392 30.7916 397.896 31.6816 399.773 33.4615 cv
401.65 35.2415 402.589 37.5046 402.589 40.253 cv
402.589 42.9478 401.7 45.0973 399.921 46.6997 cv
398.143 48.3031 395.668 49.1043 392.496 49.1043 cv
383.793 49.1043 li
cp
f
411.598 30.7916 mo
411.598 31.3233 li
410.817 31.3233 410.275 31.537 409.974 31.9634 cv
409.672 32.3909 409.522 33.1508 409.522 34.2452 cv
409.522 45.6673 li
409.522 46.7606 409.672 47.5185 409.974 47.9407 cv
410.275 48.363 410.817 48.5736 411.598 48.5736 cv
411.598 49.1043 li
405.01 49.1043 li
405.01 48.5736 li
405.811 48.5736 406.357 48.3651 406.648 47.949 cv
406.939 47.5319 407.086 46.771 407.086 45.6673 cv
407.086 34.2452 li
407.086 33.1198 406.943 32.3516 406.657 31.9407 cv
406.37 31.5288 405.821 31.3233 405.01 31.3233 cv
405.01 30.7916 li
411.598 30.7916 li
cp
f
427.868 31.3233 mo
427.868 30.7916 li
433.394 30.7916 li
433.394 31.3233 li
432.509 31.3233 431.896 31.5308 431.552 31.9469 cv
431.21 32.364 431.037 33.1177 431.037 34.2111 cv
431.037 49.1043 li
430.476 49.1043 li
417.503 33.1807 li
417.503 46.042 li
417.503 46.9485 417.686 47.5969 418.056 47.9872 cv
418.426 48.3785 419.042 48.5736 419.906 48.5736 cv
419.906 49.1043 li
414.348 49.1043 li
414.348 48.5736 li
415.233 48.5736 415.832 48.3413 416.144 47.8788 cv
416.456 47.4152 416.613 46.5996 416.613 45.4329 cv
416.613 34.7139 li
416.613 33.5575 416.402 32.7264 415.98 32.2215 cv
415.558 31.7167 414.864 31.4173 413.896 31.3233 cv
413.896 30.7916 li
418.596 30.7916 li
430.101 45.0457 li
430.101 34.336 li
430.101 33.2117 429.942 32.4291 429.625 31.9861 cv
429.307 31.5443 428.721 31.3233 427.868 31.3233 cv
cp
f
441.651 39.9557 mo
439.913 39.9557 li
439.913 45.3265 li
439.913 46.5128 440.044 47.3223 440.304 47.7539 cv
440.566 48.1854 441.066 48.4022 441.807 48.4022 cv
443.324 48.4022 li
444.389 48.4022 445.257 48.045 445.929 47.3326 cv
446.602 46.6192 446.939 45.6642 446.939 44.4675 cv
446.939 43.1047 446.456 42.0113 445.491 41.1895 cv
444.526 40.3676 443.246 39.9557 441.651 39.9557 cv
cp
439.913 31.4947 mo
439.913 39.2536 li
441.808 39.2536 li
443.132 39.2536 444.186 38.9077 444.969 38.215 cv
445.752 37.5232 446.143 36.5888 446.143 35.4129 cv
446.143 34.175 445.759 33.2117 444.992 32.5251 cv
444.226 31.8385 443.143 31.4947 441.745 31.4947 cv
439.913 31.4947 li
cp
443.857 49.1043 mo
435.418 49.1043 li
435.418 48.5736 li
436.198 48.5736 436.739 48.363 437.041 47.9407 cv
437.342 47.5185 437.494 46.7606 437.494 45.6673 cv
437.494 34.2452 li
437.494 33.1301 437.351 32.3651 437.065 31.9479 cv
436.779 31.5319 436.229 31.3233 435.418 31.3233 cv
435.418 30.7916 li
442.326 30.7916 li
444.305 30.7916 445.863 31.2004 446.999 32.0161 cv
448.135 32.8328 448.702 33.9117 448.702 35.2528 cv
448.702 37.2186 447.475 38.6011 445.019 39.4023 cv
445.019 39.4797 li
446.413 39.7616 447.55 40.378 448.43 41.3309 cv
449.309 42.2849 449.748 43.3804 449.748 44.6203 cv
449.748 45.9749 449.209 47.06 448.132 47.8778 cv
447.053 48.6955 445.628 49.1043 443.857 49.1043 cv
cp
f
466.057 45.2636 mo
466.057 34.2421 li
466.057 33.1704 465.914 32.4239 465.628 32.0016 cv
465.341 31.5804 464.834 31.3543 464.105 31.3233 cv
464.105 30.7916 li
470.568 30.7916 li
470.568 31.3233 li
469.787 31.3233 469.246 31.537 468.945 31.9634 cv
468.642 32.3909 468.492 33.1508 468.492 34.2452 cv
468.492 45.6673 li
468.492 46.74 468.64 47.4926 468.937 47.9252 cv
469.234 48.3578 469.777 48.5736 470.568 48.5736 cv
470.568 49.1043 li
466.057 49.1043 li
466.057 46.5438 li
464.339 48.553 462.304 49.5565 459.952 49.5565 cv
458.016 49.5565 456.494 48.9794 455.387 47.8241 cv
454.278 46.6687 453.723 45.1448 453.723 43.2503 cv
453.723 34.2421 li
453.723 33.1497 453.581 32.3898 453.294 31.9634 cv
453.008 31.536 452.459 31.3233 451.647 31.3233 cv
451.647 30.7916 li
458.266 30.7916 li
458.266 31.3233 li
457.444 31.3233 456.888 31.5308 456.596 31.9469 cv
456.304 32.364 456.159 33.1177 456.159 34.2111 cv
456.159 43.4846 li
456.159 44.9827 456.57 46.1618 457.393 47.0198 cv
458.214 47.8788 459.359 48.3083 460.827 48.3083 cv
463.002 48.3083 464.745 47.2934 466.057 45.2636 cv
cp
f
479.694 31.4947 mo
477.773 31.4947 li
477.773 39.8628 li
480.022 39.8628 li
481.364 39.8628 482.418 39.4777 483.183 38.7075 cv
483.948 37.9372 484.331 36.9172 484.331 35.6472 cv
484.331 34.4083 483.906 33.4068 483.059 32.6418 cv
482.21 31.8767 481.089 31.4947 479.694 31.4947 cv
cp
479.257 40.6268 mo
477.773 40.6268 li
477.773 45.6642 li
477.773 46.7482 477.927 47.505 478.234 47.9325 cv
478.54 48.3599 479.085 48.5736 479.865 48.5736 cv
479.865 49.1043 li
473.277 49.1043 li
473.277 48.5736 li
474.09 48.5736 474.638 48.3599 474.925 47.9325 cv
475.211 47.5061 475.353 46.7503 475.353 45.6673 cv
475.353 34.1822 li
475.353 33.0991 475.213 32.3516 474.932 31.9407 cv
474.651 31.5288 474.1 31.3233 473.277 31.3233 cv
473.277 30.7916 li
480.786 30.7916 li
482.639 30.7916 484.12 31.2428 485.228 32.142 cv
486.337 33.0423 486.891 34.1904 486.891 35.5853 cv
486.891 37.833 485.631 39.3311 483.112 40.0806 cv
483.666 40.4348 484.206 40.921 484.733 41.5405 cv
485.26 42.159 485.95 43.1883 486.804 44.6265 cv
487.763 46.2227 488.512 47.2686 489.051 47.7652 cv
489.59 48.2629 490.151 48.5313 490.731 48.5736 cv
490.731 49.1043 li
486.984 49.1043 li
486.214 48.1772 485.282 46.8164 484.19 45.023 cv
483.024 43.1357 482.111 41.9308 481.45 41.4094 cv
480.789 40.888 480.058 40.6268 479.257 40.6268 cv
cp
f
508.929 41.174 mo
508.929 41.7047 li
508.116 41.7047 507.536 41.8895 507.188 42.2601 cv
506.839 42.6298 506.665 43.2689 506.665 44.1764 cv
506.665 49.1033 li
506.238 49.2179 505.439 49.3222 504.268 49.4161 cv
503.098 49.5101 502.19 49.5565 501.545 49.5565 cv
498.161 49.5565 495.527 48.7244 493.637 47.059 cv
491.748 45.3937 490.804 43.1976 490.804 40.4709 cv
490.804 38.567 491.217 36.849 492.045 35.3189 cv
492.872 33.7898 494.027 32.5767 495.51 31.6816 cv
496.994 30.7875 498.568 30.3394 500.232 30.3394 cv
501.232 30.3394 502.319 30.5159 503.496 30.8701 cv
504.245 31.0889 504.818 31.1984 505.213 31.1984 cv
505.733 31.1984 506.077 30.995 506.243 30.5892 cv
506.821 30.5892 li
506.821 35.9911 li
506.305 35.9911 li
506.098 34.4919 505.419 33.2922 504.268 32.3919 cv
503.118 31.4926 501.773 31.0414 500.232 31.0414 cv
498.298 31.0414 496.71 31.8148 495.472 33.3603 cv
494.233 34.9059 493.613 36.9017 493.613 39.3476 cv
493.613 42.032 494.329 44.26 495.76 46.0286 cv
497.191 47.7983 498.989 48.6831 501.154 48.6831 cv
503.204 48.6831 504.229 48.0306 504.229 46.7266 cv
504.229 44.7401 li
504.229 43.6137 504.081 42.8259 503.784 42.3768 cv
503.488 41.9287 502.965 41.7047 502.216 41.7047 cv
501.513 41.7047 li
501.513 41.174 li
508.929 41.174 li
cp
f
524.9 45.6642 mo
524.9 40.346 li
514.924 40.346 li
514.924 45.6642 li
514.924 46.7482 515.077 47.505 515.385 47.9325 cv
515.691 48.3599 516.246 48.5736 517.047 48.5736 cv
517.047 49.1043 li
510.428 49.1043 li
510.428 48.5736 li
511.229 48.5736 511.775 48.3578 512.068 47.9252 cv
512.359 47.4926 512.504 46.74 512.504 45.6673 cv
512.504 34.2452 li
512.504 33.1198 512.356 32.3516 512.059 31.9407 cv
511.763 31.5288 511.219 31.3233 510.428 31.3233 cv
510.428 30.7916 li
517.047 30.7916 li
517.047 31.3233 li
516.246 31.3233 515.691 31.5443 515.385 31.9861 cv
515.077 32.4291 514.924 33.1807 514.924 34.2421 cv
514.924 39.456 li
524.9 39.456 li
524.9 34.2421 li
524.9 33.1177 524.756 32.3506 524.47 31.9397 cv
524.185 31.5288 523.646 31.3233 522.855 31.3233 cv
522.855 30.7916 li
529.412 30.7916 li
529.412 31.3233 li
528.631 31.3233 528.089 31.537 527.788 31.9634 cv
527.486 32.3909 527.336 33.1508 527.336 34.2452 cv
527.336 45.6673 li
527.336 46.7606 527.486 47.5185 527.788 47.9407 cv
528.089 48.363 528.631 48.5736 529.412 48.5736 cv
529.412 49.1043 li
522.855 49.1043 li
522.855 48.5736 li
523.666 48.5736 524.21 48.363 524.486 47.9397 cv
524.762 47.5174 524.9 46.7596 524.9 45.6642 cv
cp
f
57.6412 70.3369 mo
56.9212 70.331 56.1954 70.3251 55.4753 70.3212 cv
55.2006 70.3153 54.7062 70.2152 54.4511 70.3173 cv
54.1706 70.3153 53.7704 70.2564 53.5448 70.3702 cv
53.3486 70.3683 53.0268 70.3173 52.8719 70.3957 cv
52.4618 70.3644 52.0518 70.331 51.6436 70.2977 cv
51.5574 70.2957 51.4553 70.2701 51.3788 70.2996 cv
50.851 70.2977 50.3743 70.2938 49.8563 70.2917 cv
49.8563 70.2819 49.8563 70.2701 49.8563 70.2603 cv
49.8662 70.2603 49.8759 70.2603 49.8858 70.2603 cv
49.8858 70.223 49.874 70.2349 49.9113 70.223 cv
50.1624 70.1407 50.4841 70.1583 50.7647 70.1466 cv
51.214 70.1191 51.6613 70.0896 52.1105 70.0622 cv
52.7424 70.0171 53.3898 69.9052 54.0176 69.8503 cv
54.3393 69.8208 54.665 69.8012 54.9789 69.7483 cv
55.285 69.7012 55.591 69.5952 55.9187 69.5697 cv
56.2405 69.5462 56.5406 69.5305 56.8545 69.503 cv
57.0997 69.4815 57.3568 69.4305 57.6177 69.4285 cv
57.8257 69.4266 58.0317 69.4501 58.2298 69.4521 cv
58.3573 69.4363 58.4849 69.4227 58.6105 69.4069 cv
58.7635 69.4011 58.9125 69.4128 59.0519 69.3795 cv
59.1892 69.3795 59.3246 69.3795 59.4619 69.3795 cv
59.4619 69.399 59.46 69.4187 59.46 69.4363 cv
59.4462 69.4422 59.4306 69.4501 59.4168 69.454 cv
59.2383 69.6267 58.9773 69.7679 58.7654 69.8895 cv
58.6163 69.9758 58.4868 70.0956 58.3357 70.1721 cv
58.2023 70.2172 58.069 70.2623 57.9316 70.3055 cv
57.8413 70.3055 57.7178 70.2996 57.6412 70.3369 cv
cp
57.1999 70.7999 mo
57.0958 70.7999 56.829 71.0059 56.727 71.0589 cv
56.3974 71.2197 56.0639 71.3767 55.7284 71.52 cv
55.5283 71.6062 55.3301 71.724 55.1123 71.7671 cv
54.7082 71.8456 54.2412 71.7711 53.7998 71.7789 cv
53.6173 71.7789 53.4741 71.824 53.3015 71.8279 cv
53.1308 71.8319 52.8659 71.7887 52.7148 71.8613 cv
52.5108 71.8613 52.3068 71.8672 52.1008 71.8691 cv
51.8379 71.8574 51.5887 71.7063 51.3415 71.8535 cv
50.8962 71.8495 50.4449 71.8495 50.0251 71.824 cv
49.8308 71.8063 49.5247 71.7711 49.3482 71.8397 cv
49.2266 71.8397 49.0402 71.8181 48.9401 71.8672 cv
48.687 71.8652 48.434 71.8633 48.1808 71.8633 cv
47.9239 71.8613 47.2489 71.7534 47.0371 71.8535 cv
46.3562 71.8535 45.7461 71.7318 45.0497 71.7279 cv
45.0497 71.7063 45.0497 71.6886 45.0497 71.6709 cv
45.134 71.6709 45.4244 71.4238 45.5146 71.3708 cv
45.8089 71.2001 46.1326 71.0824 46.4602 70.9745 cv
46.6565 70.9058 46.8467 70.8195 47.0723 70.8058 cv
47.5824 70.8078 48.0886 70.8078 48.5948 70.8078 cv
49.0264 70.792 49.4541 70.7763 49.8839 70.7586 cv
50.9511 70.7646 52.0714 70.8078 53.1327 70.7783 cv
53.4839 70.7685 53.8508 70.7586 54.1863 70.7547 cv
54.3688 70.7528 54.5649 70.7705 54.7121 70.6979 cv
55.5322 70.7038 56.3267 70.7371 57.1723 70.743 cv
57.1723 70.7528 57.1723 70.7607 57.1723 70.7705 cv
57.1822 70.7705 57.19 70.7705 57.1999 70.7705 cv
57.1999 70.7802 57.1999 70.7901 57.1999 70.7999 cv
cp
54.0608 72.2773 mo
54.0509 72.2773 54.0411 72.2773 54.0313 72.2773 cv
54.0313 72.3263 53.9744 72.3164 53.9391 72.3321 cv
53.6605 72.442 53.3799 72.5519 53.0955 72.6618 cv
52.9444 72.7324 52.7972 72.801 52.6481 72.8697 cv
52.4441 72.9423 52.2401 73.0149 52.036 73.0855 cv
51.8242 73.0836 51.3474 73.0306 51.1865 73.1091 cv
51.0021 73.1071 50.8176 73.1052 50.6313 73.1012 cv
50.5018 73.0953 50.3429 73.0561 50.2193 73.1012 cv
50.0937 73.1012 49.9113 73.0797 49.8112 73.1287 cv
49.7543 73.1404 49.6955 73.1483 49.6346 73.1581 cv
49.358 73.1562 49.0931 73.164 48.8166 73.1483 cv
48.6536 73.1404 48.4241 73.0404 48.2613 73.1208 cv
48.12 73.1189 47.9356 73.0953 47.8238 73.1483 cv
47.6374 73.1483 47.3667 73.1032 47.2078 73.1738 cv
47.1135 73.1738 46.99 73.1659 46.9154 73.2032 cv
46.7565 73.2032 46.5505 73.1758 46.4171 73.2287 cv
46.3484 73.2365 46.2798 73.2464 46.2111 73.2562 cv
45.9835 73.2542 45.3027 73.1777 45.1576 73.2503 cv
45.0026 73.2503 44.8456 73.2484 44.6887 73.2464 cv
44.4022 73.2445 44.1452 73.1915 43.8725 73.1562 cv
43.8725 72.8815 44.2923 72.3479 44.5572 72.2773 cv
44.7867 72.2145 45.0653 72.2773 45.3086 72.2458 cv
46.1248 72.1438 47.0077 72.2615 47.8257 72.2654 cv
48.2515 72.2674 48.6674 72.2164 49.1147 72.2184 cv
49.4012 72.2223 49.6562 72.2262 49.9329 72.2242 cv
50.084 72.2223 50.2409 72.236 50.3743 72.1968 cv
50.6274 72.2831 51.0982 72.2262 51.3984 72.2341 cv
51.8104 72.24 52.2303 72.3008 52.6541 72.2948 cv
52.8482 72.2773 53.0444 72.2615 53.2406 72.2458 cv
53.5133 72.2458 53.7881 72.2478 54.0608 72.2458 cv
54.0608 72.2576 54.0608 72.2654 54.0608 72.2773 cv
cp
50.3076 73.5996 mo
49.976 73.5976 49.5934 73.7997 49.2756 73.8703 cv
49.048 73.9193 48.7989 73.882 48.6066 73.9998 cv
48.2809 73.9979 47.9552 74.1548 47.6629 74.2392 cv
47.5864 74.2548 47.5099 74.2705 47.4354 74.2863 cv
47.245 74.2863 47.0626 74.2941 46.9076 74.3725 cv
46.7683 74.3725 46.3739 74.4353 46.2621 74.4843 cv
46.0835 74.4824 45.8795 74.4687 45.7363 74.5393 cv
45.5362 74.5393 45.0987 74.4903 44.9456 74.5629 cv
44.8888 74.5766 44.8299 74.5844 44.771 74.5922 cv
44.3139 74.5922 43.8528 74.5883 43.3918 74.5864 cv
43.3918 74.5766 43.3918 74.5687 43.3918 74.555 cv
43.3565 74.555 43.3643 74.5648 43.3643 74.5255 cv
43.3781 74.2509 43.4821 73.7624 43.7822 73.7212 cv
44.3845 73.6348 45.0339 73.676 45.652 73.6898 cv
46.1797 73.6996 46.7565 73.6643 47.2627 73.6192 cv
47.4766 73.5996 47.6923 73.6348 47.8788 73.5584 cv
48.2985 73.5603 48.7047 73.5917 49.1089 73.5937 cv
49.5072 73.5858 49.9074 73.5799 50.3076 73.5721 cv
50.3076 73.5819 50.3076 73.5897 50.3076 73.5996 cv
cp
41.9969 73.2621 mo
41.9871 73.2621 41.9773 73.2621 41.9675 73.2621 cv
41.9675 73.2523 41.9675 73.2425 41.9675 73.2307 cv
41.9224 73.2307 41.9008 73.1758 41.8752 73.1463 cv
41.7634 72.9658 41.6496 72.7853 41.5358 72.6029 cv
41.3004 72.3282 41.061 72.0496 40.8256 71.7711 cv
40.1134 71.0941 39.2816 70.5174 38.4105 70.1427 cv
38.2319 70.0779 38.0495 70.0092 37.869 69.9445 cv
37.6689 69.8582 37.4845 69.7405 37.2765 69.6639 cv
37.0823 69.5933 36.8704 69.5697 36.6624 69.5305 cv
36.4525 69.4893 36.2367 69.4305 36.0209 69.3834 cv
35.5736 69.2932 35.1243 69.1597 34.6731 69.0773 cv
34.2336 69.0244 33.798 68.9713 33.3586 68.9145 cv
33.0074 68.8949 32.6719 68.9027 32.3344 68.8694 cv
30.7512 68.7085 29.1816 68.5555 27.6513 68.3083 cv
27.1294 68.22 26.6213 68.216 26.1073 68.1257 cv
25.5992 68.0375 25.0891 67.8904 24.6064 67.7393 cv
24.3396 67.6529 24.0649 67.5882 23.8059 67.4901 cv
23.5509 67.3764 23.2979 67.2626 23.0408 67.1488 cv
22.8662 67.0683 22.6896 66.9898 22.517 66.9133 cv
22.3953 66.8348 22.2697 66.7544 22.1462 66.6739 cv
22.0873 66.6426 22.0285 66.6111 21.9696 66.5778 cv
21.5517 66.2423 21.222 65.7793 20.9003 65.3713 cv
20.6531 65.0554 20.5236 64.6904 20.4059 64.3098 cv
20.351 64.1196 20.2922 63.9312 20.2333 63.7409 cv
20.0489 62.8659 20.0666 61.9517 20.0547 60.9942 cv
20.043 60.8078 20.0253 60.6234 20.0096 60.4371 cv
20.0351 59.7249 20.0802 59.0028 20.094 58.3025 cv
20.0881 58.1455 20.0841 57.9905 20.0763 57.8336 cv
20.0802 57.1214 20.0841 56.4092 20.0881 55.697 cv
20.092 55.2301 20.1273 54.7691 20.1234 54.3237 cv
20.1038 52.405 20.1391 50.4646 20.1823 48.5282 cv
20.1666 48.2575 20.1508 47.9827 20.1352 47.71 cv
20.1313 47.4078 20.1646 47.1175 20.1666 46.8311 cv
20.1588 46.6937 20.1568 46.5583 20.1548 46.421 cv
20.1901 45.9836 20.2274 45.5441 20.2627 45.1065 cv
20.2706 44.7652 20.2411 44.4297 20.2411 44.1119 cv
20.2431 43.8725 20.2803 43.6292 20.2686 43.3801 cv
20.2607 43.18 20.2136 42.9877 20.2196 42.766 cv
20.2294 42.5796 20.2411 42.3933 20.249 42.2088 cv
20.2451 41.8361 20.2216 41.4319 20.2294 41.0395 cv
20.2333 40.8139 20.2647 40.5745 20.2588 40.3371 cv
20.2529 40.0762 20.2019 39.8192 20.2097 39.5465 cv
20.2391 39.2248 20.2686 38.903 20.3 38.5793 cv
20.3079 38.2654 20.2803 37.9652 20.2823 37.6728 cv
20.2863 37.0176 20.3138 36.3074 20.3177 35.6226 cv
20.3235 35.4873 20.3294 35.3519 20.3334 35.2146 cv
20.3196 34.9242 20.3039 34.6299 20.2883 34.3375 cv
20.3118 34.0864 20.3334 33.8314 20.3589 33.5763 cv
20.3824 32.358 20.3785 31.1063 20.4059 29.9173 cv
20.4079 29.5093 20.4079 29.0993 20.4099 28.6911 cv
20.3981 28.4008 20.355 28.1183 20.3628 27.8122 cv
20.3725 27.616 20.3824 27.4198 20.3941 27.2276 cv
20.4001 26.2015 20.3766 25.1715 20.3824 24.1258 cv
20.3844 23.7452 20.4177 23.4057 20.4157 23.0408 cv
20.4099 22.6308 20.3941 22.1874 20.3961 21.7538 cv
20.3981 21.4733 20.4275 21.1986 20.4295 20.9062 cv
20.4314 20.6728 20.3844 20.3451 20.4628 20.145 cv
20.4628 20.0862 20.5315 20.096 20.5806 20.0901 cv
21.0024 20.0312 21.532 19.9764 21.9834 20.047 cv
22.5386 20.1333 23.1016 20.0411 23.6824 20.045 cv
24.1983 20.0489 24.7143 20.0489 25.2322 20.0509 cv
25.5442 20.0351 25.8561 20.0175 26.172 19.9999 cv
26.7548 20.0038 27.2943 20.0391 27.8651 20.0351 cv
28.5499 20.0293 29.2915 20.0195 30.0036 20.0234 cv
30.2077 20.0312 30.4118 20.0411 30.6178 20.0489 cv
30.9081 20.0351 31.2024 20.0215 31.4967 20.0058 cv
31.74 20.0116 31.9675 20.0626 32.2265 20.0626 cv
32.5542 20.0646 32.8524 20.0351 33.1604 20.0411 cv
33.641 20.0509 34.159 20.0548 34.6573 20.0803 cv
34.8888 20.0999 35.1223 20.1176 35.3558 20.1353 cv
36.0444 20.1273 36.7625 20.0999 37.4373 20.094 cv
37.8965 20.1058 38.3536 20.1176 38.8107 20.1314 cv
39.1991 20.1254 39.5837 20.0509 39.9801 20.0528 cv
40.2606 20.0548 40.5667 20.0803 40.8609 20.0822 cv
41.1238 20.0783 41.3868 20.0744 41.6496 20.0705 cv
41.9518 20.094 42.2538 20.1176 42.556 20.145 cv
42.7915 20.1333 43.0249 20.1215 43.2583 20.1098 cv
43.7194 20.1273 44.1766 20.1431 44.6356 20.1607 cv
44.8515 20.145 45.0653 20.1273 45.2792 20.1098 cv
46.527 20.0783 47.7061 20.1098 48.9656 20.0979 cv
49.2403 20.0803 49.513 20.0626 49.7857 20.047 cv
50.3487 20.0312 50.9432 20.0705 51.4827 20.0312 cv
51.6025 20.0215 51.7182 20.0077 51.8359 19.9979 cv
52.3048 20.045 52.8522 19.996 53.3564 20.0077 cv
53.5644 20.0116 53.7389 20.0626 53.9391 20.0666 cv
54.1647 20.0587 54.3923 20.0528 54.614 20.045 cv
54.975 20.0587 55.3909 20.1019 55.7539 20.0979 cv
56.007 20.096 56.2522 20.047 56.5171 20.0548 cv
56.7034 20.0705 56.8859 20.0882 57.0723 20.1058 cv
57.3333 20.1098 57.6256 20.0744 57.8924 20.094 cv
58.0788 20.1234 58.2631 20.1489 58.4496 20.1765 cv
58.6046 20.1705 58.7615 20.1627 58.9185 20.1568 cv
59.0833 20.1666 59.248 20.1765 59.4148 20.1843 cv
59.5796 20.1784 59.7464 20.1686 59.9112 20.1607 cv
60.2251 20.1568 60.5253 20.1921 60.8196 20.1705 cv
61.2943 20.1353 61.7632 20.2059 62.2518 20.202 cv
62.4852 20.1862 62.7187 20.1705 62.9542 20.1549 cv
63.1111 20.1627 63.2661 20.1705 63.4231 20.1804 cv
63.5702 20.1804 63.7545 20.1627 63.8782 20.2117 cv
63.888 20.2196 63.8998 20.2314 63.9115 20.2392 cv
64.0155 20.3922 63.9762 20.6787 63.9743 20.8866 cv
63.9704 21.5556 63.941 22.2011 63.9684 22.8446 cv
63.9842 23.2528 63.9782 23.7217 63.9822 24.1336 cv
63.9743 24.2709 63.9684 24.4083 63.9606 24.5417 cv
63.9704 24.834 63.9842 25.1264 63.9939 25.4187 cv
63.9782 25.7149 63.9626 26.0053 63.9449 26.2996 cv
63.9684 26.6802 63.9939 27.0608 64.0175 27.4414 cv
63.9998 27.5847 63.9842 27.7337 63.9665 27.8789 cv
63.9566 28.1339 64.0077 28.3655 64.0057 28.6127 cv
63.99 28.8658 63.9743 29.1189 63.9587 29.372 cv
63.9566 29.6839 63.9508 29.9959 63.9469 30.3078 cv
63.9311 30.5412 63.9115 30.7767 63.8959 31.0082 cv
63.9233 31.3907 63.9508 31.7713 63.9743 32.15 cv
63.9645 32.2874 63.9527 32.4247 63.939 32.5621 cv
63.9272 32.8779 63.9037 33.1957 63.9076 33.4979 cv
63.9135 34.0394 63.9587 34.6436 63.9645 35.1655 cv
63.9508 35.2832 63.9371 35.399 63.9253 35.5167 cv
63.9351 35.7619 63.9449 36.0032 63.9547 36.2465 cv
63.941 36.5271 63.9135 36.8449 63.9115 37.1549 cv
63.9115 37.3825 63.9606 37.5787 63.9547 37.7984 cv
63.941 37.9161 63.9253 38.0338 63.9076 38.1516 cv
63.9155 38.3065 63.9214 38.4615 63.9253 38.6165 cv
63.9115 39.2032 63.8586 39.774 63.8664 40.3744 cv
63.8762 40.6667 63.8841 40.959 63.8959 41.2534 cv
63.9095 41.3711 63.9233 41.4849 63.941 41.6045 cv
63.9331 41.7988 63.9214 41.993 63.9135 42.1892 cv
63.9194 42.3147 63.9272 42.4442 63.9331 42.5698 cv
63.9155 42.7836 63.8998 42.9975 63.8821 43.2133 cv
63.8841 43.5036 63.9547 43.8097 63.9429 44.1197 cv
63.9115 44.9751 63.8644 45.7835 63.8586 46.6369 cv
63.8566 46.9821 63.9115 47.2882 63.9095 47.6316 cv
63.892 47.818 63.8723 48.0023 63.8547 48.1888 cv
63.8507 48.587 63.8468 48.9872 63.8409 49.3875 cv
63.8213 49.6013 63.8017 49.8172 63.784 50.031 cv
63.7938 50.8433 63.8056 51.6496 63.8173 52.4598 cv
63.8134 53.0229 63.7565 53.6213 63.7625 54.1843 cv
63.7761 54.4885 63.7919 54.7926 63.8037 55.0966 cv
63.7977 55.2144 63.7899 55.3282 63.784 55.4459 cv
63.7821 55.6617 63.7801 55.8736 63.7781 56.0894 cv
63.7742 56.6113 63.7997 57.1371 63.7977 57.6393 cv
63.7938 58.2476 63.7997 58.9009 63.786 59.5404 cv
63.7781 59.717 63.7703 59.8896 63.7644 60.0662 cv
63.7761 60.1761 63.7899 60.2801 63.8037 60.39 cv
63.786 60.7607 63.7664 61.1316 63.7506 61.5023 cv
63.7428 61.8162 63.7879 62.1439 63.7664 62.4676 cv
63.731 62.6637 63.6938 62.858 63.6604 63.0542 cv
63.633 63.2662 63.6055 63.478 63.58 63.6938 cv
63.5054 64.0548 63.2405 64.5786 63.0483 64.8886 cv
62.8815 65.1554 62.603 65.3026 62.3871 65.5164 cv
62.2576 65.642 62.1125 65.7244 61.9771 65.8382 cv
61.728 66.05 61.4807 66.2776 61.1982 66.4267 cv
61.0177 66.4934 60.8372 66.5602 60.6547 66.6269 cv
60.2898 66.778 59.9249 66.9408 59.5522 67.0821 cv
59.2089 67.2115 58.8439 67.3077 58.5025 67.4351 cv
58.4181 67.4666 58.3299 67.4979 58.2435 67.5274 cv
58.0552 67.5274 57.8022 67.6117 57.655 67.7 cv
57.4902 67.7 57.3214 67.7216 57.19 67.7864 cv
56.9389 67.7864 56.7623 67.857 56.5602 67.9335 cv
56.4974 67.9512 56.4327 67.9688 56.3679 67.9865 cv
56.266 67.9865 56.1522 67.9963 56.0737 68.0434 cv
55.8794 68.0395 55.4282 68.1298 55.2831 68.216 cv
55.1104 68.2121 54.9004 68.1827 54.7572 68.2416 cv
54.6552 68.2416 54.5414 68.2513 54.4629 68.2984 cv
54.306 68.2984 54.1195 68.2807 53.994 68.3534 cv
53.9175 68.3651 53.8351 68.3729 53.7605 68.3828 cv
53.635 68.3828 53.5055 68.3867 53.4075 68.4377 cv
53.3015 68.4377 53.1739 68.4534 53.0857 68.4946 cv
52.8816 68.4927 52.5775 68.4612 52.4127 68.5515 cv
52.3342 68.5594 52.2558 68.5692 52.1792 68.579 cv
51.9791 68.5771 51.7338 68.5044 51.5632 68.6045 cv
51.4475 68.6045 51.3081 68.5868 51.212 68.632 cv
51.1531 68.6418 51.0963 68.6496 51.0374 68.6594 cv
50.8491 68.6574 50.6117 68.6222 50.4528 68.6869 cv
50.3743 68.6967 50.2939 68.7045 50.2153 68.7124 cv
50.1585 68.7222 50.0976 68.7321 50.0408 68.7399 cv
49.9819 68.7516 49.925 68.7615 49.8662 68.7693 cv
49.7779 68.7791 49.6896 68.7889 49.6013 68.7988 cv
49.4796 68.7988 49.3462 68.8027 49.2501 68.8556 cv
49.1717 68.8634 49.0931 68.8733 49.0147 68.8811 cv
48.8833 68.8811 48.7341 68.8791 48.634 68.94 cv
48.5105 68.94 48.379 68.94 48.2849 68.9949 cv
48.1847 68.9949 48.0671 69.0087 47.9925 69.0518 cv
47.8983 69.0499 47.8002 69.0675 47.7277 69.1087 cv
47.6707 69.1185 47.6119 69.1283 47.553 69.1382 cv
47.4019 69.1382 47.2018 69.1833 47.0802 69.2519 cv
46.9861 69.2519 46.8899 69.2656 46.8173 69.3088 cv
46.5132 69.3088 46.2464 69.4482 45.9874 69.5462 cv
45.7873 69.6227 45.5853 69.6953 45.3832 69.7679 cv
44.9908 69.766 44.5748 70.1308 44.2865 70.3683 cv
44.0333 70.5762 43.7038 70.6802 43.4546 70.9136 cv
42.7601 71.5591 42.3421 72.4263 41.9969 73.2621 cv
cp
41.2298 74.6021 mo
41.2298 74.655 41.0728 74.6237 41.0276 74.6158 cv
40.6451 74.5531 40.2645 74.4922 39.8819 74.4294 cv
39.6975 74.4216 39.5131 74.4137 39.3286 74.4039 cv
39.0854 74.3686 38.8401 74.3333 38.5969 74.298 cv
38.3712 74.2863 38.1613 74.3137 37.9514 74.2863 cv
36.7095 74.1175 35.4598 73.9193 34.2688 73.6584 cv
34.0844 73.6192 33.6214 73.5249 33.5115 73.3915 cv
34.057 73.5014 34.6809 73.4582 35.2655 73.4897 cv
35.7678 73.5152 36.27 73.5662 36.784 73.5681 cv
36.941 73.5819 37.0999 73.5996 37.2549 73.6132 cv
37.4118 73.6074 37.5668 73.5996 37.7218 73.5917 cv
37.9377 73.6113 38.1495 73.627 38.3654 73.6447 cv
38.5086 73.6447 38.6557 73.6192 38.8029 73.6309 cv
38.9795 73.6682 39.1561 73.7035 39.3306 73.7388 cv
39.7603 73.7624 40.4784 73.5937 40.8452 73.7447 cv
41.0748 73.8349 41.2376 74.3666 41.2573 74.6021 cv
41.2493 74.6021 41.2396 74.6021 41.2298 74.6021 cv
cp
33.129 72.9835 mo
32.9759 72.9757 32.819 72.9698 32.664 72.9619 cv
32.4698 72.9286 32.2638 72.9011 32.0853 72.8384 cv
31.944 72.7853 31.8165 72.7285 31.6635 72.6951 cv
31.4496 72.646 31.2337 72.6147 31.0297 72.5754 cv
30.7943 72.5264 30.5726 72.4263 30.3588 72.34 cv
30.2372 72.2929 30.1116 72.2773 30.0036 72.1987 cv
29.9958 72.1987 29.984 72.1987 29.9742 72.1987 cv
29.9742 72.1909 29.9742 72.1811 29.9742 72.1713 cv
30.0802 72.1634 30.1901 72.1536 30.2979 72.1458 cv
30.7257 72.1536 31.1906 72.183 31.6438 72.1811 cv
31.9735 72.1772 32.3226 72.1987 32.6071 72.0967 cv
33.0662 72.1124 33.5272 72.1262 33.9864 72.1398 cv
34.1805 72.1595 34.3748 72.1752 34.571 72.1948 cv
34.932 72.2026 35.2439 72.1065 35.5951 72.1202 cv
36.0817 72.1359 36.5742 72.2085 37.0588 72.2105 cv
37.6238 72.2145 38.1888 72.2145 38.7539 72.2184 cv
39.003 72.2105 39.2796 72.1752 39.5425 72.2007 cv
39.8937 72.238 40.2489 72.6814 40.4195 72.9599 cv
40.4372 72.9893 40.4784 73.0601 40.4391 73.0934 cv
40.3234 73.1954 39.9309 73.0914 39.772 73.164 cv
39.5798 73.162 39.2914 73.0836 39.1285 73.1581 cv
38.6419 73.1562 38.1555 73.1523 37.6689 73.1483 cv
37.4962 73.1483 37.2922 73.0855 37.1392 73.1483 cv
36.6448 73.1443 36.2132 73.0855 35.7344 73.0816 cv
35.0909 73.0757 34.4474 73.0698 33.8039 73.0659 cv
33.5803 73.0385 33.3586 73.009 33.129 72.9835 cv
cp
28.6343 71.5336 mo
28.1477 71.3806 27.7651 70.9803 27.2923 70.8078 cv
27.2923 70.7881 27.2923 70.7705 27.2923 70.7508 cv
27.7593 70.7547 28.2262 70.7567 28.6951 70.7626 cv
28.9403 70.7783 29.1953 70.8234 29.4563 70.8195 cv
29.7938 70.8156 30.1037 70.7666 30.4529 70.7685 cv
30.7257 70.7685 30.9964 70.7685 31.2711 70.7705 cv
31.4142 70.7705 31.585 70.7862 31.7086 70.745 cv
31.9656 70.7705 32.203 70.745 32.4698 70.7508 cv
33.1976 70.7666 33.9942 70.7881 34.7535 70.792 cv
35.3421 70.796 35.962 70.7901 36.5114 70.8469 cv
36.5977 70.8411 36.684 70.8352 36.7723 70.8313 cv
36.9548 70.8509 37.1372 70.8685 37.3196 70.8881 cv
37.8455 71.0431 38.3614 71.2728 38.8088 71.5807 cv
38.8401 71.6023 38.9225 71.667 38.9128 71.7063 cv
38.8617 71.7318 38.8068 71.7573 38.7558 71.7828 cv
38.6656 71.7828 38.54 71.775 38.4635 71.8063 cv
38.1397 71.8063 37.814 71.7534 37.4688 71.7436 cv
37.3687 71.7357 37.2412 71.7063 37.147 71.7436 cv
36.9842 71.7417 36.7664 71.667 36.6193 71.7396 cv
36.2387 71.7279 35.8581 71.7141 35.4794 71.7024 cv
35.3303 71.7024 35.138 71.6789 35.0105 71.7279 cv
34.6515 71.7279 34.2885 71.7201 33.9275 71.7141 cv
33.7137 71.6925 33.386 71.5748 33.1682 71.6631 cv
32.9897 71.6592 32.7738 71.6318 32.6404 71.7141 cv
32.4482 71.7141 32.0519 71.6709 31.9087 71.7436 cv
31.1122 71.7396 30.2979 71.724 29.5367 71.6494 cv
29.2307 71.618 28.9148 71.62 28.6343 71.5336 cv
cp
25.5953 69.7502 mo
25.4814 69.6855 25.2695 69.6032 25.2499 69.4521 cv
25.915 69.4756 26.6605 69.505 27.3276 69.5188 cv
27.7906 69.5285 28.2811 69.5089 28.7598 69.5345 cv
29.3916 69.5678 29.99 69.6699 30.602 69.711 cv
31.0592 69.7405 31.479 69.7326 31.9185 69.7915 cv
32.6425 69.8916 33.3703 69.9916 34.0864 70.1014 cv
34.6122 70.1839 35.1556 70.231 35.6618 70.329 cv
35.6618 70.3761 35.6148 70.3565 35.5755 70.3565 cv
35.5755 70.3996 35.4734 70.3644 35.4283 70.3624 cv
35.0222 70.329 34.6024 70.3231 34.1708 70.3212 cv
34.0413 70.3212 33.8647 70.2957 33.7608 70.3467 cv
33.6665 70.3467 33.543 70.3389 33.4664 70.3761 cv
33.0642 70.3741 32.6856 70.3369 32.2971 70.3408 cv
32.0303 70.3447 31.7576 70.3605 31.477 70.3644 cv
31.2887 70.3663 31.0219 70.3212 30.863 70.3899 cv
30.3666 70.3859 29.8605 70.3545 29.3405 70.3525 cv
29.1796 70.3525 28.9442 70.3133 28.8147 70.378 cv
28.5518 70.3722 28.2889 70.3683 28.0261 70.3624 cv
27.8495 70.3369 27.6749 70.3113 27.4963 70.2858 cv
27.1138 70.2662 26.7272 70.3016 26.3937 70.1956 cv
26.0975 70.1014 25.86 69.9091 25.5953 69.7502 cv
cp
24.9596 69.0538 mo
24.5083 69.0577 24.2297 68.9204 23.9138 68.6751 cv
23.802 68.5888 23.6725 68.524 23.6176 68.3906 cv
24.1258 68.5339 24.6378 68.6535 25.1636 68.7615 cv
25.5697 68.8458 25.9759 69.0028 26.4232 69.0204 cv
26.4232 69.0302 26.4232 69.04 26.4232 69.0499 cv
26.2231 69.0499 25.9915 69.0793 25.7777 69.0734 cv
25.5834 69.0577 25.3872 69.042 25.1931 69.0263 cv
25.1145 69.0361 25.0361 69.046 24.9596 69.0538 cv
cp
20.967 19.0641 mo
20.967 18.9561 21.1318 18.7933 21.2084 18.7226 cv
21.3791 18.5637 21.6106 18.348 21.8284 18.2753 cv
22.1717 18.1576 22.6288 18.2381 23.0192 18.2243 cv
23.5077 18.2027 24.0591 18.2165 24.5692 18.2047 cv
25.0341 18.193 25.5442 18.1615 26.0033 18.1654 cv
26.3054 18.1753 26.6076 18.1811 26.9137 18.191 cv
27.975 18.1792 29.0855 18.1714 30.1586 18.2126 cv
30.2862 18.2282 30.4118 18.2439 30.5392 18.2616 cv
30.7551 18.2655 30.9689 18.2694 31.1828 18.2714 cv
31.8263 18.2655 32.4718 18.2126 33.1427 18.2243 cv
33.9098 18.242 34.6809 18.3028 35.4853 18.2969 cv
35.9267 18.291 36.3818 18.2361 36.8606 18.2479 cv
37.1431 18.2518 37.4001 18.3087 37.7082 18.3087 cv
38.485 18.3146 39.2286 18.2597 40.0212 18.2636 cv
40.5392 18.2694 41.0571 18.2714 41.5731 18.2733 cv
41.7104 18.2832 41.8458 18.291 41.9831 18.3009 cv
42.2245 18.2969 42.4815 18.2753 42.7424 18.2793 cv
42.8797 18.2969 43.0152 18.3126 43.1525 18.3283 cv
43.2505 18.3165 43.3466 18.3048 43.4467 18.291 cv
43.6214 18.291 43.796 18.2871 43.9745 18.2871 cv
44.2198 18.291 44.4199 18.346 44.6749 18.348 cv
44.8809 18.3283 45.0849 18.3107 45.289 18.2949 cv
46.1248 18.2852 46.9978 18.2852 47.8061 18.2793 cv
48.0886 18.291 48.3712 18.2988 48.6536 18.3107 cv
49.1736 18.2969 49.6994 18.2537 50.2369 18.2557 cv
50.7509 18.2597 51.2571 18.3185 51.7849 18.2969 cv
52.0596 18.2813 52.3323 18.2655 52.605 18.2498 cv
52.7718 18.2597 52.9365 18.2655 53.1014 18.2733 cv
53.8527 18.2537 54.714 18.2498 55.4733 18.2793 cv
56.1423 18.3048 56.8643 18.24 57.549 18.2772 cv
57.6981 18.2949 57.8433 18.3146 57.9905 18.3303 cv
58.5555 18.3597 59.1381 18.3931 59.715 18.3695 cv
59.9602 18.3361 60.2035 18.3009 60.4487 18.2655 cv
60.6626 18.2459 60.8784 18.2263 61.0923 18.2047 cv
61.5592 18.2086 62.0124 18.2479 62.4989 18.242 cv
62.7285 18.24 62.9972 18.1753 63.2229 18.24 cv
63.3249 18.2694 63.4152 18.3715 63.4995 18.4441 cv
63.5525 18.4911 63.9076 18.8109 63.8056 18.8816 cv
63.6487 18.9875 63.2916 18.8953 63.1071 18.9777 cv
62.7893 18.9758 61.983 18.9091 61.7632 19.0287 cv
60.9922 19.0248 60.2192 19.0209 59.4481 19.017 cv
59.2363 19.0189 59.0205 19.0248 58.8046 19.0267 cv
58.7085 19.0326 58.6105 19.0346 58.5142 19.0405 cv
58.4084 19.0405 58.275 19.0267 58.1925 19.068 cv
57.9728 19.068 57.5412 19.0149 57.3724 19.0915 cv
56.9408 19.0817 56.5132 19.068 56.0834 19.0561 cv
55.9442 19.0561 55.7637 19.0346 55.644 19.0837 cv
55.54 19.0817 55.4086 19.068 55.3222 19.1111 cv
55.2359 19.1209 55.1477 19.1288 55.0594 19.1386 cv
54.9436 19.1366 54.8259 19.1327 54.7101 19.1288 cv
54.5297 19.115 54.202 19.0013 54.0333 19.0738 cv
53.8332 19.0719 53.5624 19.0326 53.3917 19.0993 cv
53.3015 19.1111 53.2152 19.1189 53.1269 19.1269 cv
52.9954 19.1269 52.8051 19.0738 52.6893 19.1269 cv
52.142 19.1228 51.5965 19.1189 51.0512 19.115 cv
50.8804 19.115 50.6372 19.0777 50.492 19.1405 cv
50.4351 19.1523 50.3763 19.1602 50.3174 19.1699 cv
50.0212 19.1699 49.7504 19.117 49.4698 19.1111 cv
48.9813 19.1072 48.4947 19.1013 48.0062 19.0993 cv
47.7845 19.0974 47.3352 19.0464 47.1587 19.1228 cv
47.0547 19.1228 46.9194 19.1092 46.8369 19.1504 cv
46.5524 19.1504 46.27 19.1484 45.9855 19.1464 cv
45.7873 19.1444 45.5146 19.0738 45.3439 19.1425 cv
44.5434 19.1386 43.8077 19.1032 43.0308 19.0993 cv
42.8366 19.0993 42.5482 19.0522 42.3873 19.1269 cv
41.626 19.1209 40.8648 19.115 40.1056 19.1111 cv
39.8976 19.1092 39.619 19.0248 39.4307 19.1111 cv
39.1874 19.1053 38.9441 19.0993 38.7008 19.0954 cv
38.5478 19.0797 38.3556 19.0052 38.2025 19.0719 cv
38.026 19.0719 37.7749 19.0091 37.6179 19.0699 cv
37.4746 19.068 37.0783 19.0542 36.9724 19.0954 cv
36.8626 19.0954 36.737 19.1053 36.6506 19.1504 cv
36.5545 19.1504 36.4349 19.1405 36.3564 19.1798 cv
35.9757 19.1778 35.599 19.1759 35.2184 19.1739 cv
35.0693 19.1739 34.8711 19.1444 34.7476 19.2014 cv
34.5043 19.1994 34.2218 19.0738 33.9903 19.166 cv
33.3252 19.1425 32.6601 19.1189 31.997 19.0954 cv
31.8106 19.0895 31.5556 19.017 31.3848 19.0934 cv
31.0906 19.0915 30.8002 19.0876 30.5059 19.0837 cv
30.3509 19.0777 30.1253 19.0189 29.9781 19.0856 cv
29.7564 19.0758 29.5308 19.0641 29.3052 19.0542 cv
28.7794 19.0503 28.2536 19.0483 27.7278 19.0444 cv
27.4924 19.0425 27.2589 19.0425 27.0255 19.0405 cv
26.8293 19.0405 26.4761 18.9758 26.3211 19.0366 cv
26.0386 19.0346 25.3676 18.9719 25.1499 19.0581 cv
24.4788 19.0542 23.8452 19.0248 23.1624 19.0189 cv
23.0114 19.0189 22.6641 18.9934 22.5445 19.0444 cv
22.3443 19.0425 22.0892 18.9678 21.9009 19.0405 cv
21.7362 19.0503 21.5713 19.0581 21.4046 19.066 cv
21.2476 19.0777 21.0926 19.0856 20.9357 19.0954 cv
20.9357 19.0542 20.9258 19.0641 20.967 19.0641 cv
cp
22.4385 17.7574 mo
22.4954 17.7103 22.5523 17.6613 22.6151 17.6161 cv
22.825 17.4572 23.4057 16.9255 23.6412 16.9275 cv
24.0904 16.9295 24.5299 16.9804 24.985 16.9765 cv
25.2499 16.9608 25.5128 16.9432 25.7777 16.9275 cv
26.0621 16.9216 26.3231 16.953 26.5977 16.9588 cv
27.0235 16.9687 27.4728 16.9452 27.8848 16.9491 cv
28.7127 16.953 29.4916 17.0471 30.3411 17.0393 cv
30.5314 17.0374 30.6923 16.9923 30.8689 16.9883 cv
31.3005 16.9687 31.7654 16.9804 32.1853 16.9687 cv
32.4187 16.9883 32.6523 17.004 32.8876 17.0216 cv
33.1309 17.0059 33.3762 16.9923 33.6194 16.9785 cv
33.8922 16.9923 34.1649 17.0001 34.4376 17.0138 cv
35.0576 16.9843 35.705 16.953 36.3406 16.9569 cv
36.6329 16.9608 36.9273 16.9648 37.2177 16.9687 cv
37.3648 16.9824 37.5237 17.0177 37.6885 17.0197 cv
38.0141 17.0216 38.3085 16.9726 38.6263 16.9707 cv
39.1089 16.9629 39.5994 17.0432 40.0879 17.0609 cv
40.3312 17.0531 40.5745 17.0452 40.8197 17.0393 cv
41.1238 17.0452 41.4298 17.0707 41.7556 17.0747 cv
41.9106 17.0668 42.0675 17.059 42.2205 17.0531 cv
42.3481 17.0668 42.4736 17.0825 42.6031 17.0942 cv
42.7385 17.0825 42.8758 17.0668 43.0131 17.0531 cv
43.3918 17.0531 43.7744 17.0531 44.155 17.0551 cv
44.2825 17.0432 44.4081 17.0275 44.5356 17.0138 cv
44.7397 17.0393 44.9456 17.0609 45.1497 17.0864 cv
45.4439 17.0884 45.7343 17.0923 46.0287 17.0982 cv
46.2033 17.0884 46.3778 17.0786 46.5524 17.0707 cv
46.8762 17.0707 47.1979 17.0707 47.5217 17.0707 cv
47.7453 17.0551 47.969 17.0393 48.1927 17.0216 cv
48.5929 17.0236 48.9931 17.0236 49.3934 17.0236 cv
49.5778 17.0099 49.7622 16.9923 49.9506 16.9785 cv
50.1075 16.9962 50.2645 17.0119 50.4195 17.0315 cv
50.6725 17.0432 50.9354 17.0119 51.1787 17.0177 cv
51.7241 17.0452 52.2696 17.0707 52.8169 17.0982 cv
53.7665 17.0747 54.6983 16.9883 55.6557 16.9785 cv
55.9638 16.9726 56.2738 17.0197 56.5916 17.008 cv
56.774 17.0001 56.9271 16.9569 57.1213 16.9569 cv
57.6079 16.9588 58.0964 16.9608 58.583 16.9648 cv
58.895 16.9824 59.2069 17.0001 59.5208 17.0177 cv
59.713 16.9962 59.9092 16.9707 60.1035 16.9491 cv
60.2898 16.9373 60.4978 16.9648 60.6626 16.9177 cv
61.0197 16.9373 61.3787 16.9569 61.7319 16.9785 cv
61.8869 17.0216 62.5775 17.5612 62.6461 17.7181 cv
62.6069 17.726 62.5696 17.7377 62.5283 17.7457 cv
62.3459 17.7457 62.0594 17.6986 61.9124 17.7731 cv
61.4827 17.7692 60.9647 17.6554 60.5959 17.8535 cv
60.5292 17.8614 60.4625 17.8712 60.3938 17.881 cv
60.2486 17.8791 60.074 17.8594 59.9524 17.9065 cv
59.6601 17.9065 59.093 17.8398 58.8694 17.9594 cv
58.6653 17.9398 58.4613 17.9182 58.2553 17.8986 cv
57.8277 17.8947 57.4 17.8888 56.9663 17.8849 cv
56.725 17.8672 56.2541 17.7966 56.0324 17.8869 cv
55.1456 17.8791 54.257 17.8751 53.3682 17.8672 cv
52.9895 17.8535 52.5736 17.8359 52.1694 17.8359 cv
52.0184 17.8339 51.8281 17.8124 51.7025 17.8614 cv
51.3709 17.8594 51.0393 17.8555 50.7058 17.8535 cv
50.5352 17.8457 50.3154 17.7868 50.1507 17.8535 cv
49.8386 17.8515 49.5247 17.8496 49.2128 17.8476 cv
49.0873 17.8476 48.9362 17.828 48.8322 17.8751 cv
48.7655 17.883 48.6968 17.8927 48.6282 17.9026 cv
48.2475 17.9006 47.8689 17.8986 47.4863 17.8966 cv
47.349 17.8966 47.1587 17.8672 47.0468 17.9222 cv
46.7918 17.9222 46.0875 17.8653 45.905 17.9458 cv
45.6656 17.9458 45.1556 17.8869 44.9692 17.9693 cv
44.9104 17.9791 44.8515 17.9889 44.7945 17.9968 cv
44.4159 17.9968 44.0942 17.93 43.7097 17.934 cv
43.6115 17.9359 43.4997 17.9281 43.4174 17.9614 cv
43.1191 17.9575 42.6169 17.8555 42.3657 17.9536 cv
42.2853 17.9575 42.2108 17.9594 42.1323 17.9614 cv
41.8968 17.9458 41.4338 17.7848 41.2239 17.8908 cv
40.8727 17.8791 40.5215 17.8672 40.1703 17.8555 cv
40.0447 17.8555 39.8957 17.8398 39.7878 17.883 cv
39.5622 17.881 39.1403 17.779 38.9422 17.8771 cv
38.8813 17.8869 38.8225 17.8966 38.7636 17.9065 cv
38.336 17.9026 37.9083 17.8986 37.4785 17.8947 cv
37.3138 17.8771 37.145 17.8594 36.9802 17.8418 cv
36.7154 17.8398 36.4544 17.8359 36.1916 17.8319 cv
36.0425 17.8319 35.8462 17.8104 35.7207 17.8594 cv
35.5912 17.8594 35.4499 17.8437 35.34 17.8869 cv
35.1949 17.8869 35.0438 17.8791 34.932 17.9438 cv
34.7653 17.9398 34.6004 17.9359 34.4356 17.93 cv
34.1688 17.8927 33.8118 17.7358 33.5272 17.8476 cv
33.1525 17.8457 32.7798 17.8143 32.3854 17.8124 cv
32.2598 17.8104 32.1088 17.7927 32.0048 17.8398 cv
31.9126 17.8378 31.787 17.828 31.7125 17.8672 cv
31.6262 17.8751 31.5379 17.8849 31.4476 17.8947 cv
30.9218 17.8908 30.4549 17.8437 29.9566 17.7927 cv
29.8525 17.775 29.7407 17.7574 29.6348 17.7416 cv
29.1561 17.7377 28.6794 17.7338 28.2006 17.7299 cv
27.9495 17.7299 27.5002 17.673 27.2943 17.7535 cv
27.1687 17.7535 26.9979 17.7025 26.8842 17.7535 cv
26.7292 17.7515 26.4172 17.6946 26.2976 17.7496 cv
26.2192 17.7574 26.1406 17.7672 26.0642 17.777 cv
25.6188 17.775 25.1675 17.777 24.7477 17.7947 cv
24.6103 17.8005 24.4259 17.7731 24.3102 17.8241 cv
23.6843 17.8221 23.0585 17.8182 22.4385 17.8163 cv
22.4385 17.7966 22.4385 17.777 22.4385 17.7574 cv
cp
24.2866 16.4193 mo
24.3396 16.4193 24.473 16.2742 24.5181 16.2389 cv
24.8065 16.0525 25.093 15.8641 25.3794 15.6739 cv
25.5619 15.5992 25.8699 15.615 26.0759 15.613 cv
26.3486 15.6326 26.6233 15.6503 26.896 15.6719 cv
27.4061 15.6836 27.9122 15.6974 28.4184 15.7072 cv
28.6813 15.6954 28.9442 15.6778 29.2071 15.662 cv
29.4818 15.662 29.7525 15.6601 30.0252 15.6601 cv
30.2332 15.6503 30.4373 15.6404 30.6413 15.6287 cv
31.0023 15.6424 31.3475 15.6915 31.6948 15.6993 cv
32.2304 15.7111 32.7543 15.6404 33.2742 15.6523 cv
33.4233 15.664 33.5685 15.6719 33.7156 15.6817 cv
34.1276 15.6915 34.5494 15.664 34.9438 15.662 cv
35.705 15.6659 36.4682 15.6679 37.2255 15.6739 cv
37.7984 15.6758 38.3693 15.7091 38.9539 15.7111 cv
39.364 15.7151 39.772 15.7151 40.1841 15.719 cv
40.3391 15.7111 40.4941 15.7032 40.647 15.6954 cv
40.9708 15.7229 41.2925 15.7542 41.6143 15.7837 cv
42.0753 15.7935 42.4775 15.7052 42.9327 15.7072 cv
43.2839 15.7268 43.637 15.7484 43.9882 15.766 cv
44.3511 15.7739 44.72 15.7346 45.0987 15.7484 cv
45.2634 15.766 45.4283 15.7818 45.595 15.7974 cv
45.7323 15.7837 45.8677 15.77 46.0051 15.7562 cv
46.3445 15.7367 46.7074 15.7425 47.0293 15.7287 cv
47.6021 15.7052 48.175 15.77 48.7263 15.7641 cv
49.05 15.7386 49.3718 15.713 49.6935 15.6895 cv
50.4743 15.6915 51.2552 15.6954 52.036 15.6974 cv
52.2008 15.7091 52.3676 15.717 52.5324 15.7268 cv
53.3289 15.719 54.1942 15.7326 55.0201 15.7111 cv
55.3654 15.7032 55.7519 15.6581 56.1011 15.6659 cv
56.5013 15.6993 56.9035 15.7346 57.3018 15.766 cv
57.6628 15.766 58.0395 15.6915 58.3868 15.6797 cv
58.6124 15.6679 58.8655 15.6993 59.0597 15.6189 cv
59.354 15.6208 59.6679 15.6189 59.9269 15.7072 cv
60.0603 15.7523 60.1525 15.8759 60.2682 15.9623 cv
60.333 15.9975 60.3958 16.0329 60.4625 16.0662 cv
60.6626 16.2015 60.8412 16.3448 61.0432 16.4802 cv
61.0432 16.5331 60.9863 16.5391 60.953 16.5685 cv
60.741 16.5626 60.5253 16.5586 60.3114 16.5547 cv
60.129 16.537 59.8406 16.4606 59.6679 16.5292 cv
59.5992 16.541 59.5306 16.5488 59.4619 16.5586 cv
58.9753 16.5567 58.4868 16.5528 58.0002 16.5508 cv
57.5529 16.5469 57.1037 16.5449 56.6544 16.543 cv
56.5151 16.543 56.3267 16.5175 56.2149 16.5685 cv
56.0834 16.5685 55.9442 16.5508 55.8343 16.5979 cv
55.6205 16.594 55.3144 16.5508 55.132 16.6234 cv
54.9573 16.6234 54.5022 16.592 54.3707 16.6469 cv
54.1627 16.6449 53.8743 16.5998 53.6958 16.6724 cv
53.5271 16.6704 53.327 16.6077 53.17 16.6685 cv
52.6207 16.6665 52.1185 16.6332 51.5632 16.6293 cv
51.3748 16.6293 51.1336 16.594 50.9786 16.6587 cv
50.851 16.6469 50.7254 16.6371 50.5959 16.6273 cv
50.1879 16.6234 49.7759 16.6214 49.3678 16.6195 cv
49.2344 16.6136 49.0441 16.5646 48.9264 16.6156 cv
48.5262 16.6136 47.816 16.5469 47.4941 16.6665 cv
47.2411 16.6548 46.9861 16.6449 46.7329 16.6352 cv
46.1129 16.6391 45.4499 16.6548 44.8025 16.6529 cv
44.5493 16.6509 44.1 16.594 43.896 16.6764 cv
43.8038 16.6764 43.6724 16.6665 43.5998 16.7058 cv
43.278 16.694 42.9563 16.6823 42.6346 16.6685 cv
41.7085 16.6626 40.7824 16.6568 39.8545 16.6509 cv
39.3953 16.6332 38.9088 16.6175 38.4223 16.6156 cv
38.285 16.6156 38.1005 16.5606 37.9828 16.6136 cv
37.818 16.6136 37.6493 16.6116 37.4865 16.6116 cv
37.1922 16.6077 36.9214 16.5842 36.635 16.5881 cv
36.5545 16.5901 36.4388 16.5704 36.3721 16.6058 cv
36.0778 16.6037 35.7873 16.5998 35.4931 16.5998 cv
35.3616 16.5998 35.1949 16.5782 35.085 16.6273 cv
34.6377 16.6234 34.1885 16.6214 33.7411 16.6175 cv
33.6038 16.6136 33.4233 16.5606 33.2977 16.6156 cv
32.6954 16.6136 32.0813 16.5802 31.4554 16.5763 cv
31.3201 16.5763 31.1043 16.5194 30.9905 16.5743 cv
30.8865 16.5743 30.7492 16.5606 30.6687 16.6018 cv
29.8977 16.5979 29.1228 16.6058 28.3832 16.5528 cv
28.0535 16.5312 27.2864 16.4154 27.0078 16.5528 cv
26.9509 16.5606 26.8921 16.5724 26.8332 16.5821 cv
26.4428 16.5782 26.0661 16.5469 25.662 16.5449 cv
25.2342 16.543 24.7005 16.5998 24.3455 16.4508 cv
24.3278 16.4508 24.3063 16.4508 24.2866 16.4508 cv
24.2866 16.4409 24.2866 16.4312 24.2866 16.4193 cv
cp
26.1661 15.1441 mo
26.1799 15.1441 26.1858 15.1441 26.1976 15.1441 cv
26.1976 15.0833 26.3839 14.9872 26.4349 14.9459 cv
26.5664 14.838 26.7194 14.7752 26.8606 14.689 cv
27.0176 14.5908 27.1667 14.479 27.3453 14.428 cv
27.8141 14.2927 28.5126 14.3574 29.009 14.3672 cv
29.4995 14.377 30.0017 14.3378 30.502 14.3495 cv
30.8767 14.3574 31.2926 14.3456 31.6732 14.3339 cv
31.8204 14.3397 31.9656 14.3436 32.1088 14.3475 cv
32.8837 14.2769 33.7804 14.3574 34.573 14.3613 cv
34.9575 14.3652 35.3872 14.324 35.7972 14.3535 cv
36.3015 14.3868 36.7801 14.4692 37.2922 14.4731 cv
37.5944 14.4731 37.8965 14.4712 38.1986 14.4712 cv
38.591 14.4437 38.9795 14.3672 39.3993 14.3691 cv
40.2528 14.373 41.1258 14.4319 41.9734 14.4358 cv
42.0813 14.43 42.1892 14.4261 42.2951 14.4202 cv
42.4324 14.4358 42.5678 14.4516 42.7052 14.4692 cv
42.9308 14.4555 43.1544 14.4397 43.3781 14.428 cv
43.6488 14.4142 43.9274 14.4496 44.2001 14.4476 cv
44.4806 14.4358 44.7651 14.4202 45.0457 14.4084 cv
45.6068 14.4202 46.1876 14.4889 46.7741 14.4633 cv
47.0116 14.4535 47.2588 14.3946 47.506 14.3888 cv
47.6825 14.3927 47.8572 14.3927 48.0297 14.3946 cv
48.0985 14.3888 48.1672 14.3809 48.2358 14.373 cv
48.3829 14.3809 48.5144 14.4476 48.6752 14.4437 cv
48.9008 14.43 49.1225 14.4123 49.3482 14.4006 cv
49.6445 14.4006 49.9701 14.4358 50.284 14.428 cv
50.5156 14.4202 50.7235 14.373 50.9609 14.375 cv
51.2925 14.377 51.622 14.377 51.9556 14.379 cv
52.1224 14.3809 52.3048 14.3966 52.452 14.3535 cv
53.0975 14.3966 53.7566 14.3809 54.412 14.3966 cv
54.6787 14.4006 54.9789 14.4378 55.2615 14.4222 cv
55.85 14.3888 56.4739 14.377 57.1056 14.3809 cv
57.394 14.3809 57.7236 14.3514 57.9827 14.4182 cv
58.0964 14.4476 58.1768 14.53 58.275 14.5869 cv
58.5379 14.7576 58.8007 14.9263 59.0617 15.0931 cv
59.0617 15.2285 58.634 15.2108 58.5358 15.2657 cv
58.3907 15.2637 58.1828 15.2344 58.0669 15.2913 cv
57.9277 15.2913 57.7374 15.2637 57.6256 15.3207 cv
57.4411 15.3148 57.2547 15.3108 57.0723 15.3069 cv
56.9741 15.2913 56.8741 15.2756 56.7761 15.2579 cv
56.3718 15.2383 55.9206 15.252 55.5439 15.2834 cv
55.4125 15.2952 55.2516 15.2481 55.1398 15.3069 cv
54.9828 15.305 54.8278 15.305 54.6709 15.303 cv
54.6022 15.3108 54.5355 15.3207 54.4669 15.3305 cv
53.48 15.3246 52.4872 15.2892 51.4808 15.2834 cv
51.2062 15.2814 50.8432 15.1814 50.6038 15.3089 cv
50.4195 15.3069 50.233 15.303 50.0467 15.3011 cv
49.8328 15.2853 49.3913 15.2167 49.1991 15.303 cv
49.0637 15.3011 48.8695 15.2717 48.7596 15.3285 cv
48.5654 15.3265 48.1769 15.2579 48.0278 15.3246 cv
47.8336 15.3226 47.6374 15.3207 47.4432 15.3187 cv
47.2724 15.3108 47.0155 15.2383 46.8585 15.3168 cv
46.7899 15.3265 46.7212 15.3364 46.6526 15.3462 cv
46.2228 15.3442 45.7932 15.3423 45.3655 15.3384 cv
45.1928 15.3384 44.9495 15.3011 44.8103 15.3639 cv
44.5454 15.3619 44.0961 15.2717 43.8725 15.358 cv
43.7528 15.3639 43.6391 15.3678 43.5193 15.3717 cv
43.3172 15.358 43.0465 15.2736 42.8464 15.354 cv
42.7208 15.352 42.5364 15.3305 42.4364 15.3815 cv
41.7732 15.3756 41.112 15.3697 40.4469 15.3658 cv
40.1429 15.3501 39.5131 15.2167 39.2188 15.3344 cv
39.1403 15.3442 39.0618 15.3501 38.9834 15.3619 cv
38.7087 15.36 38.4772 15.3108 38.2222 15.3011 cv
37.5884 15.2952 36.9567 15.2892 36.321 15.2853 cv
36.115 15.2814 35.9464 15.2304 35.7364 15.2265 cv
35.3165 15.2265 34.8987 15.2246 34.4788 15.2265 cv
34.3807 15.2402 34.2826 15.2559 34.1845 15.2717 cv
33.5607 15.2697 32.9348 15.2678 32.3129 15.2657 cv
31.9813 15.2618 31.6497 15.2559 31.3181 15.252 cv
31.0572 15.2246 30.6687 15.1225 30.4097 15.2265 cv
30.3078 15.2246 30.1724 15.2108 30.09 15.254 cv
29.9585 15.252 29.8134 15.2363 29.7074 15.2795 cv
29.3935 15.2775 29.1032 15.2481 28.801 15.2481 cv
28.6637 15.2481 28.5263 15.2481 28.391 15.252 cv
28.283 15.2598 28.1869 15.2952 28.0692 15.2952 cv
27.718 15.2756 27.3668 15.2579 27.0156 15.2383 cv
26.7488 15.2246 26.4349 15.2657 26.1976 15.203 cv
26.1976 15.1931 26.1976 15.1834 26.1976 15.1735 cv
26.1564 15.1735 26.1661 15.1814 26.1661 15.1441 cv
cp
29.1483 13.4392 mo
29.2346 13.3803 29.3249 13.3254 29.4112 13.2685 cv
30.1331 12.7918 31.1769 13.035 32.0617 13.039 cv
32.5679 13.0429 33.0741 13.0468 33.5803 13.0488 cv
33.7392 13.0585 33.8961 13.0684 34.0531 13.0782 cv
34.3258 13.0743 34.6064 13.0546 34.9006 13.0566 cv
36.0051 13.0625 37.0528 13.0998 38.1476 13.0723 cv
38.3536 13.0566 38.5596 13.039 38.7636 13.0233 cv
39.0442 13.033 39.3286 13.039 39.6112 13.0468 cv
39.7073 13.0429 39.8035 13.0371 39.9055 13.033 cv
40.0095 13.0468 40.1174 13.0625 40.2273 13.0782 cv
40.3685 13.0625 40.5196 13.0488 40.6628 13.033 cv
41.1847 13.0684 41.6888 13.1371 42.2421 13.1233 cv
42.5168 13.1155 42.7522 13.0468 43.0347 13.0429 cv
43.7332 13.035 44.3767 13.1135 45.0536 13.1096 cv
45.3773 13.1057 45.7148 13.041 46.0502 13.039 cv
46.5779 13.033 47.1293 13.0723 47.6904 13.0664 cv
47.9768 13.0664 48.2397 13.0174 48.5379 13.0155 cv
49.7464 13.0213 50.957 13.0272 52.1675 13.035 cv
52.3754 13.039 52.5442 13.0939 52.7502 13.0939 cv
53.0229 13.0684 53.2976 13.0429 53.5703 13.0194 cv
53.9097 12.9978 54.4865 13.0841 54.771 12.9899 cv
55.1928 13.033 55.4968 13.2666 55.8598 13.4156 cv
56.1678 13.5373 56.6171 13.6452 56.8741 13.8512 cv
56.9212 13.8532 56.9035 13.8708 56.9035 13.9101 cv
56.8623 13.9218 56.8251 13.9277 56.7858 13.9395 cv
56.5995 13.9375 56.415 13.9375 56.2287 13.9375 cv
56.007 13.9336 55.7048 13.8944 55.5262 13.9905 cv
55.438 14.0003 55.3517 14.0101 55.2634 14.0179 cv
54.9887 14.016 54.3216 13.9238 54.1216 14.0121 cv
53.996 14.0121 53.8136 13.9905 53.7115 14.0375 cv
53.4408 14.0239 53.1661 14.0081 52.8954 13.9944 cv
52.7148 13.9689 52.4285 13.8767 52.2499 13.9414 cv
52.0654 13.9414 51.6848 13.8983 51.5475 13.9689 cv
51.2159 13.9728 50.8843 13.9748 50.5529 13.9768 cv
50.2664 13.9768 49.6209 13.8905 49.3816 13.9846 cv
49.3227 13.9944 49.2639 14.0042 49.2069 14.0121 cv
48.9539 14.0121 48.6988 14.0081 48.4438 14.0042 cv
48.3378 14.0003 48.1927 13.965 48.0945 14.0062 cv
47.8905 14.0042 47.5001 13.9218 47.3352 14.0023 cv
47.1273 14.0003 46.8369 13.9611 46.6604 14.0297 cv
46.5309 14.0297 46.3523 14.0042 46.2484 14.0552 cv
45.8795 14.0552 45.5067 14.0513 45.1379 14.0513 cv
44.9829 14.0494 44.7671 14.02 44.6415 14.0749 cv
44.2374 14.0729 43.8568 14.0435 43.4389 14.0395 cv
43.2957 14.0395 43.123 14.0179 42.9994 14.067 cv
42.6581 14.0552 42.3186 14.0435 41.9773 14.0317 cv
41.5869 14.0278 41.1964 14.0239 40.806 14.02 cv
40.6981 14.0023 40.5902 13.9866 40.4823 13.9689 cv
40.1527 13.965 39.8191 13.9611 39.4896 13.9572 cv
39.3502 13.9572 39.1639 13.9375 39.0501 13.9885 cv
38.9814 13.9964 38.9128 14.0042 38.8441 14.016 cv
38.7421 14.014 38.6047 14.0003 38.5223 14.0416 cv
37.2274 14.0356 35.9404 13.9572 34.6613 13.9317 cv
34.4866 13.9297 34.31 13.9277 34.1354 13.9277 cv
33.9864 13.9238 33.8059 13.8708 33.6646 13.9257 cv
33.437 13.9257 33.1015 13.8747 32.9053 13.9533 cv
32.358 13.9375 31.8106 13.9238 31.2671 13.9101 cv
31.0376 13.8924 30.4373 13.8257 30.2411 13.9061 cv
30.0252 13.9061 29.5917 13.8551 29.4229 13.9336 cv
29.3445 13.9414 29.266 13.9512 29.1875 13.9611 cv
28.8854 13.9591 28.6343 13.8983 28.34 13.8963 cv
28.34 13.7452 29.0129 13.5079 29.1483 13.4392 cv
cp
31.477 12.5093 mo
31.585 12.5093 31.8302 12.3249 31.9498 12.2797 cv
32.0657 12.2424 32.1834 12.2032 32.301 12.1639 cv
32.4012 12.109 32.4992 12.0561 32.5993 12.0011 cv
32.9524 11.8638 33.3605 11.7598 33.7431 11.6931 cv
34.0041 11.6421 34.3003 11.695 34.5553 11.7049 cv
34.8967 11.7166 35.2223 11.6833 35.552 11.6833 cv
35.7403 11.6852 35.9699 11.7049 36.1366 11.6578 cv
36.427 11.6774 36.7311 11.6617 37.043 11.6617 cv
37.4472 11.6656 37.8533 11.6852 38.2712 11.701 cv
39.6544 11.752 41.1278 11.7951 42.5463 11.7794 cv
42.7699 11.7637 42.9936 11.7441 43.2172 11.7284 cv
43.5508 11.7382 43.8822 11.75 44.2138 11.7617 cv
45.8422 11.7441 47.5157 11.697 49.1598 11.7559 cv
49.7053 11.7539 50.2546 11.7461 50.8001 11.7401 cv
51.0335 11.7461 51.265 11.75 51.4965 11.7559 cv
51.9635 11.8323 52.3244 12.1699 52.7875 12.2679 cv
53.0444 12.3209 53.6742 12.3994 53.8391 12.576 cv
53.7998 12.5857 53.7605 12.5936 53.7214 12.6054 cv
53.6526 12.6152 53.5839 12.625 53.5153 12.6328 cv
53.2897 12.6289 53.066 12.625 52.8443 12.6191 cv
52.6383 12.5857 52.4324 12.5505 52.2264 12.5171 cv
52.0223 12.5132 51.8163 12.5093 51.6142 12.5054 cv
51.4907 12.5054 51.3357 12.4877 51.2336 12.5328 cv
51.0531 12.5328 50.6666 12.4896 50.5313 12.5563 cv
50.388 12.5563 50.2114 12.5367 50.0918 12.5857 cv
49.8897 12.5857 49.617 12.5426 49.4483 12.6112 cv
49.1225 12.6093 48.2985 12.5406 48.0729 12.6623 cv
47.9219 12.6604 47.71 12.5976 47.5766 12.6584 cv
47.3823 12.6584 47.2195 12.6172 47.0488 12.6015 cv
46.835 12.6015 46.6172 12.5956 46.4033 12.5936 cv
46.2582 12.5936 46.0894 12.5721 45.9639 12.6191 cv
45.7854 12.6191 45.5598 12.5877 45.4087 12.6466 cv
45.2203 12.6446 44.9829 12.6093 44.824 12.6721 cv
44.3139 12.6701 43.8254 12.6368 43.3015 12.6348 cv
43.1446 12.6328 42.9288 12.6015 42.8032 12.6604 cv
42.6953 12.6604 42.5737 12.6505 42.4815 12.6878 cv
42.3834 12.6878 42.2676 12.6839 42.1871 12.7152 cv
41.7143 12.7133 41.267 12.6604 40.8119 12.6505 cv
40.3076 12.6485 39.7975 12.6427 39.2934 12.6407 cv
39.0991 12.6348 38.6773 12.5721 38.5301 12.6368 cv
38.1221 12.6348 37.7121 12.6328 37.302 12.6289 cv
37.1529 12.6289 36.9626 12.6054 36.835 12.6563 cv
36.7762 12.6662 36.7154 12.676 36.6585 12.6839 cv
36.1131 12.6799 35.5657 12.674 35.0183 12.6701 cv
34.932 12.6524 34.8417 12.6368 34.7554 12.623 cv
34.5514 12.6191 34.3474 12.6132 34.1414 12.6112 cv
34.0276 12.6054 33.8666 12.5641 33.7627 12.6112 cv
32.9819 12.6054 32.2363 12.5721 31.477 12.5701 cv
31.477 12.5505 31.477 12.5289 31.477 12.5093 cv
cp
35.7305 11.2183 mo
36.0425 11.2203 36.2799 11.079 36.5545 11.026 cv
37.0215 10.9358 37.4668 10.8534 37.9299 10.7729 cv
38.2319 10.7181 38.5655 10.7533 38.8912 10.7298 cv
39.3325 10.6965 39.7897 10.5767 40.239 10.5454 cv
40.4253 10.5316 40.5922 10.4964 40.7668 10.4983 cv
40.9865 10.4983 41.1886 10.5061 41.3828 10.4296 cv
41.8105 10.4355 42.2382 10.4394 42.6679 10.4433 cv
42.9327 10.4669 43.2035 10.4787 43.4899 10.5061 cv
43.6821 10.5336 43.8803 10.5591 44.0745 10.5846 cv
44.3669 10.5886 44.6592 10.5925 44.9515 10.5964 cv
45.0889 10.616 45.2243 10.6337 45.3616 10.6533 cv
45.5558 10.6592 45.75 10.6631 45.9443 10.6709 cv
46.1895 10.7141 46.4348 10.7553 46.678 10.7965 cv
46.7761 10.7984 46.8722 10.7984 46.9684 10.8004 cv
47.0802 10.8161 47.1705 10.871 47.2685 10.9122 cv
47.398 10.9612 47.5295 10.9868 47.6727 11.0143 cv
48.2123 11.1123 48.8224 11.1123 49.3619 11.2144 cv
49.3874 11.2183 49.4404 11.2261 49.4502 11.2556 cv
49.4051 11.3399 48.5202 11.2457 48.3712 11.2889 cv
48.2456 11.2988 48.118 11.3105 47.9925 11.3223 cv
47.7434 11.3164 47.4706 11.287 47.2018 11.2772 cv
47.1215 11.2752 46.9841 11.2418 46.9076 11.2811 cv
46.7584 11.2792 46.574 11.2321 46.4406 11.2772 cv
46.3131 11.2928 46.1876 11.3105 46.06 11.3262 cv
45.7343 11.3243 45.1909 11.1634 44.8888 11.3262 cv
44.5219 11.3243 44.2158 11.2831 43.8666 11.2556 cv
43.6998 11.2399 43.4664 11.1987 43.3094 11.2595 cv
43.1426 11.2595 43.023 11.3027 42.868 11.3066 cv
42.6855 11.3085 42.509 11.23 42.3441 11.3125 cv
42.2363 11.3125 42.1323 11.3243 42.0498 11.3694 cv
41.2788 11.3655 40.5117 11.3576 39.7368 11.3537 cv
39.5916 11.336 39.4444 11.3164 39.2973 11.2967 cv
38.948 11.2948 38.5969 11.2909 38.2457 11.2889 cv
38.0279 11.287 37.455 11.2203 37.3099 11.285 cv
36.7704 11.2811 36.2779 11.2477 35.7305 11.2457 cv
35.7305 11.236 35.7305 11.2281 35.7305 11.2183 cv
cp
60.3389 68.9459 mo
60.0584 68.9439 59.5522 68.9968 59.3167 68.9106 cv
59.2971 68.9106 59.2775 68.9106 59.2579 68.9106 cv
59.2579 68.9007 59.2579 68.8929 59.2579 68.8831 cv
59.3795 68.8301 59.4973 68.7751 59.615 68.7222 cv
60.0819 68.5574 60.6037 68.4612 61.0197 68.1866 cv
61.2865 68.3554 60.4448 68.8655 60.3389 68.9459 cv
cp
19.2465 64.6493 mo
19.2465 64.6394 19.2484 64.6277 19.2484 64.6179 cv
19.0522 64.6179 18.5185 63.9547 18.4028 63.7958 cv
18.4028 63.7841 18.4028 63.7742 18.4028 63.7645 cv
18.4127 63.7645 18.4224 63.7645 18.4322 63.7645 cv
18.4322 63.7135 18.6187 63.7232 18.6677 63.7095 cv
18.7991 63.7174 19.0032 63.7095 19.1091 63.7802 cv
19.219 63.8547 19.2622 64.4844 19.2798 64.6493 cv
19.2661 64.6493 19.2582 64.6493 19.2465 64.6493 cv
cp
18.03 63.3014 mo
17.9162 63.2681 17.3003 62.6462 17.2826 62.5206 cv
17.2708 62.4597 17.2962 62.4245 17.3296 62.3852 cv
17.5043 62.393 17.6809 62.4048 17.8555 62.4126 cv
18.1027 62.4146 18.8384 62.3263 19.011 62.4696 cv
19.113 62.5519 19.1228 63.1287 19.0796 63.2701 cv
19.0796 63.325 19.0071 63.3171 18.96 63.321 cv
18.6932 63.3407 18.2812 63.372 18.03 63.3014 cv
cp
16.2839 61.1492 mo
16.2917 61.1492 16.3036 61.1492 16.3114 61.1492 cv
16.3114 61.1413 16.3114 61.1296 16.3114 61.1197 cv
16.3977 61.1197 16.4782 61.1688 16.5743 61.1747 cv
16.7666 61.1845 16.951 61.1492 17.1315 61.1335 cv
17.3826 61.11 17.6651 61.1452 17.8927 61.0707 cv
18.191 61.0727 18.7482 61.0118 18.9757 61.1335 cv
19.011 61.1335 19.0032 61.1236 19.0032 61.1629 cv
19.0032 61.3414 19.0581 61.7751 18.9894 61.9006 cv
18.9345 61.9301 18.8795 61.9556 18.8227 61.983 cv
18.7167 61.983 18.5932 61.9752 18.5009 62.0105 cv
18.3518 62.0105 17.9829 61.9457 17.8888 61.9772 cv
17.8201 61.9889 17.7515 61.9968 17.6809 62.0066 cv
17.4337 62.0046 17.1786 62.0458 16.9569 61.983 cv
16.7744 61.9241 16.3389 61.3238 16.2839 61.1492 cv
cp
16.0328 60.7078 mo
15.923 60.6627 15.505 60.0858 15.5797 59.9878 cv
15.662 59.8779 16.3173 59.919 16.4938 59.8622 cv
17.3512 59.868 18.1399 59.872 18.9835 59.8779 cv
18.9796 60.1074 18.9522 60.3723 19.0071 60.5763 cv
18.9835 60.5763 18.6422 60.6547 18.6265 60.6627 cv
18.4891 60.6783 18.3538 60.6901 18.2165 60.7019 cv
18.0615 60.6901 17.9045 60.6744 17.7476 60.6607 cv
17.5671 60.6547 17.4081 60.6862 17.2472 60.696 cv
17.155 60.7039 17.0393 60.6803 16.9588 60.7136 cv
16.8431 60.7117 16.7018 60.7195 16.6077 60.7725 cv
16.4134 60.7686 16.1976 60.7725 16.0328 60.7078 cv
cp
15.4717 59.5345 mo
15.3677 59.5345 15.252 59.5267 15.1774 59.4698 cv
15.1009 59.3717 15.0283 59.2735 14.9537 59.1735 cv
14.7909 58.9381 14.6065 58.7439 14.5712 58.4476 cv
14.8439 58.4496 15.0499 58.5084 15.3324 58.5104 cv
15.5345 58.5026 15.7405 58.4967 15.9465 58.4888 cv
16.2878 58.4948 16.6684 58.5242 17.0275 58.5163 cv
17.2139 58.4987 17.3983 58.4829 17.5867 58.4672 cv
17.9654 58.4653 18.3715 58.5457 18.7266 58.4417 cv
18.8011 58.4672 18.8737 58.4908 18.9483 58.5143 cv
19.0581 58.6105 19.015 59.1716 19.0129 59.3482 cv
19.0129 59.4011 18.9345 59.3874 18.8972 59.407 cv
18.6029 59.407 18.3126 59.4031 18.0183 59.4031 cv
17.9006 59.4011 17.7318 59.3834 17.6377 59.4306 cv
17.4434 59.4285 17.1256 59.3756 16.9648 59.4561 cv
16.69 59.4541 16.1447 59.3913 15.9406 59.509 cv
15.7895 59.5071 15.5953 59.4855 15.4717 59.5345 cv
cp
13.8179 57.1253 mo
13.8688 57.1253 13.9237 57.092 13.963 57.0665 cv
14.3749 57.1214 14.789 57.1665 15.2225 57.1842 cv
15.3383 57.1783 15.4541 57.1783 15.5717 57.1704 cv
15.6797 57.1861 15.7856 57.2018 15.8936 57.2194 cv
16.1192 57.2234 16.3448 57.2254 16.5684 57.2273 cv
16.8372 57.2312 17.0609 57.1665 17.3277 57.1783 cv
17.5121 57.2097 17.7005 57.2352 17.8849 57.2606 cv
18.1889 57.2666 18.701 57.1665 18.9423 57.3353 cv
19.0345 57.396 19.0071 57.8689 19.0208 58.0043 cv
19.011 58.0043 19.0012 58.0043 18.9913 58.0043 cv
18.9913 58.0965 18.2949 58.0395 18.1733 58.0886 cv
18.0556 58.0886 17.9162 58.0729 17.8221 58.1142 cv
17.3924 58.1101 16.9628 58.1082 16.535 58.1043 cv
16.3977 58.0847 16.2604 58.0689 16.1231 58.0514 cv
15.9111 58.0494 15.6934 58.0454 15.4796 58.0415 cv
15.3599 58.0415 15.195 58.0259 15.0989 58.071 cv
14.9694 58.0689 14.7948 58.0494 14.6909 58.0965 cv
14.5614 58.0965 14.428 58.0984 14.3259 58.0376 cv
14.0984 57.8964 13.8924 57.3647 13.8179 57.1253 cv
cp
13.6157 56.6505 mo
13.4509 56.5504 13.3136 56.0815 13.2685 55.8952 cv
13.2802 55.8952 13.2881 55.8952 13.2998 55.8952 cv
13.2998 55.8854 13.2998 55.8755 13.2998 55.8658 cv
13.5098 55.8677 13.7001 55.8422 13.912 55.8422 cv
14.0925 55.8382 14.2808 55.854 14.4397 55.8127 cv
14.7909 55.8147 15.1402 55.8187 15.4914 55.8187 cv
15.6287 55.8304 15.766 55.8382 15.9014 55.8461 cv
16.0505 55.8382 16.1956 55.8343 16.3428 55.8246 cv
16.7155 55.8324 17.0864 55.8658 17.4533 55.8794 cv
17.6181 55.8755 17.7848 55.8697 17.9516 55.8658 cv
18.3263 55.8834 18.6696 55.9697 19.0621 55.9854 cv
19.0621 56.2365 19.0287 56.4759 19.0267 56.7447 cv
19.0189 56.7447 19.0071 56.7447 19.0012 56.7447 cv
19.0012 56.7937 18.8344 56.782 18.7933 56.8016 cv
17.6828 56.7957 16.5665 56.7761 15.4874 56.7525 cv
15.3403 56.7349 15.195 56.7172 15.048 56.7015 cv
14.8439 56.6995 14.6379 56.6937 14.4358 56.6898 cv
14.3103 56.6898 14.1612 56.6741 14.0532 56.7172 cv
13.8924 56.7153 13.7393 56.725 13.6157 56.6505 cv
cp
13.0095 55.3654 mo
12.9781 55.2929 12.9487 55.2222 12.9153 55.1457 cv
12.8486 55.0221 12.7093 54.7376 12.8035 54.5905 cv
12.8545 54.5571 12.9015 54.5238 12.9546 54.4904 cv
13.3077 54.4924 13.6569 54.5101 13.9807 54.5316 cv
14.2121 54.5316 14.4476 54.5316 14.6791 54.5316 cv
14.8164 54.5375 14.9537 54.5474 15.0892 54.5552 cv
15.2166 54.5395 15.3442 54.5238 15.4698 54.5081 cv
15.7641 54.5159 16.0583 54.5258 16.3487 54.5375 cv
16.8195 54.5316 17.2943 54.4982 17.7828 54.5179 cv
18.2046 54.5316 18.6068 54.5944 19.0405 54.6101 cv
19.0385 54.767 19.0699 55.3302 18.9874 55.4105 cv
18.9541 55.4224 18.9207 55.4341 18.8855 55.4439 cv
18.5068 55.4479 18.1282 55.4498 17.7476 55.4518 cv
17.3689 55.4537 16.9883 55.4537 16.6077 55.4537 cv
16.4311 55.4341 16.2565 55.4105 16.078 55.387 cv
15.7483 55.3831 15.4148 55.3792 15.0852 55.3753 cv
14.8811 55.3733 14.5672 55.2831 14.3829 55.3733 cv
13.9276 55.3714 13.4686 55.3693 13.0095 55.3654 cv
cp
12.4758 53.998 mo
12.3797 53.9195 12.0991 53.3015 12.2267 53.1995 cv
12.519 52.968 13.2547 53.2113 13.6373 53.0857 cv
14.0474 53.0876 14.4554 53.1347 14.8635 53.1504 cv
15.1559 53.1524 15.4482 53.1583 15.7405 53.1642 cv
15.8876 53.1798 16.0328 53.1975 16.1799 53.2172 cv
16.9196 53.2309 17.6161 53.1897 18.3165 53.2269 cv
18.5088 53.2348 18.86 53.2191 19.0032 53.3133 cv
19.1111 53.3898 19.0875 53.9371 19.0267 54.0451 cv
18.9306 54.2098 17.2021 54.0019 16.8804 54.1314 cv
16.5547 54.1275 16.2133 54.0843 15.8837 54.0843 cv
15.4854 54.0921 15.0832 54.0961 14.683 54.102 cv
14.4593 54.0804 14.2337 54.0569 14.0101 54.0353 cv
13.8727 54.0392 13.7374 54.0412 13.6001 54.0451 cv
13.447 54.0392 13.2469 53.9921 13.1037 54.049 cv
13.0154 54.0588 12.9291 54.0667 12.8408 54.0785 cv
12.7113 54.0785 12.568 54.0706 12.4758 53.998 cv
cp
11.7912 52.1989 mo
11.7715 52.1362 11.7009 52.0203 11.7323 51.9517 cv
11.799 51.8006 12.5347 51.8556 12.7074 51.7947 cv
12.9624 51.8066 13.2135 51.8163 13.4686 51.8262 cv
13.9649 51.8301 14.4613 51.836 14.9558 51.8379 cv
15.0852 51.8556 15.2127 51.8772 15.3403 51.8929 cv
15.6326 51.9085 15.9367 51.8772 16.2172 51.8772 cv
16.4232 51.8869 16.6272 51.8948 16.8314 51.9046 cv
17.0236 51.9007 17.1786 51.8614 17.359 51.8536 cv
17.7338 51.8379 18.1282 51.8262 18.5284 51.8281 cv
18.7167 51.8301 18.9168 51.8144 19.0875 51.8614 cv
19.0875 51.8791 19.0875 51.9007 19.0875 51.9184 cv
19.1366 51.9184 19.1052 51.9458 19.0973 51.9791 cv
19.0738 52.1067 19.1091 52.6737 19.0228 52.7208 cv
18.9365 52.7364 18.8462 52.7483 18.7599 52.764 cv
18.4067 52.764 18.0556 52.76 17.7044 52.758 cv
17.5278 52.758 17.3003 52.7247 17.1492 52.7836 cv
16.7234 52.7816 16.3055 52.7659 15.8621 52.7424 cv
15.711 52.7325 15.4717 52.6776 15.3364 52.7443 cv
15.0322 52.7483 14.7281 52.7502 14.426 52.7522 cv
14.2024 52.7424 13.551 52.6481 13.3744 52.7345 cv
13.1782 52.7149 12.9859 52.6953 12.7897 52.6776 cv
12.5818 52.6658 12.0933 52.6815 11.954 52.5874 cv
11.8402 52.5128 11.8225 52.3186 11.7912 52.1989 cv
cp
11.5753 51.3396 mo
11.4145 51.216 11.3634 50.7334 11.3379 50.5293 cv
11.5106 50.5293 11.7107 50.5234 11.8657 50.4724 cv
12.2856 50.4862 12.727 50.5038 13.1508 50.543 cv
13.2802 50.5588 13.3901 50.5901 13.5314 50.598 cv
13.8924 50.598 14.2533 50.598 14.6143 50.6 cv
14.8969 50.5843 15.195 50.5333 15.4914 50.5372 cv
15.7071 50.5509 15.923 50.5685 16.1367 50.5823 cv
16.3036 50.5764 16.4703 50.5685 16.6351 50.5588 cv
16.9961 50.5607 17.3551 50.5627 17.7181 50.5646 cv
17.9889 50.5607 18.8952 50.4802 19.0581 50.6117 cv
19.1424 50.6804 19.1444 50.8668 19.1444 50.9825 cv
19.1444 51.0845 19.166 51.2768 19.0993 51.3455 cv
18.9934 51.4495 18.6226 51.3494 18.4734 51.418 cv
18.3557 51.418 18.2184 51.4024 18.1222 51.4456 cv
17.9633 51.4456 17.7221 51.4063 17.5945 51.4711 cv
17.1982 51.4691 16.8098 51.4671 16.3977 51.4632 cv
16.1976 51.4632 15.923 51.4122 15.7542 51.4927 cv
15.5169 51.4867 15.2814 51.4847 15.0499 51.4808 cv
14.7968 51.4691 14.3416 51.3867 14.1121 51.4808 cv
13.7942 51.4789 13.5059 51.4299 13.2057 51.42 cv
12.8761 51.4063 11.7519 51.4789 11.5753 51.3396 cv
cp
11.23 50.1035 mo
11.1319 50.0271 11.1241 49.8524 11.0967 49.7367 cv
11.0751 49.6426 11.0063 49.46 11.0535 49.3561 cv
11.0535 49.309 11.0711 49.3149 11.1123 49.3051 cv
11.3085 49.254 11.5341 49.2756 11.7539 49.2678 cv
12.2856 49.2443 12.8702 49.256 13.4235 49.2521 cv
13.6334 49.2482 13.8846 49.2874 14.067 49.2266 cv
15.2932 49.309 16.5527 49.2698 17.8417 49.2776 cv
18.0948 49.2776 18.9227 49.2305 19.0738 49.3443 cv
19.1327 49.3875 19.0973 49.925 19.0954 50.0467 cv
19.0463 50.0565 18.9954 50.0624 18.9483 50.0722 cv
18.8795 50.082 18.8109 50.0918 18.7442 50.1035 cv
18.5049 50.0996 18.0889 50.0487 17.8966 50.1251 cv
17.6887 50.1251 17.4866 50.1251 17.2806 50.1212 cv
17.204 50.133 17.1237 50.1428 17.0451 50.1487 cv
16.7528 50.1487 16.1839 50.082 15.9642 50.2037 cv
15.7895 50.1997 15.611 50.1997 15.4364 50.1957 cv
15.1402 50.1722 14.6065 50.0526 14.324 50.1644 cv
14.0435 50.1644 13.5765 50.0604 13.3313 50.1605 cv
13.0625 50.1566 12.4503 50.1035 12.2483 50.1821 cv
12.0011 50.1821 11.387 50.2311 11.23 50.1035 cv
cp
10.8847 47.9808 mo
10.8945 47.9808 10.9044 47.9808 10.9122 47.9808 cv
10.9122 47.9415 10.9005 47.9514 10.9417 47.9514 cv
11.5086 47.9436 12.1031 47.9278 12.6995 47.9317 cv
13.0193 47.9337 13.4332 47.9926 13.7217 47.9082 cv
14.169 47.9376 14.6771 47.969 15.1283 47.9729 cv
15.3638 47.9671 15.5933 47.9592 15.8269 47.9533 cv
16.1113 47.9769 16.3919 48.0023 16.6764 48.0259 cv
16.8254 48.0181 16.951 47.9592 17.1158 47.9592 cv
17.3787 47.9592 17.6416 47.9611 17.9045 47.9631 cv
17.9948 47.969 18.0811 47.9749 18.1713 47.9827 cv
18.4734 47.9631 18.8756 47.922 19.1346 48.0554 cv
19.1797 48.0554 19.166 48.073 19.166 48.1161 cv
19.1621 48.3398 19.1601 48.5634 19.1601 48.7871 cv
19.1523 48.7871 19.1405 48.7871 19.1307 48.7871 cv
19.1307 48.8342 18.6304 48.8048 18.5461 48.8421 cv
18.1752 48.8401 17.8064 48.8382 17.4337 48.8362 cv
17.2472 48.8342 17.0216 48.8087 16.8784 48.8931 cv
16.7627 48.8911 16.5998 48.846 16.4998 48.8892 cv
16.178 48.8872 15.2461 48.8166 15.0342 48.9401 cv
14.7576 48.9382 14.5379 48.8813 14.273 48.8773 cv
13.3548 48.8577 12.3875 48.8695 11.4929 48.8067 cv
11.336 48.795 11.0967 48.8499 10.9847 48.7479 cv
10.8494 48.6262 10.8828 48.1888 10.8847 47.9808 cv
cp
10.6689 47.0391 mo
10.6473 46.9174 10.6297 46.7271 10.7494 46.6721 cv
10.9711 46.5721 11.3556 46.6349 11.6224 46.6369 cv
12.3954 46.6408 13.2135 46.6545 13.963 46.627 cv
14.1729 46.6153 14.4181 46.6526 14.6065 46.5937 cv
14.8615 46.6015 15.1127 46.6055 15.3677 46.6094 cv
15.4638 46.6231 15.5639 46.6388 15.66 46.6545 cv
16.023 46.6565 16.384 46.6624 16.745 46.6663 cv
16.8804 46.6742 17.0177 46.68 17.1531 46.6879 cv
17.5807 46.68 18.0496 46.6721 18.4989 46.6742 cv
18.6932 46.6761 18.9502 46.6624 19.113 46.7369 cv
19.2268 46.7369 19.1562 47.4315 19.1091 47.5295 cv
18.9659 47.5295 18.805 47.4726 18.6696 47.5276 cv
18.5088 47.5276 18.2733 47.4883 18.1438 47.5531 cv
17.8025 47.5511 17.4611 47.5492 17.1198 47.5472 cv
16.9588 47.5453 16.7567 47.5198 16.6233 47.5727 cv
16.4566 47.5708 15.8111 47.5198 15.715 47.5669 cv
15.5404 47.5669 15.2677 47.5256 15.1283 47.5943 cv
14.9655 47.5943 14.7792 47.5315 14.632 47.5923 cv
14.1219 47.5904 13.6157 47.5276 13.0821 47.5237 cv
12.9271 47.5334 12.7702 47.5413 12.6152 47.5511 cv
12.4209 47.5492 11.9344 47.5041 11.7931 47.5766 cv
11.5911 47.5747 10.8828 47.5354 10.7827 47.4119 cv
10.714 47.3294 10.6885 47.145 10.6689 47.0391 cv
cp
10.5179 45.4616 mo
10.5277 45.4616 10.5355 45.4616 10.5473 45.4616 cv
10.5473 45.4107 10.6454 45.4264 10.6924 45.4244 cv
10.8258 45.4087 10.9495 45.3773 11.1025 45.3773 cv
11.4851 45.3714 12.0736 45.4538 12.3915 45.3243 cv
12.5622 45.3734 12.9271 45.3381 13.1213 45.3381 cv
13.396 45.3577 13.6687 45.3753 13.9414 45.391 cv
14.116 45.391 14.2926 45.3871 14.4672 45.3852 cv
14.5653 45.3753 14.6614 45.3616 14.7615 45.3518 cv
15.3559 45.3498 15.9484 45.3479 16.5469 45.3479 cv
16.7116 45.3616 16.8784 45.3753 17.0432 45.391 cv
17.21 45.3773 17.3748 45.3675 17.5415 45.3537 cv
17.7083 45.3714 17.8731 45.3871 18.0379 45.4068 cv
18.3244 45.4303 18.807 45.3243 19.0621 45.4224 cv
19.1228 45.4224 19.113 45.5166 19.1189 45.5676 cv
19.1327 45.7442 19.2091 45.9953 19.1424 46.168 cv
19.0836 46.3053 18.187 46.1837 18.0045 46.2621 cv
17.7456 46.2621 17.2492 46.2032 17.0393 46.2876 cv
16.8195 46.2857 16.2997 46.1915 16.1309 46.2543 cv
15.9484 46.2425 15.7621 46.2308 15.5757 46.2209 cv
15.1559 46.219 14.736 46.217 14.3181 46.215 cv
14.1199 46.2131 13.8374 46.1641 13.6746 46.2386 cv
13.4136 46.2386 12.9507 46.1797 12.7368 46.2641 cv
12.3993 46.2621 12.1012 46.2072 11.7715 46.1954 cv
11.7048 46.1974 11.6342 46.1974 11.5675 46.1993 cv
11.4419 46.1993 11.285 46.1797 11.1869 46.2248 cv
10.5316 46.2229 10.5139 46.0914 10.5179 45.4616 cv
cp
10.4374 43.9981 mo
10.6317 43.9804 10.8298 43.9628 11.0221 43.9431 cv
11.3262 43.9412 11.9481 44.0079 12.1914 43.9196 cv
12.3287 43.9235 12.468 43.9255 12.6034 43.9274 cv
12.7014 43.9451 12.8015 43.9608 12.8937 43.9765 cv
13.1409 43.9785 13.3842 43.9804 13.6275 43.9824 cv
13.8198 43.9785 13.9983 43.9295 14.2141 43.9314 cv
14.3986 43.9353 14.583 43.9392 14.7674 43.9431 cv
14.9126 43.9569 15.048 43.9922 15.2069 43.9941 cv
16.539 44.0236 17.8104 43.9981 19.0993 44.0471 cv
19.0993 44.0569 19.0993 44.0648 19.0993 44.0746 cv
19.1484 44.0765 19.1307 44.0923 19.1307 44.1354 cv
19.1268 44.3728 19.166 44.6847 19.0934 44.8927 cv
19.0934 44.9319 19.0875 44.926 19.0621 44.934 cv
18.8952 44.9379 18.7324 44.9437 18.5676 44.9476 cv
18.2949 44.9496 18.0222 44.9476 17.7495 44.9457 cv
17.6142 44.9457 17.4512 44.928 17.3394 44.9712 cv
17.1334 44.9692 16.9314 44.9673 16.7234 44.9614 cv
16.5547 44.9437 16.2958 44.8966 16.1388 44.9673 cv
15.9053 44.9634 15.5757 44.9124 15.3795 44.9908 cv
14.1985 44.9849 13.0193 44.9791 11.8363 44.9712 cv
11.6224 44.9692 11.4066 44.9673 11.1928 44.9614 cv
11.0849 44.9437 10.9789 44.928 10.871 44.9124 cv
10.7572 44.9045 10.6218 44.9124 10.5374 44.8515 cv
10.3962 44.7417 10.3864 44.1767 10.4374 43.9981 cv
cp
10.4256 42.6581 mo
10.4806 42.5973 10.5786 42.5934 10.6493 42.5658 cv
11.5302 42.5698 12.4503 42.615 13.2862 42.6325 cv
13.5098 42.6267 13.7335 42.6189 13.9571 42.613 cv
14.7046 42.6267 15.4717 42.6405 16.2094 42.6444 cv
16.3565 42.6365 16.5037 42.6228 16.6509 42.613 cv
16.7686 42.6267 16.8843 42.6424 17 42.6541 cv
17.5082 42.662 18.0144 42.6738 18.5205 42.6796 cv
18.6854 42.6757 18.9267 42.6365 19.064 42.7189 cv
19.2013 42.8013 19.1072 43.4036 19.1012 43.5782 cv
19.0915 43.5782 19.0817 43.5782 19.0738 43.5782 cv
19.0718 43.643 18.5284 43.5625 18.4283 43.6037 cv
17.9909 43.5998 17.5514 43.5979 17.1119 43.5959 cv
16.9432 43.5939 16.7273 43.5645 16.5861 43.6234 cv
16.3977 43.6214 16.1741 43.5508 15.9994 43.6195 cv
15.3481 43.6175 14.7399 43.5645 14.0964 43.5919 cv
13.9865 43.5979 13.8727 43.5645 13.7766 43.6076 cv
13.19 43.6037 12.6485 43.5782 12.0501 43.5645 cv
11.8696 43.5625 11.6342 43.4801 11.4635 43.5351 cv
11.3752 43.5448 11.2889 43.5547 11.2006 43.5625 cv
10.9553 43.5606 10.6317 43.5841 10.4531 43.4526 cv
10.3236 43.3585 10.3217 42.77 10.4256 42.6581 cv
cp
10.3943 41.2769 mo
11.5989 41.2828 12.8015 41.3357 13.9924 41.3789 cv
14.1396 41.375 14.2847 41.3711 14.4299 41.3652 cv
14.7792 41.375 15.146 41.4339 15.4854 41.4358 cv
15.6248 41.4221 15.7582 41.4084 15.8955 41.3946 cv
16.2526 41.3907 16.5998 41.3828 16.951 41.3966 cv
17.2492 41.4103 19.0581 41.4397 19.1543 41.5438 cv
19.2171 41.6084 19.2013 41.783 19.1974 41.8812 cv
19.1837 42.5267 18.8698 42.1166 18.495 42.2853 cv
17.5004 42.2814 16.5508 42.2461 15.5678 42.2422 cv
15.3638 42.2402 14.8282 42.1813 14.6909 42.2363 cv
13.5412 42.2284 12.3895 42.2206 11.2359 42.2147 cv
10.9553 42.1951 10.6729 42.1735 10.3903 42.1539 cv
10.3649 42.0558 10.3394 41.9557 10.3158 41.8577 cv
10.2922 41.6634 10.3354 41.4417 10.3943 41.2769 cv
cp
10.5611 40.0252 mo
10.7121 40.0154 10.8651 40.0037 11.0162 39.9938 cv
11.1457 39.9899 11.2772 39.9957 11.3968 39.9644 cv
11.5479 40.0037 11.7087 39.9703 11.8657 39.9683 cv
12.2385 39.9703 12.6073 39.9722 12.9781 39.9722 cv
13.2724 39.9742 13.547 40.0016 13.8257 40.0076 cv
14.2121 40.0134 14.5653 39.9761 14.9381 39.984 cv
15.5914 39.9977 16.2878 40.0212 16.9588 40.0252 cv
17.3493 40.0272 18.9306 39.9565 19.1327 40.1174 cv
19.2838 40.239 19.2346 40.753 19.2346 40.9748 cv
19.1052 40.9728 18.9659 41.0238 18.8227 41.0277 cv
18.6284 41.0257 18.4342 41.0218 18.24 41.0218 cv
18.1027 41.016 17.8946 40.9669 17.7711 41.0257 cv
17.3551 41.0218 16.9196 40.9905 16.4841 40.9866 cv
16.3448 40.9866 16.1564 40.965 16.0446 41.016 cv
15.6424 41.014 15.25 40.9866 14.8733 40.9787 cv
14.2788 40.9748 13.6844 40.9708 13.088 40.9689 cv
12.9015 40.963 12.3993 40.8767 12.2679 40.9355 cv
12.0619 40.9335 11.7715 40.8923 11.595 40.961 cv
11.1928 40.9571 10.7925 40.8649 10.3962 40.8374 cv
10.3982 40.6295 10.3688 40.0879 10.5611 40.0252 cv
cp
10.7906 38.7127 mo
11.2457 38.6636 11.7048 38.7048 12.1639 38.7087 cv
12.3778 38.7009 12.5956 38.6931 12.8093 38.6832 cv
13.3313 38.695 13.8727 38.6892 14.4181 38.695 cv
14.7438 38.695 15.0401 38.7067 15.354 38.7009 cv
15.4854 38.695 15.6169 38.7048 15.7366 38.6715 cv
15.97 38.6931 16.2015 38.7107 16.435 38.7303 cv
17.3434 38.7382 18.2517 38.7421 19.1582 38.7499 cv
19.1562 39.0422 19.1739 39.3483 19.1837 39.6583 cv
19.1719 39.6583 19.1621 39.6583 19.1543 39.6583 cv
19.1543 39.6681 19.1543 39.6779 19.1523 39.6857 cv
19.0757 39.676 18.9973 39.6681 18.9168 39.6583 cv
18.7638 39.6524 18.6068 39.6485 18.4499 39.6426 cv
18.3244 39.627 18.1007 39.57 17.9829 39.621 cv
17.7397 39.621 17.4218 39.5484 17.2217 39.6466 cv
16.8254 39.6445 16.4527 39.5994 16.078 39.5857 cv
15.9308 39.5877 15.7837 39.5936 15.6365 39.5975 cv
15.4756 39.5896 15.2598 39.5445 15.1147 39.6054 cv
14.9243 39.6034 14.5653 39.5406 14.4123 39.6014 cv
14.1298 39.5994 13.8473 39.5975 13.5647 39.5975 cv
13.4058 39.5955 13.2018 39.57 13.0684 39.6229 cv
12.7368 39.619 12.4033 39.6151 12.0736 39.6132 cv
11.9383 39.6014 11.7323 39.5426 11.6028 39.5857 cv
11.2811 39.5838 10.8671 39.6367 10.5786 39.5504 cv
10.5335 39.5504 10.5414 39.5308 10.5355 39.4895 cv
10.5022 39.2503 10.5238 38.7401 10.7906 38.7127 cv
cp
10.6022 38.0593 mo
10.7121 37.4845 10.6846 37.4159 11.3223 37.3922 cv
11.4616 37.3844 11.6067 37.3982 11.7323 37.3609 cv
11.9147 37.3982 12.1187 37.3844 12.3169 37.4002 cv
12.7074 37.4198 13.0997 37.4394 13.4882 37.459 cv
13.6844 37.4511 13.8806 37.4414 14.0729 37.4335 cv
15.8269 37.4453 17.5553 37.406 19.2229 37.5198 cv
19.221 37.7886 19.213 38.0554 19.1307 38.281 cv
19.1307 38.4047 18.5519 38.2732 18.4303 38.334 cv
17.5906 38.33 16.7509 38.3242 15.9131 38.3183 cv
15.5992 38.3065 14.94 38.1672 14.6536 38.2849 cv
14.5084 38.2849 14.3201 38.2222 14.1866 38.281 cv
14.1277 38.2928 14.069 38.3006 14.0101 38.3105 cv
13.6413 38.3065 13.2685 38.3026 12.8996 38.3006 cv
12.4994 38.2712 12.0796 38.2261 11.6675 38.2378 cv
11.5656 38.2378 11.4361 38.2281 11.3478 38.2654 cv
11.1006 38.2654 10.8258 38.3086 10.6179 38.2045 cv
10.5611 38.2045 10.5944 38.0986 10.6022 38.0593 cv
cp
10.8298 36.8881 mo
10.8318 36.7057 10.8534 36.2543 11.0181 36.1876 cv
11.2261 36.1072 11.5224 36.1327 11.7696 36.1327 cv
12.1207 36.1347 12.4935 36.1327 12.8231 36.1151 cv
12.931 36.1033 13.039 36.0935 13.1448 36.0818 cv
13.9904 36.166 14.9381 36.1504 15.8366 36.1563 cv
16.0799 36.1681 16.3212 36.1759 16.5665 36.1876 cv
16.9432 36.1818 17.31 36.1582 17.7103 36.166 cv
17.8849 36.1779 18.0615 36.1876 18.2361 36.1975 cv
18.5519 36.2034 18.9738 36.1465 19.2052 36.3231 cv
19.2896 36.3877 19.2523 36.8782 19.2562 37.0235 cv
19.2465 37.0235 19.2366 37.0235 19.2268 37.0235 cv
19.2268 37.0863 18.8855 37.0274 18.8149 37.0509 cv
18.3773 37.0489 17.9398 37.047 17.5004 37.045 cv
17.3003 37.0431 17.0255 36.9999 16.8568 37.0686 cv
16.7116 37.0686 16.3781 37.0176 16.2702 37.0647 cv
16.0249 37.0647 15.711 36.9705 15.4796 37.0608 cv
14.991 37.0392 14.5044 37.0156 14.0179 36.9941 cv
13.8904 36.9941 13.7138 36.9744 13.6079 37.0215 cv
13.3646 37.0215 12.8682 36.9194 12.674 37.0176 cv
12.0658 37.0136 11.4616 37.0097 10.8573 37.0058 cv
10.8573 36.998 10.8573 36.9861 10.8573 36.9764 cv
10.8083 36.9764 10.8298 36.9274 10.8298 36.8881 cv
cp
11.3281 34.9478 mo
11.3909 34.9026 11.4517 34.8595 11.5125 34.8163 cv
12.1698 34.8202 12.8329 34.8575 13.4725 34.881 cv
13.7256 34.883 13.9807 34.881 14.2337 34.881 cv
14.3868 34.8692 14.532 34.8301 14.7007 34.8359 cv
15.5757 34.8516 16.4292 34.9007 17.3375 34.9065 cv
17.6082 34.9065 17.8829 34.9065 18.1556 34.9085 cv
18.444 34.9046 18.9483 34.8202 19.2013 34.9635 cv
19.3445 35.0439 19.2994 35.601 19.2622 35.7659 cv
19.1562 35.7659 18.9738 35.7463 18.8816 35.7914 cv
18.6971 35.7835 18.5107 35.7737 18.3263 35.7639 cv
17.8162 35.7423 17.3296 35.7521 16.8058 35.7521 cv
16.6469 35.7482 16.4134 35.6874 16.2781 35.7482 cv
15.1892 35.7443 14.1357 35.709 13.0311 35.7031 cv
12.5818 35.6992 12.0933 35.6992 11.6538 35.6697 cv
11.4753 35.656 11.3085 35.6599 11.1574 35.601 cv
11.1594 35.4519 11.2438 35.0497 11.3281 34.9478 cv
cp
11.8048 33.5547 mo
11.8735 33.4959 11.9893 33.5038 12.0756 33.4704 cv
12.213 33.49 12.3523 33.5077 12.4857 33.5253 cv
12.6504 33.5175 12.8192 33.5136 12.984 33.5057 cv
13.186 33.5175 13.3941 33.5273 13.5981 33.5372 cv
13.8414 33.5214 14.0846 33.5038 14.3279 33.488 cv
14.8714 33.4979 15.4422 33.5685 15.9975 33.5705 cv
16.6332 33.5744 17.3061 33.5607 17.9594 33.5646 cv
18.1949 33.5646 19.2013 33.5646 19.3132 33.6784 cv
19.3818 33.7549 19.3602 33.9295 19.3602 34.0394 cv
19.3563 34.2317 19.368 34.3612 19.2386 34.4789 cv
19.0071 34.4828 18.7717 34.4867 18.5362 34.4906 cv
18.3911 34.4925 18.1988 34.4376 18.0693 34.5004 cv
17.5043 34.4965 16.9392 34.4925 16.3742 34.4886 cv
16.1544 34.4789 15.8759 34.3768 15.6699 34.4867 cv
14.9753 34.4847 14.3083 34.469 13.6549 34.4279 cv
13.4725 34.4141 13.0114 34.369 12.8624 34.4435 cv
12.8035 34.4514 12.7446 34.4612 12.6858 34.4709 cv
12.2737 34.469 11.9089 34.3729 11.5145 34.3454 cv
11.5164 34.157 11.6656 33.6627 11.8048 33.5547 cv
cp
12.1168 32.305 mo
12.1953 32.2285 12.3346 32.2227 12.4347 32.1854 cv
12.8015 32.1873 13.1429 32.256 13.4882 32.2756 cv
13.859 32.2775 14.2279 32.2795 14.6007 32.2795 cv
14.7262 32.2678 14.8537 32.254 14.9793 32.2363 cv
15.1931 32.2402 15.3893 32.2933 15.6248 32.2913 cv
15.8778 32.2834 16.1309 32.2756 16.386 32.2678 cv
16.7077 32.2736 17.0687 32.3168 17.4081 32.309 cv
18.0144 32.2913 18.6932 32.2834 19.2817 32.3423 cv
19.2817 32.4953 19.3602 32.978 19.2778 33.0761 cv
19.219 33.1035 19.1601 33.131 19.1012 33.1605 cv
18.8011 33.1585 18.4617 33.1231 18.2243 33.2428 cv
18.034 33.2428 17.8692 33.1938 17.6965 33.184 cv
17.5023 33.184 17.3061 33.182 17.1119 33.182 cv
17.0138 33.1899 16.9177 33.1977 16.8215 33.2056 cv
16.5959 33.1918 16.3703 33.1781 16.1466 33.1644 cv
16.0505 33.1486 15.9504 33.131 15.8523 33.1153 cv
15.1676 33.0898 14.5084 33.0761 13.806 33.0722 cv
13.5627 33.0702 13.1252 33.0191 12.9291 33.0957 cv
12.729 33.0957 12.0835 33.0977 11.9579 33.0191 cv
11.8402 32.9466 12.0364 32.3796 12.1168 32.305 cv
cp
12.4072 31.7498 mo
12.4287 31.5261 12.572 31.0788 12.7348 30.9298 cv
12.7348 30.9199 12.7348 30.9121 12.7348 30.9003 cv
13.2862 30.9043 13.8099 30.965 14.3436 30.9591 cv
14.8243 30.9533 15.3638 30.9376 15.866 30.9473 cv
16.0191 30.967 16.178 30.9846 16.331 31.0023 cv
16.539 31.014 16.7509 30.9885 16.949 30.9846 cv
17.106 30.9945 17.261 31.0043 17.416 31.0101 cv
17.8279 31.0062 18.2557 31.0101 18.6735 31.02 cv
18.8501 31.0219 19.0796 30.9885 19.2171 31.0729 cv
19.3053 31.1259 19.2798 31.6752 19.2877 31.8145 cv
19.2739 31.8145 19.2661 31.8145 19.2543 31.8145 cv
19.2543 31.8675 19.1189 31.8518 19.0796 31.8715 cv
18.9443 31.8715 18.7521 31.844 18.6402 31.8989 cv
18.3635 31.8969 17.9162 31.7851 17.6749 31.893 cv
17.5239 31.893 17.312 31.838 17.1786 31.8911 cv
17.0706 31.8891 16.9432 31.8793 16.8568 31.9185 cv
16.4566 31.8891 16.0544 31.8636 15.6542 31.8322 cv
15.4972 31.8322 15.352 31.8812 15.1872 31.8715 cv
14.9733 31.8557 14.7399 31.8499 14.5163 31.8421 cv
14.4123 31.838 14.2887 31.8106 14.1925 31.846 cv
14.067 31.844 13.9159 31.8244 13.8119 31.8715 cv
13.4529 31.8715 12.7093 31.9303 12.4386 31.8067 cv
12.3915 31.8067 12.4033 31.791 12.4072 31.7498 cv
cp
13.1076 29.99 mo
13.1488 29.8918 13.1448 29.78 13.2096 29.6937 cv
13.2528 29.6329 13.3253 29.6172 13.3862 29.5858 cv
13.7629 29.5898 14.1102 29.6192 14.4986 29.6211 cv
14.7026 29.6153 14.9066 29.6054 15.1107 29.5976 cv
15.6149 29.6073 16.1839 29.6545 16.6939 29.6565 cv
17.0138 29.6584 17.3414 29.6192 17.6593 29.6133 cv
18.2027 29.5976 18.7461 29.625 19.2661 29.68 cv
19.2817 29.7584 19.3013 29.835 19.3171 29.9134 cv
19.3347 30.1351 19.3132 30.3784 19.2916 30.5844 cv
19.1621 30.5844 19.0189 30.5688 18.911 30.6139 cv
18.4146 30.6099 17.9162 30.6079 17.4199 30.604 cv
17.0295 30.5923 16.639 30.5766 16.2487 30.5648 cv
16.0073 30.5472 15.5345 30.4745 15.3128 30.5628 cv
15.199 30.5628 15.0499 30.5707 14.9597 30.6198 cv
14.6869 30.5923 14.4142 30.5609 14.1396 30.5334 cv
13.7315 30.5295 13.3234 30.5256 12.9134 30.5216 cv
12.9134 30.5118 12.9134 30.5021 12.9134 30.4922 cv
12.9015 30.4922 12.8937 30.4922 12.884 30.4922 cv
12.884 30.3137 13.0409 30.141 13.1076 29.99 cv
cp
13.8609 28.2733 mo
14.0807 28.2733 14.273 28.3302 14.4731 28.3223 cv
15.0048 28.2909 15.5521 28.2831 16.1172 28.2831 cv
16.2526 28.2909 16.3899 28.2988 16.5214 28.3066 cv
17.1119 28.2909 17.7632 28.2772 18.3675 28.2988 cv
18.6971 28.3125 19.0012 28.4087 19.3328 28.4204 cv
19.3308 28.5892 19.368 29.0365 19.2877 29.1483 cv
19.1758 29.2954 18.0261 29.2425 17.777 29.2267 cv
17.569 29.2111 17.2688 29.1384 17.0746 29.2267 cv
16.8431 29.2248 16.6077 29.2248 16.3742 29.2209 cv
16.2349 29.217 16.0622 29.1699 15.9327 29.2209 cv
15.3775 29.2189 14.7831 29.2287 14.2063 29.2092 cv
13.9826 29.1993 13.7707 29.1503 13.5353 29.1483 cv
13.5373 28.8206 13.704 28.5264 13.8609 28.2733 cv
cp
14.1513 27.7494 mo
14.1533 27.5964 14.3593 27.1922 14.4692 27.0903 cv
14.5221 27.0412 14.5966 27.0196 14.6594 26.9882 cv
15.1519 26.9921 15.6188 27.0314 16.0937 27.0255 cv
16.6803 27.0196 17.3199 27.0039 17.9378 27.0079 cv
18.2753 27.0098 18.9894 26.9647 19.2406 27.0942 cv
19.3563 27.153 19.3563 27.3571 19.3563 27.4826 cv
19.3563 27.5964 19.3602 27.8947 19.2386 27.9221 cv
19.166 27.9319 19.0895 27.9417 19.0129 27.9496 cv
18.7834 27.9496 18.497 27.8593 18.2812 27.9456 cv
17.8495 27.9437 17.4081 27.928 16.9667 27.9044 cv
16.7882 27.8947 16.3487 27.8319 16.2055 27.9044 cv
16.1192 27.9142 16.027 27.9221 15.9406 27.9338 cv
15.5678 27.9299 15.2147 27.8887 14.8596 27.8711 cv
14.6379 27.8593 14.377 27.8828 14.1866 27.8044 cv
14.1396 27.8044 14.1513 27.7887 14.1513 27.7494 cv
cp
15.2363 25.7659 mo
15.4286 25.6815 15.9111 25.7385 16.1583 25.7404 cv
16.5998 25.7424 17.051 25.7189 17.4748 25.7228 cv
17.7279 25.7228 18.0006 25.7581 18.2635 25.7463 cv
18.3911 25.7326 18.5185 25.7149 18.6461 25.7012 cv
18.8168 25.6914 19.0189 25.7149 19.1719 25.6698 cv
19.2229 25.6698 19.27 25.6698 19.319 25.6698 cv
19.319 25.6796 19.319 25.6895 19.319 25.6992 cv
19.3563 25.6992 19.3484 25.6875 19.3484 25.7287 cv
19.3426 25.8601 19.3249 26.5547 19.2562 26.5938 cv
19.166 26.6449 19.0189 26.6331 18.9051 26.6331 cv
18.7089 26.6292 18.5146 26.6272 18.3204 26.6253 cv
18.1007 26.6096 17.6043 26.5291 17.4121 26.6253 cv
17.1668 26.6233 16.8686 26.5311 16.6509 26.6193 cv
16.3545 26.6174 15.8269 26.4919 15.5972 26.6135 cv
15.4737 26.6135 15.2872 26.5919 15.1872 26.643 cv
15.0401 26.6312 14.8949 26.6214 14.7497 26.6096 cv
14.7497 26.4643 15.1127 25.819 15.2363 25.7659 cv
cp
15.7052 25.0714 mo
15.7935 24.9106 15.9897 24.5378 16.1544 24.4514 cv
16.2781 24.3808 16.4409 24.3926 16.5762 24.3377 cv
16.8117 24.3416 17.0432 24.3416 17.2767 24.3435 cv
17.62 24.3553 17.9889 24.3886 18.3322 24.3965 cv
18.4891 24.3847 18.6422 24.373 18.7991 24.3612 cv
18.9757 24.367 19.1543 24.4044 19.3563 24.4123 cv
19.3524 24.5947 19.3936 25.0714 19.3073 25.197 cv
19.2523 25.2284 19.2013 25.2578 19.1444 25.2892 cv
18.9561 25.2873 18.7324 25.2578 18.5912 25.3461 cv
18.4421 25.3402 18.2988 25.3324 18.1517 25.3304 cv
17.9555 25.3009 17.6789 25.2284 17.4768 25.3088 cv
17.4179 25.3186 17.363 25.3265 17.3022 25.3363 cv
17.2256 25.3461 17.1472 25.354 17.0687 25.3618 cv
16.9117 25.354 16.7548 25.3441 16.5998 25.3324 cv
16.3036 25.3265 15.9288 25.3795 15.662 25.297 cv
15.5678 25.297 15.6855 25.1008 15.7052 25.0714 cv
cp
16.7234 23.4862 mo
16.796 23.3744 16.8843 23.1997 17.0039 23.1311 cv
17.0922 23.0801 17.2295 23.1095 17.3434 23.1095 cv
17.6729 23.0997 18.0438 23.086 18.3969 23.0879 cv
18.5755 23.0899 18.7991 23.1173 18.9522 23.0624 cv
19.0699 23.0644 19.1876 23.0644 19.3053 23.0663 cv
19.319 23.1429 19.3386 23.2213 19.3524 23.2979 cv
19.3563 23.5039 19.3563 23.7099 19.3563 23.9139 cv
19.3484 23.9139 19.3406 23.9139 19.3308 23.9139 cv
19.3308 23.961 19.0875 23.9473 19.0345 23.9708 cv
18.7226 23.961 18.4106 23.9492 18.1007 23.9355 cv
17.9849 23.9335 17.8456 23.9257 17.7476 23.9629 cv
17.5043 23.9629 17.0706 23.91 16.8725 23.9885 cv
16.7548 23.9786 16.6371 23.9669 16.5194 23.957 cv
16.5214 23.7824 16.6351 23.6177 16.7234 23.4862 cv
cp
17.6102 22.5877 mo
17.6122 22.3875 17.9006 22.2777 17.9987 22.1344 cv
18.0967 21.9873 18.1889 21.848 18.3165 21.7126 cv
18.55 21.7224 19.1405 21.7126 19.3093 21.8068 cv
19.3563 21.8068 19.3406 21.8244 19.3406 21.8656 cv
19.3406 22.1188 19.3386 22.3718 19.3386 22.6249 cv
19.3269 22.6249 19.3171 22.6249 19.3053 22.6249 cv
19.3053 22.6622 19.3171 22.6544 19.2798 22.6544 cv
19.0444 22.6484 18.7324 22.5661 18.5166 22.6524 cv
18.4479 22.6602 18.3793 22.67 18.3126 22.6779 cv
18.0732 22.6779 17.8064 22.6995 17.6102 22.6151 cv
17.6023 22.6151 17.5906 22.6151 17.5807 22.6151 cv
17.5807 22.5778 17.571 22.5877 17.6102 22.5877 cv
cp
18.6696 21.2771 mo
18.6696 21.2771 19.1679 20.6826 19.2307 20.6042 cv
19.3406 20.6983 19.374 21.1868 19.27 21.3026 cv
19.1758 21.4085 18.8149 21.4006 18.699 21.334 cv
18.6893 21.334 18.6815 21.334 18.6696 21.334 cv
18.6696 21.3144 18.6696 21.2948 18.6696 21.2771 cv
cp
64.8788 65.0494 mo
64.971 64.92 65.0612 64.7925 65.1515 64.661 cv
65.2888 64.3962 65.3869 64.0881 65.4615 63.7958 cv
65.6949 63.7958 65.9284 63.7958 66.1618 63.7978 cv
66.1618 63.8076 66.1618 63.8174 66.1618 63.8273 cv
66.1736 63.8273 66.1815 63.8273 66.1913 63.8273 cv
66.1913 64.1019 65.1083 64.9632 64.8689 65.1083 cv
64.8729 65.0907 64.8768 65.0691 64.8788 65.0494 cv
cp
65.6754 20.3687 mo
65.7832 20.4511 66.3561 20.969 66.2835 21.0985 cv
66.2404 21.1829 66.0657 21.177 65.9893 21.2201 cv
65.9107 21.2201 65.7891 21.2162 65.7341 21.1731 cv
65.6301 21.0888 65.6674 20.5256 65.6754 20.3687 cv
cp
67.3292 22.5719 mo
67.3292 22.5817 67.3292 22.5916 67.3292 22.6013 cv
67.2703 22.6132 67.2115 22.621 67.1527 22.6289 cv
66.98 22.6289 65.8166 22.5974 65.7596 22.5445 cv
65.6733 22.4679 65.6949 22.2757 65.6929 22.154 cv
65.691 21.9755 65.6851 21.8009 65.7538 21.6557 cv
66.05 21.6577 66.3954 21.6263 66.6543 21.7146 cv
66.874 21.7891 67.2703 22.3621 67.3292 22.5719 cv
cp
67.5901 23.033 mo
67.6922 23.0408 67.8236 23.0055 67.904 23.0546 cv
68.0434 23.1389 68.1453 23.339 68.216 23.4764 cv
68.2709 23.5784 68.3886 23.6922 68.3651 23.8295 cv
68.3494 23.8903 68.2807 23.9022 68.2258 23.91 cv
67.7392 23.9022 67.2527 23.8942 66.7641 23.8864 cv
66.6386 23.8845 66.4601 23.8668 66.3561 23.9139 cv
66.2266 23.9119 65.8539 23.9002 65.7773 23.8355 cv
65.6713 23.7511 65.7126 23.1624 65.7165 23.0016 cv
66.3365 23.0055 66.9918 22.9899 67.5901 23.033 cv
cp
68.7653 24.3965 mo
68.9262 24.4868 69.2323 25.0617 69.3048 25.2441 cv
69.2578 25.2441 69.2225 25.2754 69.1871 25.3069 cv
69.0164 25.3049 68.4436 25.2539 68.3376 25.3009 cv
68.1533 25.299 67.9668 25.297 67.7805 25.297 cv
67.5411 25.2794 67.1997 25.1578 66.9623 25.2618 cv
66.8936 25.2715 66.8269 25.2794 66.7563 25.2912 cv
66.3954 25.2912 66.0599 25.2225 65.7048 25.197 cv
65.7067 24.9537 65.5792 24.475 65.7969 24.318 cv
65.7969 24.3102 65.7969 24.3004 65.7969 24.2906 cv
66.4522 24.2945 67.1036 24.2984 67.7589 24.3024 cv
68.0825 24.3024 68.5063 24.2513 68.7653 24.3965 cv
cp
69.6737 25.7326 mo
69.7895 25.8052 69.8189 25.9327 69.8817 26.0446 cv
69.9326 26.1171 69.9837 26.1897 70.0347 26.2643 cv
70.0818 26.3546 70.1288 26.4468 70.1759 26.539 cv
70.1759 26.5468 70.1759 26.5566 70.1759 26.5664 cv
70.0975 26.588 70.017 26.6076 69.9425 26.6253 cv
69.6521 26.6233 69.0753 26.4624 68.8281 26.5605 cv
68.7595 26.5703 68.6908 26.5782 68.6221 26.5899 cv
68.4475 26.5782 68.2709 26.5684 68.0983 26.5586 cv
67.6019 26.5547 67.1369 26.5507 66.6347 26.5468 cv
66.466 26.5468 66.2482 26.5115 66.1089 26.5742 cv
65.9912 26.5742 65.8146 26.588 65.7421 26.5036 cv
65.6498 26.3918 65.6968 25.8091 65.7028 25.6364 cv
66.6484 25.6404 67.6039 25.7031 68.5397 25.7071 cv
68.7811 25.7091 69.4913 25.6148 69.6737 25.7326 cv
cp
70.6605 27.512 mo
70.7175 27.6415 70.7469 27.7181 70.6351 27.828 cv
70.5252 27.828 70.376 27.8122 70.2858 27.8554 cv
70.0896 27.8554 69.7737 27.8024 69.609 27.8809 cv
69.505 27.8809 69.3795 27.8691 69.2872 27.9083 cv
69.0576 27.9064 68.6496 27.7965 68.4691 27.875 cv
68.1572 27.875 67.8472 27.8731 67.5333 27.8711 cv
67.4391 27.8711 67.3155 27.8632 67.2429 27.8986 cv
66.9996 27.8947 66.7563 27.8927 66.5091 27.8907 cv
66.3954 27.8868 66.2364 27.8495 66.1285 27.8907 cv
65.9794 27.8907 65.844 27.8828 65.7205 27.8299 cv
65.6713 27.8299 65.6871 27.8122 65.6871 27.773 cv
65.6773 27.6141 65.6066 27.0707 65.7479 26.9921 cv
65.8578 26.9313 66.0854 26.9548 66.2227 26.9548 cv
66.5072 26.9569 66.7877 26.9569 67.0702 26.9588 cv
67.237 26.9608 67.4234 26.9764 67.5685 26.9333 cv
68.2513 26.9392 68.9145 26.9705 69.6168 26.9725 cv
69.8091 26.9745 70.2309 26.9372 70.3702 27.0176 cv
70.5349 27.1138 70.588 27.3472 70.6605 27.512 cv
cp
70.998 28.2969 mo
71.151 28.3811 71.308 28.8854 71.359 29.062 cv
71.4943 29.0639 71.1236 29.1777 71.1236 29.1777 cv
70.9254 29.1758 70.4859 29.1287 70.3369 29.2032 cv
70.1328 29.2012 69.7365 29.1189 69.5736 29.1993 cv
69.2225 29.1973 68.883 29.1503 68.5456 29.1758 cv
68.4711 29.1816 68.3925 29.1876 68.3161 29.1915 cv
68.0747 29.1915 67.4312 29.1032 67.2625 29.1856 cv
66.9918 29.1836 65.7479 29.2347 65.6538 29.0894 cv
65.6165 29.0894 65.6538 28.7775 65.6557 28.7088 cv
65.6596 28.6088 65.6517 28.4597 65.7205 28.393 cv
65.8715 28.2438 66.4424 28.2556 66.6818 28.238 cv
66.721 28.2321 66.7641 28.2261 66.7995 28.2164 cv
67.1899 28.2831 67.6352 28.2517 68.059 28.2517 cv
68.8634 28.2576 69.6384 28.2517 70.431 28.2831 cv
70.6232 28.2909 70.8234 28.1967 70.998 28.2969 cv
cp
71.6102 29.6349 mo
71.6749 29.6839 71.9927 30.4039 71.8946 30.4824 cv
71.6964 30.6374 71.1471 30.4314 70.9136 30.5236 cv
70.7881 30.5216 70.6036 30.5 70.5036 30.5491 cv
70.4251 30.5589 70.3466 30.5688 70.2702 30.5766 cv
70.1014 30.5766 69.9366 30.5824 69.7718 30.5688 cv
69.5599 30.5511 69.1028 30.4078 68.8929 30.5118 cv
68.7811 30.5118 68.6594 30.5177 68.5711 30.5688 cv
68.2023 30.5667 67.8314 30.5648 67.4586 30.5609 cv
67.3155 30.5609 67.1095 30.5295 66.9918 30.5883 cv
66.8112 30.5883 66.5444 30.504 66.3796 30.5844 cv
66.207 30.5844 65.8283 30.5962 65.7185 30.506 cv
65.6282 30.4333 65.6498 29.8055 65.6517 29.6447 cv
65.6596 29.6447 65.6694 29.6447 65.6793 29.6447 cv
65.6793 29.5956 66.207 29.5937 66.2952 29.5603 cv
66.6641 29.5642 67.0369 29.5682 67.4057 29.5721 cv
67.6922 29.5838 67.9728 29.627 68.2867 29.6289 cv
68.5535 29.6309 68.7869 29.5838 69.0459 29.5779 cv
69.5697 29.5642 70.1308 29.6054 70.6272 29.6094 cv
70.7998 29.6015 70.9784 29.5956 71.153 29.5878 cv
71.2903 29.5878 71.5061 29.5583 71.6102 29.6349 cv
cp
72.393 31.5321 mo
72.4949 31.8008 72.4557 31.7322 72.2516 31.846 cv
71.7926 31.844 71.3354 31.8401 70.8783 31.838 cv
70.6841 31.8283 70.3799 31.7498 70.2035 31.8361 cv
69.9405 31.8322 69.6776 31.8322 69.4147 31.8283 cv
69.3009 31.8244 69.1362 31.789 69.0322 31.8283 cv
68.8713 31.8283 68.6123 31.789 68.4769 31.8557 cv
68.2513 31.8538 68.0277 31.8499 67.804 31.8499 cv
67.698 31.846 67.549 31.8067 67.4528 31.8499 cv
67.1703 31.8499 66.7093 31.7439 66.4582 31.844 cv
66.2149 31.8421 65.9284 31.8636 65.7283 31.7812 cv
65.6793 31.7812 65.689 31.7616 65.6851 31.7204 cv
65.6773 31.6027 65.6733 31.4869 65.6694 31.3732 cv
65.6674 31.1809 65.6282 31.0004 65.8499 30.9749 cv
66.054 30.971 66.258 30.967 66.4601 30.965 cv
66.6307 30.9572 66.7956 30.9494 66.9604 30.9415 cv
67.135 30.9513 67.3135 30.9611 67.4881 30.9689 cv
68.1905 30.9729 68.8359 30.9218 69.5638 30.9258 cv
70.017 30.9278 70.6684 31.0004 71.0588 30.8748 cv
71.3354 30.9298 72.0339 30.7649 72.1967 31.0004 cv
72.3008 31.1534 72.3282 31.3535 72.393 31.5321 cv
cp
72.7225 32.2913 mo
72.8344 32.3855 73.0462 32.9701 72.8481 33.0486 cv
72.6559 33.1212 72.3459 33.0761 72.1281 33.0761 cv
71.5238 33.0722 70.9176 33.0702 70.3153 33.0662 cv
70.1348 33.0643 69.8443 33.0191 69.7012 33.0918 cv
69.556 33.0898 69.348 33.0603 69.2284 33.1173 cv
69.0028 33.1173 68.3278 33.0662 68.1768 33.1408 cv
68.0061 33.1389 67.7628 33.1035 67.6216 33.1683 cv
67.4156 33.1663 67.1272 33.1134 66.9467 33.1918 cv
66.4954 33.1918 66.1089 33.1016 65.6596 33.0977 cv
65.6616 32.9524 65.6341 32.3737 65.7205 32.3149 cv
65.901 32.1912 66.7779 32.254 67.0702 32.2579 cv
67.5195 32.2599 67.9531 32.2324 68.3886 32.2324 cv
68.6712 32.2363 68.9694 32.2756 69.2362 32.2579 cv
69.4579 32.2482 69.6854 32.2324 69.9091 32.2207 cv
70.1053 32.2402 70.2996 32.2579 70.4938 32.2736 cv
70.945 32.2834 71.4198 32.2658 71.8416 32.2069 cv
71.9377 32.1932 72.0359 32.1814 72.1339 32.1696 cv
72.3302 32.1756 72.5813 32.1716 72.7225 32.2913 cv
cp
73.3228 34.3415 mo
73.3131 34.3415 73.3033 34.3415 73.2895 34.3415 cv
73.2895 34.3906 73.056 34.3748 72.9992 34.369 cv
72.9992 34.3768 72.9992 34.3886 72.9992 34.3984 cv
72.9599 34.4082 72.9206 34.4161 72.8815 34.4258 cv
72.7656 34.4239 72.6225 34.4121 72.5303 34.4534 cv
72.0869 34.4514 71.667 34.42 71.2158 34.4161 cv
71.0666 34.4161 70.8646 34.3886 70.7449 34.4435 cv
70.639 34.4415 70.5114 34.4318 70.4231 34.4709 cv
70.0347 34.469 69.6463 34.4631 69.2519 34.4592 cv
69.044 34.4474 68.8046 34.3533 68.6084 34.4612 cv
68.4122 34.4612 67.9923 34.4121 67.8472 34.4867 cv
67.5117 34.4847 67.1527 34.4534 66.7956 34.4514 cv
66.4954 34.4495 65.9225 34.4828 65.6851 34.3847 cv
65.5949 34.3847 65.6282 33.7255 65.6282 33.5959 cv
65.638 33.5959 65.6498 33.5959 65.6577 33.5959 cv
65.6577 33.5567 65.6459 33.5646 65.689 33.5646 cv
65.8931 33.5489 66.0951 33.5312 66.3012 33.5156 cv
66.6465 33.5175 66.9858 33.5175 67.3252 33.5175 cv
67.9649 33.5214 68.6397 33.5077 69.2578 33.4998 cv
69.3735 33.5057 69.4913 33.5096 69.609 33.5136 cv
69.709 33.5038 69.8052 33.49 69.9052 33.4763 cv
70.2348 33.4783 70.5664 33.4783 70.898 33.4783 cv
71.053 33.488 71.2099 33.4979 71.3649 33.5057 cv
71.561 33.4998 71.7572 33.492 71.9495 33.4861 cv
72.1713 33.488 72.393 33.5292 72.595 33.4586 cv
72.7225 33.4664 72.9247 33.4645 73.0247 33.5292 cv
73.2189 33.649 73.2719 34.1198 73.3228 34.3415 cv
cp
73.6662 35.6304 mo
73.6192 35.6304 73.5799 35.6599 73.5485 35.6874 cv
73.3837 35.6874 73.16 35.652 73.0208 35.7129 cv
72.8245 35.7129 72.5381 35.6658 72.3772 35.7403 cv
71.6258 35.7345 70.8744 35.7325 70.1249 35.7266 cv
69.8424 35.7305 69.5599 35.7345 69.2754 35.7345 cv
69.0635 35.7207 68.3435 35.6697 68.1924 35.7463 cv
67.6451 35.7423 67.0996 35.7384 66.5543 35.7345 cv
66.3993 35.7345 66.1795 35.7031 66.0579 35.7639 cv
65.95 35.7639 65.8205 35.7659 65.7341 35.7305 cv
65.691 35.7305 65.6949 35.7129 65.689 35.6697 cv
65.6674 35.5363 65.6498 34.9811 65.7322 34.9085 cv
65.7891 34.8536 65.8872 34.8398 65.9716 34.834 cv
66.1913 34.8143 66.4071 34.8476 66.6171 34.8556 cv
67.0173 34.8595 67.4156 34.8614 67.8158 34.8634 cv
68.1101 34.8476 68.4004 34.832 68.6947 34.8163 cv
68.9262 34.8064 69.1734 34.8379 69.397 34.8398 cv
69.709 34.834 70.0229 34.828 70.3329 34.8241 cv
70.6193 34.832 70.9332 34.8575 71.2393 34.8556 cv
71.4649 34.8476 71.6886 34.8379 71.9142 34.832 cv
72.187 34.832 72.548 34.885 72.7912 34.8064 cv
73.007 34.8085 73.2758 34.8064 73.4426 34.9026 cv
73.5799 34.9811 73.6544 35.4618 73.6662 35.6304 cv
cp
73.9507 36.9783 mo
73.9409 36.9783 73.9331 36.9783 73.9212 36.9783 cv
73.9193 37.0293 73.7604 37.0116 73.7153 37.0372 cv
73.2464 37.0313 72.7775 37.0274 72.3105 37.0235 cv
72.181 37.0176 71.9927 36.9548 71.871 36.996 cv
71.6964 36.9999 71.5199 37.0058 71.3433 37.0097 cv
71.0921 37.0097 70.5644 36.9313 70.3486 37.0176 cv
70.172 37.0156 69.8935 36.9803 69.7365 37.0411 cv
68.9242 37.0372 68.1159 37.0332 67.3057 37.0254 cv
67.1252 37.0254 66.8819 36.9685 66.721 37.0254 cv
66.5209 37.0235 65.7969 37.0293 65.7126 36.8998 cv
65.6616 36.8272 65.6733 36.7076 65.6713 36.6094 cv
65.6694 36.4466 65.64 36.221 65.8205 36.1876 cv
65.9461 36.1798 66.0755 36.17 66.2011 36.1641 cv
66.7093 36.1053 67.2429 36.1209 67.7805 36.1249 cv
68.524 36.1288 69.248 36.1033 69.9758 36.1092 cv
70.4075 36.1112 70.9568 36.2327 71.3511 36.0857 cv
71.7318 36.0876 73.729 36.0738 73.8624 36.2446 cv
73.9959 36.4153 73.9585 36.7508 73.9507 36.9783 cv
cp
74.1763 38.2673 mo
74.1684 38.2673 74.1606 38.2654 74.1468 38.2654 cv
74.1468 38.3164 74.0468 38.2948 73.9998 38.2948 cv
73.7878 38.2909 73.5721 38.287 73.3601 38.2849 cv
73.1463 38.2712 72.8245 38.1908 72.6244 38.287 cv
72.4321 38.2849 72.1418 38.2398 71.9809 38.3125 cv
71.8749 38.3125 71.7494 38.3006 71.6592 38.3399 cv
71.2609 38.338 70.8881 38.2849 70.5193 38.2771 cv
70.0896 38.2732 69.6619 38.2732 69.2303 38.2712 cv
69.1263 38.2849 69.0164 38.2987 68.9066 38.3125 cv
68.7437 38.3222 68.5574 38.2693 68.4122 38.3222 cv
68.1081 38.3203 67.8079 38.3164 67.5058 38.3164 cv
67.3625 38.3105 67.1958 38.2614 67.0644 38.3144 cv
66.7995 38.3125 65.9382 38.3242 65.7911 38.2026 cv
65.7205 38.1437 65.7283 38.0495 65.7224 37.9554 cv
65.7145 37.7984 65.6361 37.5198 65.8205 37.455 cv
65.9852 37.4002 66.2089 37.4315 66.3973 37.4315 cv
66.5916 37.4237 66.7877 37.4159 66.9839 37.408 cv
67.1958 37.408 67.3999 37.4256 67.598 37.4315 cv
67.7726 37.4256 67.9492 37.4217 68.1238 37.4138 cv
68.7967 37.4178 69.4657 37.4178 70.1171 37.4217 cv
70.2505 37.4138 70.3879 37.408 70.5252 37.4021 cv
71.0608 37.4138 71.6769 37.461 72.2203 37.4138 cv
72.4086 37.3963 72.6009 37.4276 72.7775 37.3805 cv
72.9893 37.3825 73.886 37.3883 74.0017 37.4845 cv
74.1233 37.5846 74.1724 38.0809 74.1763 38.2673 cv
cp
74.2038 39.5387 mo
74.0449 39.7054 73.2777 39.5268 73.0581 39.6073 cv
72.9638 39.6073 72.8422 39.5994 72.7637 39.6348 cv
72.4342 39.6309 72.1006 39.627 71.7691 39.6229 cv
71.563 39.6093 71.2629 39.5484 71.0666 39.625 cv
70.8253 39.625 70.1819 39.5367 70.0151 39.619 cv
69.7718 39.619 69.452 39.5249 69.2225 39.6151 cv
68.677 39.6112 68.1826 39.6073 67.6431 39.6034 cv
67.5214 39.6034 67.341 39.5562 67.235 39.6034 cv
67.0389 39.6034 66.8427 39.6014 66.6484 39.6014 cv
66.5072 39.5994 66.2952 39.57 66.1795 39.627 cv
66.0344 39.625 65.8872 39.625 65.7421 39.625 cv
65.7421 39.6171 65.7421 39.6054 65.7421 39.5955 cv
65.689 39.5955 65.7126 39.3032 65.7067 39.2423 cv
65.6949 39.1561 65.6812 39.0678 65.6694 38.9776 cv
65.6713 38.646 66.0226 38.7323 66.2443 38.6303 cv
66.5817 38.6322 66.8485 38.7205 67.1821 38.7244 cv
67.4627 38.7205 67.7451 38.7205 68.0277 38.7205 cv
68.3494 38.6989 68.6712 38.6773 68.9929 38.6538 cv
70.174 38.6793 71.4198 38.6892 72.6225 38.695 cv
72.8775 38.6989 74.0507 38.646 74.1567 38.7775 cv
74.2195 38.8578 74.1999 39.0344 74.2096 39.1423 cv
74.2195 39.2326 74.2705 39.4681 74.2038 39.5387 cv
cp
74.3018 40.861 mo
74.2155 40.8845 74.1312 40.9041 74.0449 40.9296 cv
73.8349 40.9277 73.5661 40.8943 73.4014 40.9846 cv
73.0737 40.9826 72.7245 40.9454 72.3772 40.9493 cv
72.2674 40.9493 72.1438 40.9394 72.0555 40.9787 cv
71.9122 40.9767 71.7376 40.9551 71.616 41.0041 cv
71.3177 41.0022 70.8194 40.8963 70.5625 40.9983 cv
70.2603 40.9963 69.8659 40.8884 69.5972 41.0218 cv
69.3324 41.0179 69.0695 41.014 68.8065 41.0101 cv
68.6084 40.9963 68.1689 40.912 67.9884 40.9826 cv
67.7922 40.9826 67.3705 40.9355 67.2272 41.0082 cv
67.08 41.0061 66.9349 41.0061 66.7877 41.0061 cv
66.5856 41.0041 65.846 41.0473 65.7577 40.9238 cv
65.6851 40.8237 65.7106 40.6609 65.7048 40.5313 cv
65.6968 40.3921 65.585 40.1115 65.7557 40.037 cv
65.9794 39.9349 66.6327 39.98 66.9094 40.0037 cv
67.1173 39.9977 67.3194 39.9918 67.5255 39.986 cv
67.9923 39.9879 68.424 39.9977 68.8693 39.9938 cv
69.0969 39.9918 69.401 40.0389 69.6031 39.9683 cv
70.0779 39.9703 70.5252 40.0076 71.0078 40.0037 cv
71.7906 39.9957 72.6519 39.9605 73.4642 39.9918 cv
73.7466 40.0115 74.0311 40.0331 74.3117 40.0527 cv
74.3117 40.2587 74.4784 40.7394 74.3018 40.861 cv
cp
74.4196 41.6928 mo
74.4196 41.8341 74.4353 42.0067 74.3882 42.1303 cv
74.3882 42.197 74.2312 42.1892 74.1842 42.2186 cv
74.0389 42.2167 73.8703 42.1951 73.7466 42.2441 cv
73.5406 42.2422 73.2425 42.1931 73.0717 42.2677 cv
72.1849 42.2638 71.2982 42.2579 70.4094 42.2539 cv
70.1995 42.2461 69.7992 42.1617 69.6207 42.25 cv
69.3951 42.25 68.8772 42.1931 68.7124 42.2755 cv
68.524 42.2755 68.2709 42.1774 68.0983 42.2422 cv
67.7766 42.2539 67.4547 42.2638 67.133 42.2755 cv
66.6347 42.2716 66.1363 42.2618 65.64 42.2579 cv
65.64 42.248 65.64 42.2383 65.64 42.2264 cv
65.589 42.2264 65.6086 42.2107 65.6106 42.1696 cv
65.6106 41.9459 65.6126 41.7202 65.6126 41.4966 cv
65.6243 41.4966 65.6341 41.4966 65.6439 41.4966 cv
65.6439 41.4436 65.7656 41.4652 65.8166 41.4633 cv
66.3954 41.4299 66.9702 41.3966 67.545 41.3632 cv
67.9668 41.3652 68.3828 41.3691 68.8026 41.3711 cv
68.9812 41.3789 69.144 41.4279 69.3303 41.4221 cv
69.4775 41.4103 69.6247 41.3907 69.7718 41.3769 cv
70.4467 41.3573 71.0902 41.3515 71.7592 41.3554 cv
72.2261 41.3573 72.7225 41.3515 73.1639 41.3357 cv
73.3228 41.3279 73.4936 41.3475 73.6348 41.3083 cv
73.7957 41.3083 74.3254 41.271 74.3862 41.3907 cv
74.4235 41.4672 74.4196 41.5967 74.4196 41.6928 cv
cp
74.351 43.537 mo
74.2096 43.5351 74.0704 43.588 73.9115 43.588 cv
73.6544 43.5919 73.1855 43.4939 72.9776 43.5861 cv
72.803 43.5841 72.5303 43.5429 72.391 43.6135 cv
72.2026 43.6116 71.8004 43.5684 71.6592 43.637 cv
71.1628 43.6351 70.7057 43.6037 70.1975 43.5998 cv
70.0779 43.5998 69.9131 43.5802 69.8149 43.6273 cv
69.2617 43.6234 68.7045 43.6195 68.1473 43.6155 cv
67.9688 43.6076 67.5745 43.5213 67.4175 43.5841 cv
67.1644 43.5822 66.9074 43.5802 66.6543 43.5763 cv
66.4934 43.5703 66.2835 43.5154 66.1285 43.5782 cv
66.0089 43.5763 65.8597 43.5861 65.7577 43.5468 cv
65.5713 43.4742 65.6066 42.8818 65.6066 42.6659 cv
65.6184 42.6659 65.6282 42.6659 65.638 42.6659 cv
65.638 42.6581 65.638 42.6483 65.638 42.6365 cv
65.7341 42.6483 65.8323 42.6581 65.9284 42.6659 cv
66.207 42.6699 66.4875 42.6444 66.7485 42.6522 cv
66.9133 42.662 67.078 42.6659 67.2468 42.6757 cv
67.549 42.6581 67.8491 42.6405 68.1533 42.6228 cv
69.1734 42.6267 70.1936 42.6345 71.255 42.6405 cv
71.7259 42.6444 72.1889 42.6444 72.6598 42.6483 cv
72.9286 42.6444 73.2209 42.6757 73.4504 42.5934 cv
73.627 42.5973 73.8016 42.6012 73.9762 42.6051 cv
74.09 42.611 74.2096 42.6483 74.3294 42.6267 cv
74.3294 42.6405 74.3294 42.6483 74.3273 42.6581 cv
74.4274 42.6581 74.3765 43.4252 74.351 43.537 cv
cp
74.2293 44.9104 mo
74.2273 44.9594 73.984 44.9437 73.935 44.9673 cv
73.8703 44.9771 73.7996 44.9849 73.731 44.9947 cv
73.2817 44.9928 72.8344 44.9908 72.385 44.9888 cv
72.2399 44.9869 72.032 44.9555 71.9142 45.0143 cv
71.4767 45.0143 71.0353 45.0163 70.5977 45.0163 cv
70.482 45.0065 70.3643 44.9928 70.2505 44.983 cv
70.1288 44.9947 70.0151 45.0065 69.8974 45.0163 cv
69.7601 45.0046 69.6227 44.9908 69.4834 44.9751 cv
69.2048 44.9731 68.9184 44.9673 68.6397 44.9634 cv
68.475 44.9555 68.267 44.9025 68.1101 44.9634 cv
67.3783 44.9594 66.6465 44.9555 65.9146 44.9515 cv
65.8205 44.9515 65.7224 44.9515 65.6243 44.9515 cv
65.6262 44.7004 65.6694 44.2806 65.5988 44.0726 cv
65.5988 44.0629 65.5988 44.053 65.5988 44.0432 cv
65.6106 44.0432 65.6204 44.0432 65.6301 44.0432 cv
65.6301 43.9902 65.7283 44.0137 65.7754 44.0137 cv
66.0187 44.0157 66.2501 43.9902 66.4778 43.9902 cv
66.7112 44.002 66.9467 44.0118 67.1801 44.0217 cv
67.598 44.0256 67.9884 43.9863 68.3808 43.9746 cv
68.5554 43.9863 68.73 43.9941 68.9066 44.002 cv
69.2009 43.9981 69.4913 43.9962 69.7836 43.9941 cv
69.8817 44.0059 69.9798 44.0177 70.0779 44.0334 cv
70.2544 44.0432 70.431 44.0197 70.6036 44.0217 cv
70.7292 44.0275 70.8568 44.0314 70.9823 44.0373 cv
71.0921 44.0197 71.2001 44.0059 71.306 43.9883 cv
71.5297 43.9843 71.8043 44.0217 72.0083 43.9608 cv
72.2988 43.9628 72.5813 43.9922 72.8559 43.9941 cv
73.0992 43.9941 74.1096 43.9255 74.2528 44.0471 cv
74.3725 44.1531 74.2862 44.771 74.2293 44.9104 cv
cp
74.0586 46.2072 mo
73.9664 46.2347 73.8742 46.2582 73.78 46.2837 cv
73.5956 46.2818 73.1287 46.1876 72.9933 46.2485 cv
72.8775 46.2464 72.7343 46.2327 72.6382 46.2778 cv
72.5597 46.2857 72.4832 46.2936 72.4047 46.3033 cv
71.5866 46.2994 70.7842 46.2366 69.9484 46.2308 cv
69.7051 46.2308 69.3657 46.1738 69.1578 46.2563 cv
68.9497 46.2563 68.4907 46.2032 68.3376 46.2818 cv
67.6647 46.2739 66.9918 46.2641 66.3188 46.2543 cv
66.0932 46.2386 65.8597 46.2092 65.6184 46.2072 cv
65.6262 46.1287 65.6322 46.0503 65.6439 45.9718 cv
65.6498 45.7795 65.5988 45.548 65.7106 45.3891 cv
65.7106 45.3381 65.8872 45.3616 65.9421 45.3616 cv
66.4582 45.3636 66.9604 45.3655 67.494 45.3675 cv
67.6824 45.3695 67.9178 45.4009 68.0786 45.344 cv
68.938 45.3479 69.7737 45.4087 70.6252 45.4146 cv
70.9666 45.3988 71.306 45.3813 71.6493 45.3675 cv
72.3498 45.3813 73.0541 45.3949 73.7545 45.4087 cv
73.8957 45.4165 74.0134 45.4538 74.1684 45.4636 cv
74.1645 45.6402 74.1684 46.1071 74.0586 46.2072 cv
cp
73.9723 47.451 mo
73.9016 47.5276 73.7977 47.5198 73.7153 47.5688 cv
73.627 47.5825 73.5406 47.5884 73.4504 47.5982 cv
72.9167 47.5943 72.3772 47.5904 71.8436 47.5864 cv
71.6003 47.5766 71.2471 47.4825 71.0215 47.5844 cv
70.8234 47.5844 70.4114 47.5354 70.2623 47.61 cv
69.6482 47.606 69.0086 47.5708 68.3592 47.5688 cv
68.1846 47.5688 68.008 47.5688 67.8314 47.5669 cv
67.7019 47.5669 67.5097 47.5138 67.394 47.5649 cv
66.774 47.5609 66.2345 47.5001 65.6106 47.4961 cv
65.6106 47.4864 65.6106 47.4766 65.6106 47.4667 cv
65.6007 47.4667 65.591 47.4667 65.5792 47.4667 cv
65.5811 47.3333 65.5733 46.8055 65.6439 46.7349 cv
65.74 46.633 66.2796 46.68 66.4601 46.68 cv
67.0565 46.68 67.651 46.6839 68.2435 46.6839 cv
68.6084 46.6958 69.1753 46.7016 69.4775 46.5799 cv
69.9052 46.5839 70.2937 46.6349 70.7057 46.6585 cv
71.0569 46.68 71.4414 46.6624 71.7887 46.6585 cv
72.1575 46.6526 72.5342 46.68 72.8991 46.6839 cv
73.2228 46.6839 73.6937 46.576 73.984 46.7232 cv
74.1567 46.7232 74.0429 47.3627 73.9723 47.451 cv
cp
73.7368 48.8283 mo
73.6898 48.8283 73.6525 48.8577 73.6192 48.8872 cv
73.368 48.8853 72.5577 48.8264 72.389 48.9088 cv
72.2046 48.9088 71.8279 48.8656 71.6886 48.9343 cv
71.4041 48.9323 71.1236 48.9284 70.8391 48.9244 cv
70.6998 48.9186 70.533 48.8734 70.4015 48.9265 cv
70.2466 48.9265 70.0543 48.9146 69.9326 48.9833 cv
69.7581 48.9637 69.5815 48.9421 69.4049 48.9225 cv
69.1028 48.9205 68.8007 48.9166 68.4985 48.9146 cv
68.3612 48.9107 68.1533 48.8617 68.0316 48.9127 cv
67.8648 48.895 67.698 48.8754 67.5333 48.8538 cv
67.0467 48.8499 66.5562 48.846 66.0716 48.8421 cv
65.9146 48.8322 65.7577 48.8225 65.6027 48.8106 cv
65.6066 48.5478 65.5674 48.226 65.6361 47.9926 cv
65.7145 47.9866 65.7911 47.9769 65.8695 47.9671 cv
66.2874 47.9671 66.7093 47.965 67.1252 47.9631 cv
67.3213 47.971 67.5175 47.9749 67.7138 47.9827 cv
67.8491 47.9926 67.9649 48.0357 68.1218 48.0317 cv
68.3278 48.0259 68.5162 47.9808 68.7359 47.9827 cv
69.1107 47.9827 69.8208 48.0514 70.1132 47.9298 cv
70.2505 47.9455 70.3859 47.9592 70.5252 47.9729 cv
70.792 47.965 71.0588 47.9317 71.3414 47.9376 cv
71.8436 47.9475 72.338 47.9611 72.8344 47.971 cv
73.0776 47.9769 73.5799 47.9592 73.7701 48.0397 cv
73.9212 48.0397 73.7447 48.7381 73.7368 48.8283 cv
cp
73.5661 49.9329 mo
73.5328 50.0329 73.5014 50.133 73.4661 50.2311 cv
73.2051 50.235 72.9422 50.2389 72.6774 50.2389 cv
72.4517 50.235 72.2281 50.2291 72.0025 50.2252 cv
71.7102 50.2115 71.4159 50.1997 71.1255 50.1899 cv
70.9019 50.1918 70.6763 50.1997 70.4546 50.2037 cv
70.2407 50.1938 69.8895 50.1212 69.6914 50.2095 cv
69.5697 50.2095 69.4089 50.1879 69.3127 50.2389 cv
68.9812 50.235 68.6731 50.1918 68.375 50.1782 cv
67.4411 50.1291 66.5444 50.1035 65.5949 50.0996 cv
65.5968 50.0899 65.5968 50.082 65.5968 50.0702 cv
65.5301 50.0702 65.5655 49.411 65.5694 49.2795 cv
65.901 49.2816 66.2188 49.256 66.5366 49.256 cv
66.721 49.2659 66.9074 49.2776 67.0938 49.2874 cv
67.6628 49.2972 68.269 49.2795 68.8478 49.2835 cv
69.3225 49.2855 69.9876 49.4032 70.3996 49.2482 cv
70.6899 49.262 70.9843 49.2698 71.2786 49.2816 cv
71.4218 49.2737 71.5689 49.2678 71.716 49.262 cv
71.8514 49.2776 71.9868 49.2913 72.1261 49.3071 cv
72.6244 49.3168 73.1208 49.3051 73.6192 49.3541 cv
73.6152 49.5523 73.6112 49.7524 73.5661 49.9329 cv
cp
73.315 50.9315 mo
73.2758 51.1277 73.1855 51.3455 73.0502 51.4886 cv
72.4733 51.4847 71.8397 51.424 71.2903 51.4985 cv
71.1922 51.5102 71.0981 51.524 70.9999 51.5338 cv
70.737 51.5318 69.9209 51.4396 69.7424 51.5279 cv
69.4697 51.526 69.1969 51.524 68.9223 51.5181 cv
68.7398 51.5102 68.475 51.4456 68.3082 51.5201 cv
68.0825 51.5181 67.7805 51.4357 67.5764 51.5162 cv
66.9016 51.5123 66.2501 51.4219 65.5576 51.4161 cv
65.5595 51.2101 65.5144 50.751 65.5929 50.598 cv
65.5929 50.5195 65.8774 50.5333 65.9421 50.5117 cv
66.052 50.5549 66.1913 50.5411 66.3228 50.543 cv
66.6778 50.5588 67.0702 50.5823 67.4391 50.5724 cv
67.7686 50.5627 68.114 50.6 68.4279 50.6019 cv
68.7222 50.5901 69.0125 50.5764 69.3087 50.5627 cv
69.8208 50.5823 70.3624 50.6667 70.8881 50.651 cv
71.2197 50.6195 71.5532 50.5862 71.8828 50.5509 cv
72.1202 50.5333 73.1836 50.494 73.3053 50.6235 cv
73.3739 50.698 73.3327 50.8452 73.315 50.9315 cv
cp
72.8599 52.3342 mo
72.8167 52.4657 72.7559 52.607 72.6617 52.7149 cv
72.5185 52.7149 72.3459 52.6933 72.2222 52.7404 cv
72.1026 52.7404 71.9377 52.7208 71.8436 52.7679 cv
71.7827 52.7796 71.7259 52.7875 71.667 52.7973 cv
71.4552 52.7953 70.9332 52.7345 70.7901 52.7914 cv
70.6625 52.8051 70.5349 52.815 70.4075 52.8267 cv
70.019 52.7914 69.6227 52.7856 69.2068 52.7836 cv
69.0656 52.7816 68.8556 52.7502 68.7418 52.8091 cv
68.5417 52.8071 68.2611 52.7522 68.0983 52.8346 cv
67.8079 52.8346 65.6871 52.8031 65.6086 52.709 cv
65.5007 52.5835 65.5537 52.0283 65.5556 51.8262 cv
65.9932 51.8301 66.4346 51.834 66.874 51.8379 cv
67.2546 51.8556 67.6373 51.9281 68.0434 51.9242 cv
68.6889 51.9203 69.3579 51.9321 70.0033 51.9027 cv
70.1897 51.8889 70.3741 51.8733 70.5605 51.8595 cv
70.686 51.8713 70.8136 51.885 70.9411 51.8948 cv
71.0588 51.883 71.1765 51.8733 71.2903 51.8614 cv
71.5768 51.8556 72.75 51.8399 72.8815 51.9968 cv
72.9462 52.0773 72.8893 52.25 72.8599 52.3342 cv
cp
72.2144 53.9882 mo
72.1182 54.0235 72.0202 54.0529 71.9221 54.0843 cv
71.6042 54.0843 71.3041 54.1137 71.0137 54.1275 cv
70.8822 54.1314 70.7253 54.0843 70.6057 54.1373 cv
70.4859 54.1353 70.3212 54.1176 70.227 54.1668 cv
70.1662 54.1746 70.1092 54.1843 70.0504 54.1923 cv
69.7581 54.1923 69.4481 54.1668 69.144 54.1549 cv
68.9851 54.1491 68.7908 54.098 68.6457 54.1569 cv
68.5574 54.1647 68.4672 54.1746 68.3808 54.1843 cv
68.0983 54.1804 67.8158 54.1785 67.5333 54.1707 cv
67.3174 54.1549 66.9938 54.0451 66.774 54.1452 cv
66.6641 54.1452 66.5366 54.1314 66.4522 54.1707 cv
66.3012 54.1707 65.7577 54.2001 65.689 54.1137 cv
65.6301 54.0412 65.6361 53.9136 65.6341 53.8156 cv
65.6322 53.6468 65.6439 53.482 65.5772 53.3467 cv
65.5772 53.3368 65.5772 53.329 65.5772 53.3192 cv
65.7989 53.3212 66.0187 53.2368 66.2501 53.2348 cv
66.9839 53.2387 67.7138 53.2426 68.4436 53.2446 cv
68.6202 53.2289 68.7967 53.2113 68.9713 53.1917 cv
69.3402 53.1837 69.7306 53.172 70.0857 53.1681 cv
70.2544 53.1681 70.4585 53.1917 70.6115 53.1407 cv
70.9176 53.1426 71.202 53.1878 71.4865 53.1897 cv
71.6062 53.1759 71.722 53.1642 71.8397 53.1524 cv
72.0791 53.1407 72.3027 53.1759 72.5126 53.2113 cv
72.5126 53.3682 72.338 53.9019 72.2144 53.9882 cv
cp
71.7788 55.1143 mo
71.7102 55.2654 71.6493 55.4655 71.4453 55.4733 cv
71.3649 55.4753 71.2825 55.4596 71.2119 55.4871 cv
71.0372 55.4675 70.8626 55.4498 70.686 55.4302 cv
70.3506 55.4066 69.9562 55.4185 69.6306 55.4381 cv
69.501 55.4479 69.3618 55.4282 69.2519 55.4753 cv
69.0008 55.4753 68.5358 55.3949 68.3435 55.4988 cv
68.2867 55.5126 68.2278 55.5165 68.1689 55.5283 cv
67.9747 55.5283 67.7785 55.5243 67.5842 55.5243 cv
67.4547 55.5204 67.2919 55.4753 67.1742 55.5224 cv
66.6778 55.5204 66.1795 55.5185 65.6812 55.5146 cv
65.6812 55.5048 65.6812 55.4969 65.6812 55.4852 cv
65.638 55.4852 65.642 55.2183 65.6361 55.1614 cv
65.6243 55.0221 65.6204 54.7749 65.7008 54.6748 cv
65.7891 54.569 66.6818 54.5984 66.8878 54.5258 cv
67.035 54.5453 67.1723 54.5277 67.3252 54.5336 cv
67.6568 54.5453 68.0434 54.5826 68.3789 54.5787 cv
68.5927 54.5669 68.8085 54.5552 69.0224 54.5414 cv
69.2401 54.5395 69.397 54.5964 69.609 54.5984 cv
69.9542 54.6003 70.3054 54.5905 70.6586 54.5826 cv
70.9332 54.5748 71.5925 54.4767 71.8239 54.5944 cv
71.8397 54.6062 71.8554 54.618 71.8691 54.6258 cv
71.9319 54.7063 71.8142 55.0299 71.7788 55.1143 cv
cp
71.0961 56.6407 mo
71.0353 56.7231 70.9587 56.7702 70.8822 56.831 cv
70.6782 56.833 70.4742 56.8388 70.2681 56.8408 cv
70.0386 56.8388 69.5599 56.7231 69.3618 56.8232 cv
69.1617 56.8212 68.7222 56.7702 68.5711 56.8467 cv
68.3769 56.8448 68.0885 56.7997 67.9276 56.8703 cv
67.7295 56.8703 67.4586 56.7997 67.2822 56.8664 cv
66.7524 56.8643 66.1657 56.8408 65.6459 56.8879 cv
65.6459 56.88 65.6459 56.8703 65.6459 56.8585 cv
65.5968 56.8565 65.6165 56.8408 65.6165 56.7997 cv
65.6184 56.5485 65.6204 56.2935 65.6243 56.0404 cv
65.8244 56.0424 65.9852 55.9521 66.1756 55.9364 cv
66.5013 55.9049 66.8289 55.9305 67.1428 55.9226 cv
67.2802 55.9089 67.4156 55.8932 67.5509 55.8755 cv
68.2101 55.8697 68.9007 55.8658 69.5442 55.8677 cv
69.8424 55.8697 70.1819 55.8716 70.4781 55.8658 cv
70.6547 55.8579 70.8469 55.8794 71.0059 55.8363 cv
71.1137 55.8422 71.255 55.8324 71.3198 55.9207 cv
71.3963 56.0247 71.1628 56.5426 71.0961 56.6407 cv
cp
70.172 58.1298 mo
69.9641 58.1612 69.6893 58.0945 69.501 58.169 cv
69.1675 58.1671 68.4201 58.0454 68.1533 58.1906 cv
67.5882 58.1867 67.0192 58.1984 66.4856 58.1435 cv
66.2149 58.1062 65.9401 58.0689 65.6674 58.0317 cv
65.6577 57.9827 65.6439 57.9316 65.6322 57.8845 cv
65.6262 57.708 65.6184 57.5354 65.6145 57.3568 cv
65.6243 57.3568 65.6322 57.3568 65.642 57.3568 cv
65.642 57.3215 66.0049 57.2783 66.0795 57.2705 cv
66.3051 57.2567 66.4817 57.296 66.6955 57.2881 cv
66.8995 57.2666 67.1056 57.243 67.3096 57.2214 cv
67.6431 57.243 67.9728 57.2626 68.3063 57.2822 cv
68.5691 57.2861 68.8223 57.247 69.0656 57.2352 cv
69.397 57.2175 69.7737 57.2881 70.0936 57.2038 cv
70.3231 57.2136 70.5036 57.2606 70.737 57.2705 cv
70.7351 57.5177 70.4467 58.0866 70.172 58.1298 cv
cp
70.0249 58.7007 mo
69.9876 58.6988 69.5697 59.5306 69.2793 59.5718 cv
68.8948 59.6267 68.3298 59.5228 67.9413 59.509 cv
67.4312 59.4874 66.9329 59.4698 66.4502 59.4462 cv
66.2227 59.4345 65.9185 59.509 65.7322 59.3834 cv
65.6086 59.3011 65.6577 58.9637 65.6674 58.8204 cv
65.6851 58.5222 65.8009 58.5909 66.0167 58.5006 cv
66.1913 58.5123 66.366 58.5202 66.5444 58.532 cv
66.7093 58.5242 66.874 58.5202 67.0408 58.5123 cv
67.4273 58.5281 67.8099 58.5732 68.2101 58.5693 cv
68.6006 58.5673 69.0498 58.5594 69.4402 58.5751 cv
69.6345 58.583 69.8464 58.5673 69.9954 58.6693 cv
70.0347 58.6693 70.0249 58.6595 70.0249 58.7007 cv
cp
69.0792 60.0976 mo
69.0203 60.0976 69.0086 60.1741 68.9929 60.2153 cv
68.9301 60.3644 68.6848 60.7195 68.53 60.7901 cv
68.4377 60.8117 68.3474 60.8333 68.2552 60.8549 cv
68.0551 60.851 67.6097 60.7117 67.4666 60.7607 cv
67.1978 60.7588 66.8427 60.6547 66.5916 60.7568 cv
66.4051 60.7549 65.7656 60.7549 65.689 60.6136 cv
65.6498 60.5332 65.6557 60.4116 65.6557 60.3134 cv
65.6577 60.2016 65.6439 60.0466 65.6871 59.9602 cv
65.6871 59.8974 65.8146 59.8916 65.8617 59.8739 cv
66.721 59.8779 67.5352 59.8955 68.3494 59.9505 cv
68.5927 59.9721 68.8359 59.9897 69.0792 60.0113 cv
69.0792 60.0388 69.0792 60.0662 69.0792 60.0976 cv
cp
67.598 61.9987 mo
67.4646 62.0144 67.3292 62.0301 67.1958 62.0478 cv
66.6602 62.0458 66.1657 62.0144 65.6165 62.0105 cv
65.6184 61.7181 65.5419 61.3945 65.6498 61.1335 cv
66.0795 61.1335 66.5091 61.1374 66.9368 61.1413 cv
67.1252 61.159 67.3096 61.1767 67.494 61.1983 cv
67.7569 61.1983 68.0198 61.2022 68.2847 61.2061 cv
68.2827 61.4356 67.8158 61.932 67.598 61.9987 cv
cp
66.5444 63.3603 mo
66.2521 63.3584 65.7361 63.4368 65.5517 63.2386 cv
65.4967 63.2386 65.5537 63.1542 65.5635 63.117 cv
65.6066 62.9286 65.5243 62.6265 65.6929 62.5048 cv
65.7635 62.4774 65.8343 62.45 65.9068 62.4225 cv
66.1108 62.4225 67.0741 62.4421 67.1408 62.5756 cv
67.2507 62.7835 66.6896 63.2485 66.5444 63.3603 cv
cp
58.5889 71.9025 mo
59.0342 71.667 59.4423 71.359 59.87 71.0922 cv
60.2349 70.8705 60.6018 70.6488 60.9667 70.4232 cv
61.2924 70.1799 61.5905 69.9013 61.9281 69.6699 cv
62.2811 69.4148 62.6304 69.1597 62.9797 68.9046 cv
63.0561 68.8379 63.1267 68.7654 63.2014 68.6948 cv
63.2837 68.6496 63.3661 68.6026 63.4466 68.5574 cv
63.7467 68.3278 64.0509 68.0551 64.3294 67.8001 cv
64.555 67.5882 64.7218 67.3528 64.9572 67.1409 cv
65.1907 66.931 65.4496 66.7387 65.689 66.5249 cv
65.7891 66.4347 65.844 66.3326 65.9323 66.2443 cv
66.1285 66.0539 66.3286 65.8755 66.5052 65.6733 cv
66.6249 65.5224 66.7485 65.3713 66.874 65.2221 cv
67.3096 64.8042 67.7059 64.3393 68.0708 63.8724 cv
68.369 63.5173 68.6653 63.1602 68.9615 62.807 cv
69.1578 62.5324 69.3539 62.2537 69.5481 61.9791 cv
69.6482 61.8692 69.7521 61.7594 69.8581 61.6495 cv
70.174 61.2061 70.4938 60.7607 70.8116 60.3134 cv
70.9058 60.1604 70.9627 60.0034 71.051 59.8484 cv
71.1216 59.7465 71.1922 59.6444 71.2629 59.5444 cv
71.3257 59.4149 71.3825 59.2854 71.4453 59.1559 cv
71.6611 58.7871 71.8632 58.4201 72.0633 58.0454 cv
72.23 57.759 72.4008 57.4706 72.5655 57.1842 cv
72.7069 56.8938 72.7951 56.5877 72.9247 56.2935 cv
73.0717 55.9893 73.215 55.6813 73.3601 55.3753 cv
73.8506 54.0569 74.3333 52.7325 74.7256 51.3729 cv
74.7551 51.2101 74.7826 51.0473 74.812 50.8844 cv
74.9179 50.3861 75.0552 49.8721 75.1534 49.36 cv
75.1848 49.099 75.2122 48.8382 75.2436 48.5733 cv
75.3143 48.1476 75.4006 47.6884 75.4594 47.2549 cv
75.4868 46.9056 75.5144 46.5525 75.5418 46.2032 cv
75.5673 46.0679 75.5928 45.9325 75.6223 45.7932 cv
75.636 45.5029 75.6536 45.2105 75.6694 44.9182 cv
75.685 44.771 75.7301 44.6337 75.738 44.4807 cv
75.738 44.2767 75.7321 44.0707 75.7301 43.8667 cv
75.8204 42.5443 75.8439 41.1062 75.7733 39.7995 cv
75.7321 39.1149 75.5732 38.442 75.5045 37.7749 cv
75.4261 37.0705 75.3731 36.3702 75.2318 35.6992 cv
74.8434 33.8511 74.3294 32.0362 73.678 30.3098 cv
73.5838 30.0626 73.4406 29.8331 73.3386 29.5898 cv
73.1248 29.0757 72.8893 28.6009 72.6382 28.1104 cv
72.5577 27.9692 72.4772 27.8299 72.3949 27.6905 cv
72.1928 27.2609 72.0515 26.7979 71.8279 26.382 cv
71.6866 26.1249 71.5219 25.9073 71.359 25.66 cv
71.2354 25.3931 71.1079 25.1284 70.9843 24.8596 cv
70.5174 24.1317 70.0308 23.4195 69.5442 22.7073 cv
69.3579 22.4915 69.1734 22.2796 68.9909 22.0657 cv
68.785 21.8029 68.5809 21.538 68.3769 21.2732 cv
68.1807 21.075 67.9649 20.9102 67.7922 20.6905 cv
67.6922 20.5649 67.6352 20.4295 67.5294 20.3039 cv
67.3763 20.1353 67.2233 19.9665 67.0702 19.8017 cv
66.978 19.7173 66.8858 19.633 66.7956 19.5486 cv
66.5601 19.2838 66.3404 19.011 66.1011 18.7502 cv
65.8872 18.552 65.6773 18.3538 65.4673 18.1557 cv
65.2633 17.9497 65.0612 17.7457 64.8572 17.5376 cv
64.5766 17.3219 64.2942 17.1041 64.0116 16.8863 cv
63.7232 16.6313 63.4309 16.3781 63.1405 16.1251 cv
62.9482 15.9779 62.7403 15.8779 62.5421 15.7484 cv
62.2949 15.5679 62.0438 15.3854 61.7947 15.205 cv
61.6063 15.0735 61.4454 14.9263 61.2649 14.7792 cv
61.1296 14.6968 60.9962 14.6144 60.8627 14.53 cv
60.6803 14.4025 60.4978 14.275 60.3153 14.1455 cv
59.7189 13.7806 59.0793 13.5019 58.4594 13.1822 cv
58.2338 13.041 58.0081 12.8977 57.7825 12.7545 cv
57.3901 12.5583 57.0017 12.3621 56.6112 12.1659 cv
56.2934 12.0129 55.9618 11.9011 55.6342 11.7735 cv
55.4753 11.6852 55.3144 11.597 55.1555 11.5087 cv
55.0319 11.4635 54.9064 11.4223 54.7827 11.3772 cv
54.5865 11.2909 54.3923 11.2026 54.1961 11.1143 cv
53.58 10.8926 52.9365 10.7317 52.3009 10.5375 cv
52.0027 10.4472 51.6908 10.3237 51.3886 10.2354 cv
50.7254 10.0431 50.0643 9.94107 49.3776 9.78608 cv
48.9381 9.68603 48.4791 9.56046 48.0297 9.48392 cv
47.7394 9.44274 47.4471 9.40547 47.1587 9.36428 cv
46.6741 9.26423 46.1345 9.17795 45.6304 9.11708 cv
45.4381 9.11115 45.2419 9.10723 45.0477 9.0994 cv
44.9143 9.08182 44.777 9.06414 44.6395 9.04646 cv
44.3767 9.04254 44.1138 9.03662 43.8489 9.0327 cv
43.2544 8.99151 42.6286 8.94249 42.0047 8.93858 cv
41.7634 9.00919 41.424 8.96801 41.1572 8.966 cv
40.8354 8.966 40.5136 8.966 40.1919 8.96801 cv
40.1017 8.98167 40.0134 8.99543 39.9251 9.00919 cv
39.7014 9.01502 39.4778 9.02095 39.2541 9.02687 cv
39.1364 9.05429 39.0167 9.08373 38.899 9.11115 cv
38.7833 9.12883 38.6675 9.14058 38.5497 9.15434 cv
38.4379 9.15434 38.3241 9.1446 38.228 9.18186 cv
38.1613 9.19362 38.0927 9.20145 38.026 9.2113 cv
37.8807 9.2113 37.7278 9.20537 37.6139 9.26614 cv
37.3 9.26423 36.8331 9.30542 36.5899 9.43691 cv
36.5211 9.44475 36.4525 9.45449 36.3838 9.46433 cv
36.1856 9.46242 35.9228 9.48784 35.7678 9.57814 cv
35.2518 9.57613 34.826 9.79592 34.3571 9.90581 cv
34.108 9.96468 33.8118 9.9921 33.5979 10.1216 cv
33.3938 10.1216 33.1721 10.1726 33.0113 10.2648 cv
32.6856 10.2628 32.4031 10.4532 32.1245 10.561 cv
31.9597 10.6238 31.7537 10.6277 31.6065 10.7259 cv
31.2808 10.7239 30.9925 10.9122 30.7236 11.0339 cv
30.5392 11.1143 30.3509 11.1909 30.1645 11.2693 cv
29.16 11.6911 28.179 12.1718 27.2138 12.674 cv
27.051 12.78 26.8861 12.884 26.7253 12.9879 cv
25.5658 13.5727 24.4239 14.2161 23.3998 15.05 cv
23.0977 15.2657 22.7936 15.4815 22.4934 15.6974 cv
22.3345 15.8386 22.1756 15.9819 22.0186 16.1231 cv
21.7243 16.339 21.4183 16.5234 21.1339 16.7647 cv
20.5511 17.2552 20.0038 17.8084 19.4642 18.342 cv
19.1327 18.6422 18.7991 18.9443 18.4656 19.2445 cv
18.3518 19.374 18.238 19.5055 18.1262 19.6369 cv
17.9751 19.7801 17.824 19.9194 17.6729 20.0587 cv
17.4356 20.302 17.2688 20.5943 17.0373 20.8317 cv
16.8372 21.0357 16.6371 21.2261 16.4566 21.4498 cv
16.3742 21.5635 16.2878 21.6754 16.2094 21.7852 cv
15.8582 22.1795 15.5169 22.5661 15.2147 22.9899 cv
15.0087 23.3116 14.8027 23.6353 14.5947 23.957 cv
14.2965 24.3416 13.961 24.834 13.7315 25.2558 cv
13.6629 25.3931 13.5962 25.5306 13.5275 25.6679 cv
13.3274 26.0034 13.1273 26.3349 12.9251 26.6665 cv
12.7506 27.0157 12.6328 27.3885 12.4562 27.7377 cv
12.3778 27.8731 12.2953 28.0065 12.215 28.1419 cv
12.0442 28.4558 11.9011 28.7716 11.7205 29.0816 cv
11.6381 29.2837 11.5557 29.4858 11.4733 29.6898 cv
11.3713 29.8958 11.2732 30.1038 11.1731 30.3117 cv
11.0927 30.5511 11.0103 30.7884 10.9299 31.0278 cv
10.8318 31.2849 10.7336 31.5418 10.6336 31.7989 cv
10.1392 33.4037 9.72329 35.0106 9.38187 36.7076 cv
9.35444 37.0293 9.32501 37.3492 9.29759 37.6689 cv
9.25238 38.0377 9.12491 38.442 9.09548 38.8108 cv
9.06996 39.0972 9.08172 39.4228 9.00126 39.6897 cv
8.97775 39.9133 8.96007 40.1371 8.93848 40.3607 cv
8.88755 41.7321 8.92281 43.0407 8.96007 44.3708 cv
8.97775 45.0065 9.10331 45.646 9.16017 46.272 cv
9.17393 46.5447 9.18568 46.8174 9.20145 47.092 cv
9.28774 47.9475 9.43289 48.8166 9.56629 49.668 cv
9.62907 49.8839 9.68794 50.0996 9.74881 50.3174 cv
9.89205 50.9904 10.0411 51.6397 10.2353 52.2813 cv
10.2922 52.4285 10.3491 52.5756 10.4061 52.7208 cv
10.4413 52.8758 10.4806 53.0289 10.5158 53.1818 cv
10.769 53.894 11.0221 54.6062 11.2732 55.3183 cv
11.3988 55.5852 11.5244 55.854 11.6479 56.1208 cv
11.7205 56.2993 11.7578 56.4955 11.8343 56.6721 cv
12.0266 57.1272 12.3091 57.5354 12.5386 57.9767 cv
12.723 58.3318 12.9369 58.6733 13.1193 59.0323 cv
13.1724 59.1598 13.2253 59.2893 13.2763 59.4188 cv
13.3391 59.4973 13.4019 59.5718 13.4647 59.6522 cv
13.5334 59.7994 13.602 59.9505 13.6726 60.0996 cv
13.8414 60.3978 14.0493 60.6862 14.2652 60.9628 cv
14.3926 61.1277 14.4986 61.312 14.63 61.4768 cv
14.8047 61.7005 15.0028 61.9025 15.1676 62.1281 cv
15.2952 62.3165 15.4207 62.5029 15.5502 62.6913 cv
15.7895 62.9757 16.027 63.2622 16.2702 63.5467 cv
16.4683 63.7958 16.6665 64.047 16.8647 64.2981 cv
17.1119 64.557 17.359 64.818 17.6082 65.077 cv
17.8104 65.3124 17.9868 65.591 18.2204 65.8068 cv
18.5559 66.1148 18.8835 66.4267 19.1935 66.7367 cv
19.3602 66.9055 19.525 67.0703 19.6879 67.2371 cv
19.9586 67.4725 20.2745 67.6393 20.5355 67.8865 cv
20.7866 68.1298 21.0377 68.3729 21.2928 68.6182 cv
21.4772 68.7615 21.6596 68.9007 21.842 69.042 cv
22.0676 69.2343 22.26 69.4599 22.5052 69.6306 cv
22.7995 69.8327 23.0762 70.0641 23.3841 70.2427 cv
23.5862 70.3605 23.804 70.4212 23.9982 70.5488 cv
24.2258 70.7096 24.4533 70.8705 24.681 71.0314 cv
24.9047 71.1766 25.1597 71.2942 25.3892 71.4336 cv
26.2505 71.9633 27.1235 72.4204 28.03 72.852 cv
28.4283 73.0463 28.805 73.2896 29.2327 73.4347 cv
29.623 73.5877 30.0135 73.7388 30.4058 73.8919 cv
30.5491 73.9311 30.6923 73.9724 30.8335 74.0115 cv
31.2181 74.1607 31.6007 74.3058 31.9832 74.4549 cv
32.0873 74.4843 32.1892 74.5158 32.2932 74.5452 cv
32.6248 74.6747 32.9524 74.8277 33.2977 74.9219 cv
33.7176 75.0043 34.1335 75.0827 34.5514 75.1652 cv
35.1714 75.2966 35.8208 75.4909 36.4544 75.5889 cv
36.6879 75.6066 36.9194 75.6262 37.1549 75.6419 cv
37.4629 75.6811 37.7709 75.7557 38.0907 75.7832 cv
38.334 75.7969 38.5753 75.8145 38.8185 75.8303 cv
38.9775 75.8538 39.1345 75.8773 39.2895 75.9048 cv
39.4562 75.9087 39.621 75.9147 39.7858 75.9205 cv
40.1684 75.9774 40.547 76.0343 40.9276 76.0932 cv
41.1219 76.101 41.3181 76.1088 41.5123 76.1187 cv
41.63 76.103 41.7477 76.0911 41.8654 76.0775 cv
42.2127 76.0794 42.6266 76.1187 42.9759 76.1324 cv
43.1976 76.1403 43.4055 76.1245 43.6214 76.1343 cv
44.0588 76.1559 44.4748 76.0697 44.8809 76.0108 cv
45.0653 76.0049 45.2498 75.9989 45.4342 75.9911 cv
45.6833 75.9598 45.9501 75.9186 46.1954 75.897 cv
47.1038 75.8145 47.9807 75.7126 48.8578 75.5399 cv
49.152 75.4614 49.4483 75.3869 49.7425 75.3083 cv
50.1114 75.2338 50.4802 75.1573 50.8491 75.0788 cv
51.0413 75.0259 51.212 74.9297 51.3925 74.8571 cv
51.6947 74.7669 51.9929 74.6786 52.295 74.5883 cv
52.4225 74.5432 52.55 74.4981 52.6796 74.453 cv
52.8974 74.3921 53.0935 74.3686 53.3113 74.3019 cv
53.7527 74.1488 54.1961 73.9939 54.6415 73.8389 cv
54.9044 73.7114 55.1693 73.5877 55.4321 73.4622 cv
55.6891 73.3641 55.9442 73.2464 56.1894 73.1326 cv
56.2621 73.0895 56.3307 73.0463 56.4013 73.0031 cv
56.6662 72.8796 56.9428 72.754 57.2018 72.6186 cv
57.5058 72.4459 57.8061 72.2773 58.1082 72.1046 cv
58.2631 72.0261 58.4339 71.9809 58.5889 71.9025 cv
cp
f
43.5899 37.9946 mo
43.8921 37.8181 44.1903 37.6454 44.4886 37.4727 cv
44.9123 37.2628 45.3793 37.0921 45.8324 36.9509 cv
46.166 36.8488 46.4956 36.7488 46.8271 36.6487 cv
46.9546 36.6094 47.1215 36.5781 47.2333 36.5016 cv
47.3765 36.3957 47.4883 36.1151 47.2607 36.0347 cv
47.1528 35.9974 47.0116 36.0091 46.8899 36.0071 cv
46.731 36.0621 46.574 36.117 46.4132 36.174 cv
46.2955 36.2249 46.1777 36.278 46.0561 36.3329 cv
45.7049 36.4505 45.3517 36.5349 45.0182 36.6919 cv
44.7043 36.8371 44.3845 37.0215 44.0864 37.2118 cv
43.9705 37.2961 43.8528 37.3786 43.7352 37.461 cv
43.4938 37.6042 43.1387 37.8141 43.0994 38.1221 cv
43.1113 38.1221 43.1191 38.1221 43.1309 38.1221 cv
43.1289 38.2339 43.5429 38.0182 43.5899 37.9946 cv
cp
f
37.461 36.7724 mo
38.4536 37.047 39.4778 37.3138 40.3862 37.7749 cv
40.5587 37.8691 40.7295 37.9652 40.8982 38.0613 cv
41.0473 38.1476 41.1768 38.3086 41.3514 38.3438 cv
41.4142 38.3556 41.5202 38.3537 41.5535 38.2889 cv
41.6614 38.0653 40.6804 37.4531 40.5039 37.3707 cv
40.2174 37.2373 39.9329 37.1019 39.6465 36.9685 cv
39.5503 36.9155 39.4484 36.8606 39.3502 36.8076 cv
39.1403 36.735 38.9344 36.6625 38.7263 36.5898 cv
38.4949 36.4957 38.2574 36.3937 38.0122 36.329 cv
37.9004 36.3054 37.7866 36.2819 37.6728 36.2583 cv
37.2961 36.1465 36.9548 36.0111 36.529 36.0091 cv
36.3505 36.1602 36.3544 36.429 36.5565 36.5565 cv
36.8017 36.7115 37.1745 36.6919 37.461 36.7724 cv
cp
f
62.6736 39.4327 mo
62.6991 39.7132 62.7246 39.9977 62.75 40.2802 cv
62.7344 40.4372 62.7167 40.5922 62.6971 40.7472 cv
62.6932 41.0984 62.6913 41.4495 62.6853 41.8027 cv
62.6775 41.9204 62.6736 42.0342 62.6677 42.1519 cv
62.6736 42.3756 62.7285 42.609 62.7246 42.8268 cv
62.7167 43.1368 62.6402 43.4625 62.6461 43.792 cv
62.6736 44.1923 62.6991 44.5925 62.7246 44.9908 cv
62.707 45.236 62.6893 45.4774 62.6677 45.7207 cv
62.6814 45.8109 62.6913 45.8992 62.701 45.9875 cv
62.707 46.2524 62.6814 46.5172 62.6736 46.7742 cv
62.6833 46.9605 62.6991 47.1489 62.7109 47.3333 cv
62.7109 47.4786 62.6755 47.61 62.6638 47.7414 cv
62.6461 48.022 62.6638 48.3045 62.6971 48.5634 cv
62.7461 48.9676 62.7325 49.4973 62.6913 49.9054 cv
62.6755 50.0055 62.6598 50.1035 62.6461 50.1997 cv
62.6324 50.4469 62.6932 50.6646 62.6913 50.904 cv
62.6736 51.0413 62.6559 51.1747 62.6382 51.3122 cv
62.6422 51.4593 62.65 51.6025 62.6578 51.7516 cv
62.65 51.9478 62.6382 52.1401 62.6285 52.3362 cv
62.6245 52.5207 62.7422 53.5723 62.5676 53.5723 cv
62.4519 53.5723 61.5199 52.554 61.363 52.3951 cv
60.1976 51.2179 59.0146 50.0153 57.8571 48.846 cv
57.6707 48.6577 57.5157 48.4379 57.3333 48.2614 cv
57.1684 48.1044 57.0036 47.9455 56.8368 47.7865 cv
56.7564 47.6884 56.6682 47.5864 56.5838 47.4883 cv
55.4635 46.3858 54.3276 45.2654 53.2033 44.1668 cv
53.0032 43.9686 51.5455 42.509 51.5397 42.4108 cv
51.5455 42.3853 51.5495 42.3579 51.5534 42.3324 cv
51.6652 42.0538 52.1243 41.7478 52.3519 41.53 cv
52.601 41.2926 52.7836 41.0277 53.017 40.7904 cv
53.2249 40.5745 53.4545 40.3666 53.6664 40.1566 cv
53.7469 40.0879 53.8253 40.0212 53.9077 39.9545 cv
54.0902 39.7662 54.2687 39.5778 54.4531 39.3895 cv
54.6356 39.211 54.8142 39.0325 54.9966 38.85 cv
55.1575 38.6616 55.3183 38.4694 55.4811 38.2791 cv
55.6715 38.0828 55.8893 37.9278 56.0834 37.7435 cv
56.3385 37.4805 56.5935 37.2197 56.8486 36.9587 cv
57.139 36.6821 57.4274 36.4054 57.7178 36.1269 cv
58.2828 35.5402 58.8458 34.9556 59.4109 34.369 cv
60.2781 33.5391 61.1629 32.721 61.9614 31.8283 cv
62.1654 31.5968 62.4695 31.4065 62.6304 31.1495 cv
62.7716 31.3476 62.6716 31.8695 62.6853 32.1441 cv
62.7246 32.7916 62.6932 33.492 62.6991 34.165 cv
62.7167 34.5043 62.7285 34.8457 62.7442 35.1852 cv
62.7246 35.5382 62.7109 35.8895 62.6913 36.2407 cv
62.707 36.4466 62.7187 36.6526 62.7364 36.8547 cv
62.7325 36.9548 62.7246 37.0509 62.7206 37.147 cv
62.7344 37.2648 62.7442 37.3825 62.7541 37.5002 cv
62.7422 37.5983 62.7285 37.6944 62.7148 37.7925 cv
62.6677 38.3321 62.6638 38.8736 62.6736 39.4327 cv
cp
56.929 66.6426 mo
56.831 66.6426 56.7133 66.6563 56.6367 66.7015 cv
56.4916 66.7015 56.1954 66.776 56.0795 66.8447 cv
55.8127 66.8427 55.5851 66.9526 55.3438 66.9997 cv
55.181 67.033 55.0044 67.0644 54.8494 67.0899 cv
54.7337 67.1076 54.5983 67.1016 54.4982 67.1566 cv
54.4315 67.1664 54.3628 67.1743 54.2942 67.184 cv
54.2255 67.1939 54.1549 67.2037 54.0862 67.2115 cv
53.9116 67.2115 53.6958 67.184 53.5624 67.2665 cv
53.4917 67.2762 53.4231 67.2861 53.3544 67.2959 cv
53.0699 67.2939 52.7266 67.2508 52.5069 67.3803 cv
52.4009 67.3803 52.2754 67.3684 52.1852 67.4077 cv
52.0498 67.4077 51.9497 67.3764 51.834 67.3449 cv
51.834 67.4077 51.4827 67.4548 51.424 67.4901 cv
51.2277 67.4882 50.9786 67.4548 50.8098 67.5156 cv
50.7431 67.5254 50.6745 67.5333 50.6058 67.5431 cv
50.4096 67.5431 50.1762 67.5215 50.0192 67.6 cv
49.8897 67.6 49.7425 67.6039 49.6366 67.6549 cv
49.4463 67.6549 48.9617 67.706 48.8479 67.6117 cv
48.6576 67.4627 48.7635 65.6027 48.7714 65.2536 cv
48.7655 65.077 48.7557 64.9004 48.7498 64.7258 cv
48.7419 64.5394 48.8047 63.9155 48.4869 64.0214 cv
48.3064 64.0195 47.9219 63.9782 47.7865 64.047 cv
47.5943 64.0449 47.0802 64.0842 46.9684 63.9782 cv
46.7683 63.788 46.6565 63.0935 46.5524 62.8148 cv
46.3935 62.4068 46.1366 61.9987 46.0816 61.5474 cv
46.0757 61.5003 46.0639 61.4239 46.0954 61.3885 cv
46.1777 61.2846 46.5662 61.3022 46.7153 61.3062 cv
47.0626 61.3081 48.6301 61.312 48.7577 61.0903 cv
48.8362 60.9451 48.8047 60.49 48.7911 60.3056 cv
48.8028 60.023 48.8146 59.7405 48.8263 59.4561 cv
48.842 59.0224 48.7419 58.5143 48.8734 58.1121 cv
49.872 59.1893 51.0021 60.1722 52.0282 61.2453 cv
52.1243 61.3669 52.2185 61.4847 52.3147 61.6063 cv
52.5697 61.8634 52.8561 62.0929 53.121 62.3519 cv
53.8312 63.0464 54.4884 63.7997 55.181 64.5002 cv
55.7107 65.0377 56.266 65.5636 56.7996 66.1011 cv
56.8977 66.2011 57.0684 66.313 57.1135 66.4464 cv
57.1547 66.5484 56.9821 66.6014 56.929 66.6426 cv
cp
48.1377 67.5901 mo
48.0513 67.7099 47.7885 67.7451 47.6472 67.7648 cv
47.6511 67.031 47.61 66.2521 47.6374 65.5047 cv
47.6452 65.2927 47.6079 65.0455 47.6511 64.8396 cv
47.6668 64.7709 47.7041 64.7396 47.7512 64.6924 cv
47.9023 64.6924 48.0435 64.6924 48.1612 64.7513 cv
48.2044 64.7532 48.2123 65.0652 48.2024 65.1319 cv
48.1808 65.2888 48.2162 65.4497 48.2162 65.6282 cv
48.2142 65.8931 48.1711 66.1247 48.1847 66.3895 cv
48.2024 66.6583 48.2829 67.3842 48.1377 67.5901 cv
cp
46.2464 63.9685 mo
46.06 64.0509 45.805 63.89 45.701 63.7526 cv
45.5872 63.6016 45.5479 63.4231 45.4891 63.2485 cv
45.3969 62.9679 45.3047 62.6775 45.1967 62.4029 cv
45.1242 62.2185 44.9829 61.9692 45.0104 61.7515 cv
45.0281 61.6141 45.1576 61.5612 45.2517 61.4886 cv
45.3361 61.5122 45.3969 61.5357 45.446 61.6102 cv
45.5028 61.6985 45.5225 61.7947 45.5558 61.8928 cv
45.6481 62.1655 45.7383 62.4303 45.8167 62.7129 cv
45.907 63.0307 46.0443 63.3584 46.1797 63.6565 cv
46.2012 63.7056 46.3445 63.9253 46.2464 63.9685 cv
cp
45.185 68.5711 mo
45.0751 68.5692 44.9417 68.6535 44.8515 68.6967 cv
44.5827 68.8163 44.312 68.938 44.0412 69.0596 cv
44.0412 69.0969 44.0255 69.0812 44.002 69.0635 cv
43.8647 68.9478 43.7646 68.681 43.7509 68.5024 cv
43.898 68.5024 44.0628 68.5162 44.1922 68.477 cv
44.5297 68.477 44.8632 68.4985 45.185 68.5104 cv
45.185 68.53 45.185 68.5495 45.185 68.5711 cv
cp
43.4428 69.2833 mo
43.3133 69.5246 43.0504 69.6894 42.8503 69.8601 cv
42.7503 69.9838 42.6463 70.1034 42.5442 70.227 cv
42.2892 70.486 42.0263 70.7253 41.8615 71.0353 cv
41.8536 71.0353 41.8438 71.0353 41.8341 71.0353 cv
41.6555 70.8372 41.473 70.637 41.2925 70.4389 cv
41.1159 70.2819 40.7589 70.0779 40.5509 69.9758 cv
40.5509 69.9661 40.5509 69.9562 40.5509 69.9464 cv
40.5431 69.9464 40.5333 69.9464 40.5254 69.9464 cv
40.5254 69.9367 40.5254 69.9288 40.5254 69.9171 cv
40.5333 69.9171 40.5431 69.9171 40.5509 69.9171 cv
40.5548 69.866 40.6 69.8836 40.6373 69.8778 cv
40.7471 69.8562 40.8551 69.8327 40.963 69.8111 cv
41.3063 69.8012 41.6476 69.7875 41.9871 69.7797 cv
42.0027 69.7208 42.0185 69.6619 42.0342 69.6032 cv
42.0498 69.4579 42.0616 69.3108 42.0734 69.1656 cv
42.0597 69.0302 42.044 68.8929 42.0302 68.7556 cv
42.0381 68.6182 42.044 68.4848 42.0498 68.3455 cv
42.0459 68.0551 42.0107 67.7334 42.0342 67.4392 cv
42.0695 67.2723 42.1048 67.1037 42.1401 66.9388 cv
42.1774 66.7367 42.2323 66.4895 42.3716 66.3404 cv
42.5109 66.1854 42.7071 66.1992 42.8857 66.1266 cv
42.9444 66.1541 43.0092 66.1835 43.0327 66.2542 cv
43.0936 66.4483 43.0465 66.7054 43.0446 66.9172 cv
43.0524 67.4234 43.0583 67.9296 43.0603 68.4377 cv
43.0798 68.5574 43.1583 68.6633 43.2074 68.7693 cv
43.282 68.9341 43.3506 69.0969 43.4232 69.2617 cv
43.4507 69.2617 43.4526 69.2578 43.4428 69.2833 cv
cp
39.5622 69.2598 mo
39.258 69.2265 38.9775 69.0126 38.7067 68.8988 cv
38.489 68.8066 38.2418 68.7673 38.0436 68.6457 cv
38.0338 68.6457 38.024 68.6457 38.0141 68.6457 cv
38.0141 68.6359 38.0141 68.6261 38.0141 68.6182 cv
38.024 68.6182 38.0338 68.6182 38.0436 68.6182 cv
38.0436 68.5771 38.0338 68.5868 38.073 68.5868 cv
38.5007 68.5888 40.5215 68.6673 40.7079 68.4848 cv
40.7981 68.3945 40.7942 68.0218 40.7981 67.8707 cv
40.802 66.9271 40.6902 65.6597 41.5593 65.175 cv
41.6849 65.1025 41.8184 65.0887 41.9557 65.0377 cv
42.1951 65.0377 42.7875 65.126 42.7581 65.4477 cv
42.7522 65.5243 42.662 65.5243 42.5933 65.5341 cv
42.0204 65.6027 41.9086 65.9166 41.6731 66.362 cv
41.479 66.721 41.5103 67.341 41.5005 67.8158 cv
41.4887 68.2807 41.4671 68.7222 41.4632 69.1911 cv
41.4535 69.1911 41.4436 69.1911 41.4358 69.1911 cv
41.4358 69.2461 41.1493 69.193 41.0826 69.2185 cv
40.9237 69.2166 40.7864 69.2617 40.6451 69.2696 cv
40.2822 69.2656 39.9231 69.2617 39.5622 69.2598 cv
cp
37.5707 64.047 mo
37.3196 64.047 36.476 63.992 36.325 64.0901 cv
36.2681 64.1293 36.2622 64.2059 36.2583 64.2746 cv
36.2523 65.0554 36.2465 65.8382 36.2406 66.6151 cv
36.2445 66.9545 36.2857 67.447 36.2132 67.7825 cv
36.1955 67.8649 36.1504 67.9355 36.0856 67.9904 cv
36.0856 68.0002 36.0856 68.0081 36.0856 68.0218 cv
35.8462 68.0179 35.6325 67.9159 35.4107 67.8825 cv
35.1969 67.8511 34.9752 67.8982 34.7711 67.8982 cv
34.6142 67.8746 34.4572 67.857 34.3003 67.8373 cv
34.0001 67.8079 33.696 67.7785 33.3938 67.7511 cv
33.2742 67.7393 33.0898 67.7216 32.9858 67.7687 cv
32.2854 67.7648 31.6379 67.6255 30.9669 67.5588 cv
30.655 67.5274 30.3509 67.5294 30.0625 67.4783 cv
29.8173 67.4392 29.574 67.3999 29.3288 67.3587 cv
29.2228 67.3332 29.1129 67.3077 29.005 67.2842 cv
28.8521 67.2762 28.6971 67.2704 28.5421 67.2606 cv
28.1908 67.1978 27.8377 67.135 27.4845 67.0722 cv
27.2157 67.035 26.8724 67.031 26.6409 66.9133 cv
26.6311 66.9133 26.6213 66.9133 26.6076 66.9133 cv
26.6076 66.8937 26.6076 66.8741 26.6076 66.8544 cv
26.6527 66.8544 26.6311 66.8682 26.6527 66.8348 cv
26.8077 66.5856 27.1118 66.3169 27.3355 66.1148 cv
27.5395 65.9088 27.7435 65.7048 27.9476 65.4988 cv
28.2595 65.1869 28.5989 64.9102 28.9167 64.5963 cv
29.0738 64.4413 29.2307 64.2843 29.3877 64.1332 cv
29.5171 63.9881 29.6466 63.8429 29.7761 63.7017 cv
30.5824 62.9286 31.4045 62.1792 32.1912 61.3768 cv
32.6777 60.8805 33.1251 60.3566 33.6235 59.8799 cv
34.316 59.2148 34.9987 58.5673 35.656 57.8728 cv
35.8462 57.6766 36.0405 57.4784 36.2327 57.2783 cv
36.3583 57.4569 36.2818 58.1317 36.2622 58.3633 cv
36.2308 58.734 36.2249 59.1088 36.221 59.5032 cv
36.219 59.7543 36.1876 60.0113 36.2681 60.2271 cv
36.3387 60.4371 36.4859 60.6156 36.6114 60.8019 cv
36.6801 60.9079 36.7193 61.0491 36.841 61.1197 cv
37.0215 61.2159 37.5865 61.2414 37.82 61.2316 cv
38.2339 61.2159 38.6616 61.1845 39.1089 61.1904 cv
39.1069 61.4729 38.9264 61.8241 38.8303 62.0752 cv
38.6538 62.5186 38.4772 62.9601 38.3124 63.4113 cv
38.2477 63.578 38.1907 63.8037 38.0711 63.941 cv
37.9828 64.0371 37.8611 63.9743 37.7473 64.0175 cv
37.6885 64.0313 37.6296 64.0371 37.5707 64.047 cv
cp
25.14 50.0957 mo
24.7124 50.494 24.3651 50.961 23.9472 51.3612 cv
23.3312 51.9635 22.7131 52.5658 22.0971 53.1701 cv
21.8931 53.378 21.5968 53.5978 21.4458 53.8332 cv
21.4359 53.8332 21.4262 53.8332 21.4144 53.8332 cv
21.4144 53.892 21.3476 53.7273 21.3418 53.6821 cv
21.3398 53.4702 21.334 53.2564 21.3319 53.0406 cv
21.3437 52.397 21.3575 51.7535 21.3731 51.114 cv
21.3751 50.5804 21.383 50.0683 21.377 49.5601 cv
21.3712 49.3835 21.3634 49.207 21.3556 49.0343 cv
21.3673 48.5517 21.3947 48.022 21.3908 47.5119 cv
21.383 47.2981 21.3751 47.0822 21.3673 46.8664 cv
21.3731 46.5544 21.3986 46.2327 21.3986 45.9011 cv
21.3908 45.7069 21.385 45.5127 21.3751 45.3165 cv
21.3791 44.7593 21.3811 44.206 21.383 43.6489 cv
21.377 43.4841 21.3692 43.3173 21.3595 43.1525 cv
21.3791 42.9464 21.3986 42.7405 21.4163 42.5364 cv
21.432 42.0734 21.385 41.6379 21.4026 41.1906 cv
21.4202 40.8492 21.4379 40.5078 21.4536 40.1684 cv
21.4458 39.4327 21.4104 38.7048 21.4301 37.971 cv
21.4517 37.6219 21.4732 37.2707 21.4968 36.9194 cv
21.483 36.7331 21.4693 36.5487 21.4536 36.3642 cv
21.4478 35.6168 21.4732 34.8556 21.4653 34.1395 cv
21.4575 33.9825 21.4497 33.8256 21.4418 33.6706 cv
21.4536 33.4861 21.4653 33.2997 21.4791 33.1153 cv
21.4811 32.8975 21.4379 32.6916 21.4517 32.4699 cv
21.4673 32.3443 21.485 32.2188 21.4987 32.0912 cv
21.4948 31.7419 21.483 31.3849 21.485 31.0377 cv
21.7832 31.1455 22.0225 31.4771 22.2521 31.7007 cv
22.7602 32.1932 23.2645 32.6856 23.7668 33.1761 cv
23.9413 33.3625 24.1159 33.5489 24.2886 33.7333 cv
24.6692 34.0924 25.0498 34.4592 25.3911 34.8536 cv
25.507 34.987 25.6148 35.1243 25.7503 35.2538 cv
25.9994 35.4912 26.2662 35.709 26.5095 35.962 cv
26.6154 36.0719 26.6665 36.1936 26.7822 36.3015 cv
27.3668 36.8566 27.9849 37.3766 28.5734 37.9358 cv
29.1365 38.5145 29.6975 39.0972 30.2587 39.676 cv
30.6139 40.0154 32.8602 42.1225 32.7268 42.4462 cv
32.6856 42.509 32.6464 42.5698 32.6032 42.6306 cv
32.3403 43.0839 31.7242 43.5919 31.3201 43.9549 cv
31.1808 44.0804 31.0945 44.2492 30.9591 44.3865 cv
30.6275 44.724 30.2979 45.0458 29.9644 45.3813 cv
29.5053 45.8364 29.0384 46.2876 28.5754 46.7409 cv
28.2713 47.0528 27.9691 47.3648 27.665 47.6747 cv
27.5885 47.763 27.512 47.8513 27.4335 47.9395 cv
26.6665 48.6498 25.9052 49.3875 25.14 50.0957 cv
cp
39.105 27.8455 mo
38.8205 27.9163 38.8813 27.3649 38.8892 27.1825 cv
39.0991 27.255 39.5249 27.7397 39.105 27.8455 cv
cp
31.3142 21.2594 mo
31.6007 21.2614 31.9597 21.3026 32.2207 21.2339 cv
32.4286 21.2751 32.666 21.2633 32.8916 21.2693 cv
33.0702 21.279 33.2427 21.2908 33.4193 21.2987 cv
33.6646 21.2987 33.9079 21.2987 34.1511 21.2987 cv
34.2591 21.3183 34.367 21.336 34.473 21.3555 cv
34.6947 21.3576 34.9575 21.2065 35.1753 21.281 cv
35.4343 21.3693 35.6579 21.6596 35.8542 21.8598 cv
36.17 22.1717 36.482 22.4797 36.7939 22.7917 cv
37.0038 23.0153 37.2 23.2723 37.4118 23.4921 cv
37.6728 23.7647 37.9593 23.957 38.2222 24.2317 cv
38.3791 24.3965 38.4733 24.577 38.6263 24.7359 cv
38.7127 24.8065 38.8029 24.8733 38.8912 24.9419 cv
39.0599 25.0813 39.2149 25.2715 39.309 25.4598 cv
39.2149 25.4579 39.0775 25.66 39.0147 25.7247 cv
38.7734 25.9779 38.5832 26.2348 38.5027 26.5703 cv
38.483 26.7057 38.4635 26.8391 38.4419 26.9745 cv
38.3988 27.1903 38.3418 27.4042 38.3673 27.6475 cv
38.4066 27.8044 38.4439 27.9594 38.483 28.1143 cv
38.5497 28.2772 38.6165 28.4381 38.6832 28.597 cv
38.7656 28.7755 38.8049 28.9639 38.9264 29.1287 cv
39.0167 29.2503 39.1717 29.2934 39.2855 29.3798 cv
39.3993 29.4622 39.4464 29.6015 39.5602 29.6859 cv
39.6701 29.7408 39.7779 29.7899 39.8878 29.8389 cv
40.0389 29.9409 40.188 30.041 40.3391 30.141 cv
40.5392 30.2666 40.7845 30.3549 40.959 30.5216 cv
41.0748 30.6806 41.1886 30.8376 41.3043 30.9965 cv
41.4084 31.1239 41.577 31.2142 41.6536 31.3652 cv
41.7026 31.4693 41.7418 31.6124 41.7477 31.7361 cv
41.7536 31.8499 41.7242 31.9794 41.7516 32.0892 cv
41.8125 32.3482 41.9164 32.717 41.8713 32.9936 cv
41.6359 32.9917 41.1454 32.4012 40.9689 32.2285 cv
40.6039 31.8872 40.239 31.5477 39.878 31.2083 cv
39.6131 30.9278 39.3502 30.6452 39.0854 30.3647 cv
38.5635 29.8193 38.0005 29.3111 37.4845 28.7755 cv
37.2098 28.4871 36.9273 28.2047 36.6506 27.9142 cv
36.5329 27.7788 36.4152 27.6415 36.2975 27.5061 cv
35.34 26.5703 34.3925 25.6424 33.4409 24.7104 cv
33.1898 24.4358 32.9368 24.163 32.6836 23.8884 cv
32.1382 23.3371 31.632 22.7897 31.0631 22.2639 cv
30.7825 22.0029 30.1822 21.6479 30.0822 21.281 cv
30.4883 21.2829 30.8983 21.2574 31.3142 21.2594 cv
cp
36.9017 21.3496 mo
37.1215 21.385 37.251 21.4478 37.4099 21.6047 cv
37.6415 21.8304 37.8396 22.0972 38.026 22.358 cv
38.1221 22.4915 38.1751 22.6406 38.2889 22.7721 cv
38.434 22.9271 38.5812 23.084 38.7263 23.239 cv
38.8578 23.4038 38.9853 23.5647 39.1148 23.7295 cv
39.1619 23.8001 39.207 23.8707 39.2541 23.9413 cv
39.3463 24.0238 39.4424 24.1062 39.5347 24.1846 cv
39.7308 24.373 39.9094 24.6084 40.0114 24.8497 cv
39.9663 24.8478 39.9663 24.8968 39.9545 24.9341 cv
39.7956 24.9341 39.5994 24.8752 39.4856 24.7889 cv
39.2973 24.5947 39.1109 24.4044 38.9206 24.2101 cv
38.8009 24.0924 38.6596 24.0434 38.5557 23.9061 cv
38.3536 23.6353 38.2025 23.3135 37.9554 23.0722 cv
37.814 22.9329 37.61 22.9055 37.4649 22.7701 cv
37.461 22.7642 37.457 22.7583 37.4531 22.7544 cv
37.3 22.5974 37.2432 22.3836 37.1137 22.2129 cv
36.9665 22.0187 36.7527 21.8852 36.6114 21.693 cv
36.6075 21.6812 36.5996 21.6674 36.5918 21.6557 cv
36.5899 21.6479 36.5899 21.64 36.5859 21.6341 cv
36.5623 21.4673 36.7939 21.4006 36.9017 21.3496 cv
cp
38.0495 21.6479 mo
38.0495 21.642 38.0515 21.6322 38.0515 21.6244 cv
38.0515 21.6184 38.0534 21.6126 38.0554 21.6047 cv
38.1162 21.4282 38.5792 21.4243 38.744 21.33 cv
38.9167 21.33 39.1403 21.2987 39.2816 21.3693 cv
39.6975 21.5733 39.8368 22.1795 40.0036 22.5622 cv
40.1134 22.8094 40.2567 23.0506 40.3763 23.2979 cv
40.4548 23.4293 40.5333 23.5607 40.6118 23.6902 cv
40.6647 23.8236 40.6804 23.9669 40.6883 24.1199 cv
40.6902 24.2297 40.7079 24.4358 40.6039 24.4887 cv
40.5215 24.5339 40.3959 24.5123 40.3156 24.479 cv
40.1664 24.422 38.0612 21.8088 38.0495 21.6734 cv
38.0495 21.6635 38.0495 21.6557 38.0495 21.6479 cv
cp
40.4175 21.4006 mo
40.5254 21.2868 40.9512 21.3615 41.118 21.3144 cv
41.3024 21.3771 41.7713 21.3693 41.9949 21.3771 cv
41.9988 21.5066 42.0047 21.6322 42.0107 21.7617 cv
42.0322 21.8578 42.0558 21.9539 42.0753 22.0521 cv
42.0577 22.1579 42.0401 22.2659 42.0224 22.3718 cv
42.0126 22.8368 41.9518 23.2958 41.9282 23.7472 cv
41.944 24.0316 41.9596 24.3141 41.9753 24.5967 cv
41.9675 24.5967 41.9557 24.5967 41.9479 24.5967 cv
41.9479 24.5848 41.9479 24.577 41.9479 24.5672 cv
41.5751 24.5652 41.1474 23.4273 40.9982 23.1664 cv
40.9139 23.0212 40.7864 22.929 40.6863 22.7917 cv
40.4764 22.4974 40.0958 21.7421 40.4175 21.4006 cv
cp
43.0661 26.8254 mo
43.0131 27.0314 42.8189 27.153 42.6698 27.3002 cv
42.5148 27.4513 42.3285 27.6298 42.1068 27.6553 cv
41.889 27.6827 41.5751 26.7057 41.6163 26.5331 cv
41.6359 26.4546 41.9792 26.1034 42.0537 26.0602 cv
42.0537 26.0504 42.0537 26.0407 42.0558 26.0308 cv
42.1597 26.0407 42.2618 26.0543 42.3637 26.0642 cv
42.5463 26.1249 43.1289 26.5938 43.0661 26.8254 cv
cp
42.7287 23.4588 mo
42.7424 23.2998 42.8268 23.1958 42.8248 23.0212 cv
42.817 22.8054 42.6914 22.5974 42.7443 22.3816 cv
42.7797 22.2384 42.917 22.1423 42.9602 21.9971 cv
43.0092 21.8265 42.9485 21.6851 43.0681 21.5459 cv
43.1916 21.4046 43.947 21.5184 44.1903 21.3889 cv
44.3472 21.3909 44.5003 21.3909 44.6572 21.3928 cv
44.6572 21.4124 44.6572 21.4321 44.6572 21.4517 cv
44.6121 21.4517 44.6121 21.4752 44.5925 21.5027 cv
44.363 21.8244 44.2453 22.1991 44.0864 22.5543 cv
44.0117 22.6838 43.9372 22.8113 43.8647 22.9428 cv
43.8058 23.0821 43.7449 23.2233 43.6861 23.3646 cv
43.535 23.6471 43.1564 24.1297 42.8268 24.1925 cv
42.8268 24.1827 42.8268 24.1729 42.8268 24.163 cv
42.7758 24.1611 42.7935 23.8942 42.7855 23.8413 cv
42.762 23.7118 42.713 23.6039 42.7287 23.4588 cv
cp
44.9633 22.7956 mo
45.0123 22.6445 45.0104 22.4797 45.0849 22.3424 cv
45.1772 22.1639 45.4028 22.1188 45.5421 21.9912 cv
45.6656 21.8755 45.6932 21.7185 45.7912 21.5929 cv
45.8952 21.4576 46.0384 21.434 46.1797 21.3712 cv
46.2955 21.3712 46.4132 21.3732 46.5309 21.3732 cv
46.5309 21.5184 46.3387 21.6674 46.27 21.7852 cv
46.1718 21.9422 46.0757 22.1109 45.9776 22.2659 cv
45.8658 22.4189 45.75 22.5739 45.6343 22.7269 cv
45.5578 22.8466 45.5303 22.9819 45.4342 23.0918 cv
45.3636 23.1468 45.2929 23.2036 45.2203 23.2586 cv
45.1556 23.3312 45.0909 23.4018 45.0281 23.4705 cv
44.9614 23.5333 44.8966 23.5961 44.8319 23.6569 cv
44.7122 23.802 44.7122 24.012 44.5533 24.1395 cv
44.412 24.2474 44.1589 24.3219 43.9686 24.2573 cv
43.951 24.2573 43.9294 24.2573 43.9098 24.2573 cv
43.9117 24.169 44.2943 23.5725 44.3826 23.496 cv
44.463 23.4273 44.5808 23.4214 44.6436 23.3292 cv
44.7023 23.2429 44.6926 23.1409 44.7436 23.0527 cv
44.8025 22.9467 44.9201 22.9133 44.9633 22.7956 cv
cp
46.9507 22.0893 mo
47.0723 21.9578 47.1411 21.797 47.2489 21.6518 cv
47.3412 21.5616 47.4334 21.4713 47.5275 21.3771 cv
47.7374 21.4006 47.9336 21.4321 48.1691 21.4418 cv
48.1691 21.4713 48.1691 21.4988 48.1691 21.5301 cv
47.8591 21.5262 47.0272 22.5601 46.833 22.8211 cv
46.7408 22.9447 46.6349 23.188 46.4956 23.2606 cv
46.4093 23.3038 46.3072 23.2684 46.2366 23.2252 cv
46.0384 23.1017 46.1856 22.8839 46.2444 22.7407 cv
46.2798 22.6505 46.2895 22.5425 46.3661 22.4758 cv
46.4484 22.4366 46.525 22.3973 46.6074 22.3561 cv
46.7212 22.2698 46.835 22.1795 46.9507 22.0893 cv
cp
44.7338 29.1189 mo
44.7612 29.1189 44.7514 29.1267 44.7318 29.1483 cv
44.7318 29.2817 44.3532 29.5191 44.2354 29.4053 cv
44.0687 29.2444 44.2747 29.0757 44.3806 28.9698 cv
44.5376 28.9815 44.6514 28.9894 44.7338 29.1189 cv
cp
45.0967 27.4277 mo
45.0242 27.4807 44.9555 27.5435 44.8573 27.5415 cv
44.7554 27.5396 44.7142 27.4748 44.6827 27.3904 cv
44.6592 27.3159 44.6671 26.3702 44.6926 26.2879 cv
44.7239 26.1858 44.8809 26.0995 44.9534 26.017 cv
45.1752 26.0858 45.1615 26.2192 45.238 26.4193 cv
45.3753 26.7842 45.4734 27.1491 45.0967 27.4277 cv
cp
45.6461 27.8044 mo
45.6461 28.0163 45.5362 28.2477 45.3498 28.3302 cv
45.3498 28.3772 45.2478 28.3125 45.2027 28.2988 cv
45.2046 28.0869 45.4793 27.9338 45.6186 27.8044 cv
45.6265 27.8044 45.6362 27.8044 45.6461 27.8044 cv
cp
45.4303 24.528 mo
45.4303 24.5378 45.4303 24.5457 45.4303 24.5574 cv
45.4009 24.5554 45.3714 24.5554 45.342 24.5554 cv
45.342 24.4613 45.34 24.3651 45.3361 24.267 cv
45.3793 23.9747 45.6186 23.8413 45.7854 23.6235 cv
46.0954 23.8942 45.6166 24.3298 45.4303 24.528 cv
cp
48.3751 34.6358 mo
48.4064 34.8045 48.4359 34.9693 48.4673 35.138 cv
48.4986 35.6736 48.4869 36.2171 48.4947 36.7763 cv
48.5027 37.0019 48.5105 37.2275 48.5163 37.4531 cv
48.5124 38.1555 48.4712 38.9109 48.4791 39.6466 cv
48.4967 39.8211 48.5124 39.9977 48.5281 40.1723 cv
48.5399 40.5883 48.5281 40.9963 48.5202 41.4005 cv
48.5144 41.6124 48.4811 41.8341 48.4712 42.044 cv
48.4516 42.403 48.4732 42.7581 48.4535 43.127 cv
48.4379 43.282 48.4202 43.439 48.4045 43.5959 cv
48.3986 43.8941 48.4222 44.2139 48.4202 44.5318 cv
48.4025 44.7868 48.3868 45.0379 48.3712 45.291 cv
48.381 45.7304 48.4555 46.2425 48.381 46.6958 cv
48.224 46.6565 48.0671 46.6172 47.9121 46.578 cv
47.6001 46.4976 46.8762 46.3563 46.5662 46.5093 cv
46.5073 46.5231 46.4484 46.5289 46.3877 46.5408 cv
46.321 46.5486 46.2543 46.5583 46.1856 46.5682 cv
46.0207 46.5663 45.6617 46.631 45.5401 46.7094 cv
45.1144 46.7094 44.9437 46.8311 44.618 47.0037 cv
44.3472 47.147 44.0549 47.2372 43.7861 47.3843 cv
43.4821 47.5492 43.1937 47.8003 42.8699 47.9259 cv
42.8699 47.9866 42.7797 47.8572 42.7659 47.8297 cv
42.4796 47.2588 42.4971 46.3288 42.5011 45.6108 cv
42.5031 45.3401 42.454 45.0968 42.456 44.8496 cv
42.4677 44.7632 42.4775 44.673 42.4893 44.5867 cv
42.4775 44.4395 42.4658 44.2924 42.452 44.1472 cv
42.4462 43.6096 42.4796 43.0524 42.4677 42.5403 cv
42.456 42.0008 42.4226 41.4299 42.4422 40.8688 cv
42.456 40.5098 42.4462 40.0978 42.4835 39.7289 cv
42.5011 39.572 42.5168 39.415 42.5364 39.262 cv
42.5403 38.8598 42.5423 38.4595 42.5463 38.0613 cv
42.5658 37.7866 42.5854 37.5159 42.6051 37.2413 cv
42.6227 36.6919 42.6208 36.1602 42.6973 35.6599 cv
42.7287 35.448 42.7326 35.2459 42.866 35.087 cv
43.0426 34.8771 43.2898 34.7457 43.5193 34.622 cv
44.4571 34.1257 45.4695 33.9687 46.5524 33.7647 cv
46.7899 33.7215 47.0626 33.7451 47.2804 33.6685 cv
47.4902 33.6706 47.6767 33.7058 47.8669 33.7176 cv
48.0297 33.7255 48.1927 33.6941 48.3339 33.7608 cv
48.4163 33.7628 48.3967 33.959 48.3967 34.0276 cv
48.3849 34.2257 48.3457 34.4435 48.3751 34.6358 cv
cp
43.4821 29.8644 mo
43.4428 30.0783 42.9563 30.1665 42.7895 30.0626 cv
42.5403 29.9095 43.0152 29.6015 43.1191 29.5191 cv
43.2427 29.5544 43.5135 29.6937 43.4821 29.8644 cv
cp
43.8647 26.2407 mo
43.7646 26.3015 43.6488 26.4604 43.5193 26.4448 cv
43.3427 26.4232 43.2663 26.1897 43.1486 26.0818 cv
43.0191 25.9582 42.7483 25.8954 42.7855 25.66 cv
42.7993 25.5619 42.8837 25.5129 42.966 25.4795 cv
42.966 25.4717 42.966 25.4619 42.966 25.452 cv
43.1622 25.4893 43.2996 25.5893 43.4742 25.664 cv
43.6782 25.7482 43.8862 25.7953 44.0961 25.8758 cv
44.1413 25.8915 44.1609 25.9425 44.1432 25.9915 cv
44.102 26.1152 43.9666 26.178 43.8647 26.2407 cv
cp
43.4526 27.4433 mo
43.537 27.4532 43.6214 27.463 43.7018 27.4728 cv
43.9569 27.565 44.1747 27.9358 44.0804 28.2047 cv
44.0294 28.3478 43.8686 28.4734 43.7449 28.5676 cv
43.6606 28.6323 43.537 28.7324 43.4154 28.7226 cv
43.2466 28.7049 43.3172 28.3439 43.3604 28.2477 cv
43.4213 28.1124 43.5703 28.0771 43.5802 27.9103 cv
43.5959 27.7142 43.4507 27.6278 43.4526 27.4433 cv
cp
39.7014 28.1536 mo
39.7563 28.1693 39.8113 28.187 39.8662 28.2026 cv
40.0095 28.287 40.5196 28.7736 40.5333 28.9266 cv
40.5509 29.0894 40.1174 29.3936 39.9801 29.423 cv
39.8623 29.4465 39.8309 29.3288 39.7956 29.2444 cv
39.6602 28.9089 39.5622 28.5401 39.7014 28.1536 cv
cp
40.1566 25.7287 mo
40.1566 25.6992 40.1566 25.6698 40.1566 25.6404 cv
40.2135 25.6247 40.2724 25.607 40.3331 25.5933 cv
40.6981 25.5423 40.9354 25.4874 41.2396 25.3225 cv
41.3357 25.3501 41.4848 25.3501 41.5437 25.4442 cv
41.7085 25.7012 40.9374 26.227 40.7118 26.2035 cv
40.4607 26.174 40.3312 25.8758 40.1566 25.7287 cv
cp
39.4797 26.2799 mo
39.4817 26.2799 39.6917 26.0249 39.772 25.9896 cv
39.772 25.9798 39.772 25.968 39.772 25.9582 cv
40.1429 26.1976 40.4391 26.6253 40.0585 27.0157 cv
39.984 27.0903 39.8623 27.1942 39.7584 27.2119 cv
39.415 27.2629 39.5602 26.841 39.5542 26.6606 cv
39.5523 26.5252 39.5111 26.3997 39.4797 26.2799 cv
cp
41.5064 30.0076 mo
41.4965 30.0076 41.4887 30.0076 41.479 30.0076 cv
41.479 30.0587 41.371 30.0272 41.3337 30.0194 cv
40.8923 29.9253 40.4136 29.8115 40.7805 29.2719 cv
40.8512 29.2817 40.9119 29.2837 40.9649 29.3268 cv
41.0669 29.4033 41.0984 29.5191 41.1729 29.6153 cv
41.2847 29.7584 41.4554 29.829 41.5064 30.0076 cv
cp
41.3749 28.4047 mo
41.2612 28.5009 41.112 28.6736 40.9551 28.6833 cv
40.8335 28.6931 40.7746 28.6069 40.6962 28.5381 cv
40.5039 28.3694 40.3646 28.0261 40.4293 27.7533 cv
40.4764 27.671 40.5157 27.5886 40.5608 27.5061 cv
40.6412 27.2688 40.6079 27.2296 40.7923 27.0471 cv
41.0434 27.1648 41.7674 27.6985 41.6928 28.0398 cv
41.6614 28.1831 41.479 28.3125 41.3749 28.4047 cv
cp
41.7085 28.8972 mo
41.7007 28.7814 41.681 28.6382 41.7242 28.5303 cv
41.7595 28.4381 41.8517 28.3949 41.9263 28.342 cv
42.0224 28.3478 42.0989 28.3517 42.1715 28.3988 cv
42.2559 28.4519 42.8464 29.0208 42.8582 29.0836 cv
42.8974 29.3053 42.3853 29.6407 42.2087 29.68 cv
42.1264 29.6956 42.0813 29.6192 42.0263 29.5838 cv
41.9596 29.5406 41.8812 29.5289 41.8223 29.4622 cv
41.6731 29.2975 41.7163 29.1209 41.7085 28.8972 cv
cp
35.6403 43.0269 mo
35.6618 42.7739 35.6795 42.5188 35.7011 42.2657 cv
35.7128 41.6535 35.7246 41.0101 35.7364 40.4215 cv
35.7443 40.1194 35.6284 39.8604 35.6403 39.5739 cv
35.6677 39.1717 35.6932 38.7734 35.7207 38.3732 cv
35.7246 37.8965 35.7286 37.4178 35.7325 36.9391 cv
35.7364 36.123 35.7717 35.3323 35.7756 34.5417 cv
35.7756 34.3375 35.7286 33.8059 35.8188 33.6685 cv
35.911 33.5312 36.1386 33.5528 36.2779 33.49 cv
36.7488 33.4959 37.2137 33.4979 37.6826 33.5038 cv
38.0141 33.5195 38.3712 33.5842 38.6812 33.6607 cv
38.8852 33.7 39.0873 33.7373 39.2895 33.7764 cv
39.468 33.8373 39.6446 33.9001 39.823 33.9609 cv
40.4941 34.212 41.118 34.4376 41.5751 35.0557 cv
41.8184 35.3832 41.7614 35.8385 41.8026 36.2701 cv
41.9164 37.5571 41.8301 38.9304 41.8026 40.2214 cv
41.785 41.0493 41.7929 41.8674 41.7614 42.7091 cv
41.7693 43.0034 41.7752 43.2957 41.781 43.588 cv
41.7771 44.2728 41.7379 44.9634 41.7143 45.6343 cv
41.6968 46.1091 41.6869 46.5486 41.628 46.9841 cv
41.5751 47.3648 41.5927 47.6669 41.4063 47.9749 cv
41.4063 47.9847 41.4063 47.9945 41.4063 48.0043 cv
41.3416 48.0043 40.6196 47.4452 40.496 47.3706 cv
40.139 47.1607 39.5111 46.9233 39.0972 46.835 cv
38.746 46.7585 38.4105 46.7742 38.0515 46.7133 cv
37.767 46.6663 37.0096 46.5074 36.7311 46.631 cv
36.6624 46.6408 36.5977 46.6486 36.5251 46.6624 cv
36.427 46.6585 36.3151 46.6742 36.2327 46.7153 cv
36.1327 46.7133 36.0209 46.7349 35.9404 46.7742 cv
35.8326 46.7742 35.7246 46.7742 35.6187 46.7703 cv
35.6206 46.4937 35.6697 46.2425 35.6716 45.9816 cv
35.6736 45.7559 35.5971 45.5538 35.599 45.3067 cv
35.6187 45.0536 35.6403 44.8025 35.6579 44.5493 cv
35.6697 44.0334 35.6304 43.5468 35.6403 43.0269 cv
cp
33.8765 45.0359 mo
33.8824 44.771 33.9333 44.4925 33.9353 44.2178 cv
33.9177 43.9137 33.9 43.6135 33.8843 43.3095 cv
33.8785 42.8091 33.9374 42.3285 33.9471 41.8458 cv
33.9314 41.5535 33.9177 41.2612 33.902 40.9669 cv
33.9098 40.7433 33.9197 40.5196 33.9275 40.296 cv
33.9098 40.0723 33.8922 39.8466 33.8765 39.621 cv
33.8785 39.2581 33.9844 38.9383 33.9942 38.5694 cv
33.9785 38.3634 33.9628 38.1594 33.9452 37.9534 cv
33.953 37.8376 33.9589 37.7199 33.9667 37.6022 cv
33.9825 37.1666 34.0354 36.7566 34.0374 36.3171 cv
34.0393 36.017 33.9903 35.5618 34.0687 35.297 cv
34.1472 35.0262 34.9477 34.1179 35.2223 34.0119 cv
35.2223 34.002 35.2223 33.9923 35.2223 33.9825 cv
35.2812 34.2081 35.2478 34.5102 35.2243 34.7418 cv
35.1949 35.0242 35.1772 35.3185 35.1871 35.6207 cv
35.2027 35.813 35.2184 36.0111 35.2361 36.2053 cv
35.2381 36.5761 35.24 36.9469 35.242 37.3177 cv
35.2303 37.4845 35.2145 37.6493 35.2027 37.8141 cv
35.2106 38.0103 35.2184 38.2065 35.2243 38.3988 cv
35.2145 38.9206 35.1851 39.5092 35.2008 40.0409 cv
35.2145 40.6177 35.136 41.2278 35.1517 41.7949 cv
35.1694 42.0067 35.1871 42.2225 35.2027 42.4403 cv
35.2047 42.8778 35.2087 43.3173 35.2106 43.7548 cv
35.1969 43.9608 35.1792 44.1648 35.1636 44.3708 cv
35.1636 44.7123 35.1595 45.0536 35.1595 45.393 cv
35.1556 45.805 35.2126 46.5309 35.0948 46.8782 cv
35.0576 46.9861 34.9222 47.0567 34.8594 47.1509 cv
34.7653 47.2823 34.6691 47.4119 34.5749 47.5433 cv
34.4808 47.6336 34.3847 47.7238 34.2924 47.814 cv
34.1943 48.0004 34.0963 48.1867 34.002 48.3712 cv
33.9903 48.3712 33.9825 48.3712 33.9726 48.3712 cv
33.9726 48.383 33.9726 48.3909 33.9726 48.4006 cv
33.9628 48.4006 33.951 48.4006 33.9432 48.4006 cv
33.9452 47.8513 33.8608 47.2549 33.8549 46.7016 cv
33.8491 46.3759 33.9059 46.0227 33.9236 45.7088 cv
33.9353 45.4696 33.8726 45.2615 33.8765 45.0359 cv
cp
47.3451 48.74 mo
47.1215 48.7381 46.8173 48.6969 46.6427 48.7931 cv
46.4367 48.7931 46.1522 48.6675 45.9678 48.7597 cv
45.9011 48.7695 45.8324 48.7793 45.7638 48.789 cv
45.5322 48.7871 45.2498 48.7518 45.0594 48.844 cv
44.9594 48.844 44.8476 48.8617 44.7691 48.9009 cv
44.5709 48.9009 44.155 48.8518 44.0059 48.9244 cv
43.9196 48.9343 43.8313 48.9421 43.743 48.952 cv
43.6547 48.9637 43.5683 48.9716 43.4781 48.9814 cv
43.3388 48.9794 43.1544 48.999 43.07 49.0971 cv
43.0191 49.0971 43.0583 49.2501 43.0603 49.3011 cv
43.072 49.8211 42.6894 50.29 42.1538 50.2861 cv
41.7223 50.2861 41.3828 49.9721 41.2985 49.5778 cv
41.2709 49.4424 41.3063 49.254 41.22 49.1461 cv
41.1826 49.099 41.112 49.0696 41.0492 49.0834 cv
40.8452 49.0736 40.6412 49.0618 40.4352 49.052 cv
40.3862 49.0618 40.3391 49.0696 40.288 49.0815 cv
39.8074 49.0775 39.3817 49.0187 38.8833 49.0148 cv
38.7578 49.0127 38.5753 48.9892 38.4752 49.0422 cv
38.1221 49.0383 37.7866 49.0088 37.4217 49.0068 cv
37.249 49.0049 37.0312 48.9872 36.8959 49.0618 cv
36.3799 49.0578 35.8542 49.0187 35.3421 49.0226 cv
35.1615 49.0245 34.9084 48.9794 34.7574 49.05 cv
34.6004 49.05 34.4454 49.0461 34.3199 48.9892 cv
34.3199 48.8676 34.3866 48.7636 34.4278 48.6655 cv
34.571 48.3162 34.6887 48.2123 34.9712 47.971 cv
35.1243 47.8337 35.2558 47.6669 35.4264 47.5589 cv
36.1759 47.0704 37.353 47.0744 38.2771 47.2686 cv
38.4556 47.3176 38.6322 47.3687 38.8088 47.4197 cv
39.3993 47.5295 39.9309 47.6002 40.4332 47.8944 cv
40.7589 48.0848 41.0297 48.3536 41.3318 48.5988 cv
41.4084 48.6498 41.4887 48.7008 41.5673 48.7499 cv
41.7046 48.8558 41.8497 49.0775 42.042 49.0736 cv
42.3166 49.0736 42.4893 48.7204 42.6933 48.5733 cv
42.9209 48.4084 43.1446 48.2299 43.3977 48.1083 cv
44.0883 47.7767 44.777 47.4315 45.5382 47.2431 cv
45.8128 47.1783 46.0855 47.1136 46.3602 47.0488 cv
46.5172 47.0233 46.6878 47.0391 46.8291 46.9821 cv
47.0626 46.9881 47.294 46.992 47.5275 46.9959 cv
47.916 47.0567 48.3201 47.247 48.6223 47.4766 cv
48.7577 47.6256 48.8891 47.7728 49.0245 47.9239 cv
49.2384 48.1554 49.4718 48.4006 49.5091 48.7223 cv
49.4992 48.7223 49.4895 48.7204 49.4777 48.7204 cv
49.4777 48.7754 49.2462 48.7518 49.1873 48.7518 cv
48.5733 48.7459 47.9591 48.7439 47.3451 48.74 cv
cp
38.2634 58.1965 mo
38.1005 58.2632 37.8533 58.222 37.663 58.2239 cv
37.665 57.9631 38.7362 57.1881 38.9559 56.9722 cv
39.1011 56.9722 39.2483 56.9722 39.3953 56.9742 cv
39.3953 57.1881 38.4752 58.1062 38.2634 58.1965 cv
cp
42.7248 58.2809 mo
42.7248 58.1984 43.3604 57.2744 43.4546 57.1606 cv
43.5016 57.1017 43.5723 57.0566 43.6391 57.0272 cv
43.6391 57.0193 43.6391 57.0095 43.6391 56.9977 cv
43.7861 56.9977 43.9333 56.9998 44.0804 56.9998 cv
44.0785 57.1822 43.3859 58.2023 43.2035 58.2789 cv
43.0759 58.3358 42.9033 58.3083 42.7522 58.3122 cv
42.7522 58.3025 42.7522 58.2927 42.7522 58.2809 cv
42.7443 58.2809 42.7326 58.2809 42.7248 58.2809 cv
cp
45.2634 56.9625 mo
45.4048 57.1587 46.2405 58.0866 46.1915 58.2612 cv
46.1777 58.3025 46.1267 58.3083 46.0875 58.3162 cv
45.8344 58.3201 45.5813 58.324 45.3282 58.326 cv
44.8809 58.324 44.4316 58.3221 43.9843 58.3182 cv
43.9843 58.3103 43.9843 58.3005 43.9863 58.2887 cv
43.9745 58.2887 43.9627 58.2887 43.9549 58.2887 cv
43.9549 58.1906 44.0333 58.1043 44.0745 58.0278 cv
44.2138 57.7629 44.7651 57.0154 44.7278 56.7447 cv
44.7181 56.6544 44.6514 56.5877 44.5689 56.5583 cv
44.2158 56.4386 43.792 56.5406 43.4075 56.5269 cv
43.2035 56.5191 42.7385 56.417 42.5599 56.4955 cv
42.1754 56.4936 40.8374 56.3052 40.6804 56.6427 cv
40.6412 56.7231 40.6962 56.8172 40.7295 56.8859 cv
40.8845 57.1959 41.1258 57.4784 41.3337 57.761 cv
41.4456 57.9336 41.5593 58.1062 41.6712 58.277 cv
41.6712 58.2867 41.6712 58.2946 41.6712 58.3064 cv
41.6418 58.3162 41.6124 58.326 41.5829 58.3358 cv
40.7589 58.3318 39.9408 58.2966 39.1246 58.2927 cv
39.1246 58.2731 39.1246 58.2534 39.1246 58.2338 cv
39.1521 58.2338 40.3234 56.8192 40.4529 56.6603 cv
40.4529 56.6211 40.443 56.6211 40.4195 56.6015 cv
40.2783 56.5838 40.1272 56.5642 39.984 56.5446 cv
39.7387 56.5328 39.4955 56.521 39.2502 56.5093 cv
38.5517 56.4936 37.814 56.5328 37.147 56.4661 cv
37.147 56.3856 38.1437 55.4243 38.2771 55.285 cv
39.1246 54.3943 40.0095 53.5389 40.8942 52.6658 cv
41.2003 52.3539 41.5025 52.0439 41.8065 51.7339 cv
41.9047 51.6378 41.9949 51.5338 42.1185 51.4927 cv
42.1185 51.473 42.1185 51.4534 42.1204 51.4318 cv
42.3166 51.5318 42.4893 51.7339 42.6502 51.8968 cv
42.9151 52.1695 43.178 52.4422 43.4409 52.7129 cv
43.6076 52.8679 43.7764 53.0229 43.9431 53.1798 cv
44.6945 53.9626 45.497 54.7043 46.264 55.4812 cv
46.5818 55.7991 46.9939 56.1266 47.2411 56.4936 cv
47.1842 56.5033 47.1254 56.5112 47.0665 56.521 cv
46.8251 56.521 46.5779 56.5171 46.3327 56.5171 cv
46.2444 56.5132 46.1267 56.4857 46.0443 56.5171 cv
45.7088 56.5132 45.3145 56.47 45.0457 56.5955 cv
45.0438 56.7231 45.1948 56.8643 45.2634 56.9625 cv
cp
48.2436 60.6823 mo
48.2436 60.7039 48.2436 60.7215 48.2436 60.7411 cv
48.2339 60.7411 48.224 60.7411 48.2142 60.7411 cv
48.2142 60.6901 48.0338 60.7117 47.9807 60.7117 cv
47.5177 60.7117 47.0802 60.7333 46.6034 60.7333 cv
46.3955 60.7294 46.1071 60.6901 45.9305 60.7588 cv
45.756 60.7568 45.5244 60.7255 45.3733 60.7823 cv
44.8377 60.7803 44.3276 60.7764 43.794 60.7411 cv
43.5566 60.7255 43.2329 60.6175 43.0033 60.7117 cv
42.6109 60.7117 42.2264 60.6803 41.8341 60.694 cv
41.7477 60.694 41.6418 60.6685 41.5712 60.7039 cv
41.3495 60.7019 40.859 60.6156 40.6902 60.6979 cv
40.5608 60.6979 40.4175 60.6823 40.3096 60.7294 cv
39.9408 60.7215 39.568 60.7195 39.1991 60.7156 cv
38.9795 60.7019 38.7323 60.694 38.4968 60.6842 cv
38.4183 60.6842 38.3399 60.6862 38.2613 60.6862 cv
38.1751 60.694 38.0888 60.7039 37.9985 60.7136 cv
37.5668 60.7117 37.2177 60.8157 37.0096 60.4429 cv
36.9921 60.4076 36.9528 60.3252 36.9802 60.2801 cv
37.096 60.076 39.3522 60.2506 39.7269 60.2545 cv
40.3096 60.2566 40.8296 60.1761 41.3985 60.178 cv
42.1577 60.1819 42.9641 60.2389 43.7371 60.2408 cv
44.1315 60.2428 44.5631 60.231 44.9692 60.2173 cv
45.8913 60.1918 46.8467 60.2369 47.7473 60.2408 cv
47.7493 60.231 47.7493 60.2232 47.7493 60.2134 cv
47.7963 60.2134 47.8002 59.9524 47.8002 59.8916 cv
47.8041 59.305 47.816 58.6949 47.8199 58.0768 cv
47.8218 57.657 47.808 57.2254 47.8827 56.8467 cv
48.3594 57.0978 48.3025 57.7001 48.3182 58.226 cv
48.3241 58.5536 48.3477 58.9283 48.3358 59.2795 cv
48.3182 59.4659 48.3006 59.6502 48.2829 59.8347 cv
48.2672 60.1152 48.3477 60.4291 48.2436 60.6823 cv
cp
50.3154 40.7962 mo
50.3096 40.9866 50.2565 41.1376 50.2585 41.324 cv
50.2742 41.4417 50.2919 41.5574 50.3056 41.6732 cv
50.3076 41.9675 50.3056 42.2598 50.3056 42.5502 cv
50.284 42.9328 50.2625 43.3153 50.2409 43.694 cv
50.2369 44.0511 50.3017 44.3787 50.2919 44.7475 cv
50.284 44.9967 50.2114 45.2105 50.2056 45.446 cv
50.2409 45.6736 50.2723 45.8992 50.3017 46.1229 cv
50.3429 46.4622 50.2919 46.8448 50.282 47.1744 cv
50.2703 47.4883 50.3017 47.8022 50.1879 48.0533 cv
50.1467 48.0533 50.1075 48.0533 50.0682 48.0533 cv
50.08 47.9769 50.0898 47.8983 50.0976 47.8219 cv
50.0545 47.4177 50.0152 46.9566 50.0212 46.5289 cv
50.0212 45.9266 50.0251 45.3949 50.029 44.8045 cv
50.0368 44.6671 50.0408 44.5297 50.0486 44.3943 cv
50.0408 44.0608 49.9564 43.7214 49.9525 43.3978 cv
49.9506 43.2545 49.9936 43.1466 50.0035 43.0191 cv
50.029 42.6541 50.0545 42.2068 50.0035 41.8497 cv
49.98 41.7085 49.9152 41.6163 49.8112 41.5261 cv
49.8034 41.5261 49.7935 41.5261 49.7857 41.5261 cv
49.7857 41.5751 49.6994 41.6222 49.6837 41.6751 cv
49.6346 41.8341 49.6346 42.0166 49.6327 42.197 cv
49.6307 42.5403 49.6229 42.8758 49.668 43.1897 cv
49.6935 43.3801 49.7602 43.59 49.7602 43.8058 cv
49.7347 43.9647 49.7112 44.1217 49.6876 44.2767 cv
49.6661 44.5102 49.6445 44.7436 49.6209 44.9771 cv
49.6327 45.2105 49.6464 45.446 49.6562 45.6794 cv
49.6542 46.1719 49.6366 46.7173 49.6052 47.1999 cv
49.4718 47.1999 49.4522 46.992 49.4228 46.8998 cv
49.3757 46.7448 49.4109 46.578 49.3934 46.4113 cv
49.36 46.1071 49.3796 45.7638 49.3816 45.446 cv
49.3835 45.1517 49.3855 44.8593 49.3894 44.567 cv
49.409 44.1923 49.4737 43.8412 49.4169 43.4841 cv
49.4012 43.382 49.3757 43.2094 49.2619 43.18 cv
49.2069 43.1642 49.1717 43.178 49.154 43.227 cv
49.0519 43.5115 49.1147 43.8843 49.1206 44.1845 cv
49.1344 44.6612 49.0755 45.1281 49.0598 45.5892 cv
49.048 45.8698 49.0735 46.1621 48.9951 46.4074 cv
48.9872 46.4074 48.9755 46.4074 48.9656 46.4074 cv
48.9656 46.4152 48.9656 46.427 48.9656 46.4348 cv
48.9558 46.4348 48.946 46.4348 48.9381 46.4348 cv
48.9381 46.427 48.9381 46.4152 48.9381 46.4074 cv
48.8695 46.4074 48.8597 46.2582 48.8557 46.2013 cv
48.8302 45.7677 48.8773 45.3027 48.8852 44.8848 cv
48.895 44.4414 48.8656 43.9922 48.8675 43.5703 cv
48.8695 43.2643 48.9166 42.9524 48.9401 42.662 cv
48.946 42.3186 48.9539 41.9773 48.9636 41.6379 cv
48.9735 39.929 48.8969 38.283 49.0422 36.6055 cv
49.0637 36.3348 49.0147 36.0464 49.0009 35.7854 cv
48.9872 35.5382 49.0029 35.2558 49.0225 35.0223 cv
49.0383 34.8202 49.0323 34.6574 49.1206 34.4985 cv
49.1972 34.7045 49.1697 34.9556 49.1736 35.2008 cv
49.1775 35.656 49.1305 36.1641 49.2835 36.5487 cv
49.3148 36.5487 49.3423 36.5487 49.3718 36.5487 cv
49.3913 36.4604 49.409 36.3721 49.4286 36.2858 cv
49.4541 35.7914 49.5091 35.348 49.5268 34.8516 cv
49.5365 34.8516 49.5463 34.8516 49.5562 34.8516 cv
49.5562 34.8418 49.5562 34.832 49.5562 34.8222 cv
49.5875 34.8222 49.615 34.8222 49.6464 34.8222 cv
49.6601 34.883 49.6758 34.9398 49.6915 35.0007 cv
49.7053 35.1145 49.7151 35.2303 49.7289 35.3499 cv
49.7347 36.0287 49.6719 36.7625 49.6778 37.455 cv
49.6935 37.5826 49.7053 37.7121 49.7209 37.8376 cv
49.7248 38.026 49.6287 38.1908 49.6739 38.387 cv
49.7053 38.5243 49.8053 38.5616 49.9466 38.54 cv
49.9564 38.4341 49.9642 38.3261 49.976 38.2182 cv
49.972 38.1044 49.9701 37.9867 49.9681 37.8691 cv
49.9878 37.665 50.0918 37.4904 50.0976 37.2549 cv
50.1095 36.6448 50.08 36.0151 50.1408 35.4402 cv
50.1683 35.4402 50.1978 35.4402 50.2291 35.4402 cv
50.2291 35.4519 50.2291 35.4579 50.2291 35.4696 cv
50.2801 35.4696 50.2565 35.7345 50.2645 35.7894 cv
50.2723 35.9385 50.2801 36.0837 50.288 36.2308 cv
50.3096 36.4937 50.3586 36.7743 50.3625 37.0509 cv
50.3684 37.5237 50.3312 37.9887 50.3272 38.4831 cv
50.3252 38.9638 50.2919 39.4268 50.2919 39.8898 cv
50.2978 40.192 50.3076 40.4941 50.3154 40.7962 cv
cp
48.2691 22.5464 mo
48.3633 22.4778 48.4673 22.4562 48.5517 22.3621 cv
48.6125 22.2718 48.6713 22.1835 48.7302 22.0933 cv
48.8872 21.8637 49.05 21.6695 49.2423 21.4694 cv
49.3109 21.4066 49.3796 21.3438 49.4483 21.281 cv
49.5758 21.2123 49.7956 21.2437 49.9545 21.2457 cv
50.2899 21.2477 50.6196 21.232 50.9217 21.2006 cv
51.0708 21.1849 51.2062 21.1927 51.3317 21.1378 cv
51.5553 21.1417 51.779 21.1456 52.0027 21.1495 cv
52.2558 21.179 52.5246 21.2398 52.7933 21.2398 cv
53.0308 21.2437 53.2367 21.1534 53.4663 21.1613 cv
53.5448 21.175 53.6232 21.1868 53.7037 21.1986 cv
53.9822 21.232 54.3373 21.232 54.5806 21.1574 cv
54.5806 21.1652 54.5806 21.175 54.5806 21.1849 cv
54.5905 21.1849 54.5983 21.1849 54.61 21.1849 cv
54.61 21.2241 54.6179 21.2143 54.5806 21.2143 cv
54.5767 21.23 54.5689 21.2437 54.5649 21.2614 cv
54.2805 21.6381 53.8665 21.9265 53.5349 22.2462 cv
52.9071 22.8584 52.2832 23.4744 51.6593 24.0885 cv
51.5181 24.2317 51.3532 24.3456 51.214 24.4887 cv
50.649 25.0636 50.1428 25.6855 49.5659 26.2368 cv
49.358 26.4388 49.1481 26.6409 48.9421 26.843 cv
48.8244 26.9411 48.7106 27.0412 48.5948 27.1393 cv
48.4653 27.2943 48.3358 27.4474 48.2083 27.6003 cv
47.8591 27.9692 47.4902 28.3263 47.1155 28.6755 cv
46.941 28.8815 46.7683 29.0875 46.5917 29.2934 cv
46.2052 29.6682 45.8187 30.041 45.4342 30.4177 cv
44.7749 31.0632 44.1255 31.7302 43.4605 32.3697 cv
43.2408 32.5757 43.0485 32.8347 42.8071 32.9995 cv
42.8071 33.0094 42.8071 33.0191 42.8071 33.029 cv
42.7974 33.029 42.7875 33.029 42.7777 33.029 cv
42.7777 33.0211 42.7777 33.0094 42.7777 32.9995 cv
42.7679 32.9995 42.7581 32.9995 42.7464 32.9995 cv
42.7561 32.9113 42.7659 32.825 42.7738 32.7367 cv
42.7777 32.5346 42.7404 32.3306 42.7601 32.1226 cv
42.7855 32.0146 42.811 31.9067 42.8346 31.7989 cv
42.8483 31.5968 42.7758 31.43 42.8699 31.2573 cv
42.9288 31.1495 43.0642 31.1044 43.1505 31.0219 cv
43.3192 30.8532 43.4174 30.6394 43.6233 30.506 cv
43.8371 30.3627 44.1059 30.3215 44.3355 30.2097 cv
44.4826 30.1351 44.5984 30.0116 44.7377 29.9233 cv
45.0497 29.7212 45.4106 29.5466 45.644 29.2248 cv
45.7068 29.0953 45.7716 28.9698 45.8344 28.8422 cv
45.9128 28.7304 45.9914 28.6186 46.0678 28.5067 cv
46.1287 28.3557 46.1228 28.1831 46.166 28.0221 cv
46.2268 27.8004 46.3366 27.6003 46.3426 27.3414 cv
46.3151 27.1177 46.2876 26.8941 46.2601 26.6685 cv
46.2288 26.3801 46.0678 26.1191 45.8952 25.9013 cv
45.8206 25.8091 45.7323 25.7208 45.6872 25.6129 cv
45.6304 25.6129 45.6872 25.5364 45.7029 25.503 cv
45.75 25.4363 45.7971 25.3716 45.8422 25.3069 cv
46.0443 25.0047 46.2523 24.677 46.5505 24.4553 cv
46.7035 24.3416 46.7251 24.1807 46.8389 24.0414 cv
46.9801 23.8786 47.1862 23.7923 47.3294 23.6216 cv
47.4019 23.5255 47.4785 23.4234 47.5511 23.3273 cv
47.6119 23.2135 47.6413 23.0957 47.7335 22.9996 cv
47.8277 22.8996 47.9317 22.8545 48.0338 22.7701 cv
48.1122 22.6975 48.1907 22.621 48.2691 22.5464 cv
cp
63.215 36.1857 mo
63.2092 35.7854 63.2053 35.348 63.1895 34.9262 cv
63.1738 34.7908 63.1562 34.6554 63.1386 34.5181 cv
63.1366 34.1885 63.1954 33.8981 63.1915 33.5823 cv
63.1778 33.339 63.1621 33.0937 63.1483 32.8505 cv
63.1582 30.965 63.0836 29.1561 63.1562 27.2864 cv
63.1621 26.2643 63.168 25.2402 63.1738 24.218 cv
63.1935 23.6608 63.1522 23.0566 63.1444 22.519 cv
63.1405 21.9696 63.1522 21.4713 63.1562 20.9102 cv
63.1444 20.9102 63.1366 20.9102 63.1248 20.9102 cv
63.1248 20.8494 62.8502 20.8866 62.8031 20.9082 cv
62.2576 20.9023 61.7103 20.8926 61.1668 20.8866 cv
60.8137 20.8553 60.4625 20.8317 60.0819 20.8337 cv
59.9779 20.8337 59.8484 20.8239 59.7601 20.8631 cv
59.6267 20.8749 59.4894 20.8906 59.352 20.9043 cv
59.1578 20.8807 58.9617 20.8553 58.7654 20.8298 cv
58.0827 20.8259 57.4019 20.8199 56.7172 20.816 cv
56.5249 20.814 56.0285 20.7532 55.899 20.8121 cv
55.5479 20.8082 55.1967 20.8043 54.8455 20.7983 cv
54.5806 20.7807 54.2 20.667 53.9352 20.7709 cv
53.8606 20.7807 53.7821 20.7885 53.7037 20.7983 cv
53.4505 20.7944 53.1975 20.7925 52.9425 20.7885 cv
52.5658 20.7631 52.1969 20.7022 51.8026 20.6983 cv
51.5102 20.7846 51.0904 20.6434 50.8079 20.7532 cv
50.7293 20.7631 50.649 20.7728 50.5744 20.7807 cv
50.2723 20.7807 49.9681 20.7768 49.6661 20.7768 cv
49.5189 20.7768 49.3168 20.7493 49.1972 20.8043 cv
49.105 20.8043 48.9774 20.7944 48.9029 20.8317 cv
48.6517 20.8298 48.4399 20.7768 48.2005 20.7689 cv
47.5982 20.767 46.9939 20.7611 46.3877 20.7572 cv
46.1679 20.7572 45.8442 20.7081 45.6578 20.7846 cv
45.5892 20.7925 45.5205 20.8023 45.4518 20.8121 cv
45.3636 20.8199 45.2753 20.8298 45.1889 20.8395 cv
44.8476 20.8376 44.2825 20.659 43.9882 20.7748 cv
43.9294 20.7846 43.8725 20.7925 43.8136 20.8023 cv
43.6821 20.8023 43.5331 20.8043 43.431 20.8592 cv
42.558 20.8553 41.6888 20.8494 40.8551 20.8317 cv
40.6353 20.8259 40.3998 20.8356 40.1841 20.8356 cv
40.0781 20.8337 39.9231 20.7925 39.8309 20.8395 cv
39.6151 20.8356 39.4033 20.8317 39.1874 20.8298 cv
38.8892 20.8082 38.23 20.6905 37.9593 20.7983 cv
37.763 20.7964 37.5707 20.7925 37.3746 20.7905 cv
37.2432 20.7807 37.0882 20.7454 36.9626 20.7925 cv
36.7899 20.7925 36.5565 20.7592 36.4073 20.8199 cv
36.0582 20.816 35.7521 20.7572 35.3832 20.7552 cv
35.2675 20.7552 35.1302 20.7415 35.034 20.7827 cv
34.8163 20.7807 34.5141 20.7337 34.3316 20.8082 cv
33.9981 20.8062 33.6665 20.8043 33.333 20.8043 cv
33.1781 20.8023 32.9642 20.7728 32.8386 20.8278 cv
32.4187 20.8317 31.999 20.8337 31.581 20.8356 cv
31.3142 20.816 30.8002 20.7179 30.555 20.816 cv
30.2901 20.814 29.835 20.7257 29.6172 20.8101 cv
29.0639 20.8082 28.5557 20.7748 28.0084 20.7376 cv
27.8161 20.7238 27.5199 20.659 27.3355 20.7415 cv
27.2276 20.7376 27.1039 20.7257 27.0137 20.7689 cv
26.8057 20.765 26.5193 20.7218 26.3408 20.7925 cv
26.1564 20.7905 25.8719 20.7454 25.7247 20.816 cv
25.0341 20.814 24.3004 20.7807 23.5626 20.7768 cv
23.3449 20.7768 23.0408 20.7297 22.8584 20.8023 cv
22.5915 20.8004 22.0089 20.7454 21.8048 20.8259 cv
21.6498 20.8239 21.3791 20.7807 21.277 20.8788 cv
21.1123 21.0357 21.2025 21.8029 21.2084 22.0521 cv
21.2025 22.2462 21.1946 22.4405 21.1848 22.6367 cv
21.1907 22.8152 21.2181 22.9996 21.1966 23.1919 cv
21.1966 23.4646 21.1985 23.7373 21.1985 24.012 cv
21.1711 24.7575 21.1633 25.4736 21.1593 26.2368 cv
21.1574 26.4448 21.1083 26.5978 21.1005 26.7901 cv
21.0926 26.9941 21.1358 27.1903 21.1339 27.3747 cv
21.1102 27.5611 21.0886 27.7475 21.0651 27.9319 cv
21.075 28.3223 21.0828 28.7127 21.0946 29.1012 cv
21.0672 29.7643 21.0357 30.4784 21.0435 31.1809 cv
21.0534 31.4535 21.0631 31.7283 21.073 31.9971 cv
21.0847 32.0873 21.0965 32.1756 21.1063 32.2618 cv
21.0847 32.4286 21.0651 32.5954 21.0435 32.7602 cv
21.0553 33.953 21.022 35.0909 21.0161 36.3015 cv
21.0122 36.8272 21.0416 37.3119 21.0298 37.822 cv
21.0122 38.075 20.9925 38.33 20.9749 38.5832 cv
20.9808 38.9638 20.9886 39.3464 20.9964 39.727 cv
20.9925 40.4823 20.9592 41.2651 20.967 42.0381 cv
20.9808 42.3108 20.9906 42.5835 21.0024 42.8562 cv
20.9867 43.2074 20.967 43.5586 20.9474 43.9098 cv
20.9396 45.2949 20.9631 46.731 20.9749 48.124 cv
20.9808 48.4693 20.918 48.7597 20.9161 49.1187 cv
20.9141 49.4895 20.9122 49.8583 20.9122 50.2291 cv
20.92 50.3979 20.9258 50.5627 20.9337 50.7294 cv
20.9062 51.987 20.865 53.1956 20.8572 54.4747 cv
20.8533 55.0515 20.7905 55.5577 20.7885 56.111 cv
20.7885 56.3543 20.7905 56.5976 20.7905 56.8408 cv
20.8023 56.9389 20.8179 57.037 20.8297 57.1351 cv
20.814 57.2352 20.7983 57.3313 20.7846 57.4294 cv
20.7708 57.708 20.7532 58.0062 20.7512 58.277 cv
20.7492 58.6183 20.7572 58.9989 20.7728 59.3599 cv
20.7787 59.5228 20.8239 59.6582 20.8239 59.8288 cv
20.8219 59.9995 20.7708 60.129 20.7689 60.2938 cv
20.7669 60.4939 20.8219 60.6411 20.8199 60.851 cv
20.8101 62.3636 20.8278 63.8213 21.5145 64.9749 cv
21.9873 65.7597 22.8564 66.2542 23.647 66.5936 cv
24.1944 66.8309 24.7575 67.1016 25.352 67.2429 cv
25.7933 67.3469 26.2289 67.4018 26.692 67.4803 cv
27.0431 67.5411 27.4081 67.6314 27.7768 67.6726 cv
28.128 67.7 28.4773 67.7255 28.8285 67.7531 cv
29.5799 67.8433 30.3156 67.9767 31.0828 68.0689 cv
31.4418 68.0866 31.8028 68.1082 32.1618 68.1218 cv
32.3187 68.1552 32.4737 68.1905 32.6307 68.2259 cv
32.9132 68.2337 33.1976 68.2337 33.4802 68.2416 cv
33.7804 68.269 34.0844 68.2945 34.3866 68.3278 cv
34.5436 68.3338 34.6966 68.3377 34.8536 68.3435 cv
34.9909 68.3769 35.1282 68.4103 35.2655 68.4437 cv
35.652 68.5024 36.0131 68.5437 36.4015 68.6182 cv
36.5211 68.6574 36.6409 68.6987 36.7625 68.7418 cv
37.0273 68.8163 37.2687 68.8791 37.5217 68.9793 cv
37.8886 69.1127 38.2594 69.2461 38.6263 69.3795 cv
38.8951 69.5129 39.16 69.6463 39.4307 69.7817 cv
39.5719 69.8778 39.7172 69.9758 39.8584 70.072 cv
40.1527 70.2388 40.445 70.384 40.7137 70.6036 cv
41.0434 70.8725 41.269 71.2001 41.5593 71.512 cv
41.6536 71.618 41.7026 71.7534 41.8301 71.8279 cv
41.8301 71.875 41.8458 71.8574 41.889 71.8574 cv
41.889 71.8063 42.0362 71.7141 42.0753 71.667 cv
42.1381 71.5709 42.197 71.4748 42.2579 71.3806 cv
42.8974 70.4467 43.8509 69.7757 44.8142 69.2617 cv
44.9633 69.2107 45.1105 69.1578 45.2615 69.1048 cv
45.44 69.0322 45.6205 68.9557 45.801 68.8791 cv
46.1581 68.7712 46.5309 68.7045 46.9076 68.6241 cv
47.6119 68.4711 48.2927 68.2887 48.9951 68.1415 cv
49.1697 68.1257 49.3403 68.116 49.513 68.1042 cv
49.7857 68.0551 50.0545 67.9865 50.337 67.961 cv
50.7098 67.9472 51.0806 67.9335 51.4514 67.9217 cv
51.8968 67.8904 52.3499 67.7943 52.7992 67.7648 cv
53.2014 67.7315 53.5997 67.7177 53.996 67.6687 cv
54.3511 67.6117 54.7023 67.5529 55.0534 67.494 cv
55.1693 67.4862 55.287 67.4783 55.4007 67.4705 cv
55.9461 67.3822 56.47 67.2508 56.9899 67.1292 cv
57.1684 67.086 57.3411 67.0664 57.5118 67.0173 cv
58.012 66.8721 58.4967 66.6739 58.9832 66.5209 cv
59.3932 66.3875 59.7876 66.262 60.1702 66.0893 cv
60.5037 65.9363 60.7842 65.7225 61.0923 65.5302 cv
61.6455 65.1809 62.2478 64.8121 62.5931 64.2275 cv
62.7442 63.9685 62.8875 63.5859 62.9345 63.2779 cv
62.9443 63.1327 62.9542 62.9875 62.9659 62.8403 cv
63.0719 62.2086 63.0561 61.5141 63.0483 60.8549 cv
63.0581 60.6195 63.066 60.384 63.0797 60.1486 cv
63.0719 60.023 63.066 59.8955 63.0561 59.77 cv
63.0561 59.5168 63.0561 59.2657 63.0542 59.0107 cv
63.0404 58.9126 63.0287 58.8165 63.0149 58.7184 cv
63.0228 58.6301 63.0345 58.5438 63.0444 58.4555 cv
63.0345 58.3672 63.0228 58.2789 63.013 58.1926 cv
63.0149 58.0179 63.0639 57.8767 63.0639 57.6962 cv
63.066 57.5 63.0149 57.3528 63.013 57.1645 cv
63.011 56.9409 63.066 56.7761 63.0738 56.5524 cv
63.0876 55.7833 63.0797 55.026 63.1091 54.2707 cv
63.1013 54.0843 63.0954 53.8979 63.0895 53.7154 cv
63.0934 53.0406 63.0973 52.3676 63.0993 51.6967 cv
63.1386 49.8623 63.115 47.9082 63.1562 46.0738 cv
63.1444 45.8815 63.1366 45.6853 63.1228 45.4931 cv
63.115 45.4323 63.1071 45.3753 63.0993 45.3165 cv
63.1091 45.1713 63.1405 45.0085 63.1347 44.8496 cv
63.1228 44.7397 63.1111 44.6337 63.0993 44.5278 cv
63.1052 44.3768 63.1444 44.2237 63.1425 44.0589 cv
63.1386 43.7195 63.0581 43.433 63.0581 43.0917 cv
63.062 42.8602 63.0954 42.6581 63.1111 42.4481 cv
63.1091 42.3402 63.1052 42.2323 63.1013 42.1264 cv
63.117 42.0185 63.1327 41.9106 63.1483 41.8046 cv
63.1347 41.6772 63.1189 41.5516 63.1013 41.4221 cv
63.1189 41.2789 63.1347 41.1317 63.1503 40.9866 cv
63.1444 40.8532 63.1052 40.7452 63.1052 40.6039 cv
63.1091 39.8055 63.115 39.0031 63.1189 38.2065 cv
63.1189 38.0221 63.168 37.8808 63.1738 37.7062 cv
63.1798 37.5336 63.1248 37.4041 63.1307 37.2413 cv
63.1444 37.151 63.1601 37.0627 63.1738 36.9744 cv
63.1876 36.7135 63.1994 36.4486 63.215 36.1857 cv
cp
f
49.254 36.8998 mo
49.1305 37.0843 49.1697 37.2628 49.3973 37.3099 cv
49.3973 37.3 49.3973 37.2903 49.3973 37.2804 cv
49.5111 37.2804 49.3757 36.9587 49.254 36.8998 cv
cp
f
49.3678 38.748 mo
49.3403 38.6538 49.2736 38.5793 49.1853 38.5361 cv
49.0657 38.7715 49.0951 39.0854 49.0931 39.3856 cv
49.0951 39.7564 49.097 40.1272 49.099 40.498 cv
49.105 40.7746 49.101 41.0788 49.1089 41.3456 cv
49.1089 41.4476 49.099 41.581 49.1383 41.6673 cv
49.1383 41.8282 49.3109 41.5829 49.3227 41.5555 cv
49.5052 41.1317 49.3816 40.2822 49.3835 39.7976 cv
49.3855 39.4425 49.4541 39.0717 49.3678 38.748 cv
cp
f
49.825 39.1541 mo
49.6562 39.4484 49.7328 39.7995 49.7308 40.1507 cv
49.7289 40.4274 49.6935 40.6511 49.7876 40.8826 cv
49.8073 40.8826 49.825 40.8826 49.8465 40.8826 cv
50.1015 40.8845 50.1153 39.4856 50.029 39.2855 cv
49.9878 39.2012 49.9172 39.1756 49.825 39.1541 cv
cp
f
42.9602 41.7163 mo
43.123 41.7105 43.2583 41.5868 43.3879 41.5104 cv
43.7528 41.2887 44.1471 41.0866 44.5415 40.9257 cv
44.7593 40.8394 44.9869 40.7904 45.2164 40.7197 cv
45.5499 40.6177 45.8933 40.4921 46.2268 40.3823 cv
46.5211 40.2822 46.8271 40.2528 47.0841 40.0821 cv
47.2117 39.9977 47.294 39.8623 47.2901 39.6976 cv
47.2843 39.5033 47.1567 39.4307 46.9861 39.4033 cv
46.9861 39.4111 46.9861 39.4228 46.9861 39.4327 cv
46.8428 39.4307 46.5956 39.5504 46.4877 39.6348 cv
46.166 39.6328 45.8482 39.831 45.5754 39.9448 cv
44.7161 40.294 43.8038 40.6138 43.0975 41.269 cv
43.0152 41.3417 42.7091 41.5438 42.8503 41.6869 cv
42.8758 41.7144 42.919 41.7183 42.9602 41.7163 cv
cp
f
40.2606 40.8806 mo
39.211 40.292 38.0946 39.6995 36.7998 39.6093 cv
36.7998 39.619 36.7998 39.6289 36.7998 39.6387 cv
36.5133 39.6367 36.3721 40.1017 36.5899 40.2763 cv
36.7664 40.4176 37.1392 40.3646 37.3805 40.3763 cv
37.5571 40.3999 37.7297 40.4215 37.9043 40.445 cv
38.3634 40.5059 38.7597 40.6844 39.1658 40.8433 cv
39.47 40.961 39.774 41.0728 40.0663 41.2102 cv
40.3175 41.3279 41.1435 42.0028 41.3475 41.9753 cv
41.3592 41.9714 41.3671 41.9695 41.3789 41.9675 cv
41.4004 41.9596 41.4201 41.9518 41.4397 41.9459 cv
41.4965 41.9459 41.4436 41.8106 41.4259 41.7791 cv
41.2769 41.4829 40.5431 41.0415 40.2606 40.8806 cv
cp
f
46.8193 43.0014 mo
46.3327 43.1662 45.8383 43.2859 45.3596 43.4742 cv
45.236 43.5409 45.1144 43.6076 44.9908 43.6744 cv
44.6062 43.8215 44.2589 44.0177 43.9098 44.2354 cv
43.5939 44.4317 43.2957 44.6004 43.0033 44.8535 cv
42.9308 44.9202 42.7503 45.0418 42.8189 45.1615 cv
42.9111 45.3321 43.1544 45.0987 43.2466 45.0458 cv
43.9921 44.5985 44.7142 44.2492 45.5853 44.0491 cv
45.8442 43.9902 46.0954 43.9137 46.3484 43.8607 cv
46.629 43.798 46.9468 43.8 47.1862 43.6586 cv
47.3883 43.5351 47.449 43.1839 47.2136 43.0603 cv
47.1018 43.0034 46.9585 43.0034 46.8193 43.0014 cv
cp
f
41.2219 45.1576 mo
41.0218 44.9163 40.6176 44.622 40.3391 44.4984 cv
40.2213 44.4571 40.1056 44.414 39.9918 44.3708 cv
39.5013 44.1413 39.0266 43.9667 38.5046 43.8 cv
38.328 43.7352 38.1516 43.6704 37.975 43.6076 cv
37.767 43.5547 37.5512 43.5351 37.3393 43.49 cv
37.1352 43.4468 36.9606 43.384 36.7193 43.384 cv
36.7193 43.3958 36.7193 43.4036 36.7193 43.4134 cv
36.3387 43.4114 36.3426 43.9235 36.6075 44.0707 cv
36.6448 44.0824 36.6801 44.0962 36.7154 44.1119 cv
37.0351 44.1825 37.3766 44.1963 37.7082 44.2473 cv
38.0083 44.2924 38.3045 44.3748 38.589 44.4356 cv
38.7852 44.4748 38.9795 44.4984 39.1658 44.5573 cv
39.7034 44.7259 40.239 44.9143 40.7413 45.1497 cv
40.9394 45.2419 41.1768 45.4597 41.422 45.4283 cv
41.422 45.2969 41.2985 45.2439 41.2219 45.1576 cv
cp
f
5.98192 33.9785 mo
6.72746 34.1434 6.96282 34.0492 7.08055 33.5214 cv
7.26497 33.5607 li
6.77447 35.7521 li
6.59206 35.7109 li
6.6902 35.2675 6.61948 34.9811 5.76605 34.7908 cv
1.05161 33.7352 li
.851518 34.6319 li
.665082 35.4618 .818068 35.8934 1.45181 36.0915 cv
1.41253 36.274 li
0 35.9581 li
.0392761 35.7737 li
.135411 35.707 .209941 35.6207 .286484 35.4794 cv
.351174 35.346 .415965 35.1557 .474829 34.8987 cv
1.19677 31.6616 li
1.31841 31.122 1.30857 30.8591 1.19084 30.6295 cv
1.23403 30.4354 li
2.64857 30.7512 li
2.62115 30.8689 li
2.07571 30.8728 1.66366 30.9945 1.44397 31.9774 cv
1.23403 32.9152 li
5.98192 33.9785 li
cp
f
6.31541 26.947 mo
7.9634 27.7514 li
8.65008 28.0869 8.95224 28.0221 9.1896 27.5356 cv
9.35836 27.618 li
8.35385 29.676 li
8.1851 29.5937 li
8.39896 29.1561 8.34994 28.8756 7.59656 28.5067 cv
4.04936 26.7763 li
3.37453 26.4468 3.0782 26.4742 2.83109 26.9804 cv
2.66234 26.898 li
3.66483 24.84 li
3.83359 24.9223 li
3.61581 25.3716 3.69236 25.6679 4.4163 26.021 cv
6.03687 26.8116 li
7.54945 23.7099 li
5.93089 22.9212 li
5.23437 22.5817 4.9519 22.6289 4.71454 23.1154 cv
4.54578 23.033 li
5.54044 20.9965 li
5.7092 21.0789 li
5.46982 21.5655 5.62291 21.8362 6.29974 22.1658 cv
9.84685 23.8962 li
10.5218 24.2258 10.8278 24.1787 11.0652 23.6902 cv
11.234 23.7727 li
10.2393 25.811 li
10.0706 25.7287 li
10.2902 25.2794 10.2334 25.0185 9.47799 24.6496 cv
7.8281 23.8452 li
6.31541 26.947 li
cp
f
13.8041 16.5312 mo
13.6844 16.6764 li
13.1841 16.4312 13.0684 16.4645 12.6504 16.9668 cv
11.6459 18.1714 li
13.3881 19.6232 li
13.6255 19.8214 13.7903 19.8134 14.0159 19.5427 cv
14.7242 18.6932 li
15.3167 17.9791 15.4325 17.7731 15.0361 16.953 cv
15.1559 16.8079 li
15.8798 17.7868 li
12.9604 21.2948 li
12.8153 21.175 li
13.1331 20.7925 13.1567 20.5237 12.5112 19.9842 cv
9.47016 17.4513 li
8.86394 16.9491 8.58338 16.9452 8.23613 17.361 cv
8.09098 17.2394 li
11.0142 13.7316 li
11.8284 14.4103 li
11.75 14.5045 li
11.1241 14.169 10.9396 14.3044 10.4944 14.838 cv
9.32501 16.2408 li
11.4086 17.9752 li
12.5386 16.6156 li
12.8153 16.284 12.8643 16.1074 12.5013 15.6915 cv
12.623 15.5463 li
13.8041 16.5312 li
cp
f
25.6717 9.39372 mo
25.4893 10.308 25.0733 10.9221 24.3415 11.336 cv
23.0035 12.0894 21.9323 11.4498 21.3947 10.4964 cv
19.8645 7.77908 li
19.4524 7.04729 19.1778 7.01194 18.7442 7.25523 cv
18.652 7.0924 li
20.6473 5.96816 li
20.7395 6.133 li
20.2863 6.38804 20.196 6.65293 20.5923 7.35729 cv
22.1638 10.151 li
22.6425 10.9986 23.4568 11.3399 24.3906 10.8142 cv
25.0263 10.4551 25.4049 9.82143 25.4539 9.00718 cv
23.5842 5.68368 li
23.2232 5.05004 22.9545 4.90881 22.5013 5.14025 cv
22.4091 4.97551 li
24.3553 3.87879 li
24.4475 4.04353 li
23.9844 4.3045 23.9413 4.60856 24.316 5.27174 cv
26.2505 8.71096 li
26.6605 9.43299 26.947 9.47417 27.3727 9.2348 cv
27.4649 9.39964 li
26.1053 10.1648 li
25.6717 9.39372 li
cp
f
35.7167 6.88838 mo
35.5343 6.93539 li
29.8428 2.70945 li
29.8192 2.71537 li
30.9238 7.01977 li
31.0828 7.64176 31.3848 7.80459 31.942 7.66135 cv
31.9891 7.84377 li
30.1253 8.32051 li
30.0783 8.13809 li
30.5942 8.00659 30.7983 7.78299 30.5707 6.89421 cv
29.6524 3.30592 li
29.4759 2.62115 29.1953 2.28173 28.4499 2.40338 cv
28.4047 2.22287 li
29.9781 1.81875 li
35.036 5.61307 li
35.0576 5.60724 li
34.1394 2.02086 li
33.9333 1.21645 33.6665 1.06729 33.1309 1.2047 cv
33.0838 1.02218 li
34.9378 .549363 li
34.983 .729872 li
34.3847 .884867 34.2552 1.1811 34.4376 1.8972 cv
35.7167 6.88838 li
cp
f
40.8806 5.19911 mo
40.9198 5.97208 41.1199 6.19387 41.6496 6.16835 cv
41.6575 6.3567 li
39.3836 6.47041 li
39.3738 6.28207 li
39.8918 6.25464 40.0801 6.04671 40.0408 5.24029 cv
39.8446 1.29882 li
39.8054 .504261 39.619 .302155 39.0775 .329678 cv
39.0678 .14133 li
41.3436 .029432 li
41.3534 .217776 li
40.8236 .243291 40.647 .494417 40.6863 1.25764 cv
40.8806 5.19911 li
cp
f
47.2804 6.78823 mo
47.1077 6.76473 li
45.8442 1.41062 li
45.65 .604309 45.5362 .288393 44.9476 .186436 cv
44.9711 0 li
47.2529 .304164 li
47.2273 .490499 li
46.7761 .429727 46.525 .641573 46.6466 1.16151 cv
47.6433 5.4189 li
49.6209 1.70103 li
49.8897 1.18893 49.8347 .837756 49.2639 .761213 cv
49.2894 .574877 li
51.1198 .818168 li
51.0943 1.01636 li
50.6235 .953575 50.2232 1.26748 49.7916 2.08163 cv
47.2804 6.78823 li
cp
f
57.2724 6.90988 mo
57.0958 6.84519 li
57.1567 6.29191 57.086 6.19387 56.4739 5.97017 cv
55.0005 5.43065 li
54.2236 7.55929 li
54.1156 7.84969 54.1784 8.00268 54.51 8.12432 cv
55.5479 8.50493 li
56.419 8.82276 56.6524 8.86203 57.2901 8.21071 cv
57.4686 8.27741 li
56.7917 9.28774 li
52.503 7.72021 li
52.5677 7.54362 li
53.0347 7.71428 53.2955 7.64568 53.5839 6.85503 cv
54.9455 3.13907 li
55.2144 2.40146 55.124 2.13266 54.616 1.94623 cv
54.6807 1.76973 li
58.9675 3.33927 li
58.6046 4.33584 li
58.4888 4.29465 li
58.5928 3.5904 58.4045 3.46283 57.7491 3.22345 cv
56.0364 2.59564 li
55.1065 5.14025 li
56.7682 5.74847 li
57.1743 5.89563 57.3568 5.87996 57.6256 5.40312 cv
57.8022 5.46591 li
57.2724 6.90988 li
cp
f
62.7285 9.12491 mo
63.1543 9.40356 li
64.1234 10.0431 63.58 11.4714 63.7761 13.3215 cv
64.8572 14.0336 li
64.9592 13.8767 li
64.1254 13.2351 64.9416 11.2693 64.3745 9.98225 cv
65.3026 10.2628 65.9362 9.98035 66.3188 9.39964 cv
66.7818 8.69719 66.6602 7.63584 65.4693 6.85303 cv
63.3014 5.42281 li
63.1994 5.57971 li
63.6232 5.86027 63.7134 6.10357 63.2563 6.79617 cv
61.0746 10.1117 li
60.6037 10.822 60.3252 10.8239 59.919 10.5571 cv
59.817 10.7121 li
61.7181 11.9657 li
61.8221 11.8088 li
61.3885 11.5224 61.3493 11.2203 61.775 10.5728 cv
62.7285 9.12491 li
cp
64.4687 6.48417 mo
65.022 6.84911 li
65.8343 7.38471 66.0324 8.22829 65.5694 8.93074 cv
65.1691 9.53887 64.4177 9.91757 63.5231 9.32893 cv
62.8756 8.90322 li
64.4687 6.48417 li
cp
f
72.8206 14.8655 mo
72.6872 14.7322 li
73.2876 14.0023 73.0816 13.2724 72.6343 12.8153 cv
72.1673 12.3424 71.5728 12.2601 71.1549 12.6721 cv
70.3212 13.4941 71.2335 14.8616 71.2236 16.1427 cv
71.2177 16.7686 71.0118 17.1276 70.7135 17.4219 cv
70.0033 18.1183 68.8614 18.1105 68.163 17.4003 cv
67.6902 16.9216 67.5313 16.2859 67.3841 16.1368 cv
67.3077 16.0584 67.1978 16.0564 67.0408 16.1348 cv
66.9094 15.9995 li
68.1297 14.7989 li
68.2611 14.9322 li
67.4352 15.7621 67.8334 16.7196 68.22 17.1138 cv
68.7556 17.6554 69.4265 17.7083 69.917 17.2276 cv
70.6959 16.4606 69.8659 14.8891 69.8738 13.8885 cv
69.8777 13.3411 70.0837 12.9212 70.4369 12.5721 cv
71.1314 11.8893 72.0908 11.9206 72.8128 12.6524 cv
73.2876 13.1332 73.3386 13.5334 73.5093 13.7061 cv
73.5799 13.7767 73.6112 13.7767 73.7526 13.7001 cv
73.8761 13.8257 li
72.8206 14.8655 li
cp
f
73.3582 21.642 mo
72.7205 22.0834 72.6382 22.3699 72.9383 22.8054 cv
72.7853 22.9133 li
71.4865 21.0416 li
71.6415 20.9338 li
71.9377 21.3615 72.2144 21.4124 72.8775 20.9514 cv
76.1225 18.7031 li
76.7778 18.2498 76.8484 17.9849 76.5405 17.5396 cv
76.6955 17.4337 li
77.9923 19.3054 li
77.8373 19.4113 li
77.5351 18.9758 77.2291 18.96 76.6012 19.3936 cv
73.3582 21.642 li
cp
f
76.511 27.3904 mo
75.8165 27.7082 75.685 27.926 75.9106 28.4185 cv
75.74 28.497 li
74.8061 26.4565 li
74.9768 26.3781 li
75.1651 26.7901 75.3966 26.9764 76.1932 26.6135 cv
80.584 24.5986 li
80.1994 23.7647 li
79.8482 22.9918 79.4637 22.7407 78.8379 22.9683 cv
78.7593 22.7975 li
80.0777 22.1933 li
80.1563 22.364 li
80.1209 22.4778 80.1131 22.5896 80.1347 22.7485 cv
80.168 22.8937 80.2308 23.084 80.3407 23.3253 cv
81.7219 26.3408 li
81.9514 26.843 82.1182 27.0471 82.3516 27.1589 cv
82.434 27.3394 li
81.1176 27.9417 li
81.0666 27.8319 li
81.4982 27.5003 81.7532 27.153 81.3334 26.2387 cv
80.9332 25.3637 li
76.511 27.3904 li
cp
f
79.0085 35.0909 mo
78.263 35.2498 78.057 35.4519 78.1708 35.9836 cv
77.9864 36.0229 li
77.5037 33.7647 li
77.6862 33.7235 li
77.7882 34.2002 77.9452 34.4592 78.8319 34.2709 cv
80.7782 33.853 li
82.5498 32.0932 li
83.1384 31.5163 83.2384 31.3024 83.156 30.812 cv
83.3424 30.7728 li
83.8584 33.1938 li
83.676 33.233 li
83.5288 32.5522 83.2738 32.5267 82.95 32.8563 cv
81.3315 34.4808 li
83.0972 35.1321 li
83.6504 35.3303 84.1095 35.2538 83.9977 34.7358 cv
84.1821 34.6967 li
84.5451 36.3937 li
84.3606 36.4329 li
84.2272 35.964 84.0624 35.8306 83.4464 35.5991 cv
80.9548 34.6751 li
79.0085 35.0909 li
cp
f
3.61189 50.2213 mo
1.80298 50.7412 .800489 52.5717 1.32434 54.3884 cv
1.84618 56.2052 3.67267 57.2312 5.47967 56.7133 cv
7.25322 56.2032 8.23422 54.3786 7.7162 52.5717 cv
7.18059 50.7118 5.4188 49.7014 3.61189 50.2213 cv
cp
3.86895 51.1611 mo
5.63265 50.651 7.07472 51.2278 7.48868 52.66 cv
7.84768 53.9156 7.06879 55.2438 5.15592 55.7931 cv
3.6806 56.2189 1.99525 55.8403 1.55387 54.3099 cv
1.1595 52.9385 2.09339 51.6712 3.86895 51.1611 cv
cp
f
6.13491 62.5206 mo
5.46199 62.9031 5.35601 63.1818 5.61889 63.6428 cv
5.45415 63.7351 li
4.32409 61.7574 li
4.48883 61.6652 li
4.7518 62.1262 5.03628 62.1792 5.71904 61.7907 cv
9.14651 59.8328 li
9.83901 59.4384 9.92731 59.1716 9.66443 58.7105 cv
9.82726 58.6183 li
11.9795 62.3911 li
11.0005 62.9502 li
10.9299 62.8247 li
11.5244 62.3067 11.4713 62.1223 11.13 61.5279 cv
10.3315 60.1251 li
8.02619 61.4416 li
8.84435 62.8698 li
9.07981 63.2837 9.37795 63.3171 9.84685 63.1131 cv
9.93514 63.2662 li
8.3872 64.147 li
8.30092 63.994 li
8.68343 63.7507 8.80317 63.427 8.58338 63.0424 cv
7.75748 61.5946 li
6.13491 62.5206 li
cp
f
18.2832 74.7355 mo
18.1379 74.6138 li
18.3793 74.1116 18.3439 73.9979 17.8398 73.5838 cv
16.6272 72.5891 li
15.1872 74.3392 li
14.991 74.5786 15.0009 74.7433 15.2736 74.967 cv
16.1289 75.6694 li
16.847 76.258 17.055 76.3717 17.8711 75.9695 cv
18.0163 76.0892 li
17.0451 76.821 li
13.5137 73.9252 li
13.6334 73.7801 li
14.0179 74.094 14.2868 74.1155 14.8183 73.4662 cv
17.3296 70.4056 li
17.826 69.7993 17.8299 69.5168 17.4121 69.1734 cv
17.5298 69.0263 li
21.0612 71.9221 li
20.3883 72.7422 li
20.2941 72.6657 li
20.6257 72.0359 20.4884 71.8535 19.9507 71.4101 cv
18.5401 70.2545 li
16.8234 72.3498 li
18.1889 73.4701 li
18.5224 73.7447 18.699 73.7898 19.1111 73.4269 cv
19.2562 73.5465 li
18.2832 74.7355 li
cp
f
22.6896 79.0361 mo
22.3601 79.7482 22.0756 79.862 21.6145 79.6482 cv
21.536 79.8189 li
24.267 81.0764 li
26.5271 82.1182 28.0555 81.204 28.7206 79.758 cv
29.4112 78.2611 29.0462 76.305 26.8489 75.2908 cv
24.1885 74.0646 li
24.1081 74.2352 li
24.5908 74.4569 24.6594 74.7571 24.3396 75.4516 cv
22.6896 79.0361 li
cp
25.501 74.9396 mo
26.5958 75.4437 li
28.4126 76.2815 28.4674 77.9844 27.8338 79.3617 cv
27.1118 80.9273 25.8032 81.5179 24.3788 80.8606 cv
23.7863 80.5879 li
23.2547 80.3427 23.133 80.0797 23.545 79.1871 cv
25.501 74.9396 li
cp
f
33.8353 83.0325 mo
33.6665 83.7878 33.8019 84.0547 34.3199 84.1685 cv
34.2787 84.3528 li
32.0539 83.8624 li
32.0951 83.6799 li
32.6013 83.7918 32.8386 83.6387 33.0132 82.852 cv
33.8627 78.9968 li
34.0335 78.2179 33.9059 77.9746 33.3762 77.8589 cv
33.4154 77.6744 li
35.6403 78.1649 li
35.601 78.3474 li
35.0831 78.2336 34.8476 78.4338 34.6828 79.1773 cv
33.8353 83.0325 li
cp
f
45.291 85.0728 mo
45.1026 85.0748 li
40.5764 79.6207 li
40.5548 79.6207 li
40.6039 84.0644 li
40.6098 84.706 40.8668 84.9336 41.4417 84.9277 cv
41.4436 85.116 li
39.519 85.1376 li
39.517 84.9493 li
40.0467 84.9433 40.2998 84.7747 40.29 83.8585 cv
40.2489 80.1544 li
40.2429 79.448 40.0487 79.0517 39.2973 78.9929 cv
39.2953 78.8065 li
40.9218 78.7888 li
44.9319 83.674 li
44.9555 83.674 li
44.9143 79.9699 li
44.9044 79.1419 44.6808 78.934 44.1295 78.9399 cv
44.1275 78.7516 li
46.0384 78.7319 li
46.0404 78.9183 li
45.4223 78.9242 45.2262 79.1832 45.234 79.9228 cv
45.291 85.0728 li
cp
f
51.9831 80.7664 mo
52.5598 80.6095 li
53.635 80.3133 54.4865 80.7331 54.7317 81.6278 cv
54.9789 82.5224 54.5061 83.1012 53.8861 83.2718 cv
53.3878 83.4092 li
52.9071 83.5406 52.7011 83.3797 52.4755 82.5597 cv
51.9831 80.7664 li
cp
51.6947 82.8892 mo
51.9007 83.6348 51.781 83.9075 51.269 84.0487 cv
51.3199 84.2292 li
54.1333 83.4563 li
55.285 83.1385 55.9363 82.3399 55.6833 81.4237 cv
55.4576 80.6036 54.6258 80.0758 53.6331 80.1406 cv
53.6271 80.121 li
54.3943 79.6108 54.6592 79.0674 54.4747 78.3984 cv
54.2609 77.6176 53.4114 77.0839 51.9419 77.4881 cv
49.6386 78.1218 li
49.6876 78.3023 li
50.2017 78.161 50.4351 78.3043 50.649 79.0832 cv
51.6947 82.8892 li
cp
51.9183 80.533 mo
51.2062 77.9412 li
51.8143 77.7745 li
52.8051 77.5018 53.4231 77.9177 53.635 78.6849 cv
53.8469 79.4539 53.4427 80.1131 52.5481 80.3603 cv
51.9183 80.533 li
cp
f
64.8003 77.702 mo
64.6316 78.6201 64.2255 79.2421 63.5015 79.6658 cv
62.1733 80.4388 61.0923 79.8169 60.5409 78.8712 cv
58.9695 76.1794 li
58.5457 75.4516 58.2711 75.4221 57.8413 75.6733 cv
57.7472 75.5104 li
59.7229 74.3549 li
59.817 74.5177 li
59.3697 74.7787 59.2814 75.0475 59.6895 75.7459 cv
61.3061 78.5161 li
61.7966 79.3558 62.6147 79.6835 63.5408 79.1419 cv
64.1705 78.7751 64.5413 78.1355 64.5766 77.3213 cv
62.6539 74.0272 li
62.2852 73.3975 62.0143 73.2602 61.5651 73.4975 cv
61.469 73.3366 li
63.3975 72.2105 li
63.4937 72.3734 li
63.0345 72.6402 62.9953 72.9442 63.3799 73.6035 cv
65.3693 77.0114 li
65.7851 77.7274 66.0755 77.7627 66.4954 77.5175 cv
66.5916 77.6804 li
65.2456 78.4651 li
64.8003 77.702 li
cp
f
69.609 71.3374 mo
69.966 70.9764 li
70.7802 70.1505 72.075 70.9607 73.9311 71.1275 cv
74.8374 70.2074 li
74.704 70.076 li
73.9115 70.7685 72.1438 69.5855 70.7704 69.8916 cv
71.2255 69.0361 71.0725 68.3554 70.5781 67.8688 cv
69.9798 67.2782 68.9145 67.1919 67.9139 68.2082 cv
66.0873 70.0563 li
66.2227 70.1897 li
66.5797 69.8268 66.8388 69.7856 67.4273 70.3683 cv
70.2544 73.1562 li
70.8607 73.7526 70.8077 74.0272 70.4663 74.3725 cv
70.5997 74.504 li
72.1987 72.8835 li
72.0633 72.752 li
71.7004 73.1228 71.3943 73.1012 70.8449 72.5578 cv
69.609 71.3374 li
cp
67.3567 69.1185 mo
67.8217 68.6457 li
68.5044 67.9512 69.3735 67.9217 69.9719 68.5143 cv
70.4919 69.0263 70.7154 69.8366 69.9641 70.5997 cv
69.4186 71.1511 li
67.3567 69.1185 li
cp
f
80.013 62.5206 mo
79.9169 62.8737 79.3754 63.8664 79.2263 64.1117 cv
77.7764 66.4915 75.8577 66.4091 74.6118 65.6518 cv
72.695 64.4844 72.5048 62.3734 73.317 61.0413 cv
73.782 60.2761 74.2155 60.1388 74.4687 59.7249 cv
74.5706 59.5541 74.5706 59.4501 74.4726 59.3128 cv
74.5766 59.1441 li
76.1716 60.1152 li
76.0794 60.2663 li
74.963 59.7817 73.9723 60.4311 73.523 61.1708 cv
72.8461 62.2831 73.3053 63.7154 74.7884 64.6179 cv
76.3756 65.5851 78.1198 65.3536 78.9026 64.0686 cv
79.138 63.682 79.3597 63.1052 78.877 62.8129 cv
78.2924 62.4558 li
77.6333 62.0536 77.3036 62.0614 77.0348 62.5048 cv
76.9073 62.7129 li
76.7445 62.6147 li
78.0806 60.4233 li
78.2414 60.5213 li
77.9196 61.0511 78.0884 61.3453 78.5592 61.6357 cv
80.013 62.5206 li
cp
f
79.8385 55.2085 mo
81.6003 55.7166 li
82.332 55.9286 82.6184 55.8147 82.7676 55.2948 cv
82.9481 55.3477 li
82.3144 57.5471 li
82.1338 57.4922 li
82.2692 57.0253 82.1731 56.7565 81.3667 56.5249 cv
77.5744 55.4302 li
76.8524 55.2222 76.566 55.3007 76.407 55.8422 cv
76.2285 55.7892 li
76.8641 53.5899 li
77.0446 53.6429 li
76.9053 54.1216 77.0329 54.4002 77.8078 54.6238 cv
79.5382 55.1221 li
80.4957 51.8085 li
78.7633 51.3101 li
78.0197 51.0944 77.7509 51.1905 77.6018 51.7104 cv
77.4213 51.6574 li
78.0491 49.4796 li
78.2296 49.5327 li
78.0786 50.0526 78.2747 50.2919 78.9968 50.5018 cv
82.7892 51.5966 li
83.5111 51.8046 83.8054 51.7045 83.9565 51.1846 cv
84.137 51.2375 li
83.5072 53.4134 li
83.3248 53.3603 li
83.464 52.8836 83.364 52.6364 82.5556 52.4029 cv
80.7938 51.8948 li
79.8385 55.2085 li
cp
f
3.30391 43.1446 mo
3.30391 43.4526 3.05279 43.6998 2.7428 43.6979 cv
2.43673 43.6979 2.18751 43.4468 2.18952 43.1387 cv
2.18952 42.8307 2.44064 42.5835 2.75063 42.5835 cv
3.05861 42.5835 3.30582 42.8367 3.30391 43.1446 cv
cp
f
82.5066 43.1545 mo
82.5027 43.4625 82.2516 43.7117 81.9436 43.7097 cv
81.6355 43.7078 81.3883 43.4566 81.3903 43.1486 cv
81.3922 42.8406 81.6433 42.5934 81.9494 42.5934 cv
82.2575 42.5973 82.5066 42.8464 82.5066 43.1545 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 18.0.0%%For: (Marc Wright) ()%%Title: (UoE_Horizontal Logo_282.eps)%%CreationDate: 02/12/2014 15:14%%Canvassize: 16383%AI9_DataStream%Gb",Kk@3F5Zg`/@g]JuNU]>;b31ZLE+hauYPHY'].(dg>5L-Zd,Bk(C);'UQ3R?BkM(FWC,>FFmMF93t^K%DF?8BrYCLNC"_[IDp%3@7Et>UU6<X'^ZgH^-S:F$.s1ZUB\*b&j-sGRdo]EK3W]cn$PEqG"6F46oEPZ.mMq%B7f^$UrM@alc"(+VpkK;s6N*3.VE.l8d=s%2l\8(Am+Ic+":/]5KiFH]>BK9(7'G?`SC'6'2"-kY6SS&Y([0\LY7-c-T0HR_U5^^8a5jm+/Vq834f=dZH'G0VE3((R#%Y"P,'N$%KqV&':Ve\U1.?2i97&Hm#_;JQo_q1)WHW\0Ti[RaO%Ur,*N@j/3cA]!!1,tNa+RAV]2XZ#_^#Iu.=tMKQc*LJ+nS0jc7kQ/&o,FM%nD3r-=rZ\(bQo$J)($)YOZX9^qX`Y[5q#/Y$S<3tKeY+;YIaLU/\EG<<O&;m9=iS&f)I+l$"aH0q5JbPkVpH*AZOYi,\0HY1,6gI%<G\aj.D:/'+hT4Z_LJBO;lNS+3\OqQQBTh^,8.,P@4ImWhN*=S@`R]jZn8^YdZlr;(_Ps+'U&sS'E`EA8qnc;6^XSr*``g_J$O)Z%>UiFqPhnQ;r)@u.0G-^T/%!%:?mV@el7_h]RQ=:5H+-_U)QSdk_C=T%N(Z9EqT!COPX,EN]q3kSOaolk4Z9E?,(<dM*qQLK<be@C%ke^[E=>MO2:^uYXq540EIt?b\[PE1)n)k>jC=cYqB';Y^P'T<-o\n8:8*[SX>;[iD9in0s(qpV54fJN^=q.*iJ&3:#iMas\iDN1E%!!)duY7h`;m3PPIJ6YSQ.j(I]r298'riL6N%9VJ#Y*A'Q^VklV2M"lnq85:0#VD_`QHODi8+g6Y70)lq!)Z1iGCoo.ejLIu+iBDB%fV!Rj0R`N\W)u?dU_D$qqVBbB8Wk!<(Y2AC%Vi7RMX!u,+(mq/24SB:X_LoBY5E!!75L[&@DRQsZqag4i5(PV($m.M_5"@D2YI[I%95ik?%t+:)I:S%$U]/[Rg9:1,;`>3Dp&<1mJh5qHc*GitGFQV;23j[<SR0"X&;u%L4V:1rW,nE2ej8N10Y(heibtMlGs/0o4dRt!%CTZFpbo/5.lTNXgOOS(k;^u%"(##C@JQB+U"&(n2(,3r-=NjPAaBrJ`Wl#?903^$%$'Lo+QU4)"%KC<pL\gM4VO4(8&,^DI^\ibZ%hdIjZ*56nJ_GsS0+r$fg5)GIc:PHUt!'?2#a`%n.'?PK^-YQHKOenH-$"sPJduafi9<edo9-)r)85nJcW%(BZ$&7RR"Ao+DTah0^%Bni=G@ZG*sYYrOtS6!`$Zs(O,]F'1!8M6N5!H:0AWc2[&CBqZ(Cf2iqGVD%K0Gu6pUu!/O%n\:IaJ@B'acgI>6AK8B+<.>7,0pSR%_Had+Ca#MD-Of/-Eth;D5/jen;E.P?_*#JcUR=fe!d<=Pe<;K-V=5s6>_dh"+981$L'1"uD:qmH;[c*q`<6uXbBTR9"APnM4Hn2$%$&pi>bd/b+QqAf<8=K&+OrUS=VNP++=OID(PR]sZ$R81C8X2W2jMQupN0-/;*%YK_%"+5gQ4BsV)+IC7)BpUcV2gr+3"9G4V#eqE%:(i;_<D>3,6='Y\Ua`F-U;Mun(aF'7/TTRFjRoL-`CM[3'fh$/<BR3*`MeCk@p5?_?=+t*\.[3s$*>o#PPQQ&(l(G5R>7p^Kinsk%;&UHh5Y`olGi"Xo1f':g4A_P+IQF;K`Tg"I#k/GE-,;<7MJ4Q:nIVeeUf,8ZeWkbhSPe!@Op:2N1reU%'eVidPfAB(MH2#0:O`@b%8KoUi>RESBQm)u"Q;ps\.aFo9D<=qmOW#31!kj\.'Iefb:HG=I*?/WO"h>=<6s<`)>b!.+=U(f5UB!i9E)bC5.V(E!RY&,P$6[<f%49WE^Zo.t[d.;6T*>X/Lou4g91QGC(!6n>GE1ONb/!#4A-TNq.(D>(JXVI!AegfqjTEe(<L05a$'N1G&'tP\_S[CIhetEPt(sAOF%C.*_^;ORe^OkOJo<T$\E#&8B;'Vtl(ip_S"MHM3XPsQ[oX?3B(.AHsOW2*TO743Ao]f#k(T2IN`Gg&:6<!ngGYNmJkq/RYV1\@+:%(C6X2QY;O)<,?97:5'_?dJ29@J]LKi.]8tB8Q.39,.:GFLR3bsALZ.B!5XV[h5sos0P*5O.R>M8Ld9--a]_f+i8HJoZ<EEf<'!9E%Sn(j0jsZBkgB1guBI]j[:ah!RP1L<p!JWE2:n._+[%UNe;Q5QYS'h<[@mLt5LftMn=r.=>_W=>u>Fn_L2V:j1%+R[r:\&8F'Vi*l%$B-<!@'#Sr'iqq=Xe\FP!G[[8-:*6^Opo?"0YD9m_Eq;n+D=e^P#06K8WAl_`S>F]PS^Cl,U$5[WeJ7L=s9dl0.:@28V)13)8/2:%FjD??[6:3U$Bnm+KbTm%!@3Y5;.0o4MH#L)7<K'65=RraK?_E:8d7\6Whhu=R2.5Ab>V(8>6Do\Ma<IK<71o"UM6"':^idu>IbHa%X*&\u4KHE^AF(^4;F79J;?O`"66CbVljY@R=B\r*8W$RW_$3_k`MR<H#65*%"i)TSO90F?Bai*1ePU=ZE]&S`OgJ$?"7rSE(okd+%C0`_hO]l+L=U^"SC)S7))""jZXV$:ae=KpDl"SgM<=;qr',)Xfg/1ZT%',S]e-;#_faRM34oeSVW%2!iJYnE0:o9J3D3AJ[3M9C4%$B]l!<DI"d`W2/YX]=I\g0e&9V(Q_E1!jq^!"Yrm-GC0s8YpMt"DE@=U_ZiV>co]sPcBS5Qq;#_%ua7iX_X#fVc<^f!qR>830)Ae%JDAZX4.$=(!+Wl?Ke=Sm=Nq+E&VRTOGTt,[QD*Uo+?45WE?(h&OO^A"Q6An92BYYTUcncN?SQRD?RaJE0k;1P@KK)^Ufkqr6tB3r%n?>_,ZY!#@;j:]p.cpjJnhdO979WAk"uHns(L+;;=^Dst'W);MO:"sU"N,de7fYkXeRD?KZ.^bW@,@o+BhmuQ7^e(MaRFq(9QN5p%L==d]L8u(FRc'meN2qZ4C/^+%"+]62MU4BdjeW\I4KB2D28MeHRNA<AH@iQ,.Xb's)PAd`COL.SA0TGYnctAIeXb1id!uX:+"[g7%B^:I#Znbt.<S#tuHc?a7?mnpPbCBW1CK<Z_XB0.BL=R,gOs#s'?'`to@$?K+TTPj<cjlTmFaYY'/#A>>1aPVl/h7hUaf-I.WS9!]%$B1(H>mU9XWF?'JV%&>]4<HsDJl0-h;OZrnX6Tc9AHXW\Fi;Ic#"]JFH'2&p+A48,>uYLGI))LJl2\WZf7HAk_YFJ;>)<)jhK&fP%1Zg[+[WUN5Ad6i<D9.,S3j)VPp!"jADBqeG6d3nbKIUPD)JY9pO8>)RS>"pV6*!aB9e/CGK01rLL>_jK!0T$oW^K8PaI;"O9S'gV%9EV@0;Gm3?WV[K^%&&IuQI2g_E1e&pnM1(SeQ(Z2)+W[(Q%9;''GHH->SJD7"Tp"aY6RI*$C6h04p;-\9""t'+ECK2&V8qD25U\'%Our_0#2B9$TMq^2EibM^OfUkQL4O-A5r:g%DP87m=D:IpH6%;:!i`m)XCD/R4eu3$.JQnCWaPb0]ESAk=Xp7oc:N/S.:hORXrrOD%Glgm.*c(h96)n[OP9!j?`FEUf;/p8KS6Ul_AOV0V.2=Fh!0Y6A-id@;CPl/M21()^,=Cl,'l%EU$']EuKlV!,`ZPRg$o/(KLbLf`%nd(Cd&^,n0Wln4rY(jn".tgk&BFMqS+XXV2<54h*<D1.>AIN+=(_q(khhqh9=ot)t]S\;?RZ*&4jnPcJ!\11k63]0$>,Y=!PRiQt%?7dI'70u,QBNcj\e:9A2G8Na_JgQ80<sLu=,#GF8W-/2,AS$'[#/Cn`0\2$%cq-+)KEb((C1dt7/QL,rFs)hiK;8j>;e+E-GbJ9r%-;BuXSPp@@T;&\-Q_H@M=I)ra8>:X)B!1Wn(-Y<ArMlSbX)9>e1-2BPOt<TB]I@DTkQV\rWrX1oXr+Q!9bZfTAQ<(J$;!uI_k8O!%Y>Pc`;BHa@;V`<nO!u:M2+_Mr&!Kln;m6Z=hhP[K8-bms;fqMZdRFWDN`KgYjcZ]W1a8L1X&0I2;69&2_.)!B9e+#16Ms9QjA(i+%0VFO(9WA3T5lI[).>#nQUH15&S?j]p,c=dM:e\/uFA9)c&-,T9lf^MQXW)K*@H'/NeW:B56#[1^3isn$'W%l5.&9j=O]*h*9$!d1%"&tU!\;\uN01Qp'+[E%/;2asC^t>_3&/B1O!g+?i*<?3#?&qEhYlH1a.4oG:H%;F1U8UmYJKQeu*Lq0qjsDT;AHWFXW-AoM8f2)J%ZYJ9GTm."M6FU%38S3&ER[MKR+2_dmZu$!q6l9Yqcn'+^DQ<\(#Dps/+03Fl&[bM!Y8MAl)c,ZZB<8hd"bkmlBR5Y86\-YAW^TZb%`8_aF8E;%rQk<NgQ;Cj-'IKIf],-0H$#Nq9[:"mjU9eEGi7!D:.9#k-$b&DF6Yk()5,h79V>IkeMB_BR<PCn>Zl5ATLp5Zp/UE%[%*Q)Ve/#dD]+h:).<iWULJI-GM8m['@@>\L$66mp8&ZVcL`T&1#[i;hJF';RD%YC+rbs%G$F;[hog0u6c6BejJC!m:sW"jm+G\D.9%iks0?nBEig-6KcjR^]BWJ#XYmY@(=ppVQO(Wb!R5DhFQ(7bAiM9g76>6F$qm+.K"T%3E4XaAT*-M.!KHbXUW#RAkIIE)0_SLX[J\%1O7r0A]VrdD.GnoKVEfl"PNsN'mNDMZ)Wll-gMDY'?(0B"4Bc!%EK^1P3:)4s$0lZP5m5W>3h?9^$[OQ(Q8t$`)t$p,3tksXeRaP%8];+?8>E==8LZZO?pI`eK]+L-cq.EGN7PB4%F"IUIk4PQF,E^I^$`(cRC]7M)"V,RXaS&_#T.4=#!NG^'$@-3eS_);!&1+"r[Vqs%io^%"7&l..<ssqtITR+Ns(aMrn0nRZlI=#UT%HKE$=)F"Cc*]GogZ>6b.LE%'Dno'nI>H\rB\J1<^T`I+<hp8/mIuU'Pe>t>kOH1%kUUd_`VRbncau*pAQ0PeU/bQkA=S,#X1_SNPgnD/NY+H=s'asYhaHMp#9/^gT7D\B+6,5L`lCNK-M,!"KGtjr9:HG^280$[DR<c)%B+c$$HIZP1\DW&*XC@-5;T*+Lh^S:=@]L^4;F,#S3Q5/d+3fi(K&bih(:mtK,JNo'#l)VXC\?X';RkquqT[J]:\Z6qo;0">LEhNh%,VEsTZ.j3TlYWd#LZ?mIMS4>>ihMMC]Xi-#P^S0KBpLY:'$(4gdK:(ol"<lq@`^/r]LV<C$QhJokkmEs`(4aM,P7cAp8f)?-CU(^%/K]7Ieo7SULLX8IqONMRX.8Y!7k4R?T?&n\WVruINo-1;rl+qK43Y2&6r'h;f;IK^,iUZRp*LH6WOFg#hB)8AH[E/\!/>p^7&kIG%RD4OE`.(L*%sui%h7]f"2g+klmbZILS%<t(f\L&OTt;*@Vm#(I`Mi7bn--X=Z<]Z`K/2F>Yu,l`Wm^?cHg_?sW:'AZ3Up0V4[as?%TpZjJOp72"hS5pP58^5;U[M]MNPS]k,b&1Ck]aX]Tp8Jor$o-32@EOT`F<ta*UG8iVQ,*"WX?TgPKrYqXk"56R;^=CV_X!6LuB;o%3_$"M/+VM\^L%^7##gN\C#FaZe_2*`LL[+.(+]?<d)en^DGOs)YI_Q)T<Pd='[-E(D5efkJYgc`_m.-D"4Z^^C-k??<eMS'eC&"[%kXWDlXd.ALceA4,.6f8%2O5ToC`]-dkF!Rsi%j!RF,UHXbQ"edq;3RR+D4TceN6Z]A=jHp'T8uk3)Y`o04YTAccq-:Jd7LRV[u\H%9QfKqH:C1Y8L?kC?n6sjT5]Es,#Hh3omtt5Hpm1T7Kd(E]mYY)_I$J1.%:el562@i;t%CX`?,#emT3;VJT]24/'X..M#Zre<_n1^%@B)CZ,5n=9h;D`$YB!P%=R<\VLlu,d#R\^Zhf1:Jh>jECL5*)=^Z1G"o%P0&8n'#%iBbcibAFOPT)ViS861llR>r]p%sqCL4._BT%j4O1h*MH[*j%lm[rPRg,>"A$&IRg%%)kQ]=8#2$'89L(-q._PEZ.*L&U3@m_Hm.*P.b;=q=Sk"n$pQ=V_M-\#:Xkj@ZQL=/G<(!h%+E),63B^J*`?_cN2C;djf>$*tg[CW<O)9i(c(+_4dU:Mb)YQj!\m3-:&cC2I;8Afukq*7k>85'h/&dNdB4$?n95G<]L0+cAHO_t3%n25HA]brOUP(O3.*(cbI>UBpgQ6,R!GnKhoC>r%HHm9:+H^.=:$%\/Z=*'@AokqAb<5bZdl5^9"0;OPq!eA/ER/@TR;-<]K4Rak8%q%X]]q)<]M8?4qjr&+""0A'Q_P:Z=01&5Q>08n8GO#?It<TG0LNq+"!\Kh109Y(5>%Q@(o!5QV8+3;^/"Zd`)X#Cq_c9F0M@=!XI%DrHb<D.&dkT$Rd#a%H<P%JTN@I"P8l"@O1$Q7-,_D[4V#E\(5\NEi6pjCW)U3`6W`O6"G*Dma*H:`2EiL;0"IeGf5b->`:i^eF4r%6lnQ>L:1,)NbM"J?!hCnX4;O"r[RttH@q7pK%Q!elBaeH4t4kYN*'XaC>mJNHMb&;Iltk99;X&.jH9eNH;jUGX'rd.4`msYoJ"LB%3BrdIEu5*'PHPc#Ql_!MP]6*#J$:VW31+g(p2*RBi84V2eW.Q*cdDAEbk*m=oJk(e3/ikC[O:T&Nl)"H<YKs&jr;tbhrZm,4sjX]%3LV"EEL<"_3=\FU/&u'"8;^!*H/IaD$pH"F:$,02_`2p1T6_J(!8C2Y!;JIm@IQ#IC'%dJq`eHN1f&X%)3hm"Bb%o;XapM5b"ZO-%YKarA]6!!?9Z#[+^aF:(oe1/Umm$!r$Z;Pg`CmFOL9IAHn3\bU>DpjQ55d7FDu+EqTR1^V'$XXTZ2_*t_a]))dA@On.a]SJU?+I5%0K%7lPs?#1S5/2!<1a&pnn`'6:$(&-Sk\>"f9^.49qCHT]C=]OXC3><QC[$=Z%k8L)]Z<FraiOS7XiK<s#AaYM/X+)%%`(>7=\lm%VA:7kB`2-G+e@0`',tQniQlSL4O.jlq)Vt`nk8TS>'I[0>?.q/Dq4BQeK(nH$GB\pb5k9g4rh?+HC%@8N@odu`To$[!V>,b9u0eE%djn@EnGBjK;b6g43P@5fEbENb:K3]dVhd$pKV(XLriO*,nA";Y+oKqj5sE7b_7q+);J`:moc?=Dr;*O%?RuG-8U\HOl3G/e?TkIi%i=<qN)s5>>>R-Dq'/%ld;R7rt_=9\Uqf)A_PmLS&a"J\LYiCFU52/#nM*P'*hAX@&`94Xl)%h1h&]'f@DkA2en<]FOb%=&_:I%>3%e9eAnZ%oMe^7Om(BLGY-l5W:LHmKO(D/Vi_M[o\H>9$#Tl'FCq1edt?DC<%Kc09EBa)<=1]015HSNP_'So,qU"h_S<M^$X;jQUin%'7SEtjQUhCNk(!)PUU')OQed]6Cr'<:UcF`>KC/'eFc8>O9:4YMh,d2[^>l"eb2LL1o0$=pbh=iY<DY%X.YA4Yu.keS(nIMC;![6%GK$Z5!_95DcWLA;52MU@<a#Ar%1M-%Mq$HoU1N>[lRI%VHl$o?&=n=/^#!JMD&RMc#2Q.B[pV"GDcf^YDj),cRm);u2'QsrgU$n-%&]N<^=I8#.kd^JI[/R*Y28n?t8$&jd*MN.X9n@"LmdJF<M]EcP)t6@jJ=NUXa,>lj2IaQ'lHOe(k=IinLM?EG/`)\lbO4j3dVb\"%+ss3I-qC:lrBa-us1QWo>HE?'m0&GR$o\"dSJ`-br-rQ[9g`<&2#IKOa2a8@#!o\3#jR>$TJV+bN5UrP&\$6!bqs;oNS@.e2Uf1\%1i>+/gIu577ZGhEE>pck,DU37E>rUIS_.Z3AsBgMB;i/O[PRjm#GI$Ta7TV2:uD*JN,P!`4G7'+%97fPTucI=)WB#S6N\Em$,8h0%+-?lE6Nd?DOQdc(T;Y#-*b1^bjnUVARs__3h`DM:ITpA^h)UmdHGXgfo_tg]e"+tbVnRiP*6M'HFT!(VeU/+^3PBWO1tk`_g'p0:%dlXIZ%,d=1s8$q7rEC'o'jlZpo_[Npj9PQSWp/mP'4D2@1\)p=LW4dFZhaq,[)S_6=BkQVpuhl;,6(@sP>"$T9=7r)llh\YLt+bb%m&RDkWJp)Vi;a9NX5D;<R$:bLhX?:s?*ga$RZTE=_-N5-UArmqe$@K'Ise>e_8kea]c,h]RTfU+0oD)bClIkCW6_]AJma1Kf7&HW%qbIDRropJ\fkF8m1_XGPrO&ikeU5c;7d@Sg2=M3G"uX,FqtnprIi?i3=+0:(R?_J_@iEjae=afGk*ksr!/JY0ULR?j#aM".30EM$%VmVf0QufA%o[.:lj4O+NP_H8Bk_S\UYuSV!SSbJm*5TeT4/ql"Qir>+"N`*`fIOL9rT5Quh6-ghjlRm'4@_cN"!;t&6EsV\<I=l#%k.h\2?)fgb9UVa%=4.H)bDrHd*DOOb7mn?o[@NnBDj3ebJBBgb[gCsEWcb*a^9!DHIsbK3h]SHGg>mnDkM=iK]sJ)qQ7S@\I7iE'%s6?>n&i;*246:nnq#)_^&Z9iVI$sW9!']feM=Uqn&"A;WSYHAGnGHAgSA*#=0mn?qqt(^h*n.H*PI!P`fHnj-[j6@iD2Oq<55Rg=%'Z;rfV8,:\o@3p%BL,B\iZA^ET=TAJGON_cHU4IFeDZlXI"UWX*PSMj2g+opBnm5R2>E1AhtK:#L4,u;fC\jBd@5H0;ibk^nP)0\%WQ-sjpqElNQi)RZ?N?V1L;t)T^PgDS"I#h:2`Y4%[3SaZ3Wd%0s,J]R[cd.&mtgaNmmdLQJ=l>dS`u+M'Bf?gYOV6OA:!:TL_b_g%&&bpg?dnm6-<?)U)IVAM:OoX6)a`Y'4ff>hD4skrrE0L>'CPSn2"5#1C@.'Hm2Y2to1A,H5fe=1Ah'I-pk<tWHU^Cn\Ya#f"/E\C%_1^PO?25tjlus(\s,Q(-'jh%Opq0S2+p9S1/8[RuiVe37OGr'n?Ug)bL_CGVp1>Bg/B@J^PQt-n;G2J!*o@F6\,5q_>AW'%hl-ns%1"[DP2OZ\>,N'4,:#61X>QN7JMqVoDPQctnrK,Z^56?Pb9eAP8Lsjp27eg?(fak=KW7V&gUh&$JpMR_A,TA78QdsHF\s<43VZpN;%Z=#XiFoQZmp9Z2V".K[N%6rgiGYfs_s0\\h3!>O:_l7c?2?!M_dr1$iV5O%8e6\S'HYI4INIM@*<Ao4jHg,nF#(4Vcd6hT?WD]:A%b_MQ$Co.-nZg2Lt#ZUKW;oPsQn[TRXN!MSoLu:q2\'GUpf`(]9:JEVhj<l&oFR$QkVAS7YK<M(9K*Jn7??q"C_o%I[mnB\W7<PK=%F##'7K^2B\8Nl%D'-E>Cf:D\0CT9H\;0NN3VbOc%%'"'>Wq.1.cE@n:T"`W4M71c<(E-Xg0)j]-^<f4AY#c3`qo`WeiOeI6pP$.U%i#A8cQRkia=W53M1^*l5ID*R#&F<qp;#bV59eX=O=oJk[.;IDJJ-;9^Btk$M]DcH?^9XNcO?1E#"+CuAnIJl(nu[kJIj)AiMdGoc%_fe<mrJlrk\%1S[6NU+,N77#UPNDZ&Y/g=/L\QU2E0J&-'%eb+FQn>L)phQL52qI_YIpe(d>fdW]@('6e/i5TI3hq2c>NPp]_"XP%m;FG_De`aZ;"%(ELh'EG\L3X3kP-P11oW2&[YKh=<Nq:UV9S1/`RSm,0#!E(q0&eic@q,E^Tl(-VsE[_f,=CfLpP<<*AN\I*L-A,%l3OM0%HA1[a]\)i1EJ;^$H&Zp6ADa1^OfIf9\4sMe^Jc!3]$?K\TFT$!HU"F,T1L):=!YZ)8IVB*pEEt8:$mRT(B(arX9Jj8tqL3%'<-*Y+QTSD@S1W0I&XU!+$q>l)$Zj`.fO.JV+)kZ+]cK7_p\"M&.q[T^RO,SI`OKDF7TY93.P@b6IG6U'0Zo`58)p)Wd,26;08='%P%9rUj(+=H_p&`]Tb:BZ3RUQ07ZlQQWQZc*a[8(BImff^J#O\%jNXV0'fhG4:1H\^TkROX3780S7R=s!Ji$I^%m_^4E2]"4TS#[Z%B/LOa7>LplLhuWQam^IXp$[_VC,_rZN]Mj$4,N"0$q6aRk4C4!2=_`P4%'$\@[Kh9?)dIc(K+%iE(?LN<M!bQDlOs=**ip/>XQUU%U/5GleL30aM*)<ACK-4[lOBS)lIN5ee8]7TBTqCg\qN`VB,<lIiC$.u)GkFGUsD<WMk*n_KflBkI_Dc&r5`qWQ#!6h(EbWI]oLlZ%8JQ51SAC*H;R0'DW$7:]f4I>c@u:7)7Y[b(05$8.r&g8%d0`=k<N.O(1S'!h21-s^KGUm,54)<8^j:J<.j))aUJZM<XEV'a$-8>:%P=2q:Mhb(oDC<rF5h+6u+T!&]s"=RWLf(c0J-Q-"'rFTL'-/!YlDe.4+J@UVM5>/r5nE0f6#On7Ekul)S\E[;7=QKAiW$G6qYqB9%IuoP"O<+7[)6=M=?u-#WJ!Nq/1_IH<+e;bi0dackIqYX70`3'$@B4$09rCFn&.(NQlN4:"N?ZA$[(nN\PqOiZ,'l,A)bM*YUu*d"%&!.4"i(0BR87f+<UrG&bqjNV[M12M*^H`[]^'aO6=K,+n9c5eQKN^f&Niq['3f"OSE"G@@-WJq(5fa5eHH"YZOVkhr-%BTuG1;8I%<r3n6Q[0HW70:;%73@e0.L!\pMUutuY(8tjH:Y="_P(qu"B72G?jpH#KbJ)cV`,K,g+=14CoP1$D,tCOqt2!?U)m,B!<Of'0Dao/%o!0e.Iu1;VWcAn4lG=[tJ;rj*5X9p)BSJ!?BVklTTpQ)=R>0@oNX>0-%*ZKu'-./cUV/0%Tg\lEZ-l-PO?]ZSh-/o<;1=[;.[`D$%(43$/(42'*7h`_snpc.Q\*[iYVFI^5[DNn%OR?dO;+7<f>c>,_AJCm?C5XS56nPVUV0^I[5[',Add:#(.2/VB%$H$<MPZF@A8%c%%#kZ^seEU'Q*HR==gh=f._oA*D3,p)KNNd_cm:n%@BI-ZPo7fkH<#hDd[I@2]r(dKm9QjX=bO(*FR'p`UoN[e(O#&Zk-$FV6K(r]:%anJU]oGbJ6P?9HgS*bq_QL,Ze),IEtKVS(5/-n7/h)#u%Qj)g-0P,\"iA7/NJo`CPiiF+D<P(>=Dt[ofdELBf6h\sT=iH%eoNK!)%)ASuHT&N;(U>QiB,$@)5^Ego8`R3Z.=o+q9HBJe;.4UiVT`5DQaq0N<N';Q)O?q+c,8d>(5'2355UEu':a&3C*&9oirgtKSBQNF'%$LSq6#iqdR^F?U;3M@gn8;6cH*2H-XJegh?JIhM%Nb;S[TUb?;9;c)*GO,9-6Ofij*\?N\,]p%prUOo#n:M7\OfJ\GS,J'jNae$0%OQ!2tWd7`u>%5"#32hiiOnG[NerhM$;SNISPPT-mWZ<B;_?-K2#=n)HV_';XaOELSke?:@.Ri1%e?d[<)Kdof_eCBs[d.oj%YKKR%:A9*5pd41rm*Wq@U_kTC8ij3KbA,6>UZtKB'O-rI_,46JZH4A_FK\9)U&*=t#4#Jn++ULW5XL@Y,I,h3&p,g\$6fkh1YiWH`;io9%<SJQ4S7.H<LiA4se7h(0J.&#0*51Pp`6N(pr_dZ;435sam=t,n=OgfAk@e$<Z,8cqM7Q+u0*u4^BB]f#,fPl8</P>+KW4PNYu-Z:%P`FjVS>#mI(pX"(d`+Uo89Y^mG"^8l0_`35YZ7r=N-&?4M/!KfHtn"o:=8oSC%<As[!i>;U7&tp/9fYW]40ri(bU[FotpN>]dK'1%NI"A&aV`u.19?D$U=ee@_ad&ZV(]K;iA7I8F/cFT2`RM6HXt]=n<ZG"!PZ`hQ6Bn3[^0@!0!r49^P#@+h.>(#QbbIuH.Q\M9-6aW%o%+\S:.o?4m3J,,dfA2HqE7D"O$]m-VM.#]?KJc"nOO)D?uZ0b.I?J`T=OZ_VLM!+G\uVqfYbP?Nj_i)(;B7=IPR["qV@amr*-9%%Q)*'d05T]G<W&]kpX\;,=$YUZ19Q2IE0oTlkDQ'QioW`@jZ@Eq\+Y0#[IGWN6+9^pI!&Sn>/cAImtU&,M"/9<49VeKkK70`Ujgpr%o#!W)32mWW)(!N\EC6WTog#,nf2?\gr%T.,o=7E3A=qFchY_9&;0r7a<01`6k=M9>_rhO?5(=nGn&kc.3A$[cq^nGCpd%&kp(3[%%:T/jc2!R'q&]ZW(Ka2U`PGtiNkWsl;%<Tss-$I.B/c6dj&j'qEB'jn'W&3f,E(*+%iIBgHp]B6J"Un*q^<A/iEi:\c9<@c]::Mi3%"Sr$Oe0N#[7%@nW<&d=1Cn+o"JZ^f6K<ErudB_S'^&!,-FO(gi&@5i@OoMV_,H+&Hgfqj(,][RrfFrRWA1j/n#iBMg']Ap9()i@c%\Ir*=mOM+@Y-0$9ngYh'c]E\h.7nAH5Ue$&TStGec*1;FK15@`Yaj)#pggUS641bQRK=-pLLd6FlZ=).dJ[*Gr3%MLUfMV/g?O(s%O;>>&6G:k@Bd0`0pBA]ZA?\X)6I1:*kgmM/Ugs/HqdZm7ml/-#@TR=:eP.ZC+PA2'>0mG'*+J;h:!mQ_Y8%5kO2^Of^7cZfUmQI,%>0qr!`G**=me;+_=<mCZ'UiM%[/SlV&[Z/0E,h+Qi^DRLHM/r(?g'Ee)ST;"*'/eWWn!2QKtJeLBVj:Ofn?g2#o4go'H;Bc%sg:"%.RF57Y\T,?]@;OK(-DCRF%u8h&oq;UYKA6a(5JYM\BlFUmWckH:>8*(O.1KRj,?/.9Ze+4<F,M3jAt,eXQ\Zt=Y!)B?DH?i_`dNS%'ePm6=O([n]>fSeS$(55G3)XTh'&Uc;)r0H_2?$.C(2NS7M`qF"ed-;>;$HAE?K\MTY1p'"^372%5qB1*eHad)l+u``(aAg,ur0P%.6^1H5g5TSc(#s"&lZE\bA=*2.iKeV]iKao%V(XE:6^$`;_4b`%lmWJXYAZ39e;E#EGeV7W[=t<K2lSq*c9>re`;QGCMAj@#Vhh)%AWj@!"YhulnlJZHeo*V$YpQUe>.o5aB[d3NiJ\d:?;i=E%%m7tUoV@&i\.R1%U879[ip<nGp0WnNNSE$JA1:r@;M+YISe&YF*(4d%-4GY]nP^pX[E[]kd!Ds6"P]tXUdi74P<)e1!2c<i.*6`>(=1!,ZhmdAQU.OaGup3sIA,&m4!4Xu:qhR5KHE/_D^,Ufm^/]U3!W?,%^K$K7L&s,j>X5.`=YY;=F%+<5Ki198r.urCV9#$0$L<6M)4W1q9=f!`?0`3LP('W=(-+T^ebQa04$V<8N9[:f1/=TUX<7.T0r?L&%'PcoE3Z4`d_WcJE>0.L58YlFYUm.^5/"u$-\9('88VSCPgkdtTN)Mbha`).8op4sWWbK]pI."q3Q"F:mS#+uB(GhLp<gnNpXQmr/%&V_[u-:7>[?AsZC`A3Me"@G'E&1q4\SinWYIlSM0)!FkteJfRb$?_e8FWg0]Xo`(5)cq4PQ>ctu>[M0P,\,paZ?W%*-L&-JGB'N[%m'eH.<CAk9X;]#Y0uNdi*B/Qs:=B7Z])=OU_X;>aBMWBT%g_Gmm:tOV6J"TGb7uLiqn,2uU`BUH]=:g.JK!ta;@B$i<K(/.6)c^N%j'$WaS8,c[S/aJcRN6`L?#nUJ=oq0RX/`;'.IRuTPs@f@l^>CXHdu0uPcX'XY<a@0,4muJ!UY4(Yn#)@9mMS`?!!qM/b)7`%Z\)!%.bBe2;\=*h\7%-Q!NEJQYj0F*^kKHo[F+El,]gcJV4&QB=@[DH1uI:eU%?j#C:/<,E/cSepG@WCW7q<qeRk'V<%]COeM[hpg-(X)%n>g=B`o-3V](4gsZI&,FI]-SnFNE+4.PfuJ@!DG>h!pPH"sRfQ30eSS\16'kV-r"\o?e\$/$L7F.&?pYKqb=NIHNZ\Y'+R9UQ.d8%3)4(^;iN#CU*6o(^G+ue](_)^p$)u^@?0Vp/!ZD:6Rm64NJ_msd93h*eV&[UNSV)#Wum@m(OnJ2SQFW9Eu]O24V$b:+fqWNQA>PK%RrbVXFm@nXqX?qMd>@1D+a?YF2t+>H^2-G*&&q!p%=s;n,oQuDS):.=<S_]/f+^?W;m0pkrg[dC]j=jti:@"P'ta.*Q6.Eh6Aisa%lFdr7Wq7d/_D^i4IcFEa+%>Z!As,D>Ym)t_)D;$rk;o8-*A.Q&a960ob`@4IH*C2[$1]sVCppAPS`@@5RktPAnuf!n(Vbi^DFlRI%>?*K0P.\+$\!#!-.%r+jj`%Y`9SH(>I#)[DTiQ*@X6s8gC22@H4UfD.(GTO>Qr';BLf))cCVTsp)j!s)F%Au-:0oQBe7aZD'7/Xg%$kt-u2kDbj%eJ\uYa3M`*Tu;]]\aHF;FM)d3C\GF>!l6D8!?Y;6FWj5k24JoL'a$_cI,ko5I#2TG&!`m4:6Buhm3!P";5l>65AaC%YgBDMRo*MH:J.B,'Es%rbDkT<!IH&,:J,.FBNIeVs1\D_Q1t087UJ%gV+u8g7Hn:NTokr.$I>PD]npc*Y"^+[aTp5YB4_+BDFqA-%W4n1a4[Mpq^%RrWQ;DLAZ1o/1)/>`V]=keMb6A&`cGK`G4=C)F.;*'"le5)hQ"9i^Tn`i39gl2Mkg&_"i;jk13/IVEQclN[F&pE'%Fu4F&KF'!iPRU]Y]5=k%]W$F-ZkC1Y+7FV?bQ4a>Q@F90f"MdBUdeWGRN9AAL6&Y!<9QkIi5FMNkH1Oojkt,+%ApD$TnG+Zd0CW5%KuoYMR$(sY,un9FRHV!lJou@7Ri9,sAUO--ekjQ58qTc?(4&Kf+0jiH[_Y-E^gN;GOX3^Wh;1$/.0ddHChE+hR$W53d&"pK(@?)O%\[b6\HcHi^jEJ-k[eK,=lC9:<TU!*RLP)O*NWm>Lg=D9r+A%BL=L<Be8t=_lBJUF2C`+GiB^AB=2,JuoacroDo%@<<(&MR\EDii]%JQAJZ0N;Ze3O`:`5]g^pG91]_eZrNc_U`LFY?_m5@iBg=cuo/0:eI;IrDj)\.3#8!PVl-C]<1O"P[6Y]Kjd<c]iQqiq@-l#1R-kT%%KCkl>N)aS$P?'GL!>>kl9$V>;6b/F#6<@s`oCL3#nTZ&Ba+3#lA++'BETMN6rXB3W+uRl$bAg(DWtgl%%ZWW>@>s9HP-BW&]8a:%%o!<gKKgkL*=r;k.,qDaYIpUgmC.+VeA)'Zo[X)K$'%>SWYsXE]A\5)%:'DTa#;p,SU0&2p!IC*FS#r2/1F49h=9'mni2Li0ZLq=%_&^IVGP'Qd=19`n7]Z"U@Yc(eFSgCRf**QI;ce,$r*b2nKgZd_[jgOm>9;`\MdjbP#/9K-#"I,E.-56LN"2*2c2a_-V&:^/hT78V%Q5/+G*dM$J>:kD"1V7gOg`aR"D!eX!?*p&'^k"i`2&/21X8@XOqjFF!Y%P>5h;;!SF!>((oT@fj?+=7p\DCIq(N*7ak_7JfAuDui%HsM)5bo@F0<hkT+\e+>UZ^6#aG&D0[Ed-i:fj6ad=?PI)oIF/i:E?>W,f@h<6oXirpTdE8n#SamQZk>ggYJFg+dE=%G1M^d3a/A4%?KPhfr+K_q&W>?=k#NcEO"\3UFELQrL&SSe+gT,DmIkQb+#D,HCc1%5Nk4KR@deGNMk0/MEm4H(k%A2o3Y]]dLkDuXY^)84EED>t%&*ZtMIc]Fc\_c'#cGj)IEG)BmDm&/%,Q0rN[os/.A7?:&^ng%+O4RX6Z.$3cX(>UafiRU%[#j=g6EWWr^$fcR04$/J@*%0je'!pX%^Fd+]p8e'HR98b;I(C/aCFNc'&ZYe+K`;oqWT5SOo4[i_H!]B!8*GYlbfT.2Q(@:$AK`StQaa+-k$HXi(#]W#<aWu#NaA!B8Ko<s%Sbi8F[JJ?<2:I@t0?-%'&,l,tET%ptIq`Qoi0=d@f_);cSTLp<fNd)l?;GObLWqm#-+Yrph5Tb).rT4!%^D0Yk[";C\4)OlVMXSA%4e!!jI`^WpBP^\m1q9lhK#-hOA1,"(0mB0qjc`u;Qi28SDMu\1:FdAceb_5(4SL7Vh.f@YTe1G5%Sb&.Hd/.k&=p6bDbFn??(+jF%,D(<543f.*NJ56nb$>8F_P.Q:1).8k-pj/2pDNf$Q*%oXqV0#4r_TSc?-WCGJ5Nf*4tPM/@V'=*^ImUr?T(nDf:*`FeXn3bnkA<N%#'d&6UtQ2UarKUIGVfUi7Q2ts-'=>5Ou&N]ZV5+1M;&Gca8W099=^ZF\Q\"^4YI)!o,4uaH+pPMHeqA]?7W_]fmMm@?(u#"rA=7n%3sTW&GPR^MgO5V\b,Vj#e#,,,=K2u%ltI,V/*1NbHr[$kJ/+AN[cZ/EPo2oM6]q:&\T3sDD@R"8S^-OIZZ^`0/^I6C=mrRKH-<6=%)2WjKPL>>uRI1uaP_hi%6BUr+c$m$]CQKFn+Lq\@G)<d3B8\?746ra"Cq=`8lOT0,2NoK!CD23HR6bC1OCRbLHJ2,lrWOqjU'p@b%lmmF&QS0!kb;liV=XD"mc#nFW$9<3;*:9Vq%nLuRD8^l;&>pShF8J0^6/d6'6;tktk$e,Y.<Ab8edbR\H!%3bZIS*>/3Fs8?oQPB%2m3\CD!u'/0!eWJgU)q`'S0,;Vn(WmL^7:WD]f?R'=G5`BlLHQH563l[C=n^/bAn_3cec*aSL?eWb(MP3fBeFm/DrIRbQ^UYZ_jp%(7N%\(JAFe*Ns9#g`:(!^-$ocUZ$"LBR.)]>]$?r57V^jqI[+-!2qL;Z0B]AoWiO<g(t+leG2feZEZaW+*;P1o;g:G<ENY\DICce%I(o1F^7]Tk1Isl0"S9M/iXq!ec,K<DUV1KHG:r65pfh:=Mq@'8qXCrG$:RW4>l4N5;rSQfZUaI1d\8L_(NQqUifce9>SIOk9/Eb,%)Ba**,-Y%PD#:6X55P7jd57`ObFh7IV>P)-Z3aJm^BV]lR:"Y$A81jT]"#?#b1>nA<J9'7W`$t[*q$uS)u8QXr"\2]ZJ8?XQ]?86%RDo7>7rrfkn0aRVXtMRm=60R/[Wd*bQCfeYoYSh"Sm%S4b*'BiUE0!](+aHGP7YoQgZ3*+]<.E:Kd,)+8kli)rL#r<0e52Is(%$X%e2dB:.C[kiaJ,u!!\1kq.r`U4mXfc!CZeQ[%?S]13\&58?"Hj/'*F9C$gQ%F@RhO<QJQ(VY(B,a-4`Zh"5j6"d`PAtRL6oF:l%.Y%<44C]1O>0LfL^aNm*r$4Vb/ZHZ"PG\gh%RTQ-n5B8?#QXK2\`$H<EJa8PkZ9WV<],_SqnT/^LE8Sd=(-KHdj]:td%$)6d[/A3*l8%Ypj0or$d9HHepX"&;jTQEm&1=Gts2OAGJ/)/#?2):M#MG/e!\MJLVc+=;acN^1J*b>`#kf?n-5X7ZL1FB2n]VM5W=-%7P@ODVEIe%BsM=SZ#(LUen?R`[<8LpMnsV7'k<Z^/S!>RPn>=j%]lt=O75gZ*m,[,E%/kMPel@Bg,'#[ocfS>AfoDtLV;dp!+jZ%edStqjU"d4%[\7mfO7@frO\;VCD[Q;_9KDer?3:6-P?.>tT5LJYC+k?M<Z\\d$6rif3c#OS8Fe>Hfo>>^"&4qUemt9BcQaB_k?_kJB:V#O=ik%,%ltNIN2K(>u9NH`#9/>+OQ&H[b`I%\$]OGp+80/b:_[O-_VVfh8X#J#"h]3H[o\9:plj$W)>*0hY:a@>-&6qE->%;T.g[C*3Qcue'%^1\67e&C0m1V[spLg%PO$9NX2XZ7+498<&7FKg7%H;C/F1M=d`;6?mrKeVG9+tLlpWQEfNegm('C$ss<,'VC:ro!u&S_SSI:ENo8%K:T*(ln\.?gH?95Wp+`GAjC2t`-'r\md3)\HOe-.d!Q'$N8lN4`PYsJ]N\(ZcgJVccG+!,H^gmEn%G88='$da0fqbB$:UmB*qi>)%[#k01rLC"iA/"::B&j-^gLV"2ZLrk1/ufO&>g0F5<&:u8GVh\%8lgLk-dRBMf&Hd8\X1ss[aMuP^%DI9[F<+]lcO'&;;^)4;s2:q%-]9YK#0T2:0H=M_A*,d2gQT_iS^MR-G]9I[H$++q#3+cE/8Qd$ggGZ=]`r]sLAc%ur_3LVho*D`+B2Vqr-7)XF1\nd%G^J978UV?%YoW3,bgM-g8Q"&@?L.=*H*2>$Z3t]aOJA,AH%c?3:DN*o?4gF<)[gS%I)Qhl*gc$sq,[M#(#bW2FnRapk7dS=Y&\WG3Bu7!>]-#Y%We93DNMOlrMH>Me;H<U%/9Y`Yi84=l1ZIW&gbsOjHd%&PH\6Uc^-9cBX_dAg5AMe80b,uV5Kpb\YCL>:<\nuD%7OHl12k\)N:B1E%";#A!AqN?@j9/?WcA6Xoa61hD\9h7-V%YZN[c?O$gK28(ej5/I=[0Qi"o%P0`X;T"?/2R]KR)8;:ck""]K?Gi$uAE1P_bW1:&Y-5%D#:WpQRA1c#GDL<4:)"^eBL4ean!aRj^R!Z,bpN^g%APKlt<nO.GR5pCCR$-YX?<Ap0tUT[KeKQ&\_,(C2PPVe8(@,mPP*ajBgO[%;=s!XJn!1:\M>BFIC[rd&B)78Y`]AeB8uRN/pTshCu%9-%mn5(nkEMQ9\c*tH@D.D$1kIA*qXODMe['@mH!H"Y+ePTCn[+o6\DW<%@dSB=SkIk?mqD>u'GI\0dgnjmXua)KgnlPeY;_Y9bu:%mkn[qeMrAZmA5<$o*K^,lRpT<1CF5$PX?3eRf_N)PeBZe@H[WT9=+8h*%].'+5.2#kTh>)(>,&?P)eQ[2mL2GApC/#lZIX81!o67[8'AKETZ8obH*AMW6N630,Nb=@>\Z<_I#o)4hI/]OI4m$LU>V-Z3Y=ck6%FE/aWT<FbBQ>G]H)OYu0]R`?0B=Vp>j=4Frg-KPr`s)d`&`)]ipjW)+,4W0DInJ7!`ik_;?;0L@U5h,FY[WWY_*E:U/3L,N-L@:$%>OP:RjHl:*p[*iOHpDc':T)A&QT2O"[AoP/'SAPLRX^A5U(Y4Oqa?a2p*g)sY$]S<:L]_]PGl<DH+RRqekU.-f%W;ILmhKXbmW%^%;WlK6CF-O6>.%O_+09K!b7X[.@Nd8-Ds:.p+>]#,>`,1Ths3@>VrnM7_FtSS?kpf\':Y8VHXN;tEVcE:o00ZBk.97Bk&GTXXUl)s%D>%R#H]l(reu_;?eM#]I]lKb"Y?[T/Qtr]\0_%q[1S?jdo0W(WqhX-V..gI`=ImAi/@7cfrGXr+bIu+_1>H%pScs26^2/=_XZclh%-;%t!h/=jh8"S,nhT2#sGAXDBXc+f2>*prYT'$lHJD\L:ron(!,0(f2l+,QlQSZh4:h8s<Kt^?L8ddG@`Nm1\K0<,-<9gbK;M;:J%kC^qZfpaL&duRl\md/h]*6YIMP'Y>K)(klScBls!J+:B35;Gqu1./QP6&IomY0p4L[9D#'1[r7R=5.XT)dD]Fd$9S+Z/>UKbe,P$%%Pl8qm,d*d"1*f;WG:QuTL@fNW0b!l'6$2,P*tdk*=6Gt!u1&(FHc>:\-R;k!Fh$^c(#K6DU3Xn_csE]l?)XeUme>Bq,R$X"cOu>%;Z?=U`K7il&=.dX-;C#1mp7CDGND6hRB,i_NEgb>*oW0/F>aKj7Vc$7LYC;ebWab'><BqR*cd$k)[XJ_UX"e&6Ct8I$Z#!b=`$L/%UEKA*$$NY:hTE'bFu$N[1a3%mVfB-J[!B;LZ8A.7gn2iC['VU8`bPP?[]i-kSmfoKjhf74.L@`o-#1=r^cD#t@)MAr#qWb0>uI1c%Y/EJ;HWN9@lgC67K_7ZR^R=4k+&:r*\[1=*+jssf\6OqF4*9VF0mHPQKA\]+^lnH]dTgcERtcE>3ubI"P%-/Dd_[UD(-b'\4?^bq%F)Pb>R^pX4]B)O.84YhIM!jQ!49NC/Z!5gdMFSP!WE+$B5qX3XOir->Q<m@Rc(:+8Vom1hoCtEa^)h[:QZiJW>Z!MT\GNKLfmQQ1%H?nhG.eer1O"gGmo<Kehmnk8jRGBmK`D9i"9WN>p?'Pc?9<0V25thDdM4KC6fsi[*Pq-tbN]jm/@qlK>Cf?&\eQKe@+'<#b[GA":%$IQashE8pN>!7A&6Q[62@_#cC]L@^KIE=<Y;a4!Bd`u1r?/nOE^W=)ndi/@tIXZU/0(prt6%tKgjS#)9/uYmG'1UV^$U9Xr]Xn>d%]!cSZ'K`H=brJS/AlGLM.8e3RV7i6l^!adj@p\r85FZAi/=7-Y[`2"la7dUab]M[JDf5_iik#4bO[?$1_^+Y%^OsYAJ"gXf=a^58%/D_'VqJ@t)oJ>FiJ>[8TalP"sBF6"u4Q"6Xr->`7gTR4CEX1!*!H!JW/,Mg#L<u/ZUO6ugIn&c"TF]WKT^d?hAAP9XChKo.f%k*;%I/+X:A>Mkd`UQ7/8*o.%DV4_M`<?[78nm\RWSB0)GbUX?NR@T7qOMm\D2K3ppd]_7clk`gh1KaXM<8O\m5_V!f\7r>2rY-:0D26n%(RU3M1:Qta;FLCJ/,"7^QWc3_"H8FS()J9g]KT#b;nLj,3]6sBh7dj7dp9PQboIif^?<FoVcdNHA=NT(""Ln5#4_5F@+WQ!$b3<9%>99<8]tM:(mkIkq=VON[brAa9'LflPNklU3k+1.?$Mmu_h7ZIH*qJDjqE"A6>c?DQQS,d)RAF\578Bg\P*b>U'TojIZ`j*BmtLDe%:4)B<gR#"86'cpHq28K(/%ju0l\PtX60H5b?#;g0LF;157H!rM!U1pSSVkC!;(Q6Z(0`Q5cL/3jO1dq)f2'TEP364m/B2^a<r*[*%B5&gd[_<>P%29c"(D(Q)I]7'%geaf?$M8^(P?]R_5`SjrE\AbRWI?MFWDlo4GF?1,Nde3:mn7S2QPn11Zab">?[^.K^X#eP,<.1e%$Zti)*@SAh^3l"mhhW)aD-MA!\'OF`ZAd;da+a*\jJ[(89b?6f_Aq;jhqJ@aB,a82iHn$8Oqo(7cD*P0Si56EZYBP$ol@GO+f!sS%T3n\^%VBI/)$?^URq/_ZCM?ot'I$'&RLQ]3):hnuiU3P-X%A@&Ep1S!I]\M(9F=4D9=t.Iq^Hr<\!/X[*utAabZFYI:T;f+]#<'u%#O@*,eZ1PH/ioM#?F$PI/"@^7Qe0(ug@\3DL9(JjZb'r9]ph9b4&0jXp"MLuDRCVfeddA6@fq4=)gr4imr;cU2cA:Dl>@1n8D!J'%gqh-<dbJo=2kR:<=0(O!_)8X&Q8W@ld)8-nHYpY5l$h]:et6FMF=GBrK@a60%m(@:dSa7"(kYb[d*_L^cMHR4L261CaP>h!,6e'q%Z*BM>J:Y?mWri=O2ZR9E.@Mn@llNQoj%/^."oaBj&*bfa.<^&.j_&%j`+uD'bk!L>*>n)`\s"U2B'V8IMngtrbE_fA0ct2Ql9..k%>pdB8B[24?Ip(VsOjaS-s50-6fg_[)N5DL`6.Bd3-XRC"b?QP)^Vo/]UK;@m`3f24,`^omdsqP)MN3`pfi$SY6;+r-6,2bui6o*#%.:(T&b,b/]YHDLg)lJRYF+,MX?W)Vi^OX?e@cIId&=;Y2>AoL=04$B9Lso6,pKMQEoG3fCB5i81VX^+Eog(876?ssfA^"lG6Lot+%F,AqN`KdRd%h=!eEe6i`*61;Rok<t:`GD'JdJAW>rAXPi3k\haA\`0:IG:7'fG&iRDR]8AeB6nWq`;&Omqp@g&rU.jJS9JdQruJ\%j(DD"lgX.//O$Mh?RsF'*oH$j@`0ui,W9S9Eqcd`Qd2!OeNJZ'jkaC5rn*r$.67VNUj4=0,a*ApN3C1VZNtGIVmEd6:9V*%%X&?X%mT+(@j#UM.m[1&&kM_HBh%ag#L!B7%Kj7Ao/L#0a?D8Pc73%h'A;RuAaTV9HB((sh?$s=@%tn*!5egm'fgAr?=RL$ahjaX[)aJW0%EA9s8DU%<[<T8jQC7!YGgO"N:G8iqmiARU]o;LF.XEUj/%uo'^O^O%R$09"")VEPWjG)MOO%,fdfg8%d25o;UbV&A&l(_4-ASZL%%_'#6&.3i+4>Afuq!Q?+P?].C_Q;0Ag,i=sCKO^oUm+n(6VgEKEEoPC.'KH1`[i7-th79T@1ZqNZ2]&sSZM+T!SZ]%qQjoBWP@0t8%cYkV[cF>X=2ai4!5'H:7[SUPu\Vm9tVbW(8krNI!$M.`pQCWr(("6m+:4EheF*EtrSaOL@(AH#B)lHG>?64P&XP3'pihC9jl1JAX%.X)4mZCJDLl>>^H3]KEr/e-*?r1;S(cE9F1N"h-X/>]8(Jnq:+`p%<cX](qbZk0cgl803+[Y5(C>%D?X>C3:(oHWbSkoM)*hb)1b%DTkS^MqgWhmSn?dc/!R>5KLoDFSl'bWRI,loa<]Pft"ZfrZ11O.?ZC/m6+<+gc0@#n8+f?8!oLq\PoCo6)l$:G.MX?.dkHML*?`0%1:JI4HTlZ:4KBj]7-#q><J4,X[]S$HipO-BhV2/^kVO!9]1p#S'e^8+o+,aC9;cu<`6gbEUJ@-\0\q)&kEsIOj4#Mte?"LIVasup%\s5?O*Ts';DOis'ViB0"F/OeOGDG^ue?O-']u]"FO(llG=1QeT?075gl1CPj9)HRRQVRFkimI0W(Q(33H:@JkY+:lsPJjM+Vu+E_%e)H[q;s6[7p5!(gMU%`.4*Goj]391@oK"!uT6'>*:>DshK&h-qojhG-3E'(@3d1@%Siq8aoPL_8G[ThOoqHR*YY@5CV&AGk:KM/_%b95X^48hJ&6sVmF]mX'Za;W_4f8Z2d:8`()L,rTX@%(#/B4X!/;1VKohX*(t:U[FU:>bhX\PlMsbMBlsF3Ta#.;8VBSqXsQB.Iaq%098/"*TY^J,'$jO^48t&\opd=-Z&pp;X(X!]j_Y/&Rt`B@2eF9[ru-o&*H>EIp#%-`WlZUA7e\tEjsD0TeCTs>0IP3Ru,e*dciZ8%(pe?G><4/]idot#4?>6A9(c@D<45joSIu$l?I9:WaNp@2`\MX_0OlJLVitK8[-CfCp2u,LpM92(l,nJ!pc>(e_!dR-Y,t"^/p(@5%')@OPWqNjQ)O)pG4+$_UpT";qIrnP6p@qhi;/uV^4O\Q&BA_r81EUi@HJ3lGl2J)8`Uh+$!K%K.f6kTOFm24RFoC%YX\tTcgV%`k%a]Fha]Cu3>c=k/H9=F<gom6URhW$-`&2blun9sa_kPk-,H,&A<p$jV[C4%%tfMe$FEGtgJng(eq"m*J+jn)QL(s-%%"S^K:n_0i:%f*otZmU&buBZYm9jQZQq]'ItUKspX?qK6CY-(EDu5'I2Z2D]iqoqm-jgL]7N7HBogYAKa6L;_;imY!3k?IDl$Bql..l+!Ps+5nE=%rq>A[>PAX$2G:S>17LiT>j(7fK48_FV-$@/Aet74g[<`iU:6LAgcQ:NLA(lPjq\CXAo`Fb'(sN?&kq>%*[LUUKgk]XAuWboZ^>3K%+[=##l.-if#d=i.Z=l[UcE5b@9,sj5Mr4croT:%XbH&)1e1!r\2:Am2g!=[&Par1NOJh\`FDL.5p;+.80Q#ROH`+s2Z)hJO\&d$D%d5p*#Qoj,k=Yb3D'^*a%4\J\M:9+a1F%3(c=WmTKn!:D(RX@QTJ&AfqB'I^Ve(K<a\(G3ADIr.kV,Qjg_>=2jdcp/*CSu^+m-["%%MQ:Rl]6"CW!SA*<>Gi9,Vi'#;+n3V4Q$]FMVQ_\LH1Z5Zs"1+:9?We2qs:rEUpC1.7,l8X>2$T[.P54AbE*MgLr:]Y"s[3-13JP[%bSIs?PGK&(M1%c-g)fb;>0Y7\1&)jP7lIfGe_PA09(`$A._@CE$&G$T>00=k'4hUA>7SU]noE&7_$&S$T#%$,&_Z=805DRV7^1Tt%Bfp#9D66EM`uKF-Tgp(J,8&tV<]aJ:W>;fK`>hg.l7gSUGGUHKXsX`?PB[g`&bKR.Vp;SHA.C<'c]Q*Bigrn1b)#ba+`HHelAsJ*%a_=S;+VhS[6^f6$0?I5dj'K.heX27UZ;VFa\"iadDka9sKU\Lj<SR!FrIQ`!kLU6*$k/]s6U1M2DfO?Brm:"9Ae=Lq[FqHt^^h<d%J`]afO>tK-+oW1ZJe6+R0q]eTmb>,k0W`5GOnm&cXqTVYOe=4?4c[?=2S,A+Au5EHB0;\Oe?X(2,nE9mS*7sYCb8j[:YlXG)Xm"e%#Fpe.eW,?6qLC.#7'h@Y?Vl]e6/(F_2na-ED'.#DIh?5gnZ#>Ga8H"+/"cC^@m>%u/@Z_2;MiFSTGF#>6>_6'I8J[)4$WF(:#VeB%"dt.)JQSc1m:okg0e]VO%i<aKG?F5-LKr&XOBM-a,D=i4o/bLVd'Cq5d#SQ7^C2acV`[g$B5`D9`^U_29.R7TX.IU)eRc(4SBt)6%Ji_2m13`YIMoo*eKd,s#Cj[VSm]K[fY$b?,DHn"K<>fAJn'-'5qV9f)r'Qa#o$3&&=f<hg#5UIJ5G8[#6;>krJ[J>lOFd8@aPV1I%Z$2TQ(g385Ea5iclnRUZAE$TmfedM!K45m#U0*;=.G=C#_CVEOZ'-2^%ofb#P098c"_WHQ2\o[N7Z/%/9D,q4'?9smQ!s/XI4)E*%]f=Y?T%;An>ttnCCY>e4eU90m6&Dpc\oL:_%G$W&60G6u:G6eji1iEqq=?N.Hu4=2of#&ijSW/)X;#,L`Q#>'XqZLYp0L5oQLGqs%-kJ(AS.m3g7knbK'Ve0nR&ZJ&Ksj&+\A%;AeO:YMm?N?DXCE`$;g"<E:'Rhi*:%If?lRbD>kt[<ou'AZb22i>5Y"u6O*+];R@@Mn%'^D@=/D*GPCl`j?LCf1&92&FG_A/DM+&9foLrI1teqNQh*!YE?\@-rJfp4<+Rr(185YR]Jmd^,JL;IbFf0Mjmae<L/V1NMVFeu9$%*&CJ9DF\ag@.F,qBs`rWQQGQu<,<DlYQdqekJ"!<mHe"l$t:G(i:>NKGLc4Yril9]>QoZGmpc\)YSDQ8ZBG9-Z!e]#d=q,K7rMb"%Ng4l-M<I4q='pr'?aVMpr4]hC2^Ek7dnhfS6uDJm-9s]2`@$GKh_W-,RV+?;Yo&G=&Af\.(5k7-#%2Dn^=Y>hd'^,<4jUV7r_AnX%F@hLS1_6Z=5"$rQSmRE$]8e3P$0"o(fL)siJUi<5XHV^`*`t#hiD=$Y#&4pVF:3%I%E,E84i84"0"0k:*qZQej\Q6Qn$L>kFcOmq%`dJ?Xc!?:<:FP3iR+ba9%O22;*Nqae$rFth@cJ^@/<L.;.@h;4V;$c]@V0-([f[FFRbkb`RIfARs$bI%o[oAu<J-TniqD+%,"CA=%aV#X_D/FBDBckJY&9j[,CLe8SKZ(^LCRlOcH;CHk:^G`SSso]c7GK,X0MO@SD7!^S!0DmD75,#-Dp'13-p"i&4GRFiU<P1Rq2KHl%b`h?ZfR/I-nB-hC_A'II3<5#Im).@s#h3#oLL2apXU*QkDe,8`;]KhA_DZ1CQR@=3F+n,].C;DJ7Bk`YEhF'[m;.gbBB5Tj)9SW/%drRt[BKd/52L^^f6tO(#&Jdmk]MY03M9=i7S7;q++^A:3?3hB&*d*+dfM?M?:D)=TpfpBnCcRX+@:%.^W2E%qOp33NPW;8kI>nE7%,S4nHGO`<lRcA:.G2Q39n.H0q*VDc3IkcU$dGVpqbfH*uc/g>dc/=#;[kUE1"D(E(3NY#C3.WBEDCO8sN%WKh'MY=dED,oSbIOm=%j(o**-d9bd<]1H\fXS8QdPeGSO/8+-KDt!?@fmM<bgl,uHPADB4%0,_l6@0d2]!#Rqf\s^rk?.77DNSA0r(;JF^jP3_h5S]K?;>=%Wc^$+37a2B+I!EaS:F*PSDl4X*%[H1G;RSMO%_XJ?7*3'=Kk'AMY6n7>oPu?%r+H[$g^kTH[JAE,t@S&Z62VSqE>rB^,GUJ9bG7o%L;IbP=S=KAbK]]>m!G*W#@/0OM]k&dp-#Po"#qOXpLYhB0(_76LB5G1hn/,>[p:%2)d[#f6Z67Dh;eC;'Q_WU2n6nj>]l`K.6Vl;%[%[:8(5=D[K*$1BQCUG8aNVRZ(t(!FObHQRmM;Y8gS"lWG6>'N%#/leD0&YWJA&K`d=[8B)]OFa-l0n7I-tCq]_X'7a-[NLL:Bb;%3l&j"frp&pH'k]4VP[WNQ+Jr^,kk4)N[NV?>Y<%%Uh]SUcE?t<8\+.!"<:r)-)Tb7=Dl0(g(o2J[sR-pY&3b!BKQliEYg6tXN`$U%`T7dXR`bibiEI1eMi!#1'+c3>=NcS@hQF'la`U%nk@&bk94;(j/^Qm*ER(/0-!QD1h:K0l?/_e#MX2U7RA5/mC%HV7*'3Ns3ns$2%6g)gAB@&(h]VFZ:H"YLGq3>I2U%?R&ZXsRTT0qe45o5E;-\ou/K5Mf9E6'"[mgM7=Q=J%1o?O!JbSD0NLX%u6c>neMKH*&A$p*]L%UAEUU3HW"4Q)!Nhfa]8<l>,bqr,R+imI0b;m5jtMXP;C1D+I\ZjuXu.86PD/U,e-VkLqPd#e&"o]&PdZlO`=RVj!$WS$QmWldTWG%3%R**^!E,"l/],tN\\eZMLP&.&W?oI$*W!emdZ:BT)?lB.JW`%N-JpZiSpcRP]?kgWrPPs%E[jRT64cLS*3%u.o1U#Ou2?62ENPC%J^_%-Hf(D?'/]"KPdcKML[84"6d`BJ);Mp9OAFLG:qO\;-1X>R'FAju`%BZeBB)40RI'&P0uf%AU1C`q6WLUrD,6WCT.o[P%c2)Z%dn7or+1T/VBrjh/Q;n=D@RLJ*5G&og4;;U,Y=!sGcg@!QKUZEhnkCkk;t"$^&m!r7YV(H.*X;dd!b^(Y1r^6Cf4FMWW\Y];!jK8@%95J[X@'DaI#IDTrG(&uWXB-2H.9bgq52I[e"YJOY7V\CbUnd;cI":9E1o*.`+W43kRm5Le5&1;MlY6Wrq*P`fc^]2qriGO6kJSdW%AH6,p[ii22E]ThOJ9g%(&7f$:Vi6UESf'=M.H[lM&tEDhM&$Lk>N!!"oe)m$[:IToDOuFtNm<%&gG5U94(es>bjGPL03c^+^gUTO%\*\F,L`+.a%4V>HOj9AapNc)-kg7W3T!u&(m3[(3;"s='R-q,k)h>b'"<KAdRMP%L?mF!Z]#X!B::_Kli`;8_RDVjQRm6B=P69!^%o@W00A]abK2n(r,QTa8!?Tqi:Zm-Ub3e-S@<hsAgQ.:n:ch-b61Q7UcPCDSV*bUa!!sYQMqckuHY0VaR@un<ZSNT[?=<NX]a5D4.%rei:tH7OoKd)j?K$UoZ$GD=;"$Uk++.Tf).+-IquWt$UU7)i_-p,c8DTG(?o`l1TV7V(_.r[hQ<a;b>?aQPQX46Cq8NZ,?>*gf'J%+jtGUF$Ld!i5I<&dW=R&aMf<"1]5DX_8m3+P_S<;GR/Jbd_V"W)-]Q[8jaOT+sUa`=X,\>GMN!+-5e3l-PUP^luM$TSeEM4#N;t3%f!FP5DI5k\:=J,<b@&N<NLl>YLjP<$FQU`jCM=lNHuGCTOk7mRUSjfr*SHW$MO5o9m<f-(kec9S1nPaWF,kYcfIO.Ci6\R#FlAfk%(\I(jTU1<;K9\d_HPQ_2L;R3:R)ddQ%f<1ns82Z^p<%@GiI((Z)cJqjZBo+JL`:P%>jsU/9Knuq$!!532Vrhk;,4(LkJMRVUlI)M%%XEH^a9;7_LU0TG2diEC_s+XF@&@ZIQOi8"#(FelE.aalmub=-o&9L&l`mm@Z30h9&">41_O3raD2FG%`cWX!dVtsOiVb85f7*HT%dgKVuAOpmZ"pM\N1ubnY1*#`kX:RRc&T[4qrrp6Tgrf6%Mc<HSZS8*?2QbmbSo<A9C^=TQ-?M:;JB*C1c8<&f3/u@I`c3h<#).@@%(E6[@*DI#YN?``[ksenJpcsb@Nm<@bMN%ptnQlqi5nY?s1:[sd;6RQmU%lZ:n4\04R+o'MgJ&A'ETooI.tLQTf9)+CD7alA2'_eQ%I4Q88jK-ZR.ejm\jK.0U*$HPlS7QZ1:p5gW@91<;](%ZpY/cchH9J-aeE\i#UgB*.,PBdT)JG>TLQT>`SM8eUd$=bA%YouIZ8l`;%k\ptfb/Lsa<a`G8D9&+QVr4lDU;b-;$9,n/cpOVGl0h\7!ZP2jS/f$1pYJD6Klcl:a.<Y$'NH!".\*4`XeqeA.NG$gBNubJQs1Tt%7X/GWqqMJGF;qGSQIq98W]A<3!#sD)'.A2:?"5i0)^ZNeYkF56,Ve$@pULsYopT8e2YsPRdL2old#^pO_KmCMa;Is0HdS=&NltRr%!Tg^rWr"ObCRm]9XBn'OB4>TOBdS#=kL"A5=nLJ9bj+N?')JjhZVlW%bcKqZZKMO>;Nma)VfT[4@.h"lcE(jTBurMD1=@muXX->k%RAJJZkIe-\f`eSBio2\R%(hc6lK-ft;g*'HZJE$796Rr=aKY!U(4LR@f[W`SY+72,#L=-o:92qS4*rkdVJ,8EQL$O(.N1Y$ScH4l%52XjE[:e,H9=M'p!eE;d1[Ko!:Rnq:._j#JdA3Aho$0?Rm(/.&Vn8uoY)H*\hr>BFgoK1VHuZ>bNtu"_"b,]BDU#]N3j\Dp.p6Ia%jL+F;hpdKbb2--fY4Z>^f4mMBRk8!'m+hJ:roV_>?Lh*%GPXJ9.-]q=D)4Vg/Y)%_Q%k",q^Y657rAS";R9Q2%XUV<3PTA0#PGLZ%4'$!P"nNRdJ+QCBK*.XSE_l)-R_ZXMY/^!pS<NV]g.N@596+5Hn&PqWL!/EsOn:gJKAK%$G'1>8cLlItq_klQjBN3klde%=b2Bl"%M^jAS3Lrr8O0s8J21RoeKP_fVBVJuVV8VJ^Fl.CB*)8?VgM*\<2o]YpqZp'SH/ps/5W50s+/!lpj3+<@$@#_1iZ(TLSQ!V_iTA5o%Zg!tiJCr0rNh/u.PY:1_f?Ng<FSJ`!;6oF+5`qht&E8pKkEJX&I7A4DCc\JB)C9,]c>5Nh^Y,V;a,s)/,*jiNSb?A[bGK@'V/sft%)*XP8n>ab-O,Z5jc=qG2It(_VFABAg"1njaB@Am&d`E,6XP%\jo-a.Q=L77>/>Y(4dlDu"h;KA8S'D>)s-pkkZg#J!0jgD(#fVPA%VK8H`R'Z%IEp9fLXK]%qSE+-mm+HJU\TB"PB,lP9e%+Y#N&-sK.JM$H]oFP2cKEd30kJfoc&chZN\-_1e#s`GS'GO,I>lj$:0d44%#EapAMM@?(1dd_&CctWe4a,"gWrojRnEM?%0*u$qAc`5Xf>OT"4`T&n\esG?3[]R#bISPY]fHtq_Y:`)>WOIJ%`u)EKL7,:_npC"%%)-*EfR:`!;tpbm(BmQXgAA!Fl]?(Qfp%oa2(1Zs^h63,KRlEtZa8PNNgL&F$"Fa=<f^q#BD73Y;O--g-!hF)ZtJf+MKqF.(W7SC%I-/`;SImgO#CP[Zjg?Z*6[(mE4W5k6r;#CrceNf9:Gs9*)^.pIH00#*La(D+G9O%t.&/tIVk8ZAgGhB=2tCAf`TfOl`smc*$u>%o%6*Plb(A.;HLQVLL2n9t'`=?17!!bf,alBHhJ4)H!jZV*rCRB/tkV`95Bls&3^*+Ss_o[H%a\"X:4a%\+&=IA+UGTjg05UIG'+*!C%2Fgnq.rEBICHP%@dK<db0$rkTZfW*#6NOE2SVB1@@\/>F:@f$gEScGgaF%523Oq(!B6,UUNspf*h`:7iQC)VlLE)<@S\uhEf?#^A%Fs0\%/89s/=M$DgpMNT5]G2!.@HO&40JZBqR)7(K]<%g8bY*)0_KmTMj@FSD1?_doRsT_72=Koq][5R(Q0k0siA+=s^%pUQGO!0T%%-qV1]GD!gDskYJZ!T)ghg7J-k$nC4_YmHsjZ#/BALM&u,s[1u0Tj39FGC:Fq/NM[&fI"alh37[r)+D[fPp=b"j4d,[XJ&i9K)Ni%i=7NUEmtonm(%%:S.k[O]4%i3?n^;\Aj-^NL))0c[sB$5r:5\`?cj<>T?)7+c^bM8J)S[M_I1)cNW6lO&@\+'m&(5Mb;&qUf_,"P%CTh;*a20LI-e;UNHe#WE4[6T?E^,g<o.`.X`*.]N'[6u0k":1<3.a.%)ctsVSlc@s4R[t3QJ[^obB)Qs<fbf[-WMkLR%?BlC^=VO%ENN%?K+.j^He4&(EKZ]j>&5dJH#5T3'%:pB4tf914=:7&GM>KPNr*l&.no=K\$T%l*KOP61O0]Ci)dJqY+%[J9PQ5PK,X\4I?U#)%87c[VA+gmDqaJOm)2@ELH/m(f]lhJ:2*?ei3Ned>2t',?VB$Uu?JKU,mADjs\sc7)k6cb40J#!g)s5^#_fb10no14JoXqj<]gt)J%k8q$ie8aQZ)?r8a?@11E4@>jsOXO(@B)-D:P`t`9>$l8]osn7p=Y?ORo\5e&gNWF_,SE%SS>pflV)S#([-3[83JFaB2eJfPO2%O:%&ql[Een=CdkG>Uid95=7MjENZhTVS$2)Xd;lc$E4QtrTf+iBm4FW-,c&)FYWok1`j]I/b8GA!*,SaPohDG?6DHQ(br4557(925$!%LJ+3,>aRS&;q$8+EgGa3j3fLg0DW2lF1p@P9>YbrqucN(&/Hj0ci&4GF%\K'k9=i$X0Ps-JlARfB"^lG@a,3\22Ute@*Z1/R>3fr%dZ(o?Ei5cCDC_me$as2,X;R56Q[dI^0`+k/HD*kgFZLo05b(!nSAD/Uks)pO9^rd-,nHB6)XB`UeYl2bHFZhL(Co0Ep7d,_>!6)'%g@g.'@](H`@b)$6AB6q2a*b:`j""`OYC-/[(o(qi.D%_1WD.r(<k2DFnpTO+4pOc$,=t.u1WKT2N[Gu5l*T[OFoung>-Oc%*XQ4)%IT^@cf$jJq2h&8LHVfThbE5L-r%'j/0W958U,rn-EoOu[@p:X]'BA'gVfQ%Qi4="o)f$*f\#ZW^2cJcco,(r\\#]6#QQ]hBq*;bJ%n$ep\o&JE4<jHLR0mm"De3*3*_2OH2Y-piWCM@^_jr\V'S%HBfl8_A#:!sY-$ZN%;BW\iY#W&V6)\FLsPa4ZV#5:],r<:?[]Aa1+%,L_[beQ<GRR(_aFa[[tBkE\OscAtlkgeZ/u$Nq06Y/3-4/r(%GZYm7S$m$OimQ018@#OX:B"+Vl?g5P@,JnQtfH..75*9[Nrim'`%O'IZ'o0%t#%*p.[Z+#/>VUR<$EU08Ko%k`/cnc8QhEQK34-d/6P=)1d`j&E%>nV96(5"c&H[!I*ZLLI7ML#9QrI(pn^i$jCmg_fA%^Kd?q'_C"g%"b9)dDeO.d8`[&R.jr%@.*`^9,8YQ1Fr(?crkn/3Ik5@C:Ji1ISimj+*je9^gQ]n@C#t,rd8_dXY6m`blYi.!=VCd%aTBE*!=XsP"c,fI=X+HJ"c/WMB_RXAAH@)oMls[1hH>BoBEk`YGa-PR$GbPEPg?q(IBp;9I[&1<=o>Ztq&H/K@t0`hn"'4C4N]&/%d%9Q+?.6&Cb3'[s)sa8HN]A=oJ!=k&moT?Lb%J>)ghT_-[^._-hn,ROIb2pC<PL8!EfKI(.0"MinF))Mj]t(Q[5$GGjnc-PG>uY$%-P-*WTD,C86er45n?/C-\BHP>1?c?!hQQe7XCSCWMk7-K3Sr1H`4LJnAo`mk[%a#225Wbe[o`N[]jL%'Y$Z^hjTt>O=m$drFb[^#%q?9*W3m>3b:?dT6BAnHVlfYa?a7HI+\"X9+Cou[1l\CUf2MQGS[/;N==8hK*raF^W$bjW8H.U@k*H<&Zn()^]]V5,8a#E9^[b?(U%j*92%47QV6Yo<.<5OW*"cF;.'J(N$$;]@i74l!Yuc5`t"lK=f6MYF9G2^s`W`6mH7o0.+6)K8W0He0oA<nb(S*pg*,\_<>Mht7qB%p[R/6o1Y?Q0kI/@"NUBTNr\Y=NStm.EQ!)"$n+m*<k=VSik'ZrYPK]\5Pi!@hQ_Z/A3B>W\Li!d<BnfgT`FQXH1*[Rb-<,Hoa>et%@/+sEbU9=o?hGB;4h`&"CO3\72ZaqeTHGR$nb*1c>sFDFQ_@d!9m_hCrIWk(1[M`&h@?qG@7GXr:X@p=9JA2JYIG`iVg&*PboHPl%jVZkIo7#5.4R_h9A`;X_a#@0YbBT(d[!2I*.*bu*J^.L\]^(?>%.>#P+6$Qjmpp\)]qj'5olJO9lDoAOE\-FdIbq:)R<IFWHIpKt%D0MS<i:$Mf^ZmaEgsSeL]T\F%^?asHoAlL,3:+8+N^M7.Dnk&hESpF.1^qX4qRPaG#(5%K@:Ds*+;AfY?"YL\n%4&*$*cC8D!6*A%S9!#9n?HUo0u1DMrn4^>Gh:8gF2<6BcRA8Yl29f@Wh8$kbFn>#H*%?NFO]p0f>/tnZV^ATT%0qsY(#BJ,V<l,?,@blHg_^'of.3"%`%A*JMZqiaiN,%oocqnhYWXbpoJ=FC?rfk'A<97R`Qf`]U,H?mjhC,Y@P\Djr,q.J#0Mg?[E>hCm;t7cbgtn9D0.,Qig?.Q252e2%//?KDW3tXTb'IPLoD`P%dP\.a-JL'/*XW(=X)]6qR>OQfB2Lr,!Vm]97<m,B5Ng`rXqd):>82H5FSF6Bn#DqhF([s3`gisP^&J6*%r&6h9jd<ULae.EpX]I-BX1*"S2qLehqnh^]9Ac/Nmr$r?+.rIXgO/hRZ"UkaF8h?5n_:aLbh'lVrF3LtZ[\CHs8;ABq<%UgbNAMr%^OKd35Mc=ih"fmP,P0s;092JCci.kbq3@SB3VMP&Mmq0!^E:5^_38O#55jp<\,X,5T5D>ESnVg"c]::PQ]<*cpr9/*/g%iTm(m=Q%IspX`F%797ft$s>$[4cpp>_M.QFFU)nG\hS?X<WsfX]>S5"MS@,2f/ia0%Z%rlUYApWd\o8PWP[g=r%5:O^!jF7dpg5Q68orW1c&%bq;0LlQ>fhWB\8_)co;mrQSOL:RsXqk1t3<*AgohNqU<XQleOVrqXaPo[J6^6YgJ_T/0Q`qW=fgp@dOmT);m.q2(N8,9o(9q!-B+%4(idWj]dn3Gid(d4&>kTrpb?NhVKWab:]4;kM5ra*aL=toE(u!Fg#]H0*fb?akKmhiGQkXjnd3M++NnLiT"S=^4d9U&+Q:dE2D]0%LX5>"o)klW*:DPY*Z&Nk$uU+_GC"B-K;TLm=6nk`a*W;Cr90VgIQ2KGo[.;QO'hqFK;O2`r;PuP'An5fp@QT8M;nk$9N/HNI/Ak9%:?UX2J)f^PEoM?Bf_?8#B/k,.fcRF&iEDf<-RJ5jS_0k1o<eMPh;6/tmEon9e<R5P]oLKfn'?L^kG@!An*X;aF"SHIHGt;k!Io3#%%MM`II<tY)H[CO?i(p8:00$XhlMgRrRIq(Tj9O]U46n!fh#2Nr_/?pIg82RR)5!F(*kumYpq?\%-`>Q\r#C/(J(WmGf]u$[(s\kh%IcdZN+08M[\TYl!(/Ii3Hs62q5MJ>TP&[DSJ+BB.o7JiiRllnaV2"ASo+>;=dscaS^p.bRcVO?3X`WmTJ+[JZf'gP>m1\bT2ENi^%i**Rum+V4+V)LWpk$.b[ilcZZIQ6kih-\U\:G;ZDhC]1%NatiJC/]J-mPamlm2%j&VV@)*D]"c9fPS4irk#cYDnP\uO1W0fO8cfe%e\t&9E+c^Shjs[2./Cg[Dh%0?ns(;Mp>\bYp\%@CrG]5_dVX5SG4'd`NQF5@KUrkJYIe_$I>7c:e,SN$q:DHIr]7LdbpEI^rIFq=%8*\!iXb35jG7ICjZh+'RD-0&>>JG3;J"T7#ic4t0D8+j#FZdFrF^mQ.g'_egmsk*moGqp%Nc2Jkcel5>/a:=LLNMk+jdj"rhg+tZ%8&oLP4aSLQ[ar(;,P^!%T<#Y#rq"Eiq:tA.?)dDZG<6WbkjIG%q:Co#5<L7l)Pb<24oO%IFdI!;]!?6:l.3c<IpE!!dD*H-E;'4=%iSmAbR`7JMmFZU#kJp/prgdDW^2rE8msik(*otgXj='IREVHXlKTT%gXAh/7gs^HWT/c^>BKYk<f3k#5%j/>ec41>1*e3tSnEI^e%r"OW?%u0r0TqdV!IXD%_ahQ\]npD%%*R*0ja#j%lplWqgcDM1Jb*F!R5q[\&njp!FL)p'\hd!]bdZiIoA;/'8+#L]WHBW:8\BAO!%4(WTpqks>.?U$oWW+!<m&<ab-`dI0K'5IQ)=*HR'B29ajr4kG(qYW_@[A\ebD14Npr8#YJhrSJj[o\$'pM@l&OFof2qkEVcF!'b9%GjclVC&cTS-=8Ws5<Shq["giQo=,Cs8XAeuq^3>Dr9YI`j!h."aE#m]fL?kI-YGCLp=c/-U)NbR4*XEtqYKW@^L)A]*:MSt9AaS.%*.HJKi.[Aa](Vcn,gSB'`bMEs]'3hZ]O,LT4gcQ8^Fq,ndl[*ieO?nlp=AZN[p$*kT&S_42bH5(#:Fa(oB>3+Y?1F?EGG6hGnGua%A\-ppVOs"SZ+&RNGQ+',l0+nc:"4Q<Eg=)&pt6prX%2j<kMt^@>B+:_(Z0]=fu;@XYK%H=JDu1-3S*-2p[=[Cn%ACcD(P&EBrmD0%m)0a3rq3^m\,X2&.40.g^%6>Uk2/?\YK\+73,VLmX%?oqIZ3+Tf"Ppp78c0)5)<2dmOhR3@k[B`-]Xi!mWKO_\CUXe[l;fu;igdd%4?JLg*gRNHIt-(qa/aCoMq%L'#^=Tr^5t`iSZtg84rU0ap"S5>rH<fK05h8sjtK9ra1dMO?<-%PjhJRcW'`<eiRrFIN_0"hZW>/H%AI?.uipZOhGh4QHY^>]6+56ObPH__t`T5);jQ2TP?@)1`1'Qibs*D>4`Z;hl7&Br;SMs18-2I"n+Q9DLWR%49Y#F8Mfb`)Qk,maY%5/.[!iQ"#]A.kJ=](t0P"OqkqrWRC_ioDkQ8'`7U;6+Hu,Gg`MEU$oZiiK/"iq,O3pa9Q2o>1tI*IYmZ[U3Z?8W@WZR]CH)^X+ef%l6oZIJ>Q,7IR+dR3gHVP=)RiNcgV`75CQkL\9n5(bqA?5N8`.2Qgq!&Y'6#bSu_DU>Lu'mh0<i#jEqGkL-Fp'AfeP^1j8e>C$`e(%e(Dt3N'V.$^+PD9G^UJlq=60;HO"1!)LF2qCilr^1L=WB%ip)_9UOG-Ln.IZJUdJh]X3Suk'Zb7gY]u<f3F<+an`(]3r6%9C?M3$%2U@`g?'s7BN;Yh*lWjCPcZ&o3%%D6b5OS=H^-AfVpHRLt-!`Vn(]?f.m_CW/1\Rh)iD0Er0hcKL?C.VGp'W>/<OnrQ(#e;/k7G2#%Heg:Am,h*Qq9pGNV8A8moMnhI0DnNjFgZ[jqr65.?_)]@es.UICu;gK4ah@!p[6?LrW`6d>`BXrNtm?W;WK[d1VB\anu:M&.]hJ(%Tj)M#IP`mq44BeM2!@04<U1Dfjio/fom1q3RqdcEl#HT&s-Gmo.V@HhYdhYGN>I^,+8j4kim4LXI.p#5WXZ0"%!C@,9(0#l*n#Sd%Phpds%.cCED24-p*W#_5bF]Q^cahjfo+1.$2)Ta[_&mskkDT9Lqc)mVIm?YAHM'[->MljEe&ri!2dcGi)`)K>IHgL5m$qa8gi(N;%?c*@nb$I=4"ZH/=@LPDA<'L*6c_iJ+T8RF8hER1\<A!J-a,`ZW^OPBom$uCGB]H>kc[UIZqqPqEcYp$leCcq\2N<nK:e,a(Oeu3O%3"rM>^KPHam_no/n)5keq=@rVrSl6IgHV=Cpt>WGls9VSK>V%kn'&:i@s?B@IrGho-$SAFe['1u>OD(S^%^4ETqgiF;LJ>oOU'KU%h^Uitr:8O'?a&8]kqh\UYO&&qGPg&((V4V[#N#jTX0>:6jn!cM\\A_4M7`]]/hJ@=S"77s^1i#Q]+)=6)r'a[hp>9p)#s0e?U;95%o%l_nF)G]QGOEppI;9\sDjfR2NOK[5\bjeQ0W_@br;)2l^E:iDnb[6E(b_*:ETY3%@b`&4*kcU*SnK(uI!oPZ?HC0uoqgEQqL@"U%4:F3Y(Yb.'kJX9ceD'@T2nsq9HeXR1\b3LoIh)CBgYm\QI"(b/YA`i85#k?_]mAf#YDX=$Sj&+q_7b%+/Y2m^fs<o[RWf-U/Ph.[%fM@0)]RTO_6pht4k2);M7_ek"+1h@$REi.Un]A*ARlMf1,TcmW!6=0n'4N]oc`t7[Zi0(Lj)*(D@op]'*55,\,CD)@)=KrQoZjYt%52?u0rUofpVoZIh2nAM<6,@76r7@Qg,TLq(#Cj8"\%mU"O2[66mc/.pUQ)C4c1(GapO9mLa'4V-DRs?%Yj20DXn(O_n"'M*I*B-<%r2Eed`G7Dm_rgjfVl/a3&L68\!Aar3$[uDHEa_J_O4QQQjCg($>l?<?T$jQla8bV`Tq&IB.P@W9;iKPdq;U'L&"\1FjO^#RIC+.n%d!LOk/q.3qNCQ2r^A?p,K<H?ohkue_hgb@h_5!o4mr%Mtr,VOa%naM4i;Vc/*c*Re2?#Rlif$cs3^;3"L(3Sn):55's/FV!^]*pC%n)(hV+*7&/Ic'(g5JR%&^;2/+_Vo\Q[<KAII+hm)o'l28J"Oa,Rpt+1I,$l*po;$9qpQk_T0%g*Vt3Kcf.WZmn3pdWqZh0*k_k4:%_I%d7B(R`a:d9=%kQC\o7eS-W?L;7toB?1@K>h'O?0c8\5Y=9(da?l`QZ$/XnEo>HIsQ9Lp\)!J^.k6drq+cqSYp*b]Wh#%:[_Sk%Du]giQ#A;M+5XW;pZUD?5JI-jq^-/"^=R],qQEUDmVti4LQ;?eb7iY=Gfq%f-glq1Eanu7GCYS0rI;ik3ZXm\/T9&@apkp*:NVrh%s/nIMBnA/7DrcaPnFiN-J)eakJqSgL]WiNi'X:Gg3-=eB7>f_F6a4)RS!P>maUh2!qqmJZp;ml$NrH4Q&c6*p[eKg('_1`b&rg51%6kATSi9K0a<VnhLO1kG9@i):qF6Tm3)n.qTq,E@4D!.:;So9,Rpqt;$mXFkDqnr<oYLXq*r3UhJ_mchAqs2>@4a68J>F/,WLp]3Z%FNH^oW'%,?=#Td.[m$U7r)A1,lb>^;gR)JE<Y$#b0chf.1i>lf])Cgj5PK0@0*D)@nE=5jnF=@5<msO;em"+UI/Tka-2FWeM>qYW%h<ti42>kc2(VYBJp$jDKfUW,3l_surl5=$/A2C-5I_UdWkH8^+\lo!FWF-q2S2p/V07t@<=T+_9Df)ObpY(=";oED0iJ#;]]6ZqG%0_)DSgCkYZH83Q)e(ua5NfLim2/Vg\E:hAg34[;dep#]$5EauHM&gJVFW^KuG8NdpTP`l$Bpgs%T6N2?Er#=p:OI1tT1easPI'Ge%>WVZ<qpX;8.O'ibkAK'8H"HbGD]I[sI=(XWhJs_+o:27"B0Vq-I(mpXa=a'$FE.8MlYAaOpepCjEt'%]IH#3s*5(^k:Z5[8"5=\q%>F3fGrWU]BS]F.%k4nYPIJUao\&OM`iIfW[H?_C\hg>,eGM1AHqBE*hj)"^ofCI9$]I(,Or=bORVShi@VXr=hp+jfpphNR?&(><n%Nb"]4>O*!1d;5&"P8\g%T7jgh5FI_n^\bp73<^$8qblm*HcsSZ@50bA.s(<9B:K#_WF,#'IAusE&s?fA^L(Vn,p_a5^oJPH1?D,f%s,\#X1,p9V*P3sB`='8eoAin9A$!lQ/f=Hb3hPrcZ[H_5SZu7'NR,?=o:OM(7T#h"TA=e/[Wp?%r9V8W#=S_O^%,1`!R?,eq!`bT%_gtb>6f64<p7qr;KUWKb(ZtS72t(ZQ?[P*%pZAdNRob;'WJ^2V2"p%+f;>eX:]F9.cZem!iRas3Y91G9NST![3iof5E::n7*OKb<%R#,$#qi"n]m8Qh!qu,46XiAUI0A`jeNkS[5p\oK00sG'bK**LmeQ:en0*gq?IhW%YqeHi<bt$*I,ksEmnRV[V3+usGhLEp$T"XfC%A%;4*g].4?G(5!+]/Y3)lX.A2]=<(RQ-Xu#,4?Ji]a'&c\!d"EA,'UYWD.:+W\\Y`pV1(%>Ma`!oY3$B9@';YJ*l.O#Kk.AUW\#1%%^/+c^\ua'cZe76!Mp(UKfn$feClpAA8The%.e7c&TmL2R7fI@eNOi1LOBTa&!@m;QhH,G^G&6S45F4%:#k>,)W3=L1ehI0_#*,H%(LOsi&FlHhMl61!q7UkJ:THCeg9AliR75A,?@V?J=s$M@Df/`9+)Z"jVfR--;m,;j1@84$Cb][0qp`D.ECqJN]:7a?8K(MtI_@Rt%QR?LKM%;8]Vng`p.%fK6nhX[cppWEC0X$q6d4"fJOu$E%2$7:/s#rI'<Dt].>Q8%VB=qto`[oX5Diun_2)XF@d8s#e5ec?49;cAm%pHPnmZ6[paZk*.WlX3M7qBu!QIr6:n4SbW%#QM>WOER"@BHMVYFn"Dj4*To%`Z%.Hp<Jpn5HShI6V!1qjN@d(TDaTOigi^QIfB#f%hVJ3WnDo\eP5dE,J+;E$\#_)a0#mT0!o:J4kW#3jZ7!*S*Z[:fBBS9<VjDnHs7Fp`O7#4-T<3;<IJ`QkN=RX[]t5T:hJ(<M[ro?C%`nY9([m-F6n+9?oiLN>JlXKb+Du\-,UG$LLrho_iYl3Uk#5t0rYk@P;GIPiJ:O);c6YGW![4Z=ZOOD^t6R>l"J+"C=rlL#!PPSCc%gC\=0IB*>6&(qN&D9@c$pu0$6'Pl-?[C)%8SZCN%qmc1o!"Wc4m*NjeD:G2dR5N_F>O,Pk7rUB:df'hqlc<ubs6S_m?[_dmPq?(m%f'\CgiW&Y62-V.EEli4^''iSXgEm)b\&Gpq9MP]DRntio[=l1Z\SdaC\+&,V>O^DDQj<i\_cADE3L[I#T5@Kr'p)5=Dn0DeSZ."V%Ag]hq[18ie)Go9c_'ZlXZk'M25Y)gqMVI!robsA[THmn>qW_>gd^G,jT&Pso&CYf9hqYr_j_FT^/32_5ND!sdm'b"^CE#V+K_b$#%^"n4oG"N/'@[m5@(:])W/5ll-A1N0AUC=%P@0m+!$#QC:ZtX?7j0sFhSq(Zb[8gKOGjD1`$>l6bYsNdFPjn\ZNJ8BKatX!5F;$[/%=Dbj@CZLjgqlWBg*PhN]mHA%";!TKS&F""rg)"d]HG:nH#@GVu2nE_aDY#oXNm+\?bu2d_U#8P]I"Z/G]/CE<eFluuo((]ZV`C1q%n+,3ZGWo&H`H^*L,s-=eF5,^RU&Q)nGlrDqm@`j*4Ttm8D0uj1-oJm$k&e."Z2O><8/j0X,I^k2LB4>#7+*0kYk>TpYbsd]fM-5T%%;OX$aLJT1cAa`fT;3!jj:Km:1n_Bh;JDBF2W6sKgdJ,Yo9eOC6Q7<hQf[Vep^JW/a<kq^)^:KQp^tn`5c4')9D2dfX:$^@;2<lZ%`l;+?4!!nHWNF7-o]s"QHjqiu;N`T,OWDoD=PLErQ#ek,pe5@j]7Np#-q(hU"8<>.:oE89@g>A;-kPQjFP[f=Y6X`\"`-QMZ16oP%LW1Ou1MeOFK+-Ih[^gPhJB@;oO\ej1G!u[OOPTM)Dn&-$`Q%lX`$Sg6/:n6g^su\#(532UaB2[//@LfNg"#nlD(S\+lQf6$:Da;u%l\hE"LM_s&=OPW?HQ8!6F''oCA0\R&#62K^^t`K/KDFH79c.6,_MTc^JC9Xg+k3K/DaN*,Kl`sdJp(F[oA(O--*]WtD?5O_knf:Q%d_BhUJHM@q9df9-AF;\+HhGS]_ohbe^>*/8?3WAi0:"*F:u^%K!IeVN>L2iDakj[E/Dmos/oB?&(E.Yl`lWUNBQ&G?;pB0(HV;6c%aSWF6R+)u>('%9C!Dl,KadXWafEa*DJcQSeM)[L7jOspLj_>_kFqcp8D]>^Bm@%>\ftJ6BV5j^ORn3G5>i_DW+HLF@&A96ND#Ds"%aBkZp@U7?PX3Y%3";018+q(;0Jhc5.c7TM*D.Il3g#ElORg4Q&eRUGZLo'2iKubRb[RACBc6);\SQ(t)f0g>`hr'1-mgqVmMLa6l%cS`g!E7l2.W9kI`7C$=5mA5h.P72")Ua?PD;*1ckSl'0^;#C7!6'lEtI$<"iJgRU#dp=$cUt+0_biD?q'uI5'H/D7(.]ML>hqEN:%VFb*eeb(j*(pY^&6H`4\+HP>^[\R7`4;K3XG@RVVbef)Rd^GJU*X@R9_tVP2Hq6JAj`(r3N]*d#+NWMT[(9]";NuT+>CWr[S4_e0%qBisrbb:._W1Z]c"Hj9a#pW=(Br'FLU[4Xio+YKaI`Wqi7<BEc^IY,0dknM_N^uM(jG[])d('ODrHAN4>?M#6BWMe%Brk0d+Xb);%SX3t],f)D\B%sVX7L(Q!XljrQ_L>bU#J1LoY;k_j".ElVKGq=<,e!q"U`tsf4)FH!9+![u'&(R<R2;"2-FRXdU@>Xq(oD)=4tV[U%J\J;$D*mFA$QqUYg8DFAF*U%-[j<f86p/cq6u9qiScQ-Y!;/IlD\M\$cGo<mRWW-^AckmZ9DXTG%Kd:'<)Q9s81rF'Bo[i?DT\""%"6WN>Ttq2XJfFb*k]i+%h^5]B^N<f:l?Ln`nQ=Jg[_FYl;+>&7"))VZN@_D1o,1c*$]u=ge@&"[WnTCMK[j5n'&-_\&o:Lo)"\RD%a7IH*9^Mm<QA@Pa7YDO<)\A;Y8O!uZ,*saPT-c@&:7%en:eX1g%LNF@A,VX_g2W*$#qN,0:a`C=iPjLF!iT%ejnZ;\>6>e_.pIpt%5Sp#jrcj?\=[`<AfYe6?[`r1r&LRS7:)Hc^g4VI'3qa>f*EMrC^8\)fR.dDbb,]<N9cufRQds;O'`=+4BCW,Z&1d$5J6^R302@Gq%)uHj6BZsn1,ftUl__4((rYo*P@47h?ZE'YpE!,A=)qu"UE%o^Q3b!s24<JqR!uHtA1YmTTq<M!="hL/2^W'5?l1_1&W?/jFl4,D8%$)W9D2R],/8hm>&/5Vi9Cj]M3/4",o#bYmk4C9i1pt[oC&Mm,nVGOOV6-M0%di-]De!WO9E[k28_A!3]N3F<]Tst2u+Z08"hCf9b%5u-F_6;uYF:g<B6K+U"J&0ns46c&i]Q.afOquTtka4eQ!0k.dh=%Cta>tSKLCTLWB)X$1^'+>!T(3+AgRjOIk+Wc7<']X,dSWqPJ%",o0Tdm>iLpI*$+d9(FKH%Y$o8f3RJK=D^'p'sFnDaGN+!r=X=gb=sa!,]cp7H"A[9Su1doq=\`>Y'/?/m1)/C1L\2*CG7b!VO\<%/!-`o1\oNK5NOj8]`o`ZeN9OBLek#Uj32;RSV:P,&%r"f;m/R3Z.G\P_i9,W9\Ec9`Qg3L/t.gj%l3M/\<-K9Q@51T@_%,Q8`2>`%4IJA.a9,*H?-$soB`!Q<cSZ$hBIX7o"ai[A?2W!Y\1SPXhp[04TICXP81c7<D90VH,-NVEZ(Q&\8];G.rqlc^QaP@^>UXtDUldm5%-_%e@;)iW<c7;=8&;@AIp84Tg+6&O2n>VYP6_c'21H'Tu/"3QsNW>"_6f&J?fc"i?)FW8$JPr9:(b))0cO&%r?J':5hjd(M%hMkD%fHU3o&Xh!TqresKe:]`>2$?)*Tl-^H);Kt?BncDtcg<f`hY%#Ln#tLV!0a94ij43)9f<.AEr6E/P.9g>6=[+['4M&uNo[!-k%eq3%(Qr'ai,1@[KLW=rF-FA?UUF0caDi)@r$"VofYe@%D=uO['=[N6[,F!<kQS!R'ZKO<8\!l?gAXp"]MI,\Fh6:&4:>Fp8GHW2FAXhF%`>b\4!DPYpBXe)>RMO@@KoIH5V@+6IF'_QW(#j)#V@-1@JJk<mO'U@4MIF)0T@PF3/uFPX9[grfd<#D^<&[Mf^1j`,X%^tGTVg(1%dfk9A'C@VDZsCTJ2/O.XI#I@nCS@U4C",=@`Ab&-<,DK&=5-05?lQsl];XX0@G3?fn'[6beTOfJfLWU<U-aYnMs6r:)6TaRFA[>Y%DjW0(%//V5+1Lo`1f#1n9ci++^tLnF(B@@5Frh1u8k**'(S2s:1Mmp.g.!*kMt)/J/dA[:klIdNK)N9JL@'T]p0k43E-T4rDS*]&%;tG%&pMX:pdfOY]e*$$>BGrA)35KOc0%prh(`1pq!uag7C_mOo;U1$aU<uT8-;E4uW!Of[DO9kj7p0[FKDMM5@d]\!W'H]RZEI*R%hJ"t7[YkKJC0YQk%IbXKBtJ%TXDtLNJA*2M&)5'P-8QsE``*l&OSs*7L$,m!L:09Ti$>\=5f4$fT^E!c5R2"I!s*)0DdD-`J8-^9%]7KJFkhIHB@+l^HL?:[nYo*ToNO3UG!0-ph@&n<./Y0ef-lRWK]c@85Ub;gdoGl?hh.VVjj=6+]6K]E*'Oh9"rK4b::5@2'P(&QB%[$5"om];FJfpWm%ll'/ai<T.'I#`-8qdY>%1UO-"ZkHJ70j'Alcf7(=eoPBJPk#__CRcVIM+CI[>0jYEgFUpGVO+^">NcE/_/0.X%!,qu11`9,b]LLV7#%0o6oEEqW:u*giLdRWD.WU*p@'&nXG(_ps5he/aa-L51VX.j:K<7^B>UYOJrZ<,0--;W=2KLrqS)Q$[FZB"9%PM%FF&p+F@`ZpF.!%Od!E:o_U0l<G7'N#6lpAiBrPN*o&c;cqqMU6<P@sCjL4]<d[bmnD"W9'aj+9<b(FqNkIHrG2X[T(__A0RNL%bh5!ZQ6tZ<a3RH1i"OhRKYiQoTEM?G.6R3khA8a/jRo%W&p*.e$PX:sLHif_^``!pASs]teYgtDWg,_hBQ&N5'[4rG)[7:$/(=c8%S0&;s?Jq^b[t>l[O%V/A2=`Jn#;`6Mr@7n`;G$#@OF'?fE%=cDVi_EK+9rK)nJMk$.YL$I&&pG,dHmq@gjU$U7]mBXd%h532nG6o%LH[X7PDpL)'hk$S6,@A:38"<ir`061[m3ZWF-2R%d@8QJW2Opj,!s=9q%\sli<QlEZV/M#$rdOn`uA"h0TYqV8E<6ph_mGR!;#uF%"ut%!:t8(Qpq@;*frj]g-PktS0+Ai1egSae%fj^s&Ym1U-IA?C1n^sIPICmk.2ei[CgXpG9ce>)UBhDegA(@I/CI!EAI^X'MT$Xn%Wo+d'EJD]WK,($kQ)%$0_VUW)9LZnSf%ZR@Cl]noUQN#>V20("mK+M?ZGB.LgEmSa9nU=?KFF)cb@_5_%Z#b1?*5Y&O""XLG\s/9%go;Z>O`I57@40&RH&A$-QAgM*-%t@t\3]o%Yq&s'l_R=LnWEFFVCp=7#j8he0JQ[<3WRf]n,bj"$TkIpT';iM7Tb\7Bc3_c2e+/\%aG^rF6@0C2PI5UJ1u&=]0a7>%I2AL"D:SdQ(S3p4(0W(I[!cWY<odKFA0qqKXR433'd>;;C`<N(Lk^)^4Hj2dQgZK9E%=@%ei^A2%@-u%XTtXpN!(?THTtWIO0Rl%8M:lX5%[EK9p7)r!8VYt+HPWbX%jt[`MQdL=BaQLEF<#1L7BLPQquNGNi:DX)+'OA9%HGNIWGcc<%"[-G'/oP5$"=f^6QP\@O!Un&PJE77((st*!'&`T?J-=>b1bsd>ZKV_[(Y%:I[fJ@>'kj+!qb@b*d?@e"CkR^'-E*\l1Bc]WV8S<g%EnQ80&dKe@*/k=V/BiY*?f4$B>?3Y[NCRrr7Ri0D!!rfBhAm;*:1dQR.#hPP?-+DrqLo;X86oeZ;o3]#5r@ViVV.*b2VhU5N0f&8%R]N>_!I[8ODX/qa+U"AI`jBZ4m_DrCnc5)X9Sr/q#,DHhVJWcZ0i*KPq"E"+epSAh!Q:X7R*mn:\3U4[0M1Z@WQkq\jogDBF$S3+%3M:9+*;t'*EkHa6T4<7S6QKMfAG#kdM_I#].6>:)?&UuZRL4S+E*uB:."LT'*_+?R_mkGtW=]e?[,$Cl?R_l%[H$e(Oo@F![GqRm%#u`nXMti>L]=]<d@rO_mO!=RM)A*e]^OP5es"BHPS":jqBl%O2U)c[:lE6,H(`Z]037%]N^tAa&i,%.YmIOU)J[5?FJE<*4=[:)`%49B0Mq&n(E@l^:KeB;#+BJ++O=iK%rTt/_Te<e'>85Qf`)M,3q%L%N^cG3RJ:$O,OEY^p(aMWh(S\SM!%P9IP1'0E""pCcM4qp>:%1-FQ.n[iY1ZGb"rXjT7jH,Rr/YgpZ(2bO.H1#ll8:^^(j&m[P[&X5>GD*Ws7'od+MGbT8CORN8s`G&r#QT%C'dRmXcAt2!44qf,^%l/H?r&cB'!-#=>nKtV%8c[b/%1apd5ZN9l(r<Sq4gFC:H#L3D?aY.Y?(h(m'j+s2D=-W"4-?sE0/8R:5R&7jD_aE&L9=?N4diM]H%KOIg^R`:I"JSd4MAICaW7[TseZ/1!6]p1nhGs@sj2:=VI%*[WX/,qq@B"!!@0E[cU,9aG+V?<O&@8]Q+_;%BYmY!(E'o"49DAu*u%\"fc?:r6W1'a]Y._HqiYh&u(;0>IkAS'[\1KGZT:AMf+].cdW)#V/SeD7\Kd/lC\lL6i%\]kBOYa:X=AkU8jb*0fCdGZsF_rt=6Y%bH'6-5roJL!?M[BZPLiO>Sh:J?oqb,N_f6oi[BDkVurV86YkRK9j4QNo:9<\;pSl!#KRIW7+l.Ya<&sB8KJ<08DnE:!g_W!15eN,%!DPqCXrSdI!<i1*.GYL__P"t?R&Mf(V\@K6<=@;(#"FYWapXk+=.h\=6l.FO?Q3C+9/MJB05I;OX5[4&U9c\tCOep@!C:-OA;?Hi%GMd";[OEJ&fWto1q+N;-7CZ5?eIDaNc:%ks_(Z;n(YUcJ#"#XTge9]E1%,[T@G1r_@)@TY,XJs]!/Su9D'TZZ/[3[mcp<Y/HQ^a)%")0cQWO.J(Kd2=@$bHr#V1;uCa%bkj*Xon%Z_s#VOO-H/<&rH@)AfkS,U5\c"K2o4\;H(##`WeJAFX2,(28:j=lT0i0^8Y`qc^'Z%&d['0W6GdmfY$cEN473JZXQ8DNY?u"@TWWaKP"D"5fO(((i-@*SVEQ3J3K,4Rp)NM";:k&98CmH+>B-*'f\No!KuXQ3M.e=3>aFb%@//j%_[]F77%V.224LrZOba!DGp;:iKtY:[4"E^P5^o?eQps%]h2N9akjhaC1__VL#aL,+A3YVAr4[brWqf=,!Q*B>dP-_)"GCY[%m?QeQR+c5%Nj@@rL_ee\CqB[AiX<Vs#DA<\BP`D#M5qZUfE)UQE\g`12MQs!0,@=VS&F&@VgdOoC`:#3!\E;:`f_LFj<:4M<LI:p%!DXQ#&QYh:!+&"V)BTIsg"\Q37^c%,k2D!#B0::H7%eP([L3X@/A)'iQ_#l8c<qN(8Su-`XUGOkfOn\r>DXLlCh(FeQ=-`;Z:cFZ%/&;$,G8CZ^AcdB$bOS3@Tcfoa]YId\c4]#EXk.DUHO>f-5Y!E!$pf,(g'e426fC+[,RVdZZ_%6,.>\HpYldVdN>'TMn4@TY2kV1C%JR9Gf%lhhI3&i<Z##8/lcu:+E('J?e7ubKB%tL@2fZm&H(-FTJV-B5q)+pdoK-F!ASIB$d1E>:&KHLH'bo/6J59+`5"^f3FJQ,O1%E8ZPJKdL6F01I,5<LR,W@1dTYENZaT778#+Ll_nCD*'0b-V""DTM[ddq53Zj,*3p4i\58.hh4S&Q=[Pm&N54cTsBZURgqt<#b]t'%S-UM0"L1@H8@P'b1hm&Qf6c/E.#&Pi`f;c$#!sbhf0bdCb9I3<1Wh&lO[W^W-&/9(R:<5IAOHIer#VD4@>+<phuF]>#SH4O-CW-a%KRo(qK@t&C9(3Sg!!E9CDQb+3!2(cLIYg=G0MJH'M\-3p/@8([0Sg2>h0')jBP/d\VeLl.$tP)8X:R`1!9>UB/jg0gBsmP(Jt+Y#%+jr_'WFH?&!"e1R/^a>e)nC93,QqNaE5j$Y)gk4M1DjB'k#fD-a12i9?EM,4@M;2AB++ilJ2=V=+TTS;?I'aI2DbO;q%8;\^^!I1%A/#)q`om74Kb.rsb[H>p?o%rZ:Sf4<M_IhK+>i_HB\SEU7?7GqfQ%fe*WU''\]#$miQuA'iNO$tBZ(q'SRq_j;$[8mG*WGK'S>tX%[OmRAh]6O);$\.J'GUWa*ff,/$$,&FV]`W=.eSht3X?WI#@*fJOV7ifYSFY[K`E5rn\$[b!ItQW/l;o0CK5a\1lm`gJt514TY[(,%>a3mG!N&k+DO_;ZJ;+6<V^hnd<W-rg!7WJg[hg60@VqN1#_4,.Ysomu^^If8)MRZ#T=M_@TFA)@C9\9cBTa8Bof5bd:P>.mjtJOk%!&/1uAd\U]<q=>!:]R/aR;jp0%gu0'(..>CRRfrHC-s$1SS$G-[VgsCUE>0?^Mk@'"mT%j94?NS.$dOW9OkFr>_<dn,2,FNFG1=B%&a#ufkc9c;p'CO06=pSkB%AV#Ji(<mE^0nB_"=?;`-NON+b4`g=#&8s^+(%P16)(P6fV/`0+[Zg[eQQs,A7>M5JR2EWYdQa\F#GA%S^!-JI%riuC3;ab"C?-;2@q+5*I_dYI,r=oVO`j3R`%"gOTs*ARRilhhq$F)_Ee$-*mk6ffRPnE&)]Vf-c31?+hYB@oH\EndOZM$%0PDk;'/d:+P`q'9&2@m<o1$$t$A0Uj0Hgc6I\F"DL'c.+D'Mjl71"KQKIA\5SG=B!LO]C1C"/.mhqbcE/Lb/rZe4n0S^5RU5$:+i%O[#M!M%rnj5`?+@R._0n/o0eiG6<^3A-lK/3sGn!LrFd@7CZ^$Ck1l`!=[#eJ>Qgc5i".LqAk>cJ+mt+p$n#/X+.tD2>o&'m;52]%J./M5OUm*l,7B<\.!=e0i03PI9LM@kMoMTR#sd%!,0tll67r],`71Ce)cL9U@i\FU"M5(O5,DJ8YDm9Jm5&76:_AIeJqLOT=kiq,%$QiRqF\=he3/[d*OnY4iB7.2iFhYmuBP1ZPFinK'9/Lo3?"X)%%):%@IPYJQjLYD37Y6#UmfL<"39$sYmud"cO_'ed?e[,4d'O'P%HsDh?"uMNL#1SiB!2Lg_$5$2k2$$,RIV?"pT\q*3R`R0:H0>A=6(sa$$#:m'K]WOX8>#g2d%o6k6-k`uiTqPp/hn6GU,$ap!&_c[%7]m,LAEC^slS=$_lS=QalS9'sFTK:p'Kt%O,GG'Tk.1P-9Mdi)aE><8PpGllb]Sd3=m1.al#hP<D5Eig\r[m';a"e>gLWW+gLW^?%mF%5o[W/.T#I@\9,eSA6])_CKB_d0*:dpUDYY35lk;LF+4]19tX7/L\+`=NX!R6>;@antk!G%f=0$*Mj3V#3q^k)a3@hWb&D#``)%m_9Q-Ur^E/3n!,5G$8M?1LH(p[jedrCg$@\_#@a#Ed=2urP2uI(T=M\<(=@-XG$\PF7CI`Mb/TfLcBuW.q)?1Zj[259LoD#VF#&,%+D]h4iN`uEeI\f?,#f+Vf&etn<i@EUPR`DN2R%EkdLJ*2Y)l;5<7f.=KR[aT's%K8`1SS9%1Ah!-^"F[EA.uZ+4u16\fSZaTmpGt%_EOLbOW?]#&@5"WKXmF-cA4$B:hbZji1q,d8[LEd-mhPm&H=u7TA2bkqoQ5bJKn\GRIr2t.09m*<K`=a`3]R,[M$Rj#jZ1Jp>S6V%aokP)\,ncUO;JYkXs!Ze$jnd_W>5Ftnl%W#gg]iPJN3L-fa$kiA"Vd=n;\[;`>KiQ-=&X2pd(Me#91mO?L^<A\-^r?DB<anij"0$%-WgkZfpEaJp*PC@obplL89T>2E%O`07_lM60U.GQ&P"#s9Ec1t3,nt!Y8@m((I;?m.L:Z5iBCQNiPI#/71dILX,rMS2`]l&ZWkZl%1uTBOS-ZOTH8)UHLZ/FVFT8"n"@B=M-FNF>a^XJS&I%JLU];7HEB)%fZm.rH%%QXG0n[3!$%6^:2^RF+1-s]%P5[NuF0PtE.K@N*%k@.psq8[EBR:aT++R^VhJ1:Lm`()**bUEX%NE_T(=%Kl*@RbPm07[#,8dIF0EH4nV/d+*9ojf*&k>jl30g=@%/u[fSS)$%,oa)$m%I6^_-T9*gIm+4nE+B<Qu>LS""S`fc)e!;IJ^E>1d1#jd^kVJoP*;5YC*gs#-QrTLiZY'1aA2m,!+TjG4lB&*@RL'^@OBauA0Z'$"%g4)Ni:Q[<Y]`0;Y+Lj%`]`2*m5I57grD-h^r=<Sig4V<O+$e$rO1]rBY,X3MFY9&l:"1p/'c\5C@qk("7eg?-7T.M=Fj`#N0F\73%S^pV8,:nR,bYBV`EldACBH/%u3=tbZ/t2sIb&o/':LH`V".Es('@O7;^.Orf9`)lo(cjABrqQk$$edkM`IdtEWBZdN<B^lmNK>hn%lgd^MLX.48Im;t\CaHpg(ZU[:PFTV6l^(kH$&rnf!VK\;!7a[**Tl?,kJjsX<#7gIQdE'In8\W2(`Q$tQ)bBLTk2thORGKV&2Y&@%.*;Sl83Z2+DU_p1DI[o,OYWbl9H4$r8kL6_E<\*CblQ'_S-`mV%Qh+r%&K:DpP[2;d=pk?b00>,>S\q@T=AjuM=_88Yfer5"9R/&%Sq/610nXH-i?X'b47Ru<*_u8S-l:ma_Z<S+*GILnpW15985I)gY6e*1:Vo]%1kWl&R=kYjiRI<f3#J-;Nn]b:!+\K)cQjJ?(RCqi%KTd84$7gcViG^27@\>RbViad0Ji8Q5S@0Fa=K<h.,adRLZZ#n5"Om&qSE(:P-.L*h)us-DF.HJ>1hkD`VU<tCOR'<WOG:ZV63qa1%_r3A9Z=Mp%[V3PG=ZBMeCF"[c=Z?^bqa(/URYE$iOmP]W8b<LgR<>ics*)R%GgbX^'og8"T2O[k.l?@BDf?WqdN71s0^sT4LRs,c%g-EsYbeX<Z6OY1E#8?)od&H3d$t/5U9Ls5DfF.$V4U6b+(aWHnF)Wh%G0ZG:K7i]_P,:,-\Z+4/PT`j<%Y"b1#g.G&!LY&d'g[g-%!i&RYbtp&ZpCIl*gS3U3PU.TV[%X1L"VPSXJgoHH!&ShWf'rb-BEDR*2/4@&,W@^e;%1uJ[XW*50;5HNqF(UBCFlNCSC$jU1O)bT%;aC87#6+CR7Yn43e-lpG&AB#e>(mP*iXm_%Sj>KIPB^nr/??dK^kG4H9>YM<NC6r049?M,Ko2!dR'uJGmmM%@H].rJ*Q1CmZ^d6\%]4GJ$D2KXea2q(oPa=m\:m:Y35*Qrc>]Hr]'[r2pA5-UlX)qS8[@#o`8*#/`7O1Q7Ad;^5*2[X<"3r5:"RSPXZpf"JVOaAG62Wc8%%3_59c&?RE!>$'!&E@XCOH2njZ'S05O!)G%90-[F3-V./L+@mAE[N,WHon^E5Xqd4$0755Z3`6q?7S:&EY/2gB\8Sj..@Bd*"jcG%$RG"fZj/CN)s5A(C^81eWtP6/cbN^5<ji?&+P%qpVUnI]*gX4,+/ZGSKg8gtIfUQTSX9CN[RJhiLDjMfE"r0<go4*YTFdcN&*k#K%EOT@q$kD2]:uN82BPS3L'm#r8M,le5"CrF@&a;fXJR5J_!'$87RpiDKGA;(*J8=^1Fh*OZ`U)6Sd4*BAcu","'<9.rHm8//NBt;?%To^9dYU8fdh[.@gOA&^W6FY@2['H_9,#eC!Gs40hkm>0t2,B5-i<#"U^*sghM)bj1Jn9^l?l?!Vp^etgP$Ksl2ce/*;m8[+m,4d.%eopJi$#r,-4#0UnLa9G=ho^VL?l>`8;2hXib<>b_:_+d;D;p9W)%gSOAr/MJd7>m^.&$g2P%BEG&T^;(:6CS8FJnWiLjW<89+2BZ%MaOqk-eP7db4s1L\6P[Z9BqHVLie?O:]0Q_=/K2ia6HAloN:'iXWB=Gh&$eBKmkE6N+fFeF3d43JRh#OSP/Hm8AYuIr;m6uB,QDP%!SQJLSAPIR=c30R`)uU?'?L=K)+2K7WVH]oT>cbNXMke_TLhG-M'TFsp8V0rC=;?'O^oumn:uj2!7O?aTuBFJTl+*WrH@N(Gk\Sl%O7@?CrqM)M9DV^B4)dH+^\&I+#b"s/F.X4D'3</AZFi@uB%JLX@g-qTBiOsMFO7)e50(WAcF\(P=!@K`-uBthZ1[KCLRuV)!YCRq%eVsV?72B:.KYo`&Gh&K!"0/Q6XiUu@!!*9W<9K%4"JF,ecJVY;GVqHO&aquA,&@:9#WIZFjodqdB*&'oP@V-[6?s4I-mT'T>PQI5%(Z_M;<=hElF(<tO]\nldO,28@;C**l+q#=_bDbn/"R$M/C/-isnJXsP!D%&t1k)a[.t0FO&V(I57Db=cM5.bl8E_],T4#K)>o!/U%6APauA8.50c)j\o6()kJ4GEpH7MFMOAt8@Y0<0SD2'>jQa&NOE-1O&A)%s"WDA*!b),ajKE[?@;GU70)mE>l=NXB>*[MHBD*<D&)%i./1L"2UR\#8&]rI^e"h'=9n)W3G\9,S!@JA4n.(b]qkR:%=^\DA-[lo7ks,eD%6<?#Pp7aZtD9\7bp(J5.WsD\E0<:AB6C@tJRS%/5$Jj15+TQ2?t!-`qD@dGn&s=6#*-`,&a':NKOK?H:5k1GW#"QdB]SlXoN44glL7(au1:e#U)#jm(hPl"E`V:!@2^f5j!RnS_Fq0%2@0j<gkUE5=TB<s1Q]NWeI2G25[7cK]P"T;ap,FG=FJqT!(,du"$YiQ'U5b9$mi]K-B0LtJ1t%2KrY6iU4JJ=&BpVM+a*m*+iHL9%;1tsnI[Urapl%WJ\&>S.d`<S*-=s1T+cSUs+,P?#O*L!nUdQLRD-2f43BpMJ,R=U1;_Nh8cpNU/.>Q?r#UN3,kigc_[iiYRZ/V$2%_a;d$N8Sl8k6DQlJ"c^'C=c%H-?9nf"lVHETYnTnM)tD[=FrmGJaH;AINosMPme5b9dTp?'^S"$51C\TZpl#^#d)uqRf\'i:'NC3%$VNEpCTR@N#\6U@F)K&dJ05m;9?JnWiYq`B)H$j6d#8XWh_&aqr4>,$a'%Jl_gVk;cjO6V'kOl<>[qt>4c).<1tYYmXp?L#&4Tu2%dRIQHS;9up#ZM*YATg.c&B/jMBP_ArM?JJFhR[,u2,9Z;Q*Z!?n1$oe+<2=sP&dfVb6LF'Xq`2P07\^\1h>(RdABM64Ne;9bMQ0s%.7GY""Ho"X0??r?2NgR3iSD<<Mu[o;d^W5LHUdOX@6i8<6U;P)!5h8T8%6l=agF&Wb]"#SR7JGkc;VU#ZVd$?D`&f6\_]%SO(9%$%#[HUTE@gC4JeqHlYS[oAT(J5CJ/IimU+WHuj979('e)[N35Hkd<bRN6#E,0mB^Pb]5TbBZ\f5,+4';pc3\'uN;7C6Kj_fT;%OL#l%BZ+X&-jZ,uCs>9Y&#W^omt;KVg9(8GQ?nKY$4-\<Qt-o[k<*4g6ad1&`h70"_`L/0d]GgkL.\eOYSG7T(2f1$q_)(_4@[,L'5eO^%7KGb?E!H,>RmP:lJ\eQ1r78YGlqCrKct%\aDPR-;1f=BQb2D%e@;cp<#V_AA0sL1N3'V@#ar/Sr@L\4BPbb41O6f$F3$D)*1E[58%YY+CMK'Egk_.Y*l=GDnCXJnmZ:W:PU(m\0Y[$+FMOEF2>SA)ZT=Bi)R1UBEW#?$4B=n18+r[G"cI3,d&`re#Q-id'Q"G!uZ4=e5c%5[_1M"1fL=KG$+]+:c[T+?<M;`\MMGmAdX*:c?#tp>Vg%J+8q_'ll^^R?)r!jgA])-5-UsfA)0\(eF?dRXs,nW$og#9+e(p<h+k&%(njS:K0YSb(aqmG.4Gn1X9$I2,qE*#8]7O(#GWZbnJOh?XMcNC6V3AFOk_]@;t`*L=.MI<&.qA4&B?np!eF^T7+fm<`%+J((T'tZ%\Rhk98uVYoMGo7]#j4':3ts[UOPqer:_\`6VQ+k@Bc29E>1B:47gqd:!1mi:5upN<7"@\=f*OhKM_qZ&q.Z'!4;!=k;fkghF[\'m%M";BcR>&;.;hd%l!m?*rGk$>!82WZdVW;X6L<09*<(?DP49X=5J-=:Z1R5U8P7U-h91:-O)\Z?8j^]o^Qgkdgpfic&DLe1\CZ,o\%V97g\-NQCW$ICJJ,m"7HXr[!%0S)b`+ZhMJ:()f0Eig3X^uWU*`1r8)&CrK;U>e=NHK$84bG<<5$XOWb-;`Vh#*N@k"&^l.]8(oj%bcc^<\?S^M*euN_Aig(!YhE;:]BlnqES))C?mDm`a07h`0(iA5jlG%1),`6E+mL#R%+275GQ=>Z"72=(O0bM%gK<PSXls1@<$Ir+%'!Pc[ftfj(1Y+O$E,@:8`C^/u,T&p9$_&qE:]Y!q0?_l0,X"Rh]uMo+N'tb0`N<&A67,H56:_RtjS))W=2gtF@;Nu>6W/l1*(5SD%9Y_E[)8oc@72f1tgCR)O"!Q6&";4OjPmAiE!MKgh8C9FPbceLWU^&)2g_</(+E5/$#)!^e+CX0:<m78&+Yr3aJFd#:+IF(c_8/&r%UbOS^.oJ]t(p"96(_/k8\XGc%h95[/F9H;JAIM[&n,o;gen.@>aDDMQ#!mnJFro@K'[)h7Tpa'?L$Fin?DJsMY"OY6Tj'p1_<8p`%:tpNi=rSY'=%XZ82sU$I$%K1\!p0C!J2@]uD'H'Q4F5^m4!Qg#JL@*X+P(:'Ls*-3>PgE+1kTkOG0EoL'HitZERG2F"YqN,)d+8)%3?e1u0rY!oX+KGA*dOc,IF4(abNRZrN!CW).'o.7/K77IPT$S6(o1A,\H;rn3tW;[c(+*\UnFh@df0Wi[0=KJ,BFQ-aWQ2f:a1]7%6T`dD.sYTiDIB#u(c[_@W,sTn_H!G'dm]C9!!U2C=l(:GN;0bkLWNf<<`O:#),(N<=L_V%_)m4(01r3=2]X`@UAN!)0U8L+g?;H`%RfOc^*Oj!:gY1&6?TX#4dS:jJIIO-NU4bsmfn7)AiTqms6.Apk<S1ABa\j7?p'6bRo\a:ab^<e`oQTBLJ2._6$9N%0B%`&nHrA2K%6f?@uauu4R#f&JK4O4ci\l_pm5Qh-CfRSM5BGId3D)75uq,iM@5[7?-%F`&935:GlrISE2+PBmX4Yg;$J0J7.j(JGP6]mQ55oK`>%EdGH1(0@g[eei\P+;r;,KY!\4&IJFPARpHCiQ=@;DU@Zor8D1@;8QqdPa!n1Q*c-Rk=#_Ch6tmn7KtMY^?&nC/;k&r#S3')$@>=g%+rmFOd0,i9;8f40U#!#+]T#=J4qNMQP,@?naI*]>F8<Yb3R%(D$eprfD\t,\b=mN7BSL[B5o(ZoT`tMt"t0Ij>icZr9I5A7>%@r&%-<X7_X_\eMHm2LhXlTN(M_kkg+M%c\"7lR-?j%e<-TP35J7)ZU%g*)/"nZIV$3B`aTCQ)$+O7$dn$p%E@\`I]&8#L#-`2*EML]q>%!/7>$6$>2aK&p^*+K:/nP>Ecl,N)"oPu"Xb&(ML02,'+'Jj$+o"ITt.*")'U<N_nGQ;?a+,SN%e+Kd'Z37pd.P@jHn!-'<BDT*SR%,$\+d[1,omaBG(-(Ik2M!/WUi`b3+)JMab`;4Bu#UGOb\EWQS18<C)Bq$;2-6/;ST\^bsO)3('"*,[b:(+A-1Rcc.8g.I*Yi_PAX%!YV1#TcFUh;l4:<,Z71R/R[(WJ\]<$Q!.99%.9.EYn;%&&DeB0"M)$:'Z,]A#oJo.5r0?2$W[*5o.kha7sUA%63(j/*:3muRn+bB%7@M;#1.MUNk@n/A.%!:#l6?]Me-1@>B]TLIV1o@J6tP&'RQ3H,1<h=<-$!P+0+a[L2:M)X(^4kMqZr-9aqC[!D*3bMW(.El)$`XP%C0jX8XZ"0+*n&'TmK*1ikQ-4u[i&UmZL42M_I_rmBS>#1FiAp3+qt<b4,c-C!6IkfFU_KC=>43M#iZ)7NJW?CbCtXpN2R:%;(+1+%0O9KK.O38k!91XnrrW<F/l=t1%4"d4U(^rMCRBI,]Z<-*jF@7>^C<km.-#k1-uE)Y!B)`ePnV6%H0n0]E9^N8hlb54baa:hJMH?l%Q'2JA#,s!F*r-b()>Na\+d=kg#'<6ETQ2ZWJLl=6?MFdr-SVXci;.e:-SQ).\[]Ee+$^sk`Jhn9QAMB%T+TOQ-_X)^=+s_:!$lGM%(e%lCQoXh@AsC(7&A2!?X00SX`?[b!7`AM@E5Efhj>IPJL7o!\!V01!cD]:pdD3j)e=]-<FQNTD=Z@;6/UWZTm8sN-egV4(,"n"0%ns2A$)>X&E@26_!W')htUZ-h]$+qAq`JTZ%A7-D[B]`HJaGYNB<P;7n!%Nrr-'CnE<=M/Em&abbAM%DfRgpkuR6dG8%*S>&m'#,5%dK22'%o,&GHj,(S*VHR.'F,hI6E#Ic*;k\cI'O>P1ul_h9.EZK%l;T=TD1LbHjWXSpjf`fGl`K5#3CIKnki7:PA"Ckb4MTB>Z<6?%P`qR"[^:G%3UsY5R&#iHj'nRdgfZRH0Xu.6#=2aso^,`f9Tbj(SfLaXei"*p>)DC:W8,,8Mj0?.bl\!%=s>g-D,a>A"]>d"W[t><%_AC"Pa@/Fs'jQ5#Q!e/6'o='RNSfsR,Km/5/.C]c-'1sa.D^1,H_Y&?GgA^@1XdHh+K7RDJ0]`>oTl(;\;ADX"W)Ern_X*dN]lt0%.f!H`Jn!raCsunX%a8'e!F?iNZ%s_uSEUF_jf[t`"DtV!Zj6G^!.epc''^oGr[s^[,hU;u&oRZIFC&,jeGs!KL@BhVVhfsga;_9S%(Q8^&MF5h._skpD1PEM?^-Z,IKNoUe3b2njfq;/oo,$7\KW`bF$T3NC+oq:nq\8g-7530S'DN!c_+7L=ipR"Q#?,;.(D:Lop'-\u%"(b+16PYp,,S;pZ$7oUC,Ju/8jWa]oAAN6uF,&p"pQUHtqko5*MUR?dDJ#%e^-;%SK_(>?r$\*M3q@>.?l@ii?bY.rE1mr>Mm7\f%r2,ODH]YMh,/H'P(qGQbK"o/$JS[ZB$2,?jfbi`0A`BpkOljZ9-Lr%?o3aN[[!d0h+[SYgo!2[;oA:et!d-N&FMQecUEfi8b^oi)%QSE6MC03:mEO9DtfDksR"`aTfaMqVGQLQJ%GoYh[,@b[*FXP@#;5@Am"`n^H!tPSh8g:PdOX``18)c=A2tEBVKV4GOh8l7&KnRG6%;Jf(Pn/;(5/Y/b`P=P7r,nLJ8(SU6ugH[n6JF[YK9cb)56+E@3N(idDJ79+jMmA?Mgu5!0`l`lfEm5.q>U[_(_6J/hfbE!bJOMe[%ArMgm!8`P"m&IKK,.?MCAI]uga/1c@9/06]#K8ho]k9TDADmkqjg/ND,[@XBBIBHu4'IJ-!"]6j/>5<`KdJ(P-\2?uA6BGJENNml%p+Ec`<bfKtX'J(N,OTuS;9h_73WOsKYq3]Yj9ZEOO]MY\519C8`*`[2K5(WJl,(``p^pITB2gW\8D_KF?oKc%_>_ZQ$adKQl+dBT%JCk<.'f:m5?+N0E1fOI>p7\`"4;U6oEs<%f/<.VfElVgU]XW2:^GFLs!%67u$QlltUuN\W&J1g\!8R2pqo<_WW8HO=RN*nY4B@UN%@UEXl.WA$agS0q1"Q2\qKZht]'.6Kk%PD<9$A!d/<lVN`)-dfjJ.U"->!t^tr;r(T-:m<4Bg^NMD:S/#SJOPAootFqh_5C<H';f!%%SX56#%SEUY-cj0)i,jsp+"K(@(_>B-aoD-NK0@r!NY&;/AK0$*#RpOU`PIO8MDUoU0pm;3Qq'qhl_nJn?T!o\k"nBZh?JgTXH9(%PFt43$^N)@U6)qu41Rk,LJ!5k#D@)lL/,[,=nt,afnN0GgSG"f)VnB&CB?c::"J*2TK#>2L+M(U=>8au]sPo@=-,g7pp#uC)QLHI%'J[VF)o8I/Hq!-A[Bf'31`3Dk%BrDON-UaRNI\WVaB5+7j&RWT^dOKG.KgA:"t.$'<>uYUGrEamC^<21$6/W*Dk^sq$.B:IF31B<%`J\Oua6JulkDW/bZ`#-K)P_Ah'?-/&dlgX;ki:U[n2Gna;EYW.&T0$O-cEOT9VdlD-$,MS=!O8A(6Rc2FRI*o$5&-qbg,u4,q&>4%+TToIqMHfWKUrPk91^(&=M>tBDjA$rb<SDL9?8N+5`mEf45BT2I!*e!0Of:u/8eCAK%qRNGp;a""B1st&2lB1,&uqZ-qK"q*ken$%n]B8'^YXJ:lf1KZTD[$d]+$fML-a8T834#`oB"FK^HVL>lhI;L([p72p@+!\:[d;r'3hBhPOGpZ@o<fmfl.KM9c&%Fa>&JZ&:tK*%TBG;J;oMTSOeE<U9UmO'>sm$.&>+OD$NLUY"Q3l`N$b\GpW(H9)H:Nkj;>Wb)/4JmROYVL#!]t(DCKTf0O23?-0QEuTm5-=mO_4r%/ppKn4]B-W`/"C_rPO+3&IK9`e3n_jLEebmdXm.?i+Icj'_;@!*$X*XF1;%$(5?6-p_:fKJMiWs^KW1eV1in":qZj2%B6RsW?qoI%ZMN6'MQ2euO]VdVj;I1c'5U#I5QY@"6*Gh$9>>k>8ATsU(9=J;[R"KIoa0b4Af['(9*Q+X;^Bku6=D5QP"'=k-YchL.(gU:8`A)0%#ZY@L6gfqY)K^eoQ^6kHn-)I$V(8:JES(ndiei]7>K.5*_ob*Gp@!&YroTN0:4Fc$D"1b&\DW5d&-8Xo_:O:c%"o%Nm%M`EM-Yh+%W3@B#S&(IiU^'0,OO,(UWQ3,\1%t&G<:=cP2?S\A)in7$$<&Tj-H[5@NP&am,6<D?9L=+_hBRH!&jmZ/U:QLfhZK",Teo'P6Oi=f%OW71nJ5=ZiS;?M6U.cjhic>$a0]=:/S+6s8*=]*e;\Eo@FD-?3!AJUq)^,t*F,;X^Xp;aMqVb892f\O/Xfkqo&4U,l`E4KQe34^)%"!I>W,"C*0$$QD5+b#\.9[K3J##WQu/1JIM!D1'Qb0tTq/AoK;&l83eJu][.E2j]Ub;F3$7r`I-P[Rd[W*'4V=%Kkgi?Y4oM2;"\%)9>:@D3r5S6o0pP2[brSZ;mk:>'?X.8HQXV9QpJaWlg;'1oWm0BkJh44,dsJ85G&&!DlohRO8t@3iL8'3ELp3co[Pg9gY"kRKR-]%R=Mk5PCf/jV@i0O)':'UCEmY0eZ%4T6;*CM'4nP*WR+1HN'39HU/3Qe<'4e9)$13!$,\Cmq1:_D?TX\Gi5.9.c\V8A7]SlK??^PW%U--=Y.r[^t:(h&YQ":m4S^O1U&d;``S<m]gbjWs#nph!!5%,]`'R,)LG\rVO0A(;\-PbW$NK6X8#MZFT"59ER6GBmhm+s!N>8YKq%X['>DF5f,IM!Fm^Lllq87j#IV(:Iqooa'>CA-ASMgGh_IEe^&>*\p@cH&T?.<Y@_)kt,NT/la0$Q.1b#JY^n.akF5<fWbSZ1+f6)%;9F0X9;H9T*^;'[>GS^IjF5/Vm-KfqJ>LnQ"Ft:D&ute@NE)cFTS@%Z*)!a;;TG7T].#Quh>f7eRuJ*h%#MkcJWU1&b-EHaYX$R'%nkH"=&h0:G&`B\j!3M5i%id^2aq`YdG>(Y;2]<<DN<].s[gF5$`/_E$OT*j%C)2/COSEAlO-5^SqB#PQ=cW^SY0,7b'RhFkE$t>.%!c,)Z**d@)<u7R9N6=B\#B12=pVITjF(F;r3sO,$>!Be2BfNUN5k]1kS2A>MPaL,Mn\YADR#nt][+X(EDbAPfH:VVPHY`9;JF;aB%^Yt]1,B&0)<SUm(6Rb>e'raUl"UWDE&=3Ml[S0&Rit,sV5%11U2de?h0$ga'7Tj%,_fM)EC\ARnEJ19j$aPfGl"IBbn3jscT[_[?%VATif2d$HS-5-ImOpIXA1=/R>m$)1S:cKWhCNs"57SY>*A-pc)3=oa8P[`)cg$<k*7e`@S;S)-MTVS%)!;Pgo.(M-d8BhW@f?'sH%XDdBS>lHJq#1f9D&qT%4DTlK)#_t,i&J1tlDjIXcakqu;87p(&4q][]c^J8W#B#"I92@@8S;0YL`buf=UB`#oo:>b>=Cs>UHnsY]%]8]PchV4Nf9GY2HTtTM41.u$ZHQtp>,4G=1bO*FIB>W(f6S/QHYN.c,&RnJ^.3uNWOgt1WOsX?Urs\W6)'t"cnWAL;,TX5oT8fl3%P!SW[=XG:Qc!BfraQ,C>kY_8EYgsb6\'7)5-@#Wu12tL([n2uRP9DL5W^X8,R]+PJ3*>W\UjW:-l$TS!;?UIeJ(3I3BU%Qc*8Fh?%j]Bj?imef\<(+AI#W;oaPAlW%PZUmL'n*k%.=oU*h^Xd`79iB\&hY.c3ISd*WiJpMT-`310H'SR7C[<1cLD:-<<O>g:NCLO%2q[9%C4qjJ%(Rm)mEeCW]Uh`["Tc+_\qd+\)^.&,_M"].V#c\dnR_bJ:C%boE&2W%AT6L%""6WM9QaVAK_"k,RL9E8Y[k7X,AcA@DsFt9%Bs[^;gW`:l6D9*-TPjap&1<Sd@NEf,0!^bSjos\$),G^2$8'?KG.oMTb&0jY0FUc[&3=4MCfLoMPjb[D]1[%CS<gDg`p.@Z>^_^u%g$/)RE<XW'Vq)ik!53!/5$/&<1d^1'o'rrS?2Qsr"bGH)+R512S`JrJhD4+:]8=sk1L>B-0aE.aCd(+Q6j.L_?W9JD:I]p[XAi8`%%H&Kc,"*$t=VCs(e-s_-a(uj"n@$J$Jh]6cku+a(j3;'&6'@Lu08^tt[(sW:6SMaUkQg&@NKG"Wn@-\%1:&LC0rXN`8$('K[dnct%"hcqQQ=Tqj+rDND6V/h]2'7pTBag]#1>f&<Q`Bt)9"+?_ADDjZl%E6-N'Scp`sVlOK$Gs/&4/\F5:]0:-UBA8!FSN$^3IUU)];pM%`&P(Q6'28l@Dh'8_k*(u))56EX9ss68HJHB)-@rcPE7Yq0aJU:+`e'+FA$T]M2_LM[h;[-UF)8@MX3E2"]#5&ORJ$p6L@1W,%BYq%%_1M1%M_&p3f/9j&SdnZoZGZs)^LM&l&5qYk[bUD][\r@OZFtngmLTa$\=i0H]g*h"\J9Ve/sMuTK-&3iT-Ks6&&.B"![>n3fs[s%)J69M)kEr7I:_'I#N(/Za`Wl0n#:?<hU'e.6K>ZMNHN-9VGYgm,)aWhnWKh]W)+=[JI^>>fn`^XWVIV$8LS,WN1f/<49mp6%e27R%XKYsQb&@ul`>Se;XXN^a\K77kc*Us\Ee[\6%dcdIoaF,EHV"tqKjb&bLmf$6qIeM/C!M-]QO#kMU2Ushd/h<W\"5sS8r'pYi+)$m%bLW_?:RYGe!drNq+I0C*Zm`d/j^NK8aUPBaj;DBYNPI#n(9;hFN7(@mc<[^shJT!iA_JYpP2:ni0D-3F(*2s+b;5`f.PC$!k-`%`%hOHG-Q;T,B!<Kf83G3oj%$t]Q]\W5p#"8Fc,'j'B[7[+Og$o)&Fp-e!K/>=18a7siAH6><$X8qm=,7ia,qq3FOE7J`<HFKO1L(8P%P004-+gRG$BO%_T\3Mp9cI`4tm.$&*><*9Q9SH``BIBL??:Y>HAiE2X.oMa"m0KIJ0M7-$Y_,FbfcKKL`)Bh6RZ*\H:!hj7XTGn'%&.5_@8lVI``g^rNo?F7](a;`-XG&4DThshaX1Deo^TuX;f=q[@SNG?gmJKAM9[32u9\ibeW,HCU`c*UUkJO<A(HGaeXP-+[>%N#\%prJEh"UJ5X-s;QXYkj7BL=EulH!8`uPRtL"=X^@&@MiRID:Z$CZ(*_FR'oK,2&gfui#!p&:kBeP-rMo'WO]pi:eGmt)j0k/LG]0=%<"hA-jI(UgeQK)Y(4q\SZrd_m=AkGTS;9h([pb436#A+B5p^WH.qT*keQG/9I',5%ZAT(VBUJak#<$Y(3S>hrI7>SCcnW.^Mn_9O%$heurjXjksGY#pGqJZo=A0$5Q;_[4>k<QiPS:RuI\_ThDl2`3]M1qkIm4NY*<(4?-9=.M22$)d'0gdV7DeF2a^bcla2JdRoA+7&4%YoW>6-G7?sjZN,qG!+/F^!IloUl$&;_Eg-<_aneq5jl6?HQ3#qCe-1DM=ROUV%A[&7`/qR[!2lR&_4+)k.EQlqF6i*pk7ujg/k=3%nie_)3+af,mYk"lf.ICu"Ak,a-&+9@pnCqlbDY#>#aGdmN?XBh:IETr-U<_>p,k\2!;M]AO7,BuU\_c72oYqH#ZL3u_'e/UY8!4t%3/SH+VH+6.OLuLr4PS4,-2Le?&7j/-MtC`"A2sE6.hnNI)S/q*7R\FSMNP[s<fZXJb"7O[ca-[rKgKMl@mO6b_`9Cp9p9/XG7C>0%"Lo`+nWKD;&KHC@mV5aa=g2XEdp0O?[G4*71[1XaEZGEOPpF+Nn](2"-D\<8?ID1nNNL2k?'(&jqBi`Q_t]@O@(e=HkiJ:%r't2C%b1TM&h?]juEA<Rg)#/hZA[FpO<ooSr]Xp][%c27S^L`i8o$,`4%KS]qOqo/qZDc/bUMfQnEWI%H"6LfC9qBcRLJS]cZ"n-Ob2of]%#.7F(oYkV[Ul7;7f2!:)>@MhYVXU%kHJ],7loqR%TBu6@;(lgBaF-b1=0!n\$DYmu>-;P#)7+k)2Kfrh<%l;J^uFcs:\'Yt6?T"!%4./.XR0H8OoN[Qu*">Fjf&QL$<'$+r4$RI5[+mGOan%\EmlR.-n/U`kVUWlIL"8=`Lj5fN6F-5\.-b@VrCqk!&Hk?ePX:2^m%T:a%@AkIrNM6gt;j,>s67D,VV6*LJ67FJ,'eNidC*%T@'/HjU<Ng90_5Su:.uNjbc$@A?=U1jn$qneE&-k7:>>cH5X9,Gfb(K*:&?:[;%5"7dP'i^@\]rJmqe?F=DP^EL\FqDK?CnB1,MB9FPa^#>InrqUca"\`AFt+0Q,uM3keR[bWG$DZLVdtIef1NCD-:`<%\k895%-0j.%WsYnAdlS]S;&6,F'gVU3PZY5?JPTMsQ5picMqCUd,"*tsLaRT<$BE#0SfJ`'M>/8>o::c?A$NqG'QA$r+eP"2=FEXH%`&s5hp)_N%ULo4cH5PamJWa;<,-0Efm/j9q@7$3*UC^Su<\<Js%T*)=D:jShGQkTQ('5u*(Zdi`a@L^A:t?I(>R[Xg(R[oteKTO,GQ#c1VL.ST%J>/X^]X@f=Vt!X(kpLc69g'doag2VfQr2;$"gucd[h!&,2-5D`m9>+Z4%CpEho\'W0HBATq(CB#.goQuO!3c;^n=,r7InjVa'gCJ%l[EY%C4f)u2e&SQfSr*H&_GcJ/!iigVu]^t9)<2.g6<jAC#iM[@rk(b,rFUXEfiGS7kc"c2bGGA9K[+D%o/@Kg9Co`=f_EU3'h1=%j>#@c3Ju@[9c'h0QA5sQ0<::0A[4E1XV<qC8UVr=99!Gqk.[!S8HYD:'rk]Bq:*:X`7i>T%cWdi%>kG;>$?^=S:p:L4pechH#f#d%7s(?63l^q&iMcAtZ.Iu83%.rtO*R,A#_QH88/*oBor/\BbA\Eb.Y@EV]FGE5Y36TrC/W2`1$B1@#uZ0*(s;jT38L'7Tf).9Fc]IS%KpJ`mB5J6#/L.`YQ"^'aaRLd.0=Dr(1f.8a4'cA\.5#;1\0-i5]sBHf;N@#sV(*AZS7!q>XknuM"9;C@Ar_qb]\DgZd!FI;C7+*/%V:MN[6jn#^3[D_6.Mn[[,CiEB&U)gL=k/^lWd9U7j_&cj+RV8Uo,sO<nqJ!8aN@<cA-,dk,Cpn7QYNWCiVl6D-a.Z4d_mC0((V,6%UGg)q%7lH/%LO8XQ#qYcOnko!ZSO%a@Z?l'U`NI]JNU'XH:9q>!m"O"!4'hcg5&WTE\:?2AF[Q2XY<Gd2Ts2QJ"A#AMS?VPQa@]$%8^K(s`c%8)"2!97KU4;m!JC^JC'":8en?;[opKLCj+1AU]Uh.)aiH^f$m]s^W%_ZnE>mVaW]D-#r8t[KkbAQ-":LO>Tcq7[b'T#c%!bC.-]elJ[.Dr8obFa@fAhP_$CAS5B^N!#+CNe9kqUe[\#/oh4$DVEJh]WmnU]CKM%*h+/R$V,;fYX-<2b['-X!@6[iAVKl/dqPY%H$RO&eY-MbR7MB(OBcFd[&t&L.]GJr3#7poMO8$=d4=1m=sj!18U:`fBjRgn8*e."bp&J?[L>ee&pO\]op^YZH7Bs:,\$l]Xp]RJ%D%fP,"t]=>dIbch]f.]M%?TTB70B64ObBfF<h5A\M)d;56n3jP+j+"Xme)T+K1`h<F/HOWUBAdS\]7nlfni^-$rgh6PjOT.7ding%R3b;b-)*<K#WCs@]/q5SOeZT:d:j@b7;1V8F:pd!F-to`Ehc&tWN2Y3rOf6N#FWE*GQl:_B.4ORAkTAV,G$>&?qGuM#K47hGe"A.%#4J6.Xd#(C'(2K^%fgVfjY7q9'@L?WeOj*Q+7rZC$n]M/]1]N:lmt-,Lsh55`,D9u2$Gon!BXOb#k2KAWaRSS#(RC>f'&Vf3h]Rr%jSF/Z$QC$%*(l8s6#N%tj3>2^i-W#^7KQSI\3X5iMhHjViZnLN8pNsjI]SBOGm;BS74Q]&D"Ta/6[5^blAg/7Q"&N+Te'X"Sa0Fh%>`/U;22,)\;;iD7r&sjU"J$M9d()K''RiR,kK7AH9KbmgCf(<\&Co60oQT^=H0;M=NhoF>"W.W*YH"5<b$>q=:JDG(Kas)%9pSh\%lBeGi%hSi9R#n^cYA0\7AMlrXZ898BoiOsq,MG@[S5t+'`(L<oqBDo,<LDJkb`%"Q3=.+$TUfWB/a(?(,igeoLAXA>KP.V-g=88/%L7rui'sC;qF_):a#[F6c2QH3gb\to2dsK"!UoS_C6I0A.'$goITfC`f"(7'c#?LO&=&`.MMFFN_nDG,6"Y6+8Q8=5P\!t\dl#R$6%EJ'C:]dYc>Uc&3)>J2r[:fN'OL&_b"CBasGK'@gT7(GqC8MR+$5o@9hc9(.hW&0C)!C/pq6n8sip(BcHL"?gLh'a,a<%gT'iT%Te%lrT6'7Yq,d[N"LAoUF1rEbPC=.9f8K*;i>95Rn'nXEG"s*XHk*%"ilp7?.3"kBKHkC\ZjK=:N>+=m?)dM-%A)nHWPqYT:hLS4pQ5%+5!qT$O@9c139nE6)"hjJ^@%d)sqhDY>(:Njk;GZ?Y'YST+d.m)"IrAmf<#WVIFYO/r3J:N6Zm/_o1*iYUH\bQk2@Q@YHJ?^WDeE%s46P&'g^B[bfMH^aQ_\lXX:`J?H(^;L4bWjg]D^)EQ#2lq`^VO-4^bcQ,1X<20tX/`*R>tj@R?`o8p`:R8T%"CILM&4)sooM>g.4%V\TB23(hkf!U\^s>&_S>TOc$3&<RO>Z"TXuOg-Y8Y+$GkFQ8"n4&d5)c5O!HK;[))dS7Od.5%\:<u-JniEf8(U8s;,U_0b*$<Kd2%UXF(<iijiPK41sY`4:L:X*CU%amBBb.02<$>9mNpr#4#.im?,7=8RBhEc\$t6(NCje36aX8Al#lnb0lC5DNn6K##=&nfA,iF0;7i%"!'%8A-inYMT%R..!ON[N"1oO^`iL<8e(r3@8W]#bVF;V*G8*YVLbroKfupL5Tj"geiXEK#kJ8(Sj+YhY)a*d-O4deN\FZ<XJrHt%akgks;S_AF:9#7c:l?R>/b!d$8V`0hqR"Gr/aUp[Cqg<?NdYS=0,j/C0V:F;l-bNc!7t>3@As!aDc*Pj%E&7:"rM(AI,6_`3sjXi%J/'u`kkj4p])*$Y1kuTcDV>5V?J!=K'(N)umc8a"8X6-20,UQ<4;%6?:jZ='*NVhDb::2YOB'70E`m#$aY*/_J:-O+j@"F4qX"dk%X/43oA?mPd1l?`UY;?S:,TJe*nEGUUN\A+<L)](95j:GQU^n8tiBY8!"(LJ>3B\1FpZ->"P#XI-KOQA.Lo:BnUaM402os_\FG@J*%>'*b]%FbF*aJbpmaM*UF34NYE,iiP$*3<7YjJ3CD#_fZUS2+h`K_e$_4"6QL5X;(XN@\#,:-#JZ1(Bq#\V+U0OLe>SZ`RK+)f"`f%%I\fs,J"-SQ:/=n%[)L-(X4KLG_8%$;RK>CA2/i\/_3-h2JL02#!1V'KeP_&[2VfqGRnm^Vt1Nh_7#.(@ABIrY!1H$/"Npo;?p\F%J7d1<^^eB(g'&K8TkaXUm/0m#1!f27KmLmm&\<'=DZC9TR(>]Qgjj\Vn&B:71H*u9jGeom1;ggoWJ2P,7o3SuOl`Y!K'>.pXMQ$4%hg?#=VYn-;O\15+dg-goGE;_(A.@?I7QuXmEP"#3!0CMlAbBLOD`,<1no!F*!$_Q&p/*eC1rq<.^*Nb6C9T=n5%UWta(0cHa&Z0/%Kf?Foqam/t`\ih\9TOPZrR%AL8gruoV%!cPb?tFB;Bgg?jG+>1N>ZshTM:P,$!5L4!M?tA+Og7^ORPoh2hs#5H:jt/L%gj`>!Cte%&UrEdRLREF2Yc'sMm#G>g<*2>,n,X\l:'dUar+TXXD8-b;,*/@/lk:u_"q^V!Ml<,]'4M9[ae$U:n")Ek2025Q;%F[M)srX'hP`4%*tFm@WLognl>VO"*-&q')^W2Z-d%\:SjEOSLlm.4;G%/0YnnY:od&VYZNQW^iP8,&,NL_-'fBhf&QO73#hIoI\XQ;u'Oo9PK=sm?%Nf3\8oL__<iBikq4JMNUBuCk$[J9-+:\b;(N0$5C5)^:l7Ta*\oXa8%3k`[[;3GeA3)"ZfB&'DKdQ*k<T=]=V.k$O[0ec5n"(7CR%%LCC;7J9$5RqY_!;5QX^0,oKq664(:JP#W(FkrcWT#rg8qV/870CPRc-E%\\P#Se$k07[b;m.7*Oe#BH>@WmGWc7'o`ikZc_1[V"%4OTcf/>6Bp&RM(hCSMQA-[/^A-E9oeEh```cln=10D^VC&O9I]m)6^j0>0j,mIj"68GgAo>bmK/H_FCqIc`q:U0I`I]Ig^r$SUko%XA:'@NVPji]b[$j*7Y^bOD/'(1.A\lbI@5..!MFKPGDq;3J!APf'.ls#aE=#=$K)FKgNo(bA_.chMrj4Ee=V1;;3]ik&H<8d?7.n%FWjT6W;K?l']a4m;F9eliJgAkJ"f8.m#^OW1B7^'EH73Y0u-$mZ-jX9AP+Ab_;@\/GfWq'D^@,k@7^Qn1kZfj'j8.EQ#T/15+;--%"m/$"13/NQ_0%KId\#&Y4?61PP,tc8pBI[*aMG7#EL=RWE-;g#iWc[o-_<+<<>@J:Y"-c,prtn=%>/Hu!2W;2C*.d>``@^3K\8gf%%M9!&qO7<^Pg^adI4g8:g?el\ll"qGN2]lAgq,Rd_ne-YCBHL&Pj.X7eisBs!UJ'FL+S`)Ud>]c,81iE>$*R<G2.)qH`B2&[X^u2%ntA12jgM1'&SBP5GS:,p:oeR=+]5IpgLUM)s*rVV**JG0B,Y&An):G-1X7-)g;>`DjWjO!eX&IM&Qu4WXc?IN,Y&Eai+OYV=S&s'%+!A!;+@!2Xn]#at"T,;cCJO%X38==e5lJ1t5a^)LT$Y%l5LLmB&0G%_=4f?\3Ell]=D[qAdNU]l1Yr<<8\&<*FL3Y:-ihd.]=uqq%+kFJ8Y>Ik=2;H)r>3Td%e$f"Z?OAOd(gV"3]J,,(/AGP\XC;Qfk9n2=j=U6TF+.%dWsB+\%HgJVQ+UX^eBQ6XE6:?/.?8fWqq;Zt%B6pcd#C+HB$-;,t#tPf^$,9WF97]Y1bMhAX?X.kO<5_#*@DfP0VYZN5*Erp^od<XFQC;0S=pJU?Y7ubt*op18hWH\ZFjm*qLdIA%%b`1%RNglgF'.$2tH;35r,,(CWXgKoX'enTQk2/7a!=Q2ZOo^h\n5S-p5k^K0Y\d"Wo4<hm6"iBMk*S&P(LI&SUA*d)373W:YPbO2%'9DEUC6tKg(;F@Z&S>K8'5[6^"LO`sdN0;i2uN2%Hg%<34@-Ymej!lMmq>(Nl:YE!2G><X&5tK5?An'*fN[UdO4sq+H0ai:gN'7k%4McuT2E"60M.!E5'SQKGfFUnXY#:$g',6QG2VBu6\-&Z>p?pGB%9O0n_%%#6cE#&..-+,)7MGrU8?GWSAOmD5TkDgL,]D2uQfu&O%?dB]OiX%S<[C6"0Q7NTkDWN\/T$Z$F^n>k5+7];>BP;_$:=);kr%p@?_kSbTqg]6lr4I\4T7\dS(JZ9S5s?EZb?ETsb]0:3?"<*+%K4]_%q[]oK6.Q/+/OGKagT^!]<bGPN5)5bI\0ai3IR]&FIBMcH\u]In27+prhP0OA!ucHF^rg\-_G=5d@qC9MRa9lqVC!F*GUQHp%nO.@1Rlq*=?5s*YH/lG,/!Q`PaV"5,S5DEu]kFEkCUTpu47K%]O]93__(e*jeujgKDQRcC5R?ViSQ3in7WG@4#Wp\mS$srHTcr6F%)dBqTZPYdRZ##8XG!qJ_V38Xp<PQ1_rSbGA_seM.TU4f^-s4![H.BhsSc5N3PE*Rcob&XJPgH1l_DJIG1AlZ66-Z*EU.Ur\T38cu%*3QU5hH6ZYaJmp;4r3X-]pl'qYq"eF"=6n)%Z(26nFtV)+(-E/$K^#^r0\6^9G3FuB#K9H2#p_$4o31$l#'ol2_%4U/><O@^gYKN%s4ns9UIrQkf9Uc@dMbMd1QO`Ibk?h58cUR9l#^I918,kla?d>q\Ue]V2"H2tEr?,V%?\lc)Z\J%<O7o&ZB>0ANtdBG6T"#9R=.O)%3VaNjj*7B'rVE"8J>CSJAq6;k+Y:69kQY[pTXLCJ'1t.]cHIDtm7`=n&q%Cn`.f#b&Q)QrT)#EdSW"tU;kFUkPtbch9Y,ou%0J,R%bWu3l8R4Rt_"(&":4Ep]&Xk=64lcJUp`FjtJ<ZRU&84=G-5g[N=-?L_Je$qQG-0%VjJ&us::m<?M1F9&-C:EU-uIVa?B+KONoeHR%N)5m<rm5P,b@k*#?_;@?*=eW'R+^N4\F&kr6=.fTo^c[]rQFRjfq2;?L*:<i@[V%sKVSkC#*C&qTkWB(G'mU]6"F?(igb-NZHR(8%(bj&H:`Ampd7a@QGsjb6bjb=k)Kr1AP2hlFNPKd9UCcoX>[^ITB,aN@?#AiO!sE$qJ9Dtdj5J"G@#.!Hp;kg7pSY)?6oAimWFgYV%/\mfImfkOYH78R[Bo:RZfR-USYW-V4Jo"_&[<ICr9m,4QR(<-0]%k;Nr=JNQ-NU.,_bbOAmBI,S`@pnGHGb^7B2i,poJ#>W`ELCn%/XMFq3)srKs,fL[.G!_A33;>13VFFf,:s:u^&cg;8AM6_Tg#BM3DTdr>ZJnEK1L%b/'%BNlhpG"N;a9F)fpEUOq<@a-Bj($&HF"c%1PZ!^P*WUce\1*mJ(kM/OoC6&3@pD68QLq;6YJFj#,-YHLdUYN[uGl?bDc/*V_Ou[R'/+OPp$-h"L';S\+F*g00GHd6$5ZdkB=ga%BT^,>jOY\e)r;K#4kOp#0N!J<\g5bo`j&0[bO4B@*V5$7UVN3chCX$/9^%qPT>AE3SpFk;)hA#UGZljTTOpl#GCXh"m.1^jK\HLA%/"u(78l$*.J#.@>$`6,P,Tb6rN,lF5*YP3,0;,1\QZ4PX*`;n6$(o/fisAu)>?mU&eG"N%i/c?G/#slF@l>T;&Iq.C9TMRGW5D0"%,`ZJ=l(K8/pu87p113#N"Fg?\M0+E*q;\_5pu*gnBgYuKJ@*RO"UKkd+=F9FJrq^SW.NN<"BqDg'\.FU'@)NJ1oFC48RU?Sim6q:%8N.mL&TI6SJ:06lD;Ei2)YNl6'>_)N)%pM]#pQ_O2OsXp_hK?>%eCWFh`.i-'"Hn@Fh,utSHWB*^/Af[AGG(k9qbP*GZt.^:AHm=%<qD_orfI>`eRLQS()pM=PPEk[hH\<fiEoLX2sH[YhOu33dkAQ,I>/.q@S@XZXH8VQc40JT*>LeI(mC8[f`fU7"CPBt<qVo29,:9i%KE-^SVrYiAOOQ6il^;"9\k,l)QmDf=kbO1g-JFVf>M_AU?Jk"c//'eTINM`(C\q/c&;S:!hq172rCcA:Rq?H7"2U.EaKp#i.$Pmn%m$c,T+L;+@>/Z==Ee[kgG%t5e(3eS.[5M*q-tI;gl,k@Po+Ha?BbnM8W[5#i\HDVi$!_&.2c1"6l"MqhSENM])ms%;d*0Z`kn">V%HRtMn#4MmKi?Ue5;*[jeF[BH?is.NH_lB2h5b4@/!GR:qqOaHk5oaaX2)le:Wt<q^qAE9"b*GF.>4h@]Te>>;!,Z'5V4oTgi[*16%3BODm.<%06LYL(360Tsd\eEiS^isVnfMl)fr,]NZaX"lGCYB:&LZ+qWF!Mkp?B4&u,Wf\F,?0ok`V='I,D.(E]Ce,Y.j`oJZ6Xq]%39p2T[`8nH@@rs*UBM*9i<a,*qpKrC^f.8oC@@UU;l3:R\.oU3bO3&t<6P1L7gX^Ak&%'fc$)oP"b#h7K%(VENVN`3(Gn@W-.?7N%"OsG)+C8&\>"^?XL5jE(Q37-!Rn)&Rp3I$:,@bL/8u@$FTpN2CRdBkpO;@V;no%l\H.%]5$?26p)6/Rf#e1N)mo0g'ndW[1")#=s%o&2:Jl&at>nA>o[1^$0bnVs)/Xl^L)j(<J-RR]]*8qUZ*'K=CO(sI0r,&gU)"=Rgf!nt?G>rdtH'%P9Z-3'Q`1Aor!V44aRSL_#8%^-;QM'>\[dY=@m4j\\5aao\C/SuGD2.oL5>TH,[kPOUu*\5V5:j]^gtU6kY6K>^ntKO5TpF!:#I_q44+p^&,ketWX=36TCC.5_6m%N6*Un]fupg1>*0XG]sFV8H;Q)ja,B&Rj'GG[&NsLZ9qS,q-Ne?3jIGe+A=6>O?Qbs#[MM?l'G*=9d9'1&u<EA#kNR"6oC[hSF]Be%P!75:bf<1_!Wou[VWH8PNV_b:1kg'1q9$rl!=]CmC$f>?0ObrDk/RH=(/?EX^nU$CXU,)Qi^6<l$)aKSWSpOn`WL1:+2F3r=D\_7%[.6l57h\6@ngcs)4LR'_AA;@skY^6#+WIkGZZHu:rIaKFKX(n!m+Fg_&$];(rfC\)U]Vd`'f#orMm`QQ<[&Z*SUn!P)W>Q^rggXk%0&d@P%M7=igP%9+'8P<nN#eCR_f?cR4Q)0;_c&T>K$VD3!l)f/T3G*O;?BeShU]+-cMg?"65A!K)8^;2HGn2MT[<Rb.A9mT9k/87%\"/-[/-2tn,R*smM:AWV1Uu"OR"Bb%a@W&nHPR=_OQBSWQ681H1s#%P"Hn^aU/oO\BVHiaoR$bMqedNV..VdLD&\@=3>o9B1uYEg%oNSjRi6(+:[RM5^-9m,<nW+o&kP^;AM@!/U07%8d;i>!<iV-jlF9iikE2ar&RYpn=&(4Nc(SR:f:dk?cP@M9IDQ<dW/>4>'X.8nj%i;`%s&?>p^MJY+Q_l[0cROU0<b`oRtM?#+m-=rrr$SSoh=b?EM5&og1(k"io(R(tp@tH=7_W^SL7>leu7-JqKF0-4\faDIcdbgCd%OHnf=i]9Me0A8>N<GTbe=Z6=f@Naat;r#i$%r:S_n1s#S39.]QW]PWiI6Vca3?nN."R-Wj\CIg5;<9bdqmjb0b.$6:REn:IQBG_+%@ZGu$QGpaLX$Ts6DeNJFpdDdJh11=1'd\>o0,)FZ<WkPcBIC^I.e6j6h:8;@/>Q59LQZ[m`r5eTMIts_`ccdG"`)<QNY=PHX3qeJ%D:*Q%^JEjW_ckB4kIgnFF(6fKe/j^kFR:WFUa/pg:)Sj4q>_uo8P:Bl7-hO0!$_pcP4HrmT5LD(X1s+6IEJs76>.Wdfa[H!kc`,4%G[b6h!u>r5+qp;lB8=_9%:otLA>"C,]4_O4[[dl0\MIK!@k>#>8eNdV)O:dp`_QRd9*B"LG&fR!<&Ba#[,"R#^!l21h,&UM)L.:r%ZDU>I#$AnPF=h(\(@_(B>\dqs&5(5j";c#&I>fs(0jjeKKL.%3*P?\HD0=*_B(CuJd2&J2_0dU&olo2^WS>;;[91O+38j]VO!H_0%"8?u9l1.:XOR/k9RH(eo<WYr[K>:mAF6&h$!BgsT-4N#oWb89X5CJcu/7DZR9.M6c&8B"i[+,+u#s?9iOMU.2!>-u=rML%c?338]%*g&iX`.$CZ,8hRp"Z0H8Fr&^Q2>Ek.`rTq%''R@hII5VC'*GafUYL-gh`)"7#(/Qkb9e`^pTkrmm$bk.Y]^&(AF;BH+L&g-=qY(@%+`f]#KRO@Q"$2A%!G$@b.H`6V!KII/1nuR5[&X@hq=<d>=T-QEF_>9mMo<0s#IQ[N9a`Q0g5,BlF?@IfZuQJeV@a&*'KDH4VJXf7%G3A/)!O=FCQqeh0Oi(5_Qo%L4\N+B1(aE7PO"fThT8?Xl?-ShkG0;#P?6`>_K3"\Q#api3.q^!RO)^,]mu]0,['O],Z$!EMWWi&.%[:@Bc9FghU?Xp.XBn"*J$)ud&^1V'N*Oh1Goa79C_0)1!a;GjJbV_U#OtO:kLQ`N%`'9BeA.W+R"K`K6"$b;9e?n[]n9Z+UM5mcq%pc+<SY]cfECD,]M'<+DN;`?dr^9]Hf-(1F,k@.MZ">[i,.;jA5/tW<B;@*f![q!qt,$E#&S54Il"pj-l''(go1`ctV65WsL&MLu'%_&eKh,7B]iFt*h<abfF:ZT<Nf4P?P"HJ<<'pQp7o&t'uNm<Ks`9Eq??HSbIVisqoTRDJ^75*tIL/KH3m7t4!`!?!KWHPc!>P&c[n%NiE>P[q[IP`!EDHac\g,Hf8)/\aiDFZ;+HpMfFH#mX[]b$_i#%Z/8cuT!DN\,4U[DRe(DiXNY3'A5>aGDi-&g(;?;3il^g"`/;5]%UC.pXG$(]W!8>"--Ph%S=Eo*5J<]9ulFo(r#F5P,`iK;NHWoVgmukbo2idBB,(8V5NUA[^VbgHHB,\MFb.YGO#eAIo='qCB-WJ6'%8K]Q\qfIbm/J82QXrqfFcg$j[PVJgnWGgm!dtVa0lt#H[/K0e_m2.#bN+QV]$=pF/f.?a'7q?6!\G(+Fk!EP-qbJ<lF7VG=TJa$B%=sC'"rIp27I_Odd:9:@:N?a$GZN=GjCC$NGL?>7@^f\cBC4/7O%qk)hH7Vt#jh`&<f?=rLGVK2NHk&Q%OEp+kL_45'/0^'U>Mil%%$%K$cp_ddm9--oM38aNXhbYlP4p$HKnX4hnkE'o.:J]Rs^OnqWg],L5YBcd$5&;C:'U=9jco3!eYYo,="tkC+E&1e_Y!Q1?jFFD<%e[;r0"Y,>o&[4thU9;B14>-dm_D*^0Tm$RdlIc&9[(LdJm>;@?8N$kC"^B4Wrr;WXpI:/:f(e-S1gQ%urBLU9>ZJ`#q"4^U@)2kZ%!Dt#t(Cl.]k7OJ=(.Guag0lmEZm9E<`mdXoQHPYO'qEYD+^G)j*l9<*N1Kk/6J[c[(MMrq]g*5.:bS=T&odgO=AJhl,t#lO]bPF=%7F!g`&NA=\O]oKbF$*;-*RtsOh;i-P"&&g5h]r,);d%LA*)0O+9IK]2K990tE8_Lu9RsLi7I".Os,TtK:1]Db2\r%N0NN1e@da'K%$6_dqK`$.<XmZa8$edj`,pLEf@]PM1))QdUafPZ$!!;E!JD6:NV$eG<kSlhUfRF.apP--!WiQkB2\%E+0T*)p4#)hF[cI4VeAI:I%E<))#RGNa#Q:(=f+>[N4h/tB-BTtjfd%r1T4L'55k4&-^e4/Q`p\fDqZW:!'IVuB;&#H)A$[^.,h:H!>CB4;1o7bSF/7](O?i^$i%PeB[[g9Mh&Faj?rHMdT1KF2O;n!@.cS?";P5DWKF7dJ&\9-Or.VR+5d3V-o9WbMcT812:#i>R@=%Zag[L4a*2pcU\-3,_[KKfInB%Z\3Xi9+0Z\-;%qe<n`0,RG/t`+L0PUml_NS1dmX*E\>6/0$E-Vn>tn+V3oJ?rsCj#;E:fha@=8T.X\0;K,0_Mouo`oS0.I#>V1=t%os_>j>.D.6Y$\<D;gE!DUA.sh3d#WqM@7?-S0qT^J8F\X#of6SD6L0eaT/E2V[JXS76qh#IqX2NeNN(SicWDbXd*['(+C#.I.)oP%$ldC<=a\'4+njWT%!2@((B>i>$V3^W&D*>Df,f>@/T2HO9*kb3CNajt$G`)H7!d=+,%gLgO6-h*ha>WG2?J=rM)$<Oo[(04Rp%8%%!fKM&(l9@t!=6RJo^/6n]sMr+Y*tX5mbF!p"Z,qp$r%\Dim#/hf+lBlfbKB+U]s9^Q[.m4Q?O-/cIXmC[;g-`]`W`L%e<Ik5[oQ2%LBTl7EtLK6(6"7,*'hdZotPL10;pa&oB&k]@*K4)'WV5LU,YPQf76Oelb`I5mf+nP)&jW7fOV^X(*fGcG>$N6jE:Z,BY%:E?Kf1;%53oTX=QFc;14#BZouMnr\pnlPma\\DE1]UDmgt,h4ZQ_M(iiF72X.oqh-<CT/)(Yt[-DVO[?me-34?fqOI<N^bo2lKkG3fFlhIKT%g!hk1D<FU6!ljEMI>p[M2<Xq.IEs'";g\q[ZYX<T?0>?2B,R*npXebGl^Bj;_QUN#<LMgO]g_U0UJ?<OL$#kJl>IcXek7_q/DaKb%I6Hs%;W3BD!`@:7])7N2BNSZ?SFq?rmSpKMD_4Wc>i,JF]jB.b``>f?$1q1e!##nMs2WguCp*T>$1b(_EE[2JJ+h]:mV(/YUtL!>%5EE8&O+POWqbb!-8tiC]1OD&9F$JP:.A]gY9H/sGI%8u(;fcGj/`g]902.8dSo.Cr'4R+\OlP-6?LtXAmoGd\g"e-c(Fb1[o[9mK%?*%MOj.go(l7Gno)MjY+?:3fL`EkK\(ZN@)lb*NjV;-!";L<X5A&\0KC[?1k1*pu=L"*VYmjK*b]rA-l"E!CfW4kXDOe._:o.IE:%.4OpQ-nGe$))r<;#,J<<ojq)EWUos<&1Al*FFSRd?3`,^ICiLqVQVc\5WeuB/OXjo4+,sHi]3[6MmnGLko/gDBkuh-eA26'CK&q6%N[RK$DA%r.5tp@t*f.BKN;I/K;gtk:kuKQ$"]4I<&D,Tg;n6J'E$B^l(_KR<n_OXho_%2'eS`0TK\sQ=l0n"hn=8-*/L(TG*'K(S%P0#V+=Eb7u%'*S7'b1cGI\:$JP3\QZfD4TllT/Dg!O-O_dWNge:j*Jnp$'_ugg^gbRU-d<@/)6`=NZ`ekC.Z<@8&<`hcm]uff`E:%&osCo0?J1#LmKHs`C-Aur\0T'm_Nt/hsptB&H)ge\jhC,1i`_B]b(VJV597WOZV^n404<N("Z;#`ThS3=igd.O-LOH5Sd?d4HC6+%ZVfUL>sA,@;Gp0D%btH7#&Z2lR.?#"qraW$"X>R5b4O?Ph>RJ\ZP:r_K:is7BoJMD+Do"))8V:;ZNub8p6k)8=7!iu4ZX*>6J;F!%OmDdN>]8d@0AmL!_Bm_IetZPI''_YX)-k;)hIWnu__MMjGbD5LOMCFq,CXR3Z2102O:YEhX]ChIC^:"]B)k2saK;>U*0'#OPVP3n%*U^k>_j)o#U,2oB!Al/Gol/c30TA%q)%dU/dnlrF1<C^VR0NC+<p3AIeOo)?'H=uOBWJ8qT11Xq\(]4rAEac`q\54BgW]OFYB^C`%RsE^>7bn5G4Lo/;8]p6\VD2?Ih*GJo,(1,^rZP.+DJh!9a.PM7rQ5E)#XJ7XTcpS834r_fZ_5$B^?"V":gd_4)Q6ZkQ397I(^SoT%9iiV7Cg.jZ/;:CX1W&gg86/Sh"6n%b!2<U,LGMu7aTc1hVDE0+X6FGU0+P.6d[e@:JHR[=!c^5:J,U$:$(]):)TJ.cg8)%R[75Yj%.PjH^#%u=Zp9,#sNhN*HNdCh%+j2_?c4I>7$!#DQY?Aqs0sY(<FiU"Qg'Rh)`p,&(]oJp#du%*9DXi[mV1O_5L:p?4N%1?Lij`Si%jEpq?;.X,hc`a&DY@FI7Yc=RlN.9W@i#+fsNpTRLQO3`ijNY&2KmK'PA_9iaju/89H,j1a[dm6FA_eHkR5!E7ciZg/*QfaspQ?@#%:d<]Y`9&3@;uKHmm/QM@DU,DlK2mh08q\Q:dX:.H^^g$*Yj4il^sseg!+5$PB$>_k/T!BJas/':cB6`'^JcG#C;?KhOQ4n+J7#:A%ck*M.brO]W*#Z\%o6+2SH"MrMemUDI,OuF``k>K>F&7),e#AoDTa5g\IALk-o'k!:2(APbS]HbOXhu'pC$5DFk9OMrnX0b"eY"[o%5c_LXQN7Hg`(\^1o/H0e$gQM;0*(Mm?bhns@4i:s:Ip$-5V@S%:4KrfBRh<-bq$$N?ub\5pX_%t]qZ5l>-m%,\:4ZJa_,>u/o23O%[1@>$(6h_t_*$D=F\KOm*k/>fHf*_rQmji500uO/_JJ@<4.V7T#F$;3QHmj"R^0@sPK`K`kCd$:]SAJEl0Q'`'Km&e@fshrLJ6&u%c(1QS,[/Jp-<IhtOK#JC%WnR8k+L355I'KpY]iC>lE"eX5?sO6S"C7QE_VTETjs8sj3dga>[^A3C\(Y!1&Z\<cB8:g*iX/#s5phn%k6B,beB)C<FIaPN%]LP2-9sVUEJ9jE8-rS4p\pX=3T'9Bg>Ue.V1aF:bO-N2'i0cF"J2<WE'ff!:RW[.hj(eL(]c^TAq6D<9LB/\%SL5qP?b0l3BhWF0%O%7KcFM&kSA%hfn=CjPLB_BXCO=X5g;6K<e/3j^!GF4#Fp;b*n!D15:DTb-<NY,*;I>BRa\7NV>2S924E&2!%8D4E+3KHoEjiIkTChISTY)%D>R?"7j7cp&CdutXYT(o;^A9F3?'5sjDPC+WgA?q`tPO#6>HhMee-Pa]-U')meoA%d0+mh,CbX%L2%kr?<hP'j:TLE5Q-rt/AJ.1']l5l*::_b1Wnj+M<'V6G5)^7"WLh7TmQi47!(8U/a=8]*3h0+Gi"Y:`=W.rgmNkC7l3d;L6WKsT3t%IkLW\<or$<X@G-\X[B#:9s1Xg5-G,&m:O)qJQm&M3`k"c,@aoI/sK4]ZG7nc,?rcqC+5@i*RLpdTA(&A@>Y0pF5=#g(dL1UF\NoN%:p:bKC7k")FmIFmo.R#923c\cf"HfjiN?kpBoq*<b_Idemo2$#O?,Zk"?fZ3*Hjis0bl2j?c3Q9W.ol'D5;-T.Bi8P68hA1h5fK+%8;P-Sp)W4(2?BlgI[I6a"Vjra%7sBQNe)2sp\njacV)a+G9rML'lV;9p0;I]@2#m$!bQ#KBTVA-ZcIf<B(#Jb*,aQG2M_E\:I(T9%i0=[bnf9cmQDs#M?LFOlk2&@r4]c]-j%bHlLIj<hMd\C2CL+demNWClOGnhGQe=E38b!r>5=5DXN'Bm5;<Rku&^<-sJffT%iq3AD%SM)^;"j%<K^mAa04dj4)FWmWRap=0Pb\M429XU5ae''ae*;j1)J=.j+>#!;2.2gf%"f1+NR+d#2G2EV;IE`_qI&M\KW0_X^_n55[%1#6dU[\h/"Tr<]pW*7bt:UIDP,oc1laUuJ/A=K;_4kcX;8h(g;[_;UecrFN`Fbli?>]iOeWlD^FbAPlU"X;`=;e]U9P:ZQA8s6uh%V`eigf=1JYF=C]J5_bYJ$63/Ul:^!L#EkY`"&[YIZ<oM\aO_'R'G1#+0B&$b?NkAiVOsU\=_>&Cd1s=rjHfj#ZTms8&@%@r_C89$%0Ag=K$9mC)EIEUaZ4f9"CqH=e=4.W^+B!C0mHj!#M!4`AWUUg.@S/F.QVO=40.dtf*hdXH,DNV3VYRU7:EV+%qFfoHWfe&Bl,iSG%1/[5r1a>C\&,X9o(PW7>p5nRE[b0'IBuWlc1r%e4$)0[BL4ToB[*?7)53`.X6ED@A?nKdn'ZOJW]to1sEc_m9#"TRV3'K:@I@:$6%%-FX[H;Vp%_rbY\V#XG=#[&P0VE?,piA1Ko\]21HBi0CueD6r^8F?RE6hR;-p%?b!$Qi3t1,MifQir1C0<m8?!UCa^bRAcO(?0#%%4T4%YS*`47CkhoBHkmN`+We2KCm"i2!+6"'Z!kf@?I`g\*:ZXqY@q1D@(><GjV2P/:))TbNYk(J(hk@LFjbZ0[bp#E9h=4O2(h$@%Dg$q&"Y`HdVTJN>2aUFR-A$+87$B#As0e=b2%7*WH:^jl<*8G`Trq&1/n2.5?kGFfPY2(,%QNhpk)7L2P'k&Xq[WX&%9m15&DOn!%M]#3D4IhVb6R%p=5042@`rdIN\aC9Y.@5+]V+Q_:C;'F[H1lb+5WktbIr3On2'oL+i9pkC_dSq7p?-cArLQlP[m:XqDZi-$CIj]-%APb>%oh\W4X@nVoO>+VKbNa.a=tZl)#)ejgYnF6T!>A,T9&R`+R4W=:>(-7bVt@V)8md'JJV@("p;=3f"-iVCl/oZ;j<?5'5;naE%;'a3PIA<hF`t">.AeNPI?W.@B%sZ,UB'5-VJD;Gd]U>[i.sFiZ0-0DVX55!MDBO`a)e,kj<c`Be7n3E%^.W=VlgM)W_4Tei,a6=I%g7.]0]7_G^O@/D;#dg`(mg?gO]F\\(Ke4f7qB)#F6=W-rkrSd`q?ECUpYRVA=u.JDmLLE:NO-V<-RD7nPoO2E2-m`N-ap/jj-U+d%PViBJZV:V\A4p?IZ2*(V`FG+8,c<&JBZLKOAQ\W2Y>]BkI<FqG%\SDN9LuEJ,!ZYlT7LfV4ttIZHaZMo9:d=eoomjql=Eu_".-d"%$G,'8BcSC:>N.<hI'JQD'R[(5Btif@E[E%p6XAE)idhSZ3S\g^N/R!H"BZ-_[*6ikSpG7"bm;GYs8;Htd3S;b->uC-^bZ?(a':r<%&k?!l^I6H;W?+FCbG]jibE6=><714dSnO:0D;I;h'"$@.IJSQiN"(bl'`,f1-5a,kiR[tU:6"STHi6(4'I33sKG7/Xf&;]U$s$:j%,,(`M3uXPom,=^.L?0a_.QO+BFHuV<^7p@lh*2:l(E$b+Yhm<XDIEeZT5c.;k=BXLMIW3Ml(ut&+K2<?,tGe7!3.N5'F,VdX:R29%iKR0blj*s%X9_1YL;bcRn9YQOgXUT7I+bm5IL<8Y[CWqBV"&(=Q_U8N6m3X%ZGJ^N#,'KAPi'%'HR%&=<6f294)>`snELRXQ6gr!%@8L'#d$8\YP^P(%G`$J;I$t7O;ua""@/+&53+pIjU*GT;KWbH2;T=YG;W=Th"Voo]R.<*f`3n@m#^g8ihS[UqpMupYCPK2>]6b+G%,ZTP=k)fOh%T:Cq_S;/3i2jb!aBtG*2g9ChE>82VFe`VhLMYi"--]EhE'#\>f*<,8l>\Dc1&[()j#e6kK"IR+B.B&9&R];tkY2^^%nm1W?=8SHN7Y[i*WO\kXXr=L1*$iPD*1\Hrah&j&b@C;:oa2?FSdr"JMHZKmC_5Q@]rM6n1^"l!WO$G`<IlXZ8@YW,J4eInK?G*_%^27jh\\3'j#'`'lrNG46QPun$f8gTL.Y;ngLnc:;_Q(+9a<'?E5?T$&qiui%54\tZra#GGab0[uSHq6riinftr<Q<^7XY/2]2]0*%B#BO#nM;P0W'_lWC:Pcf]t#n)h>/FP2.ej37@1V=@2gZK!kctgaj9*!K?'S`L(%)]oLV!dB#./=Yk`T*ZeF;WPT5-m1ZG+iC-XVo%2V/dIN9?ulo5u*Sro@/S'D0pWY)pK5#f<%h,&ML_=.X1;JZu0'1b1+H8?'1"=0NE47/Cr0(h&;!%g9LpSMXrjXcZaDIqatNZ*6EY%Ws)DQ59@LW]ElDkDm;jDF2q5!nN(EjCnp'k#Guj?K=LVT4n1Pjd3[Nu(76u9,EAM:ScbDh#>(4@CI];n6tnDOoh=I\_BG>/JC@M/%F&iC3OZ&J-"K88tk"q;g&;;sMm$&F^,pIh;p/:1>J9QJl<#Fa[4P!FC<d2M[Drk#,G)%Tm:0f4dCDXV".M!too0VDlH7`7:V-CtT%nS?raY-_RgIl4;?+<G!Of/&4\Qtfnd`.>t3s4/*(iDR$k?U)aRr8F>oWSRJ6h7$b0:'p]!s/;j2K3Hl$riNsN-nA]VaTAraG&6m`%QR?)dE?WQ2rirPJ&_metB$N*NanItg.\WkYg[j;!.`ZR]+$s$g'b3GGes\il^"+:\*spVtHX*%#=qe,KTEe<f9lb*RU9$b^VBD#&%hlNkpS6&!hg:3$TduFPT8P]*1qE*9=+8(cXZI[:WT];3mTA,aPUC0`@dqpc'+R;ZkAmq$_AcN(l7I=fEK]*j2W@^hQ38An1"kJ/K%<G)2G0*PCWojBuKq,DAQ72/k'[MX%7Sk'hZ7`liHpopp2IEN)qJQ[?R(V&^-^s#`PIH@Ck21dTn@u^nUa*t*`8%%SkD[VGt/i(i;%o63F!7=NBS&_5jShRpToe*@:-`#>tdH-:luZqU.feV!'#WHf.+7RXi*H]IsHo7_o?pSZ1pOWdajU1>*lQ9pY+brM5mG5#9[i#bL+%SsL#5Xl\GW!0DYa^Inced2`ZE6_&dT'=5mDYhmDRc'mc##3BHRqjTmh%Wj@AA-?aM#4$!t(g7uo:FAEi0,4`:85DQDLn!=RpkKBs%iOELZNBe1NJ^4qX!AKO$mmr?U:eA$fBe%h-W]h;BN\r^ooN&S&L)N=;i1EQ4"2GnX%.rCDeM\]`)&fod[i`FbkRra3'd9leAG7T@%!0O?QcS0F!0c??o1>V8TBSbp,6Y(gQcA2.!XP0E1]6H?Ul.iqc5oR%SUWG*<-u*l$fHAo,C=tsCiX$_C#(sC/^=6CQ^?dcVP,FpL%rI6EghqU1"']10l4?fT+g+,[jNkJc1#Z@k^3o8TkfEFMRmcO:F-9+;4)B,$tIJ[GX*.Zc7W]Q-)8EH:k$&^8C''=>,6IXmPDX'l/%lh/96GR,]R1CW'IEkV@@Vt(D&)-9tg>-6$gLT*Pb&&F&%#-@\hR/kNn30!X,9l`7\;f<k,d6]Cr>K_e:#p=U.cDn.GlKOKD"H7`J%-fIAZcdQ-bK@;K]]@j\;]?4CB%#.eNmnJ9u4a*/BbdST4r!DWaK<b:TYd;&N@UX?UJ<O%^%rU`XHXd:RcSAc_&)G/%#A?,i*s.;7%IUYGu.g#Z3eo1\YP!&Ebm9:"if^O*#G?1Eb'!gk33RBD04aGMon#X1-clh.#\]^[XpLdlo3C=7HH&Xe1N8*uOM8-4s1'].W^,,2V%B(qdTjMaID3RBaIa7HXC`GBc]m]b]r^e4?,a#T,8YX/Di5'h2/F?NR&$oe\.V;%#5*THtlls$DCK##BmQHPpnapkJLG*Jp.l,+1.%6YKZk<P?:3r81uE2_Pbq$66q5YKKN)`C50gD8OMpf.]IWZ4bb0.&_WKL2=(b2o?REj!Ap2DPBn8`<YqMKH)s,&/\39%,VSq?E-*C%m>F"0I`L'Z0L-9#)`Q$]T9Oqm[;VJbn*h!8ZCVPXg3W$7ipu7fXR:/DFQ!(,CR3OpX83/P\"mqcUb*-uNl$H=bP'X6'hcGm`t#(Q%AZ?+r8.CPG9S[^JY3%'$`6T*0%&c0[Na^-lNKR('@%EkICDY^fqiP1M2\=Ps-t*7\][Y;]gdHYj"k8^ES4]DPe+UnJ\rABVBAF;5%^[;I%pmR'Q\nQAU')ZS[32?WTZs=TH#I$5Ap&EiAH2_[Tp&o0OVOKIg>oFo2#WYbcT\s-?,<gt2n!9,3n\p>C7'-e9PAH2]7H?#R%9QCJukh=RZ@,M)30[qo\:.6<V"FrX5jA(A,5$]:TIh3HB<Iuus?a4GS1"tA:"ucM`0>UhcCaM)Z?B81l]CKPHRI3?TmeGP>oSre"%m#jd#C?<tl85,>$cS"$(c-rL\NGCaaR\]*'cf!2?EGfP<6%b1J``8hVqn.7Y*R_"KN&8K:[`!2ff'#p8B!^9GJ1jdoRl]E%7@obt%]4L2B>'koDe'T*Ol6HBLTFCKWS+XSBDY@ghh;X\,@2X3uhsq:WBCoV_]n6.(=XiG5lpTTuaW<@LbN]9bY2][';8((#SO#J]Brgl>%H3mSTn43kVgpLmN'<m<74?n('DqSnA_Kks>+s5P'HE#62WDicDbd\e*Zj:L*&j]C3*gOBAb04ok%0)K:co'`#L&qBgj>F2<s3b%*%j<'7@!9TOH>J1"8oC?&IB1XE0=2N6EH3IV<_Bfef#Brd@<IH%)AA58#rRl7W]V)Gd-ODOlo#'50$%7-b:F:J3%ZV96`hJGlTUa(n%NqRY\MCO%4L6R'_pe'#Sdb,HVR1B,B[<6mfnN./"piHek*"JmLL`#!/f_D_#$mgZ4%[*oPJ'V\W?0IP,.T>:l!9$^?c[EF(@KhP!%$Q)\'a%"uM+Hl:nN5Dl&<&`fkU2L:a=H%:cM_eCB1=.Q%PTQ'gjcq)pOXEq8*G`8h:;r'eoO-r'rOSUNX4.5d<d-"7>QC<V"P\k%%LfARgolj"fl\l"b=]Sf8YjCXc+OA[[fr];U(bLF\3e#d[5r)>H<3GsmXu`!Xk"A?r!HYfb@pNMph3!f+jE=kSS+,3ZUhYW;YV65(%MaJKN)j*M*,5s/nIoBN(\;91$0Z+e^*5)AC]V?TMe*NEi[Q33c=hfDin=hW!/h2uN*I)=u<o4X6>_8$rfX+3/;^/Y6[]1?FNpf"6%<LW`CI90)Zb.Le92-HR%<":%3gI6iD8ON(Dm\5:mQb\3'P@Zh@,:XD<Sd4[2];Wl`CdSD!3'8"^f%JnE%`_FV[_mXmei]8cCO?OB%L(ZG6CI=*nWntWnNF?]U[AU"-c7]O:k6^Xe`Olj.ldn2lUHee64:o5;$9qF<5)i34LF%%`Egq5M.7k3G3A'6hL6jFlJ\RTc.RfTa%pk0o6Rt*1/%bW-'`4d4M\.Ku3MMTD4fU.q!`hq)Ga&04S7Ub=&-ffV<XpY*]M9-LA('6Sgjq$&I^8p0);NC(0gQHY`9tsr.B93jL%d0NnOi?!'tJT.^U@Z=$MK^6/\hHI/!pe$\CZJt;-#Nd=^pl+"<d'`Oe</0`C$Q]:3d4\u4+ta/_m1&d'4-VSel\A\6(I1pX"4g]Y%4GXu@@94/kf5k?mcG8#G@nSakdfbZ1%1c2E4J3m6'TUq#;B<3RF0X@>(C#1][2"aOJ>$0n6D,*LA8qYL/ZsQok.d$U&\O:X$o[34%)5<&l(!m`s)g_XpG8LsJ-,9"JC@KHP.0&LUlN0+'-B]ADP&LBrOh.B>0"BgGN8to8*JKU(SHg^fpb)C,(nmiLg-)U^J]"rQcZfEH%dWZp0jJ-:s=V:18s!H_Eq)nYISTtSKfOBV>b-[3PnOPZ*'a1W5HZX,:Kn?9(/s?G?#m`pGM=1!5%!QdM(U2L'VW.>+$]6/0MhH]p%-#giC6-@[D1\jQ66Qr3RX%K_c4l(mGd`>cmJ9fbnB'NUP;H]pQ#SHiX'?Y)Trf6Vcpi"]SGM("B?qOegdfffdS@?PR@AU[r$jN+F%Uip.N]`Hb1rd$#e>32bibqBOTrB`0Uhk_]q?A7cud!S]t&odX8J9FH@UeeMZ!r)U(%Q;O+-opGH('9nnQO>.uXs#W.A9Isud97Fp%,Yt(Rd>;\oLtjtim#5[oD#X,?b59MTK#0gX?,Pu=@?]LYn3o&C%&KTQc3`gk?O<WcN2)`,H`PEITa,WGMIPu]b^o,CXI3_eX62HC%N`k(@*#2QR7s8e"TM/ejP#oDr&0bBY1CQoZSapVuXO*VY?_SSS-X^3Go;b6TgeL3q&'#scDie<1gbR?2JFrgH8Hp,(%#s]ATn5Z\%!n&6-eT,:0ThVYFOp%S&h2/08s(5=!S2(`jnDGo6o8/Q97T%93^N5TsRp4mZ%`V)k/h"rMJ8GU#g:GT5mg,$j8IK3.\SdIAdaID%%@9:G1@1Yt5:9.WNL6I]]1aVeQR7mdL^aO?=DkIrmADf!-943pGE.nX>ctIg/N+;@F[86?:q3g&5k_g,r!7<Gm+[S<m/UO$HkY_CS%LJl(;qVVuYr@V/O=rQ?\?u)Js[K:4Mi?8`J1Vtp]U5XXHm0toI%LHB5,@WBX<"fsFh"1VXp+R<B;FmrZ%Tn&j]!OH+M[WsGr)gI@%B+,_PBG%N[\3(09(u;q`Dr=hgF=!T!&2,[e*!Y;,5(ZC6am^Lo<K7I7Nu<C\>NKAY-_InW]`f,m#rs)o%apj]mK-2O>Wk"g,]"[I%L)U3TNV\qM^R9m:Tkam,W2j.d$j;X0</)>2ZSW)e3if`B?nFo>ZVog7=q?:.KAW3tf)-.*YlI2,8W+8fTTV$09/LeGagDQKirWp`%.4YhGdVps_93r<,D4OUkMi#=V^pkg-i2JQM!sZ,TYJ6FcC)up.n3R3f`X&&[&Q'#(TrA79f$E,f@Hb_tcbo?XpknWkBf.!+O'\\!%ZGR;9da'=hhCgHP#52-e^t1t"o*D7dkiSVZc(%&Dn;u[9ms"-+#Y#EZ-Tq?*Q_KtX1JBq0;p.kNJLp9=^49=s8A(V'lp7>R`IN]0%GDAhoA-1eBe)^\>j.#@$n_fdTA3G5]*.3ltQ]A+K6G0k[V.W8<%9"P2W-YDTQbNVn4L=sl+(m\U[D'U+;5l7l&mC]L#W2n'(-iCQ%9LTQX[`d=JKV#S*`TaHpTZ3UAp,t^Va*K#lTSH=h1bQrp7O4?FE'5VNLio0l5t4QgG+`@)_YWptW%Jl0#;\^&`#D^bn5aR?B:=c;%(q8s!@=KM3j*p#A61UKXMPV[&:5Q3*U:i7B9TU\6n1B*>BTDq"?nQsc;Cr6CAV(YK,aKeZ*+MMtgcQN<1$cNV,<7i?S-.A>#,!!7%hB71K5Wou8H4Uo]B\H+0a?T_O'+Nnt-*TQ(bd`*?_je5@\#`\UO<FUkQW"C1[6T&D$6\Wm^&rF4bZ>,'TRrWBr/A1+&V%X39j>\j%k5`N`Kdoff^3Rn4)?R/1&HK3g>Mi?8"@t`47;^"Dml9.m&d!'@K<*_0J]j^6%Y#,2iL%k3[O.9dEqoY<eCk_sCjG;^@p\AR[K7jK%FaQ"uoL%>L&F'o"G-2"/0gGZ2At[t;!sd6GJ/$uFjt#enNgLRQW[#81]'(VkkCkcA+_?/_S-36+AC):t+>WD*+p09fRg@-e<6lKH%3:Xq%Bf)[PQ]Rb/*DQig7J;G3`qN.miPc3_4me_H<*$5P8G=k[?12$R7R7[Cm4t)ZQ@\*PD7HJEk\2Y`V=aZ>$Fnshl!lAR#;ZnF%;K%(SBTX$"Jf_EAn2JijDK2K-Aom?66o$\DVR0tk2kLu!=FT<3J%<jq<[2XfI%]&=5@U]b$o?<2-+/2en.''mBZdatbu:ONK/"sq%4jZTXiS;c1[%QQ#\c<F;Y*NH\2>K%t*pH%DD,I84a%^8L*B#`k_A]Y&!N;m6fLTMj=3f#)6g#.,#6BdWfq7"2YX-G=BmN[<g7WKh%[$ILc!Ac3PYcUKji;hRHD2e5o6r+]\-1p$X;Ca:a`!;H\:<%2p[_M0sT1s$OLb"Eq12M.1;$*792ASlun2BEQ38>WQ.4NsfP91o1%na3Ys'$($T+!M9-nf<9Ia;o.8@fWKhDT(K\TWr)/E\Jh0qmR]B#/G3'!O(8Q];M5^OLE9W9SX:(J(MD%F96<],suJd)9;_ZIgE3B%Q7UqOdFi^DloG9M_>Bc-O*7lUq.:\3IeVVC<c[uA.;!InrK,"+bQIn^@b@lXr>`%p,c#A[I5ZK@J*iodUiA"pV%%\1bOjA=`!^f[%dTsHZ[kgTA^klRY"dRU:NRXkV?CK*%i1168V4@lWHC/C:48:*]K)mEShoPt/;D8$4T4n$uTNoPNA.cGNk,<E0Ue$FW/0:7"\ZK1g%Ws;$TDZG?Lhf!?!3nA[u"tjI_;ok\6BiG*Z"[Kt#i(G\ad>*3S*Q#qY?g<bG'Z`1g87YEofo#UAL/n?po&k#>hraOWCg:ss,WEWl%no)"O_<4S`l>ia*E^!AoTg8JTacaaQ8-?2EZK_g51IX0n2^AO&#\.bT5AtR^3$*Z_r.729[Y8e;K2Ei;jcaQ?iVuffn@.Khb7kO*%=_XWu`?F;MYKpLZI0&E;:*B5No4eVj-9TPfabR\TOn?l:d!$?fcT+Dg2Z`e3U]ro8j[[KAoU-skT=DmKi:N/6%#oX$/,M02\&W`/%l1S<YB<V:]S[Eiq7<QuW[HPNqUguMn@*g6N,n7bKhZ7JLOu^LeEYq\RrVHL4HI-$f,db_lIO:R&H%CB(YSinUB===5n50Fjh/nG7%j49BDk+j-rMbp4c?<u>Xh)N![H?rBSJa#UVI$^*i%KVEKq(oO,)"8ON_7;iu5fnnVO8Jo5nn7UC4uY<U,_,P+?H2ll=6d(>-u*)#%8N0N<R4M6gG`Ngpq7*K&A?@+!_pNhOQdVUR^g0%iTE)lF^m",@T5!WQPV;N`q&[A5L,h7I0U)4EGYhSVe.&M/HHjV=PY*@WfUfiP%^]/c'coR7L[Le!]%mZSQ".CqE'g@qWpbS"ZaUq8n^u7rLGZ(Gidr02Sf@hk&>*ie0+WS5^1@c9t(s*Q))2(gkQZ0OW6POOUCWUkb%buHP.](h%5^\`,^UIobF>^Q(?hmPkOSEA.Qc]$10_<#Hns(W\_>^R>gI7Z3l%FLQ)AD:bA!FRYW%+P@i-gfJ95fT/7ob!!s?&0L_%Y$(r)g1"Segf[cSOEVK.cgSUrmX"fPbXe:YWs><^$Y-uH$XaC`COk:`5[.T<5R=dQN@b8IVsPU@#!eIR%juLlHANAY(-0)%dj6c&%c#qdAe`g/H2rd4e!5DD'%C.N:Y0dZ5W?/#NG0F>75<f7b9OZ[F/U8LIWPJ`Y,t#U*\2_&DlR%$\f@o63p(#';m:=enh=h*r%,^M9%cl-d0UWDt!Z.Y?B+3R)qoFc!G$!jiN!<.?2NII(\3]6u3l$*1r[h>o-`O1coW7Qn9$Rh\0H8#eP`$Kh.JWBTS1NMleGSm,#dE[@;%b68Y6JJ%tg=!LO"p4][9!'i+HZ30?a9ApV8*8D3';eRl8W;24>7@<,8GNO8`2,+eV#RK$GK$Am!\I%-s_>K\pO[V'dek-`Ie6a0m%pXB]-@2A6o_r]Sh=I5+So2s/o`6ESG4po)jaZ+S`$5cj!%F,6d>&]t>QhJ-[R?=\:I@:-7qUQFbNonMR>fT2/o^6XC:<3c+/_^8m%Mb87oL4Cdl=HW]H#]a`B+Q+lCTjM^/3_Pi-^[1Qc2@F@05g/'kPain9XtR,mH,ED*NiX0"XtDRrpGDji45W%kgS/P?'mJ<0(N!;9%;$6B6D'aODH\1f?59h7geT^2XNurWB>&N#Ej(ols3PEj[\T1H"P6,0f=JT9F9Yq0s@H/gBPC@;:-Ge.:T^T6U/mR<JOpM;d%:=*7%c:?>s(XRS^-)7)>_H$;Ka`Pp<,?@?.Ze(UoR/q@bTc!JEGC:c/\do'jYZgd$oTn'642-AIV!G?[,7Ee8.BTe#$%_i<:tGFB90.T'%?8g'`358UHQq"0b`:Tg!9!8dK0s2S-lNsXm1>Eg=/8-_*N]CArE\Vf*k9lEAnTS1TVh<NX\f<jLkN?Z]KYl$?$J#@^f'X#'T);T\%2jD&boSpS8U8$.h`R-\I4Qu.DbVMjuYrgE7;4#P-Ep\j+]53,of!m9c`&hN=kR?e`?l15@E@E*QM"j*mGdG@'P5/@*q*Qr:)*XD-%='No-cB"?$OF^@.Tp(6(3]//$FlXD&cdpAX-O6QWh8'&aca#GN(+L/8!74-'2sN7d.X]DlJ?4u33f@ubb\-p]IXY#[Ukls8+dGA0%`r>>1\BsnIIfl&<"4dM^X^\HP$e3_A!?<V.e\Me%!lkm:**In&%Mf,R=WIq?#QS$cbF*`'eC-P$O8S6Hl*j#6"6t'):sCh4O!L&6%Lm^oBDLH^t[gX?n?1a6n\:*0TH7=&-Xq@(-bbT(XoB*;'1.i<)V3"39RQY=8::TN>9&35dHq:BL&OMBi"L:aaO9NF7.F[Nm98GJN%KLu8A0bm*\UX'$Sh)%QCn:)a+=fg2!EY15362B2\+ECI*MpA1VkYh2&\:VSLeUSaT[H/7KaChNu=h5LP'O1);U(am/?4?<+Te4OP%5Y![g%&S8`r`\6p-dn-cq=uX+/N!90ot!M9Fef`LE!q],PVKC&I=To2-1=qSM7.h4BlI=\TfPu\h.UCVdqkHJ*)K[hamn_T-=p@2%8%eT>:I\q:6DfXs+LV%GURm_7SGX/gk#bVLoqpR]p3K`jmUK*6pA$Ff-?OmuctWFFS?W/l$\=Gs(oBk).ZRA7[E8ZqqP78=%JT;t%5Vq+L!71f:JSJ>jh15Pe!(rK#!UY'!kG&UV/-OG"iC'8C88oZHl0L:7Ct--`3(WfG]AD9%\9oVk!6G[W!,TN%]gTrn<K9"I[:hf\%l/puj_:Io$:IC30q3#!3,b<k0r_,O:X-6APbhApe_pYjY)p:2%E,4ZV0IFZO@D2[BhGa&N>IYF7KMQZ/2u?92r[qTh_r%*6qM_Gs%BYk/\Ym$f<"HaRCJ,TJ%*3r!-2f;Z'!48!*hFRu&`u"4W$X\Ca>UP">\cHV2&GQ50Hj')k'EO0,`*K`Ioj`d:UG.n?oJ;7&(-HFZ%4o08r'sOqH!T&.m'&o3@_bDJ/U6c(C1^q)Un;Q,*$.L(:nRl--6luVM@%3D@M'9TG(G-aP9M2;.*Gg$KW\h30TQah6"g!i6ap<&2%82('bR_Ns/G-U#kJMF2l>D'*&bjDPD*EI"ZD$&MiI&>'?\66Xi$KM*bK*5K8FXaShJi&>Ca;%!n@O]s*eEFd5;'O+YdFXl%K[Yqj%#9k3NO>LC'/logK"EHdPbSs=R.NlE^n7&`Pgb=J&h.4IQmr\t!d!1\3KS[8j+7.>sMQ_)'P5Z$nR*L3j<bBY^i&+?%AS8f@",-)[%%L[2/j=>)b"!qpjDW!DEX\-dehPt`J"S2Z>@?(k[+lh`LMJji]psna7/0[d?+cWhc.o)Vf/7S!\B1g?YZmGj*^0t@;Q\qk;#8,.Q%VAGQn394!IY8.N`8EWQ4$,dUV"/Wt0M?]nE-UR]"%L`%COU6[U"d#&RN2mZc!g\$=.j+qf4,HLpbN?Thi?e\CL`ACJh1C/S*6=iU%=NPF#7>?+4eZE#RMZ@9DO7#:F$$!>-Af&c(0Ts`B4pEe=2F=9M+N&UF7oc+1q;Y/nB#U1?he-)kH>BnGOibLn[9qju!CV"R_'-Jp%:gZX;N+3_l!ZR,qPY>Og%L;Q5q`T0U3P*7Z@s):@APK]jW11D<Kc5e@!<CW]e8'pd`JdSgbFlJ2K`C^i8>+m[mHjZHSDI`b+#U(a%lZMCBeNJ.:6=1pXX;80Fgt=iL`]akC_!ePRjkeG>^YVU1l/t2hrHf"U2Zcp#jth-Eg??c,i$^-J"%JOV(mY]'M;rht9>_<Rm!:?.%EjTdHETu2]8U0p6%.t.MdFoAY,,Dq`Q5iX^r]qAYTP&AmVQ_$,_1:&'2=:r-)'a_)OP=5?EB"RU,IU_;'#E"N_!aHoP!3;!XQau.%)#h(NmTZh_*u']6<p[(h6oGI'fk6%OiYZ.5/WiVT%+i$)FEj'/o,4XfmGO2kn7;KSS4t=$J1b8UF)ntZLs6HMEIT"RN`Ptqd((f_%jPp2"dXP%q_#Au)X#sF^/-M=5$Nm[R`=*719&OB+=cJM`LEZ(*9(ELA"uh1tM3-ZsU%0`r!CV<aJP>p8DmRA9OFc=O,"u^^aXn6o%>02@]3"En>PKD1M9HU8oes?q9>[uF-h#3YsYX,sS8Hg%g[P!nm#^_;?C0`Vu']9R-#sO$0Q)@l#^IBSm^gVH4KD]D';dpPJ3e<g_%V*d8`XF89CZ;ipt6k<h5k%e2d)Y5TW&@NW:ZVb%b[']om11<-EaN@K:lh@[B;tcQO>N810@adF[E4f!V@au\GUiV3"(dh5@m(4Y6%Y#iHm9iC,X(,rtQ6D9`b\PbedQ<.V"e5MHQRjt\Xc9mm!Zf\`.kslnTO^l\?iritr<;)'E%C/UD/O)E0"/JOUE3c04,W&R(4@WcG%nXMSX&p81sj7[b3b&;9hGd+<jGlQ:3%FbZ!D53>>o?`X-!9K^/bid8Kco0%&%mNFQmmGqC[CDF=qr#nt:=\I`63]b%`a_/>hc@M1%7"1LkXY2'&3'PWoV35[Nps`i91_?5s5\g%?<L#*GS-Je9<Nd,A2*A&cnBUF(9bq]tYGUX\BdP=,(4Z8Ok]Oj]$CnQr^!cgXUFsVk%dp@S<94s.,Moa7F!0a__H8$JT>:qcg[UUX%$kFVqa8F0e_O=RfTCEgHSi'l9]AdQpW"@'qo#/&LMT<@EYICg`CSnHe\*c+t=L*<$%ho"AN\]^]4aq-Zl*-mQ%#k24T\!*o_#:\V#?Rkq&C.B0KYUN!m=T=_'"#:4Q.GWron38c)p'7@-9_T/IGtSTIbq=HZUi*nn3tFdi%^3YIu`$_7X'd!rkY<RE<1!\i__]\`qh]k8iXq8dN+d^koe3nd?>t/kJEnWb!@'Q%j4(@r2,+>Ik5h-V6ke<B.$k9CcIup>A=0!$2%KnoRQI<g;+86'HgGcm]gr`E09le,DTR8!Xk,IJD[>+`?gW*RG19_/L?*&W(!opu4;J4uR\aRSs@';P-<-tOMo17NE_$$7%SaZf-`%>^Fl<\?0c-%2c,?HlJ^dFYEQ1(3k?nGDoLY@;9O;m4_H'"=grLWYIDf%plU!`0u%n<si8Nn$eCdpE&)8lFd6l#@sAc[ub$fE>e?[%O?dh,(%:\;H_q#RVE?%O+&rc&>XrSb;:TG>B5q'=8H#LVcLO9bq7V^M%lK?a.lTt[>1?T=os:kT8Hp!CHkK7Z`d)KQ5\6U&KG"t*%q)tA7@KM3HeE2)\`$+'r,EEShW-+.0#pQ<TEVB8mh?s*pb218eb=MR,<]DE(^Jn$'b("N]hpZa?JVaErYgSUe.`g%&Ku%j=Um!X7%ddfSYN'a@t/dX.QjK`kn#M%YWlq6:/%hc9@D3[m2#d./l*4IB'&ChC'D@&17;%H-n4Ms^H-itV15c7snP_S7+(]rX!i^?O+iS^hG%J5,e^aGOA-8b]^!$)uVGkqDp?Lf*R8CV8P)VuH`?9ej*5^hE8m3b1.>cED/+e'=?,#ZQtkqO)$*)^1K]<KCD6rJliBYP1(5($dYN%H8"LDaKbXC>NRaB>H]&F^u_Ko:e6#AcLDfn10;g$mP$dsm;"[?$2V^:;dr;DW<0Ak#O;:0Cl3)Ck3@RMfaQ6./bQ^Nb=u&n]c<nN%=[lWd4_C\^G,%N:M`Uo"@%u6mb9BYa+l)u,IKfGY4&9-'.bO>:4%pri<<_j3LJ03eeu!(Cdf;`=.-D)KSX(dp0b1FFnT%Fd9O!$B%AG:\A,GlW/cKQd/jf7KMkp<H@_,HLm%4PP;glcIS'bZm!kBP#)L\bO/J_+1)LO9@Kc7-^hZ?o6YlU*bVISCj4@%Cq:F3p2=[qdf8%HTi^@EEDqWK,S-8p7h+u^jWNECt4J*8(eibYroO*KEVm0e8[3-MQ>#_Dl',AHE)NN!/Qmlpm+M`fpibdP_QghLstLP!nR"jdJe\5%I+H%DARb.-M`N$JQpXZS4BNoCF!D7-Y`LG^ppE\YJCkoj9#eabd'W2"W,mZnNur9Y!nF+M_KC5;p,^\bQ7C9i%YcA3USKpZ0%JR+%lft]XTir"J5TZkR.h(AZ5$Rs@l>G']<jED.6W+1Ejh*W%`]ID,o4\oB@gkR,ir#2HG*SW5Vct./kP-&koH@.m)`^?fJYcO5"=SH1%93(S!Wble?ddSZMOfoLF@>s^``T2=foRIns"<.$`\f9=Ifj(uJd,s=GOWWt$h1nV2DCW9.$H[U.9UD9?;o^V$/Tm-&WbK<;Xi/[u%+AF>8;p@6FAaJkGJ5<]CpDbk#DSJ]*Kq@?#P2>MQ`d=[=O31+LF_hPED0!p5k.N(HT2r3fa0RRHIq!^S+1ZU#WjCgd*0eb8%&q!D%Fa&2rWYETC0%0]+ZthI1i+YH=7ifZk-5arRiJg?dG9^];&fJ,n9@OmUq<)l6C(BjkjD4<i[?ZK2AUHnGb%@lWIkC#fRb9\6`,.7:%-),3Z?C(G60OC#J]mE\dV/Y$Qd?UeuZedj?PA\'`$sq$qD:?gJ=?*WYjJ]s6I<)<qk1`Vuk;H7Y==HIJ1rf@;qEA/_7t/L`F%3=d%;!6G6JsoT4^8;kCll@/#/KY;b;sa3coi<)(nL2Z(rBQcd)ngMpYa%_Mel0b-aj^!QimL8`aJA4R?)=I$d^$3#q#Zjf/%Xl,=*Wj_%/[C;+SpQ'k%^J%jkj\eo()`:>,sAV^Xml\EAL1nf<S1of^dObV[e[4`q)u!5XOU3RgW#6WQY-U$&?Z)5pE77jTd_F&:WlC+T0>V!%i'G]XI(+X%+R]CF;!HFGo0S(WjVicH#2jCZ0AF`ERK:S=@[6cEH1[1$,'YEUEDi`GY`Qt2WoHj\Eq*%W#Ze1NBs@i4\W?/5rOp;A%mB+&sK7IVD[r^asr*Y=k.Je@i<g/njqk&etmp4n0O%8:.<o)]$aM&aTLt%JE,.5\:T7=R0RIJ=CX"OXupk#)N+n?^/40'#S[%AMb%XG.<JJ!j-C2/PcWV(aJRTZX5*JCAcLBahdB-7+(_'d;SrU^.)'$6#SI_;NXSC!mTO_SMSb%Q,.M40VCVfBUj@8IXRS1g%RP=?"Ck%SX#Pq*Bk><odRb$]uM.R36nO83gBDo>u?#R%2tMi+Bgp8K;JW]:pFK[O-CaU]58Y0K0t.j1&d8a+%:pB>Iel1_+$2n^\YB?V9=UI%-na7TiY^o>\94ul\`l3Soec&L2p!jIf)/F*aCV`Z9(6/gAuu+X6P?dJMh1$%&J1=V]BLl65hV[V&f0^p&%*Hf8\s5(>$`uk:$rk!%dr\4O:p]/ML!nn!NK_Q+^0C,S&NRR;*fHEB,cruln`0E\YF`r6:ueO2X(U\i)(<2=6E#41pr&aF-l#F.[lW*lMM@1=j>uL)cC`Q:%Ri4qFCm;<rZoHfoeXH5Y[uqH':KMeC*EF>0NsoT&WTiWGa7G@fIAop!Ro.qOHc)R`XO]4I=jcLtZdgHZ7r*B"#i1=m]]eKSEk=Y,%S@K&^^qC_k01c0rB8u(Y<'XO!\+4^t?]2dICFX#nd&acU=TdbB#@6L2e8+q`O46LA]F)ot&ua`qo)Nd31mI_sB4P.-+MHJ$2(;At%pU:FGc(J5SGR?\k<QEQ)h;P\3i>_[dZFVe"Q^.:CpR+&#CZR^o2IB3:-4IZ[^sPK+]@+3@YGG;o7eGjmGgiagkX4+@#PlFODi6,d%=_L@7C8,CWH1_CMGY4Oh=<_uFj0a,V(QQ)!hR.sP?ak6CG@?.IeT2l6d<s"$a9i&jG+K5(M+\q=6^>7NZ2e?<-%_?C+k#F[`W:4,%@DCq@egT!_EOO0CNB8kH--PAS;IMB'&Bfu+\;Ke4U/hSre#n4>GC>qfZ[T+$FU,!*23[U%?`K;\OW+?V)7F$SE>;`;_ns:Gc^-i?%,6J(12OiSCSb<SKbZ?ts$6LEiLapX]3GCB[J\(%-d^E&mgIh'-%0(_/9KIIbd1_t'5"jh`m2")i!%Z(Y.#k&JlS(i[:[q7@`rV0I%04`&#9Id_mPSM(<8%)PC>9<_ZZI\^`N0`oajp:#J!1?a&4`K0]MCKnA`jK80-]1]"D_dm)B_[bjG(^[Xm2cUK%R3C#lQKu2OI=1!%>nXRplua=+#ImEU1fdAq^<l,eEdpIs55)O2oc+]-1`0_HZr#i<Kd](R4XdB\q"b[NkfVdqP3:d-bd12i'0A/8Q*n\gUjD+KmHqg,%>ATZr!CqmWe(%<tVi"%12$_@uo=-YXaMe`[$AE-\W]A(j70h(Zj_W(sNq720IQ%oYD/KcRK/?)C)>8,,W35A7Ju>WD4\rMDU'k#`%3s5i`Pbm&6:1K/Ic,&E?Dc45`96J2[+f:8;X+V1t.UuZ-!J=iE!.AM@CeXk0hg/o1@aGtqMHH,.c-(K?^"'18/e]45B:%!`^X]+k%mGVg\7C!UO;+qYh;SZo=;qrj#[dq,n96?IVAeXCK5]G.37[D71,_&^UXROX/QG5@i7[U`1\=-P#ETPuuG,XDYm6,An232)d@a;kI%fJX:3J$0?-fH:m!Ddfo7-n$Ikg@JYL-,DM2O&B:;+oMa30`o^Kg(NGBesmU=%&T-M(HKAF="<X#QonWsa&01hCW)+n)>hQS3iQ(r%CaBrjd)mIs^AM5T1+^Y;7i!HZAd#YTJ8?CBQIf"._[FqUY"i#2R1U3Qh"b_4'$\nAAd&r+IQB5`Jr?N[$4u])=5pEdd4$0pmo;!I%4HF3'fI=VLSoJ>S_Lh)6@(>d5@'sAbAGjq6.3')r#aW7L7]Qj.&1JH@AqcDV0CV?8_Ra27+0o&LKlgV"?GciX4_;CFrgIR94\H:/%?Rq1NF8^V1N7r1kgUr%e7DRoN[ruNr'VI2]`:0)`BYJ9c1B+s=$e)#p(C!Uu)dueA(Lh-0?q'bf?uH^7:<:1e,/9J6a7L.SVoTtW%0/6e9/d>kMMG>0MLp.(WAX+e<@V%ujMEG4BidrPoDf$Cu(2FkhVoA#babj!4]ZDEGn7ha+;R,<(Z9^nH@$@OJ(aCniQ#X/4b*b$Y%CjBjdF2LX[p]1+p?aV(Q[JEs,1b2u+YW+.=iT6D"YL6.JVp;N,=Em2b8Zl/tZJ_uGap9L:.Y<WH1p[@Y>^.+iNG(\grnWoV?c8dL%b2Oh,<K9>?RAQ43:N]faqXB(e]^7ro*QtYGWaI(phq;XY/6#OjA^L$q@)0i)+#uA+`0@=2=4qf[nkq%L@u/oK+2trs'\E'7.%L7H%1@u`g%.uK"')b[TA/*!i%oQd*a(2VmXllm#aK2Cs&h5r[qT@]iQXVnYQeq/b357(HFS<^8?O5Y(h#"P.K@$`LBHUHj4kCL)IC"CU%Z]t+1=[&9f9&%rE#8VBPi)B".7$aV1@1T*LK_)W`J63<JYe.g[8^D.+-ROhGV)lgc[QKlGT!I!FdK0_:&@Ud7KJhFqWfNC];e)"n%Aj%6!JYjl,et6E=*jaMPQ_?s'H(%.?)*?^`7?P1%FE>Q=KeH0@/*%rP.]p.Ee&8$V_L$kLL5J65DE]URV+Ac%HArjYq.u1BMo6lY%[HmPFi\5BUR'_GA`l]=JprL?<*&hQr!6+UX>07MjC"l<15R@NoDGTNY0nJ`P=96t#L%/[7N3eNfU)nVQR!LNp[l5CC>cI@7TA7\U%T*MW9q.]5Io2>"aGi>&4(=r_6$@;0e8b(o3n2PX6YP!o1n3Z(sS;H+KqVhs5;2m>#><n8>%$N4J5/7QK(!?<VC<7L1q9XSZ^!_^F%h5dug%AW*XYAGb%ebOT=#f(.!LLeTV_C/'\!_>U"<>$<A!rh#A[n\>2=*^H&$=bb$!Yo[d"s>lLaKtAK<h.B+?-?\bid(Z:GON@F%B[N3I?j_QU$C$qS@#-#BHhOKTOG+`!dnO9\"oTK@a=FqSC=I(5)$qHl_9YPMeb*,-U>j4-fton"X5PWDFZm6Jd`O#+8cunV6gr:^%pZ`&Zb)h)1(<DGVijS-nN&7mmaC6R(c8hJo$9*NpC\)`FU]JbU$uRq]Wf__AA1\6[[F?!\92G/?[Dl`c%eF%;M5Y$E4k6Jj-WL@0%M+5AMT5ta-%jWc;5[9r6KJajof9EXF=o<9:4\/WZA$kRCdXs2qa13U>O*fH]<CO6Zs-%^E=7"\;-"NRL)(7+0Jrloh%8@"#FlfqD%h`Vk='$&>N?@oIA4,b1+##o<F]FE#>1mcg3XX^-$!.VRk&d)$C6Fk"P;Uo[6Q9%E4dlt7YZ:k)5X:3:)mJ>n4Y<,,Nlh4NT=FpUe%-ShR\r-_&K[DP7.GD>_3o-"obQ*pTJn&*jPq?A968Y4OAI-o6H<Rckl%L5a0Ut2kj(bd:=Nn75G*2#<,,u7%Z<9PJqd18YXj`bC,%Yp:fZ(VT)Oko?a@1S.oI!/r]oOrk!oGsGT"4_)tu_FM&#!:2L6F(#E&9arD];"aA?(gMNg/,aG[]*9"T$Th#OC+==QDq8l$KW7cP%%J4nV@U8H`ZJ[3c7`aQIo[4RFp5&FdglJc!GOBhC.S)/(PJGu1?.2X9fi:kff#9IYr.?P4IhEVc*)C69\njO?V.K%'KV+lGj9Xbp%Ha[YRir(/%(RP/Qk1l;-`>o?pNW1%G_qRi.`1X4ts&R!W$3ug44Ln[OEr:QHj6QRk<^g"=6gi`M8']jA[M[>^D+B4P8dB5qL.S"M%>(1]$=h2O/R*Vl[-Qs>U\\>N./Sask8,oS$.[n1iiZ-g]CtW5(HU8,K036=:,=PFeA*5Q^,,A-tNq$LB@ef_>1U"3AV1>VMOSdg9%E9'G<YGm]0,UWVjT56*\<i>PT!?tN['gT^R!96S;Y>\BolB<F@NP[:$c0hl+m%1uSdTjU<iUNLIm*kJqY[p#,4DK@jol!"6NRp4s%:$/s*jhMWd49<\*Q)1052d709aVFT)>eA#A]uS\i$Iq'X_UQ?F+hqZ'JQWfl;RY/r^V[J^$`\]\!5+5p&_TMWj&aE$Q,=]X`lQ@7%e/3Z=hFZ-lQ_Om,5Shm<+BA:A7$ESW-:V1-NEkL<,ZMA_NPeF$d5chn)Yk'f5*m3(?_Z`VK*4N2n*asb'XI>8<C88CAM3d%hY%Lq%_mR`b8'O"3\rM?hD'-.Ajj+Ynjis/nIVGWu0sX[U3^W7Rk*2Xh8$nKBYXGb\A#Ks-Y\h;#nK\7NcaRd%O[q4R\5o5FZG'Ci%Hf<$%QHr+g%&u#W/IJ5BoUpPm;)99=BO[)nX\.I=p_6/cfLMQ7JoWk6Em+//ZE)RN;pb<.q_Di8!\*b`:G>(a.)X5%N&KF+Hb&0p';KKT%;YA@]pltAR.la3ccm%H`Y#_lM*gBC-HOgH8&Y$41,7HQa<Q18XXHo:P24#$/fP[_!WNULhX5uUcbsnamW+)g=e,mUlEuEV*;s4D$%o%@`Tl-8O,Baf_j[X>4@[1/_#]>iq3WOF[0$EOHg<(_dqm_VL]+uNM::>(IE"n!'O5-RmWRSi+!+kn9[&F7fX?Q2+KJ1U:PjQ9^R%B"1WY&)DYI;seusKPDa>IfGjPUqT;E6oOd+[Kn(2Pg$@rqrJ^d/OC*NeK2NZqtJNleZ$:g=Ph":3XcfEOK;-lhHe9n_9GD"oTZjM%LibXQ8K(B8`-$Zp%fX0I$PO1?3DL_*dq$=2cDKH.0t:kN8Wtq(2_peGn9tn$/!_%m.43KE>c_MMK@aK$!Oi=u:9=8oOi"9s2U[Ws%'-a_ibt&H5\=cr2&d'jR,:/oBb$en[f0)Y8PmWU7JO[(iiH$nI^:*7@]i0r,>>Ls7f8sOPZ>YU-ra<+!h<f8SVDR0t\Ia)"^S_QE%NFP(TMU;qk#%->93;;rb:1g]9Ek=eB\4;H-NL'-BAf`S@)SCq68MND?)EY/SV1>ATJZR:$@aaI?AtH0!^_t,^U^Uf_c+[)`<nfn5%\L2NlU-^A?^OI?Nir,%6ZFMAt/16HYXqLDiO0n)74G(o5[df.nJ;<W[h.rP8Egi`N>f@A+-V%?3ETm.ol\jOq_<dcl9S$O)4$/'0%h?pQ^^#H%/fhgj35\Zom6E9jh+qkJ2*W>l30QUs-W1FP*-:)$Cck-@XVH7[R$uqa*']D1XJ2n/J>Qii<$jr3kn)R&@YX`CpU]%"(%:#47Ep<gOQYW_-lr!+K:fL!Y:LOrspj=HBFK%Q5pO3+6rd*a[/e'6\H,`Nj^'a`8/HM$e6gqGP3L42<EaZjH??/=D`VZm8%JKXTD%6"MjE))ffl/:VD2aA&D-2AcgX3#GDVIs.XA?l#m?U"G76P3P::1Mt%XZZ""=J1Z^'TfF=Lj,M`Dr!ilY342h9^AL>s'U`G!XO(i[%:1X9-Q"c-(?%;126I-bdk)"XIa4&@U$BhFM1qNN-XB,hJauL+-Ld/T;kCI'A]GJ\N_CCsV`*"Q^_<SDX!tcOkW?'Q:E@D0.,t;JN%QrTWB''13/<=E"Q,'r(o`;tBASfm+_AVWWJOA-Xl**f$sdb-S`9i!@(0QE[('>%FC_<?/R2<LSE1BEp:Cp,0(^36ZC%*:mOrAkJ/%PEfQ'3Pf1+a;2.3\])Y<OdML`VH_>o%-ED0Mm1hN7<N9,)"ifT4a*.@=l.I:<r+Lc>Ed%sQo(nL:]_14!H49,d"b/^WV6UVIu2:u%ei\27qaR/c\4O*bY\Su6&`YYs"jaqN5u*&(d+m\,/T`O#,&CI>X>tB-S5:RN;cVK*DIp(iDuBJR90?Pnno0>sIrD>toP6-H0kNFi%B_dAVP8qO]hO1'6XJbgZF/EQAnX=R0A!s9b/cSZtpp`th]n&Jgdn/LG$Hed"ek.No.[Kp%h^>F]m<#6&)>BPi=]VR!I$[=oSc#YA%Riq`%BO4nhcSaNq2e7U?h$]\a8@e$N]f=Ph8=7PYr0UR<i!.1d3;.PArD[#fU+n&EA2CC\gN9Qn1`T(*0Zpm:Y(Wn*.e,HG8ZXA$%FGu:rA"WU4;:+BOr9H6lp6:#<O[t[EN[&G;j7_!p(F%;c;JI(P&79&c,7A1IosWdq2tq3\8Zbikaq#fW^i4^LN744:FEuA+3r2TH%?gX-*#b)*<]#4"i"Gc@alE1K!XQ:N#4`HfN6cn3XV,FsF3CO;D3;*:-<`%I^B:YBB##`W[>NicN7NR*(17O=%pA%?SkEt.b96H%t%qiFZ'Z[L(<aYDr,E18EIYV9r#;(pb2iFG^4lDZ.rO_J^`)BMm9L#%D^2'09-LM1g*m$igh)6'TT`0m>MKso?`IuEsXkC#rX43ONI%0q(:e0DpMn7ogo4q`Ul,OkA#ZUY<X`VW5W`+i%_aSd.?Y"g*Q17f47'SOQNcqI>'X_eIA\_86$lFlh5ck?7i+)AgS;bM9Stpc1HB%(Foc<e^9pW]4m.Wk/p/dU<PmnnINLH"X,EroJU;>(U\KtP]L2fgA/2io_6S1:qO7Kd!TC6^9O>^@SI_;JK1Nf/;0p*V(;$D@cVJo%d=>;Y"D]*(U85g^l@!tq\-V,sk4-87%BZkj2G`.>HkM/h(Vsok^F2WO4F*,LIopH6*6iYCW(lqo%aQeE`a1/oeFpq)(MnV'VFoMR%d=E.;?;6A+C9Z!<\i1N$Iqo&TgZ*OnSFG+%'UD9_h"OH/QI@mC6;:C8,*ZqKp<6.\!$YN@%Z<)RB6X*i[Oa[0":m1,GVRVRZ@*.u%mm>>=OYL^<h9GejhciW6N2KC7g;BpY:-t&gA%PH@nRjBe^b9\2JsCuem?%E`LD2%bGj1k?m<7p=e[DAWcSuds>oB8#BZMUU/SR]c%=Z`B\@4!16kO=KQX@n*%n)j-]gJR%.T'X3/fCjQ93HCU/`m;FT?2d%8dUj@G56c&5:u-lV5^.Aq'$B[&R7W:<=cm)Sq^!i;]g>(r%.M=$&eS@5W:;+ZY`]4%KLr+^$5cWK&i$]X1h++e5\W<6n%e=47jjtdB]g^erV_;F^Zj&FcEro*I:OpLuhJ.Ft!?:'uj.@j'[np*r%UYg8Ed291<rQ3>Z`O<1FbBmjT7a5/l@$&AW/dD=u'iDI5CFG<cZ?'$MNL(-DA)cjm28-o\!8ST0?@Y$>N*Ps3Fn#<>(66q)E>7Yt%X"->fG7cTrc/0[k2K$LGmJCJPV.iY8_o_JU7!J6=?%e-sAS`?c5i>)QmHe1IK]AHgpHn4rn)]M<QC5TVI6mL7I=7Zc=CH3k_)1c/%..(/4,0+ER4+,2P2tK@N6>G6IcFVIrUBmi<Eq:cA0:-RIb9iRD(X'OZ$6I]73RDE&<A49D*\6V>BDQ?u+EV9FOpTGr;mcq5mr4ZN%nR^pAK$2$Oo2P;<KFt7J#EN\-1PNg7+k'[fQ#lHHiRhBgC&111>GS@kY^u5[p'.*Vm;jg/i@(>7HXX(cP[6UE8qnCGM@1fL"$mKn%hOCKt2R&AF3BCgU=uV#W+R)3Z]]%J.L5B09qKUI`LeC:`XGlek1M`ll0pj-j/;aN#Ni][^G,;;N%`7N*'X:AZTcA0*6r-OA'h'7N%kRBSj$.s(L:!cU.<nnlXd/=Ha,+<jV:F9I!5_`BB_WNEESjG6$@dHl,fAU,gIt+[MRl%n*<).&s@L+26Uf2pQM/f`?"\Taif`i[.%Rj2G+Niib_qA?O9c0D"oLGHT()W/Y]<CPOd`ctLp0=-!^pra19)NeVVi[!DMrZ4K/M`g(h0as-55=#&Sen_k)Ik\m!*HU?XqI1aL%$4AWi.4R9&(u"DU'V_*5.DFCcS]ZCFUt8QlJ1W/e`-XTQ4Q8Oq@H%:Ah(nb,!?8s&+6P,W<Bpp@Bh3:?lSWZ2A;?"Tj.X)Y(dA5G%ZBZd@oMJG;0tLsh^;^Q_#kf;;n+UQ]3L3sjeTo/^r>`[X]ll@83djsTiu&Ql78+3mbsChemJM'o2Zha9S?rL:[Mn""PL^j[>Gn*M%N!r\$]HNEfjj,m7;\)@5jKST=[Rs"4?sDUOj0Tfq+eN'irr(rcN5JQH*W`k10&%)%j)PR:I<s]06S(%.hHUNKe/\#H\dDoBiX!c0%dpYJ<0mZ'NGK)aG?&l:@+=@gdA*8rK!$27=CUTaSN^V8l]iIbOng.4iU,Ri/#'0kq>lk.WH[h"_Pf94EK@64LjX\BJ/+GpE2-t'7%dgkqb<u;\6XNAGfL\#+aZU]Z,S?K3P/F)oL>-^5t]q3hd6*.Nr]Pl/'f\W`bSNQ"=k(5FoZami/3^&<GVK[;`]U(-`dstP(MB^L>%<d5ju"mo3.bc:JMX3]"5I>^,TJ;,BK3m"$6?50l2,RBnN7Z1a%$b1Le]OkLYlinZj"h$4p0)$]2:eZWp9I7i#'\3d/[M;\"cgnqP%5[g]D2f&$HXK6Xhk)$7*+'b\J<W8/B$sBN=X(7a)V5IK[3H-=AqWMgG`p#2`aD&1BH,F6%c[Nu/f^DQFdOb.4>':B%c=Y_kmX.s1%+QRM)3h6WQ%Mf`!pP*S,EUr9`/JkM;ODChl;6Q&9:DAl"[55n]\cckrH-WLSVRac>=j3TIL?cBF+qY"me<N`c'Bat`n&/o(KZC=.%h>A.dBel9@b(WIJd"YV"iS\+,T4NKsV-+F..?Sa_[s0>T[*H2_TnYWD\X9Ep[^ji<>>&'N%'A-9N,FN)6[*$%TQ#RRUqMBFcD/.]%3?\!d[4Q4a;.<F`2s],qs/^W/Q6\Jlj9bYm-'.O;2fOoV?XZ]kEf5#=$!T[haAuNG6j8"4Erc;oR@dVZ.2%u-VahG.lf5QfXKS,q%]'C7(i=VA:HTuHK2ksO(i4NEIHD%efOV`P"RWfXRUh_)7(U%g6Go2?M>VO%G4Y:_hpp-kt"p0YMOn,\hh1&SRH>oqogq6XRZN_$k%0QGB9_KneMNT\dtV7=j864XQ$QbLk!B*CFX*d/mNI8CH7oM[H:7NLK,@B%X+&h!USl:)GgPLM^5*^n*I`0)U<_K[g.0Lsif>jAbn%oX`'.^eb@Z#K#NoRVJqmhip*-#)`s9rnOZ-\(Qr)'BD+rSA@'8*-r)o/Nc1/&h`%<3u!,@*"E&m+R"T0E`DXgdE;>-`N$\ed!tfS%X\g*;6'?_2@d#6`A5Vt"g6=L'*<rYZg_qH9gjXlCF[4G!'LhU@!dHD\<s;Ubp_#9fMcsE@^EMfT;3mDqA*>SOLZgqP9,s?kfVC,9%&>-'_bjAm4jqn4+[,[,Ogb!\o.@45/UIRb#bRf1\O^Pl@E3a1%g@d7<m1Y";Cj)&oF:a?Tll$#VKF-9XdTutLN+/F'GR$70Q&_>A%4qGM51M)n"1#]ouC'keKAWBJ(+KmU]4.%ACRP"eQr0utf+_'gqoLp^"VPiJ!`Hn\2*"3T:UUTo@mGYlO]l]]2K<N<7@EM,]!X8gd%P5^"N+_bC(&;'tBMCpXq3lmXgRtAm#-5&KoWc1\?+T_M*'INf["U_P`:#BJ8@ZN>e!4[FBLd.4^5PmmEiT##Th8kie"cgasMK!P-%Zot]'Td/@4kP_/Th:CU:V[Lr;m2,3."1:Im2GL[S*Oh_a`$/3X0=m=Q+bg6>ndJoVP6M[rK"gpV=V2l_j4-q*_,T9)A86%]S#4OM%aQ%:1Sh@E`JhH\bOg+GP?gr.^2h>LI3T<Uk&A/TB2?-iRr\G;F,iFWCd,R>I0k_-6$*iKaP4pR?/rJocARV(WGJ<`-0pDMn&17-0%SB+/-N\F1-q:1540F[h<iHi*7(.\\f)Q3n.Lnhk$@*_)BYpkku:mshjbRq26j*9K+8!J^nI(Idt8B/HPOSb(o4qJ`.'/MfP69YSb%Z(CiMRK91lpKLkTN;[eXE\@Q9!pT??/1Y86Hl>jpo\A=PB=-7W4!f^JM>%s>%_U?D(BCB=$Pthh1-O,u(m]S3\jFtU78\!lP6uAn%2^oN0Rp\U>0YoF,/H&Ql:p*88g<sP!\YKST(DrI!JfQ$>0SE\4<1j[`S!_cPaOJ*9f%+a0](<4M7cp=$`ZIl`7jch>Y>Wq0+pQ@"%6U*";Z+2AmD.9N'*4?pkMkkH["UH^h;ZVhOk[@^0:W8.:`GcG0\M15p_!p-Y!Z7LUQ.\%oSN=1flf1i7bDNm&-IRE\<`R`J#0PK8%D;u,`qXR$,8/Q<Y]:hdfS%k?DLe9&-OnQes0.fIhDL7<??\VE%LcB/7dDSa]'802E7@;$79Bt_%!AM,E!Q'<NiQ:5q9Z3@.eS_dp%VIg.47m$K(n<HRKKqXQK3.A-eQ0*^"'MWrji*JS`6mG<K@F+9:qbC(0m,sq=!PHs$g>YkI+1\S;j/!jWSn'l"+:Z%_'so6j2o'BE%H<(L&(d&3qGd3'u%%`38iG02-n!<]:l@8kjrj006UTQr*,#$/k+Y_pHDt?QZoS:17B<G8WP)-.kYt[+/_rN?PRHPc84+2[4YVo0#%^*@.VhukLZX69,6.A9ZM5sL:VXO&t7e4nt&XPIbbBpqtC3FICl6fYOge4>+^b+m@gMunA8KHpYVr]"fF\0_XkD/r!'Cr;2L=`A?.%N?K0=`>m1N\fbQ`3lp^cDhMVL[7O<8pJ7Ze-a-s<FGVC^*)s!rN8\i8`nt;1^12&:47VdkAp&S*0Z'-,(g,47W@N7,J"rhn&:/&(%#F9VJ&MfsUH]IEBOu3Ik_U]?T"p9,ZP;8\)kA]+oO[@Z2aV;;3RN=p$ec9^VUOK5rLi>C=9U@-`&@(?!dsXHl;6uE8Mn#Z+7QXds%DYMFT4;+Am5R^%mmM@SuK?J%Z)cl1:T7&:/mC4t8FbkEI)S(/;i&,f&_:.9cYC3E7$$j0BdIY"i+U-28M$iEPl@kGc/h#C.ob0Ar%:]q-A:'#s&Y"7?/X26?9U5U<BM%I/VDh\[2%`0lB^%g$P8KK.3_Ae')&ri8b7f4)0;uXYG2O:JXc;>^O,2Y(.Mh0^g30K#]P%_e$%V!0XBo1ilL@9Ci/Zs>EaNo(CIL]%Se\D(]-HA[H>b^="!]sZ?Eq)i2l>jKDT`8:.UVA'gB46`JckcIoF@JG1<rQi=a"<$5%_#*O&%N4hn//d"iQ!?qAqioljNl(k#RMOAQ]*u>*X/.#i1<3S2G6ZYUc/\m`9F$*6i5="0hoW^+[nMa+8;]Z=$OV5c(>JWX"jRpM`dOmbA%d`4&#Q"]6=:g^GG@sYrCTGpn)p$rofeGL'_bl61k*he&9/<>EjiDEYLb()e2)@i%"2cc[pIf%W7#d3s\h&4>U=Fa2`:PN#fLq/+G%RjOe&NUIW=U\YA+q(Qs'`(X%ec<%Vr<uX8AQr')_H<iRL_l1I"0<bjjdLa"t90q$M8Ldd3GGBj<3/Cd54>m5RCc'r+ggW?i%ck-C%<!`dI'3!sGMT.bQSED<6]:DNc\`hU%dmQ;4i=cb][0<-216)d(TZq8:ZEBW7?m5X>cQ6GORqUW?&0#X@#TWd<966crj.?J;UKX&F%ODoB;IG15_b-Nrjf$gEa/%uJ]g%SiKlZ;]\`kKn?L"^7OH8/c]WP5,nDfAES=<BmaqYiBP!N9B-1O5Egm'*n=0@r8OV>cHq0$]Jp%)>53QL-20]P63eJb7CTtl[m7L*SeDq!I`\I<SrTCC&d6Fk9Ht"8WS6s6]$/g_GI$_igHep(c4n3U"PkY9%-IZ`?C]#/Z5hN_E&Cn%di?^UKIV.`3+FHcXJdFW)fUQdlt#?2+P$r.$u!E/&6idhFGf=98I%^],7>+g2I)WV=lYT$(rPdl\\pg9%O'/aV^e!XI7tlSeeg%-%J\;#!?A0(BT9kt!El&7$=#j]2H^GeAY?d&_MlaQE@%Dp!WnmTj8(kc[s3;&fN(`cRec7ZP@6b#lL>HmED/9Y*@djeYW6c5"WBf,?%i$"-Zc`5k*lQZBdLPk*30O%-@0WDNj9;d_WqTW!Y%PpCI7l#&)<7X3X6"(tOHR$hHn[AY3kE;Q;J.FjW9chA6#4cIu\X%uMd3+gb%$PEn>6l[Yks+oTB_IGmbmP5(QO.3*%,qXqjcp7`8`1M7nV%CAEqG$!)l<(;2!,[t$b]:fqEK9mCUPTKG6>RIVYU2ASPSlP21koEg%oS2uUFE/_F2r,>AL-L_3.0Ge5A#N::r*`>/;@aG.5SB-nZi*#7Ch?h;3%98VSr%;e/34Gig&oMDdX2OMD3Gl28un(!FCMAte/Mtf%-`!Z.9<t<SEF^$"#_=-i$G,MpNBYY5FE!?HUk@'#%.HukBa,!ZLijZ6:Oh?X2)g(&2`#(M"#u#_Z-sqeHtLiLUgAP#)P_J,3cVgR%B,@*iY3ahrf0-od`7"u8>qS@UlDbJPs7(M$UOJ=m>04bk"Y0Z,iDJ%mn^g)!g(Xa[N)/k+9TJH7+Zb[:2_eq>)p?\cr)_3FdC0h$%gAVP9qCP"m76\DiaR4)S&SSdVn)PEr@7$uij]-P.%-*J@9nX#m1K(O,0PICam&$K(5Sc7:qE,0R;pE2b]murg3!\1<+i\9a+uG`P%)o8APiXl!g8"6)cq_Chk#@JE+CmOPMDgX=M,Lp/bj"&-AD8J-=6(WcfG+gS+XB7M31+X?,I?ZDSnL7T$QP4tsJnRMM0/UI`'CY?Y%K5HX3OcER\E&dY\l`+rIl>g3>2tps$d#LFMj76S#&cofAZCa'*1ej^.dJ`7T+RO+F!a.[:f[&%&GYSgC#qM*CKe9%0?f7gLX]d#.%lJN'&7.J9t_bjp3*t<hi^mM<sCIpl.m3W?oqMo->&87t[9>eegV/g"jak&hs6XcLerpA?OJ3c9^LCPRc==ed3D=H?]95i,SJ'LXK%%i?gs^C`BW@ojo4kgO0tUn;m;(ETJeI7K%pT^HVS9R'-:oZ1bW"0fsFOC?p&QW0UggWjATT^RD@lna,9K)f%2I#\Vj-^1'K\DEq1%G4ib#4q=M:RO;I_6oqF<bI+#g,'Je]n)GUf4+.iS%tHdEqt;$r7csQs<JY[rY-5sj<1nDu712#jd8R(T00rP;-r,V)VkqSBS8lbS%XbG3EY@iG5,"Dg[;i"=hpO5Mf"ouI,1Q"6p(sYHJ>*^]Y8t*JbBU5NMjm0`;O,@Q4+9=$-*(j!'`tk8aWer##K6oNmThtNDf,-8O%lfq.?-/<24/PdXnJ:L\@Rg6HEVm"$+ojfY*/CI($JQuNl#_`WHa!$*@f37g+Q9`r6!*$J(iPI*u<lQAMm4>'iD!C!idP^td'#h->%[F3RiT3#kS*bQr;\=#1qli&ja]=)QTGs'!u':>C8=BUS<_m1$CeW!At<d"cDZDrC17Db#5*@n5^bn+!kT;)i?(FVu"2^qne\qItm%epUXaAb"LH(J.Uj?Bu[&bWdK%C0T5lG21Ei-c!i5pZK)Pe>%ho^BrqtpI2*>KdU#'@6lMHOcI\V#KP`o!?s`[QWGpbG5h\KIXetU%g;A?E7[e[F):+!p<Asc=E1AV9kkLpK0+WOZh2]m64alR72*f6bb?m7Z)8"2WD7R3'AskN<_K7f%FPLO(H9OL-UF#6$BT_$!6Z<4`%d\0Z/c*4FP.*o<,6jf]ZiP@@7kd0f$qRdh4DLNn8$E,*%\HXJW"]r'B]:hQqcSk1Iln`oUV<%E!"GFpQhcQ;nm79<p@WnP(NL:a`%%'8A"g"X3g5tJS9h2d0%j1P3lORE&/XR!\T-[#fDi+*R@@N*<O#D%Y4HZC#)GeUN;;5l6-__L&4($nOB1j#?gUM8Vb3Kd]M55Cb>%.+kQK98MeZZ'9Gc+F_Pa?-@q`8:TpV_\+FL&8K^]q%7c=ChXh<5#A3PGrZT&A60troXC6GICDf#,IZZSQW0^7JQf):Gp9Y;h<Jj$%/2<:j67<JW@r<QYP;LC&P7\[lhi/YZRZuE/0o(b2Y2%p9(>CiqA$)*U=O(U1a`NebGZ[(KAiY?C6$CE&l9MMNQ"s64,"QYOE,e:m%_\=1%o40`)'\q0-8urC-O7,>GOW<*aQ-s^FPR.$[.:XC'H8dJe]Js\lWkVHU3o)@<I>"GSVDUIg@]aM\W`.f=NeL:N."$W%NP'4%%:mp(@lh)ShXA?GI+rB-<h%an:/3I^Yl9oC$bq/;%[?'OJZr90%"AiCIc;g4('^WL0D>d8RDGqdCdJDrLgdiR]Zo'"Vj81lajbHeB%J2T(PJXb"/MAO9"_DQ5feYALDI9Rtu9PmH#Q"jU%<-)SYVZA#/SfQN3G>(P?;tY#WN(sn'A5+(?A,LlM[bH1@##FjUFH8I:?bR.?%'I<-ch66!ST^:2*ifs=>jk\>`KF3Oi.t1/_\^^66o`1q83,Wq"_ZARu\"+QIm/GPE,JG$@r@[_(UWFl*A)=-56\2<^eoU@Kp-Dph%*WGm.=D5ju:O]P$*[6-ho8HXSBJs6U67J;:gQIF0=1+pKU,E5A*XXl<kVUfGmn;V%KUT)MlLSEp9+Yo)YS:mEo%;8-&\.&Vrg_:F%=)n1!G`itsT@!cc9^qP:Z(>q?_9R<gIK?B1FQr5j!#H).XGHV!(o3b,LIG6,m^"(+L3fuS3<T[.op.atm=VM-IG[,7^''h-AlaA0%(8K>IYBro.Z."^a(HmS7T-h5'dn^G>c5s9='$-WSIPtQ+W^L1>_W*9eWq7F+07u'&480,2p,J8Dh]W2EWf`WuLOZ7sEGpJDLLMe;%Fmd/1Xf=Ru:DoFdY@@qT4RUDoFk*&QN#>cemr]^s472CtnL=+YlI0Z"gcFIZ***jY,fD8>_e0,r]r.oPo.%.2DoB[`Gh?rJ&O8k!%A9eZk,^0ni)h'.iC8MEFejBXVeoktQb^iXV[!?Ss'_#89?o:Asg8rV`"qPn,Vn4G]95!=Mi>[?3U7GBcj.JO'OK/^aNLn$#@rO4*%P%-kGX_ZLk^-ep@@uLflmO8g$=(Iu*h\XuRYI0LfP+N=Gbr^1_MIPMRI16CFKU(rMr=%dn1o-c30AOk.fqCCdRXID1/<doZCN99O%G:[RM?:bjk0<u9N?)(3Qkjp.:T>Y#j2^n$;ptBWXnQGi:*1I.[,A(*P]b<R9\NINH/7d6G266D_bQ9Ho\[e";Q:dZMN]L/:/RlcU%s2`uXZt/;mU*:X4XmU/.#*Xd)mu1`rNnEUd0J?E*Yh!Lt5Kmb0+U/tC2o:HJHqqFPpXr=X_eHh=J01gAbP/ZtB6hT7r,8>(Fk;W*%pqBO]J]@P?R8[d-JL1!9mC(?K&Rd?GD0QE;E@C9s]5=jbJ%Q]Y6eQg;O,Md'GX_0mT6i@]i/c#YH/s.c?-UI_S<)Hb]5>ucgeSH2%2e^3[\nrdcrOFkN]Zo(,F9b?`C3C!)(CQ].I3YEZ=daB;B0S=?U8GRV_Vj_Hm*FHg#!tO_GnZAn*p]o=Rm!h0BL5kdU^WcbT;@)\%"#10;"R7V%`/0e<685suFKC"d+\4\a#Us11TD\uiUlF)KYq'YOE[R+<9DiLL:n>ttllp0%7CX"bgU,;t"]IkD%Yb<3LIhjHT]:Ea%r&Ve`e)5!>m*$+eIj+A`CApt!Yu*e*cJiB#XXEE7i2FJN=c6md$)"@H2$V!A3jFRY:bU;^G4nZo"]1JiNOr;q.<$C;dPL<%76h+e%\\p[RY1\K4*Om^_ecZ@LN[-\4+,+0O,V=/9Tr^0,Zlq<+2Cd1I9hH-_G!W2[9g"m[4\LL8cJol6,bPd.j?a]1f5'B>%r3!jEf)C<%3@m3Q@]^CZ!oD!FShMleOf7)]$:U(+%(.C0_Dk(LK<B3MLj2/f%YeQk<@23`Lm*f:Jmi@;o*P;<-W)SgVH$\H<ZO5QR+!l\J2"42%,1Xnr&L\:aFNd1S9a.duC^Yn<''^os4d5aCFE9,M'1X8Yf@r/S[JI+i_MAo./psK=ItduUU0#b\(lgA&nG"S<UZoA](GD?SPBD<.%m'-ggi:#c@"foH^VUUf;JW_Nt@Z5q.Dl=+-]$CBI+\9,ogkbS0Bd/rH+k.Io=%,mlbD&8i@c_9!F..D2Bs!u81#)s\]bVgs7]J'Q%<#/G3$*e,ul4bbD#N/ngF`fCaUp%_2M^fBoP2OFYnLtud:_S:$c\]K7U"?)se@.laTo-#hEF@Buet.)ciTlR*!Ak<<o%D`^7@1(F%>YHV=ALCJYZ3Zm3iW`#Zi/ZuSU0iQk-BM##586^FK$ENCQ&6V!ks9a`dX0iLU+/7G&#Tf%UE2)=b2`UXi%ue7#%fFnoj@e.%75BF%m#qjk"?>lV3Z[fr+I*HY0=T#h[d#,0q/cl[,#%)8ljTm#(1u5fK(h"tRk=foYZM5QW=<o^5sI."PG/]8c#aHpAh=f>n0Ieb/>TM,%N5+1u:]3HTG;1[*f%E3hM%iq1^:t*deHE\7R-tAIi3q'#7LW^?(+IYHK+AM%.n<)B?'*AlX'-*@70u)7=HPj/X=[LRCL9Z;5?SoG%'=!!BMa#aoNmU`P0$$Yigo)=pL?cr-o9UV4;^8!W_*p1#r&s=s@EnK4o$5)L&I`V:@;rsWOQP[[OadJT5h;hG980r__2@MTC+\*t%?t+?ha2"hG;8TES'F7#_gIgjeZW6:(9hoX]WRPfd$[hL>QM#PgCd`<3+Od$o3EB!g*CD!G>(_0_8u(e])[$aPHEi;L6_S.l:URuV%`85tJ"[#JDa2Minj-eS[qqU#6WY4WD`q54@bRq(^.rm[l_nPVA%"HW."a)0:GE"l6a0<S-_;#<-D%)bPn:k>f+gj5/>mA-;gOh&5%jDPga3`WhT_17o-._5$]XfFo#@"A^U`B[rG!=VsZf;Bm'Zff\?/3:%-RMOEjAIKFh^C\;a1QAoMePf0L/\1W99p^UjK(B(3$D5ZW%X4MFs@L8&)j^4tB!?e?3i7n&b==+'G,b#SWS%QiK7ngX:%40dQ9j@;c<L@RN^!X'K+/2:4%9K(fRWP<k6#ZBNS8uSD!+/J7%BT9B%$^bfc%1U9r5AIR&^2%DJlk^"Q$2GGIN\8Yb:;eDS1f`m&XI6qDVDWI`Q[g64(crG#>_2rO/MK;e&uJql1`@L5M(ASan0%tr"Z;o%%oqQkLXKh7-@+]Y(5-K,<=Jeh*ULn@L,W)uu,(qq<`L97n<*E/@XGt=mKHpt<@*8;VqTW]MBo_YSYV,nK*<5IC&,6T\h#aF&A/YO&%Wb.)u>JL/T.Zc@oi0T;$h-l+<L3DRuFn$7pWols:[4LrWR7G0B*XL\f"G^9Z>^K`0XeG&QclU$XU[C<TF(CT)L5i^P)@[I&GJlec%_$Cr7(12lqM\<s2oHA-i[oT+VPs^+BI`4aa/GO;A35G%MKe;q`"ZLW?6@MO@)<F8aaY9#Fq`)Vb2T8$n'\A>7D,5$IDH'a+A!=p!%00Ch4Yj(IqQ"Sh<!iD!#/g5FplLhVik)cNf^<:KRAjsATE70M^Gn1pmW_&IU3(^XUgkb/]'u'J3(4P!23(,BbBlZ4)+TD"j;-'m3%*R*BCYMmO*Y4kGi1i5WKF:aYmdYk,Uhk`o9bOQ%04Nr4/>,ie.dLm1I#&7k5#O6cZMCgCW8jt"'4:jhtO/R??)WEN)f$][.+<V!H%SSB-nQ2f<kQEVJ^%CI%[!fRf'lP)Tne"lVa[p`tUR:K(^S[IO=U/a1?_F:u'Kft5J%'@tt\bl<kg'uKKBJmIMY+>i=_6"'r4jKU6%qgu34;t"<H_-KS+Nmi\tjf[uF"alNp<2V2`KLS"$e;O)DVL#,TL5RU>O2<"B_Z24QN^eAlZgUdR/^k`G;)DGTBne)KUO'9hkfWH4%Fd[reYiOq)!k-K6Pc;<r_\Y(`pH1?<pq>GU_/IoVSH;nL(%k_kifGccYFoq>Wu$$>0rtM3ZTTg5CT`X9cJ>g'04Ajlc?"dnHX)K5%>]H6Xn5k1=f]?I%`,5,"1ro[rALR*3?e`_Q[9kY3"Q,e]"7rj)&SJoM=]pPK0RX#m<YF1rEVS>2Fk[cm$KRO"E`K!:\lhKlUdPkR%7;LA:S,=l9qp'-"WqE8R)r[Bg)0(thZK/IDG<Q.`6*dD(bai=B8Of(Ms1\s]R8omP9RXe:;U_E<A3:$i"kuad;dUVuI5)3C.>38*%E7cC<(J\hul*1k45:3(/6s!c1R0e^W)fgEq4O]:u@jB`nlpOKU,^2E-c9N'B3N>brDT;1pUnMIdneF#BGJ96CCLs-9k7@^9^7DgT%25'-]`9jRCpYF9nrMX($0`ij/F=$]O`IsMig<epOe`C]$/a4aa,4P51'dEN10OWEDXi'N0ZMh1Hi[M`L$DNHOrmiAjnFE.d;)Goo%jB?sN<iZ2M/g?9am6>([0s[;5.7mVJ_m1aK,0c<==cA;pik`8YfdXGOKa9EaP"<_E@cP?4G^(<@2Cn#h'IYB(26kSMVNd;&j\g?<%%3Ob@]d[?LYnY;=_Ji>=WPr@WDp@.FbrgoKjtYg&fl1qO2rfg6[-g#=mmZh]jE6da@lK<lHst#p[ia_1ClhildhF:OB!F&hZEB:=%S"YI-VAm5$dN#(&H&/gYbY;*!&9Jdn#1[L4jtWFr2'>ZbAQWP#7\!b[&k<e0%(s=a\XL5NV+InPQQ]i<q7Qq2QV73Li[VI+s!THa%i\a,NLU$mpYQ?RE'bMOOa5oa?KpDFhg1dd3QL"#Oa]BD#n7A(]h[$jkC;`N3m^.CmTaSq,;5E\j+!TMQf+U&I"sSJ(/]F_?lr!1Z%,jE3;r,kO@ZL1?uVoVgHN\-9cK.AbS_r5a:fWFnF8EZ]%TWY"&U4UG_h!7)J$*M]u1u0m6fo`?!29k[i'A_k`fTAI*`Hc<pJ`M8u%_sZi7,Fa:2G\g??\C^<,XRX(JaT&8=1Ll_Ab%":j"\XNadQ^1J'ur@M+@"7r5Q@L]R\:*b,%m#S./N^[pXIIbGRqI9+tYIIUDG"r%%hGC4`E]j4,A=.uA0VCi,+ZWj!2nDA7VA]4oUM2<7GHh\/,B^/Uf8OAo_1Z0+A5,a_6gA4/#/l`NqMJp90?gb(6r=7+$3(%UUN6?%q`F)DZAb#(Y_MI9f5MtFgIk+#joh.TlR[!chU"*CVA<]W0bh:fKt&rfH70'UgRF3DL7SrPeH]%)iqsBD;cU#sJgN$i*#H.l6%HOH%_b(RN*Ve!j@Doo!?'EW.0IUC)d+jt]S-4%rTi=K7>t"=[\]9b284O]g#:F]rE#'a4:%!7kA1KpIQe$2c@h,DNB,1*/q=W-Zg)ai?%-Z6ODcFP%AZ3*je/N@Qd\anBYR9M-XE@iTLddMY]28MPHc!3U7[3GWP9E"nd^H>E6<mB5_f'a]O12.l0L'LXdJ<3;R3mA.Z$UgZ^%"KW\ih4%uaVVaj:F&VON.t$)O-FS!tL3nPl2ZDl!q(Me]_]_,OS%(N+kG_MVOF8\Zco7EU,=diQ='H.o+D[(<$os1ZDP6T&FIK%n%a.[sl)ZfA^3(()D;)Rg!PVX,%+m-"ri&WYF2!h:=fE@b7gQIVK`=rOH[3JFDq+ghu2/7pJ&\YC"Y1VD;0b4+#a]u:@p+FI]`eL03%IE0o-`1EOPWqS;HnR`EI$c9CG<>k@=NLiKD`:[XL?/^Mo"l^K]lmL"OR%O3'(D[1sa^gX*OV;J==,"XEWo#]Ll?&-ioaCsl/=!aP%CMqaGAKnkt=T<k._ENR=7of1DLd^!j3EDWQU&El25#h=9*4Z<rRt%6!"EZiIqq9u\)>K$O46gDYR"sTKqI-5?A?aF(lXU7<C?c\e%<c/u'e.#Wih4S(>r0*5`/O#+#!FGmPQ^Aun&0Q!-("$mh(@jMWR!s!:HsT0pAcpZgd3u<?AqhooV,[jWmEG[[.$]VO`u0_Th&JtA%PD08R`Aol02s`!tX;EP>YZmuf7nc_Eb@cOUDn,5O5Xp+Mo(j/pSZTL9eM/eqWsSV4;Llt1FjiD1]RnfN1MQj.n\!gAYaH9l=r<\:%jQ5E,RnlK&k&3H,ZZoWO0$<E-G)<c::lKgJm[Me'TVP"s-D"bM#BLW3,Is-<c%<'XLaF$;%t_alHD=6d=gH^r)69]*q@Ro]@#0'n%50U,3&Ll'(Igss.ML"XirUk[>hd?'&rt7QI^gE&`##aY,RD8iU`Hi:Cp0&%\R3GWbe?.H]>q[+WGSFaB6TDH62cP?a0#q&PRXaPc%,Rh+JR/uL$6p=YSV*JLlm5s92+JmQM]bAuK%ac"U%Dg^R%(3-lh]3%Y,lX![LrrUa9pjtXBk//tVl'])od%8>oktZ`7c[V$T;031%(s:0K7X[R1ZP?THOrB\K0=N0`ar0>*h+u*q("B>/gTFIXB)i=mhsF6%C\T1t;O+P-]27+bm<7d(7FGT$mB5hM@/rOTSGEqBcr0FX%7cbQm8=M<E<.<"oOD[`6JKK.\!VEfW!c^:0SQit$jJ3EO0C*FY=u/Y:n@XuD=>hOE+f-_!/+U6[Q.D'#)1K1DYBNN)#1"!`+mQ-6%k*t/[UDgl$Smb\VcI[-lg!gZQR>h2?R=6J'#u83+;`&V/-UGX15(2Y5#$\8H.;JZnVs2R6V-AN.oGdTCfd2lSjAC@#p65nF>D0,a%X?;uam[5d9+m8-1!Ni:kR9o6/cBSYo$PM<.c9Thk%e6VukP+A:UR1@Mq0#;dl\?[0.+=8<#%AnX/0l<sQja)q'<e<c]0](TL@n3l%iqioQXQJ]I#(g^Dn5a:.i@&'=lV>Vki+a;N^)o>gZI>)l7*0Zm:EQN@>G]%1"h=KpISg*8Cj1rVH0mZepQ'Xn=?U<^QsWXLQ;R7D%?V?CpI:Jk#qR_A!,31ae*/J:Lr3'bC.Q4oQSq&T,Ia448r]'^+bFYnqU<l\'Nc!Z[$O@9c;aL-HG'[m6(YBJZQ\UH#c^-EZA$>_I%)[s"66]"$pIdHp"%!6&rgmM47<:daU>hPZ2?=le9D95e2A_.5rars2f7C^\@G!Weooc5S'A=:nn4ns>h3^1(-br]M/1(3ojfB7hM%bp*FZYq'l5&a*;Fkgl`'grm,5XS_V6ji5Q:IF.&eT)@TUM"%J->cB#l5G\t\KiYjN?XJKNKO5aVjEQ/]\XSaGTBE%eF;IX%T\n)?%22p$n\JBmI+6?d7M[Gu`=`P:JUtOMgrKoPs[Tn&$8]I2KRrblu6Hg1.V-&r&"b"+J]XgPKOQYp&i\\HK*5,5?rS"C1O82uIa[6oK%=g<dfo?//\/qCYif>ggu\H6q<j:Jk2OWFs<Uo0+GAl%<N><Gip?#:3kkfi!tL]8q@gH3Hfa^M/Un;KsRdCb8!O%>2\CNu&LGihQU%HFZS*T7b6*oMf1"YCSufUKhFljM8gMp3DDAhdh#r[=.`0<A(!SJgc<tf1+f?=d,&=Um[j!G@btA!<Ya/n"qYFLapBM^,OY4Oj3PM%"-auXV@"_R4FSPFi(EFc9XGD^HjNtP(<+qGo.g7\0u(Y&I4=`n'j$b!0g?oUXsa3h`<[HDV]sPI![lK68-l*epV]n?WX=)K%<@8$%IH+').(c9bR%=&O7qZa,($Fpg#VkHgAHM&HAiC;@D""JQq:d_]8J:+tTD*@d=i6eGIu')dOKRYi:A=h`3SB:S&S[@1;:!#MN:`pZ%Ska")bYZ:s[`*_mjh&SK59_Mf]&-mh[.)9)=+h[c8k_hm_T[`c;W8UPOJlGb>rL$[C=bkGJ3#lW<CJrj7$D/f1c6W?BHd6]W-n;d%>Ca5tc)/c;P)lH5WfFWlk3H]OV8C%8PR*O+pJTNF[CD=/%a.?WGRXq[^M%_LR#FFqJ5ur]_Ij=Y8_(!/kJ$6K&3+Rs@^fM4$I[mh%nfL);6)DNY6K^7<M,n=IZg*f->,B*<O,nl`j1:=*?7&d/HjF\E!TI%5gj^5@"Y_2;.n%)`Jkq.Y!Vn:38'+(Q9g20X5r"(QI3X,_%30N52;c$dd5I1&7J1m%AQVi5il6IC\DiL3;npWV2S&]q'jKF@o-3kAF>n2nR1YeiWph6cN=pebgT;C3oJAaE7?%,.O+rEW6pP%6(%>aIl!8d*aEcJ"e)jNZ?>h=t4&?:al*Y\N%0ZUJ!IO/]`$\qT/"Q]FoY`[C$1M`T3=g12CQWIZ5H<n@8]PNfT"-U^/?QfiQZA03F_%_-$W[B0rk,f(;tR0XDqR.q>XjeB'KaiXSL2)40lQ&E#nmCV74Z9L&ejjMQNWE1&TMT[1]tDON[U$l1?%>.46#N^Z^3iEq!/Iutsu%IMmC!n=tEe".8p==WiFJ5)-XC9m9D`]"%B=q)).!?qWqY$&1TG^+*hmr/GY*"fc<$gd]3t`Mgi$@gd&[[]XI2^',^+P`f4-l=K8$%e8B$>jlCP!#\oXGhYnMd8EcFGFW3K!/ZRm\JlN9QW2S$`)l+oKQW;jTU$)UD?I1sbNBSipjN4!2=E#Ipc^>kmi>k5.e]lIM:^&\T%fmR36FYqTfo1*44)L3pj"pNN/"YZ_-_AGQ&CGW$E"pP:d,0=c,@H)&LL"_8Tdj2&^H\tUWiX8[a/l^Cq-_u/<`*biG)XYlJ,*c=d%1b;\EmW6,TB%UZuj0PDg(V21cb?1ENE2#*MpBfEuU?6OSh0b;/Fmuat\c/l;1nia$5AOQ[X!3TNVe7^)CcOqYeIdQ(-D4YBZ:QuF%D/1WWm).]*ghP9#Gmc0q<FqMEAQ2,8Q>T_9"[_,Q.&\9]@HnY+nft1f@2MZq;F>9IYa[,Tc=uN!#4^7`L#Q.?!3/(^H!jp:Xn&c3%%kbYI+A3\OQgNe)aR>WI4cl@sFJ1cpfLR%trFWRZ1;_a5P;M,ETQCk<gW$ZqpJiPd)91B;jcbV!i@JdabCXH&CSs;.'d=2WLEZVC%Wq4rob_C<=)[9nn:'prp[,c?//C[n3ON.SI<<2_6o0qo(\joDV,(-'#_QIBQd0hj!>nM:)V.=FESfk%iOpSW#4*9@4j]cK<WdIk/%3I?LdB%9I-ji]I@SF`^i_pO[$m_H>7C:N9i0"JjU1I\QReoaB;rV;uNPtC.IpkYr=B.\/1>M5'tAa0FDh`WX-Ii&d(8Ii,>,)hrZ%k%Qt(KK!0YZ0=gceU[]b);U!4q<W#4,?Ru:@o,0!<`QG(X,E@I$)saL,Z@L%,,2Yok+6<MME9fkPu<IHPu&9)9OUX&osF's22+3i%H;KcoEKP;ODIeqgS.K0K0@:oJJ+S3/Q5!<'/eY^f2PZ0uF)csKVd((Y)Hi?6/HFD$laIPV"p>!+;66Zr4l7;>WBO=Q(K;5a#$tu&%fNXK;(08s*%PY0[>S<H1dBh/=<+V&"04P(_gd.n:1Qrb/%ikl+[iF4(aEa%m@7hC(RT5=98mJ1FN[fU8d&mfp3A*O!<K/!BR[4k]%O\;^f_/P&j,4QW]6\Nk/49lO0)Mb-:j&V0R:'E9oLigs0SqXaIQDAF&I*5D*29XQN406KWD'ZXWZ]i'naaqDO?C*rbXWeQ].3B72%r<W(C>ZG-jmA=na(]9gmhkDPQbG>N7AD:8$04\>H-38&riph`VDYUs=QEc'5LF*+qgE,4U#e@h'[`p@2ebK<[;\^=!(HuP0]],S`%6(l9)`BH!A>_X/ZnMmJNC#T+Us'/(<DuiSV+MI5#>,E#$SckPq/VDNLaj6@Z6'$S\TnO.9rQ%<k'rGC^4c,_ZP947i"FZG07/(-4%R?u_r1_#ubVT"rprd\tuie\RF+u+'k!Ek-J<"2Fe=VV*Xi`@AV3?uNfX!$<a[%K6S=WgA.(rQ:CoYs+N)0o<r7=Ol3c%&+V[`S0)%q:pK*T3\Nf8tm'%_NPtfk1[UV.#bQ@g`%*"ak)*`Ue<Wq>60[pH4?_P.*+tP^A`6o19I.O7Q\b;mYg2j11AQ3:\3(#YJ8+9B*g"T%i2lWCC7Tqjj<TG1hknM$4j@M3"UK?lq7"NKol5p]pJS&UNJ1Z]%G>sFB#9YWA\uUIoOZ=>]F$&9Fe_8mpkXA\_=pF\Z2-_]nN/bL%A2jXBrquH]'?E2n]NtT%bq*bD&]KYu2T"^1ViLQD^;u]i^CZ3PLn[TFRtAJk8<Ga$YIH"WiZpDTgiOtC7bCEX0/lVa;ZP!pO(n<e%Ji#Q@P.fZ=53<Y2iGWhV6.FL]_e793k8YieSX=]cn^3;E[Ha.%`9tl$__G>]=GB!>V):rj`OtbR`N[h=9q:\p8*OWNEFETQR_bu_%1rl8:REspP"T?\oZ"nNJaP+mm,MM#g(4`Erm/m:2?PbJ#Q)(+kLP17S1?@[h%BM&jrF2\hj)*?p&J%I(G-M,T5I=YVikC&<d[dVY%YX,HQ(\K`QSoW=0e6nL@^FBjI8c?OS-!gEIl2`Z!qg7g(;9ICpgC=\!559fr5Y/N#KKGAN-ZK?sM41O&DIZHd\7>fAM?q(2I'LHS%KNa01Hr^+lB4kO].W`@(+:g[i/jGW4(+Wa=^X<hdptJV`a/L#J(4LuO:=S\0[,uH*q<Mm$c.$7ABtu$a$,BXE3Ydn4\IiQ_iIP"8%?P*c6-sfWl`*S$^NVW6>i6<5?OMU8.ADt`OX]=g[_SSQk:J6Aal2q!2bP2.s!9R>]r3,DUVIRXPQi09M=1XCF$Voh>ZqUb#UXC(g%N\CfWI3KqfCW<AGjiQ5jUNXHb)+'/%247b7a&F*'gYU2o5f3o5ZDNK\gUJr&92@nA&(l1m.]2UV))/q]=FWXI"^%Z#5+JF>CPhJ"%_KEHD7I_%]E%X>3_?5Sc:V,FC`otb6qaD.$S8'<>%)FD(B7]M1PAnMIRh0-@VLarVZac;JZn'71&t66!8&^`K`S$>41Q`+u1J)"!%SS0T^DH;+_:(,Jo(U^Vt89Mb3E02bjnt.Y-!fX3TF/9%W4Aq<lZf^#5q@24&)o(*tm18Kbj(\FXj^LfuLTtceZ2K_P:[kg:XFcDu%4MST2U)P-jBp_@I4Dh5ija8241@0O5Gi*`1og-B(^G0QL1*^92gp\mui_\>RhlJCo@\jFK1#F6(7MaZIDu3*2rM[lQ-pb3616iJT%+-=EDVF?qG^7aJ4jerT:'DSmT?(Dg8\E1ppAMFCWD8Y#k$X<Fsm23W+k(#l9Kj2".:h'.sQ0ZQgFQIh7VC!OaKh>0&$DKQjk7L]l%EFhC()urSW8UaM6J^dI5?AGcSKBLh`*aGdm'?JH1QL=BA4'Mn9g2L:8Oc1U=7WHE\qilrbOSYqg0WBl:+n`1ajjG:UC4<$j0M/DM%Srraj!-#lY/Snhg4Y&D\54=5FgI^X]"9[[lfrRSra27*N>QuMoBhNe$5BKJ72KM)gFXQ7=mp`T)MB;8S5a:<.N^:JT4C'+;74lqS%i;Dp0Atkgn4-?_BFQh=%)Z5D0_\00?]2>$Nf\aHc)dgMSC^W=BR`+2A^]-crkuXA4)t/gG_J=7"j0Xs[=4p0aWRH30$35qLIs(GO%OFitcK30Y,Lb<$Qhd_24U:[1fY1robX5V:,fJ-5^/-#o4"mXia?OTju&OOgP;6<*0HqV:Z]'"%G=8dUL.O*'_#^@^`(o2tSkQO9O%@ipP;"o)k6;Y_N#,fjBI36.$"L58.:ZjoPFGWu[RpJ_JbTY[<a8Ie\ipn+NR$(2"U8KZCGX3j8PPl`osRA'tibAo_*J'N$=9ggML%=[boV^KoU`kseE)P=\V:jd>%+PpBHl5R?*tD$-@ZCVdsLn@?AD$s24@"gBbIIO@?JD9<KLf:N8DJ@0uAL!$Z5pnKhZ>UWLn`"`9i%L939K*77M0Kg!Sg7E:[/dSrW5TNZqaG#BZpd%X^p)YZ_nhTVO8?NCoWd'7VGi#3C0cE&4e5"&:/MC5BZYe71[NrEW=KjT2Dk9POc%e(8LV.Gjl3MFbupbN>uSDm$*.9B!i$)*3[nK\n;kdSP>c>]GqQ!Gte[M6P.$Qnhp.$m48uNg]=<h?!>T@EtPnb4ZC$Z67aK8G+GW%.uhj.@Xm::>JZK;LFaga2M!Jg*f5'PG7LBe]==+o?Shr3Aq:n@NWb$.ltkj>_pBgJ(VQ7-NGCs+Q\m8S<]A0jO:?nCR4bO,.-iUQ%3[iLDQBPU#eSg7ZrnG(;78A#7Q]^!>bD!,6"SmH]^`e8[;gdqr7JTG#'3OiK7aDoj[8$*I%?nODX_+rJiR!W!T=e<u-$1J-^;LMo%;6%8-rR[lD_Wc,ir<A@<=hbC<6oJeSUYaP2g'5:p$'&=u6m+I+a7FD/[c0hQ'JOeLJQKWqBY>Ls$8:uAgo)]<bJ0`;M%Bb(_.i*A%B(UG:c"iPThhgi/KKlDuEc6m#S#6bE$pdC*S*Z7JZ:M@jpZ%kh;KBJ?VP7E*(Y\G[Mo95=7Kp7TZY)T<dZ#43RV4r?mqjI<*e-,#%Vn,9F-H_UmC[C"!PF.NogETq\@'u$-)]Cp'I$/eo&#Oq@)V)MSPD_$)k"comR6V2[3>i>ganc;FbX'8=Z:sdV8/MFdB'CeD#FBP[%I2i3@U'WjaNioV1#TGUb#_.qGH[nB=A-8"hHN67^>uf.^//G$u0?S4_,R[_A^s6hk:>i+T7]c#M;"juD1Zeq#\EM"V:8us1>ljp_%Z=h7rl`e!pJWV:MF_c@D[\hl];4?c"-N6,j,W(c8W_BGUWdpp;8qf6$X_q[eC-J4bLQ96oQnT[HYc6kuAfm*<:nZU&Cm0DcJ44?G%bbG[@Y34dQjtu,2$pIVbSbP#NK]P8SY@?>/Aq%5rcP71&o43D8d\dp=h1V[>9%Jq+2SW/?N*^R<GX67n=+N!B!EXhF?,Q`@M.9[f%`:4lIXqU4)P0Q1R_bd/_)'`W5"*Bm<LhELP([D]P^e\+c=Q_i!Xffh_([VaOTJt&'eYj_\]Buf_\S^jqk"9]R"[M5;&5-BNMk!uo%aGopYmamJ64/K'W%?%o%fBkD\=`*/+rB^K)i!U;VV[\HC6=jP2jr)T6E?+bMonM:cGmG@_HotCleVHI"8WW,QA=qt%g^=kO!Y"`3%;jOcMk1sja,cO+2IHFP6[;Rhg%l^LoESn)#$>!p5Qpg>Y!8R\jjFoUJ9^IVDDC%"IG[)p^<%Y29.DO8*l9jQ@d\NUs5/%J)TDm[1%R`qXM%47$\riSilFq@kMPKrOTqsT"nq/t*B2uV?LIGD$pBA_@\2G5Ea%=3o96d%a2Ae1E>'m\S-d]u6A_[&#@LB%!i<YgLI`\BtT%*8S2I!E]c(d1BPrC(d`4j.XsQ$Y080fbm.6E=i<C4i8-',t_!Wr;nVM-H+'YQs,]UNQ<bTM,;ti7Ispmj3;)&JYOo(;NslEfKkBB%bK">4-q.RTaQtU(p:`t^5L872#G9*A$X@qdZ,\@K;+]h#m[&A<LHbR+?5O'q%jVJ8n]V7/]rddWLY%UE%.BESoogQ0BPjj?@H]@7%/m=N1paQS])HrHBHCLTN1-4E"#/snK8kY?bW)U)")!4u9)t>o/K3.u]CD(o+qt?I>?.=4F(%<0)EPN%cq#F[;b.i39Zt,oKcWEQ_%6j)HbDZe0N^DkjJ(cm*bWn4t#BK]3)Z.4']mb/;oIK&r2?Yq-5:>@qOfjn1dEWX]/15f`&p;U[FFQr5[rj']s][aoPXq1D@^:.U8%.BKU[4%sE0en4Nn8piH/h;4,53/:HQA9J2L(Or/Z7012]/)LXW%296A#b"Iu"6;btSLT-:j"C,<nGXEmC:[F]%,/gqNn"BL8:pAR%(X;kN_c05+87.9[ca^Ak@l+eh/-^GX;:5?"o;_OX!WY14U(&NPbFma@P\:[X`I9aT.?;0[RpVU1H"s"P0T+&5R&OB&;8(b;'L<dS%U&g%N[fKp-ml%U2_f#$@Hf=e`]"COMBtVi8c]X%e.DE`"[JGa'[*N4qcLGKA2nV``LJOMm6M[c&f`O@E15b#IoFOI5=k/J64=D8.%Oh/dOb<Tjr#"SuJSs>&W5QP;h)c9fh+mJab87%msJQ4/pF:DN&Pst/hG7*3uYCj>[k8"+bjU*p3J%eWP_VMsQV"ld1bGJ&`8Xa>.%_>VOWkh3./Bjs5H`Z6DrE=-(nn5H2ME=XZ.n)'5%IST91A?3Vi-OksXF;4(;A',[2/+MC4T+Kd%6jg+:,E*>q3G-`U')*!ZQBW)K%W]Xq*JeCl`4<83_`7!AUePCgCZD$lTh4RRn\QGKi,4Jp!co50`Jni8+2aEUun;lpj9aP5kSS7=\=0G],$$]]BW1G2=>3_!G0:,g)%!g!M6qS3%Ccc8r0&]2aYcDcTb0%-7o,"V^9U`:!;S"G-km[[jHQ(F@7q)SHR9,&Fbe'-c:O.1kQ"3#cc`[\QPDnj"-%M_F/^#"hV%0jSr0lF/4%e$"V^_d.jfKqLB!@8FWB2+"^oqmlrBPrV>Oe<tWGhXkaeJdL3"01<%3L&tA]EIo^X:j#jKU3`5WG?4SVaTBbeZWQ%D%0rB-DNrZsc+KHq(oe-4er8sC!KLldpFL$.>JADT$bn>`?.TQE7IN]bIPWPh;i=etQE-%Jdl"XaQ?,CXK.?6nsQi7&PX%?kunH5>]%D]735-Qe6n#i1Wd29Carc?Hi/Gos-pWc?,G^(&=De(;s;8;#AN*n/Zm!.IY&pg[^>J>9#2GdK4'1`PirY\'$Ani3+5YebVN2#dh(%?e";).mu31<NP`"%JuYHM!r,0ULn$R6ICop-#UqbAOdkX&k"BC*/Z^Y\%oa=h,3FM??o4,]KtBJ,3s_^_J?Cb'!A&59OkKL<6EOf%2?56EE-VTP?<2B[Em!"*_Mna]+O7BnOaqfPO&3cnN?kN@3Bg5P?^;WV#n6lYHR)0AGu\5j<dC?Mh'=k?epjFL?t^qRn!VFoam4@+%(WnEhO0uX"2b.ut$P(YBYMX0DgXBQEW3_tsZB@?IRTLKt2N/J2$lPiV8CJ3u:oIuH@[6b+#f-l*NGKeCjAdt'4&^Dq2=%QKm[TCK%T&g*`=DaA(N`J+)g-Q%HU)c`ui7u+g/6"oX5?@%:k"._hVX>t7d_PapR&`0"f>4)=2<`fC;)$MD(H-*`=YcbJWCsKe3'bMR;Lg>k%AnNW%o/&>l7DtEBdO9t,MKDa@2X&KcR!.Ca5u?S+0S$KSdK`Sn6If1\lm<Z.Af.IupbR^dNsd_J=9?.O?55p8M$k#H9L?RZqeC*V%EmNk04(#C!C332Bh7jB+IiJ7+l2kh^*ptkX.QrPBDnQ<Q*OR.Cf]"Lndnh'>p>7I?3k&>SSp9RMl*/UCfQ/]u$76er/,S-.J]0Hc%mqK21];N5e7+%AX?0KJ-bS!Q6b5!rG[??5h3oV=dN//9Dds%f_7<2d:o7TtV''$4Y4"YCOE$W#rA\_=,5TJKR)cg>`\mfKFi3i4r%G?EhYlQR'h>5l4J!aSHkoU6\cl\N4@4<MH)JFFsdGDi>O4**Eu5jjOSTP_<ZD2k4BZ:f5B<?TJ8Zh4<m1a"7qMuMQ=<<7:/koD5Y%>7;P&5E[Wc4t,K_F-aX8K->PeT@ZIOqR8a8!<s65!fZ&8-0u/RGLMq3pL+K7i?[4E(8u&WFi)0!NYiMQ;i>8lFF4NPF)iQm=;cPF%;7\#B!@@s`oR2,*X*)R-'/HHS02;&SHkaOpf61>D+BGofBM.5+M3NI:dA2j1Hs:!XP<b8S1T9hBOpN+jk7/-8*-FoRZjl>:e`I$o%p_)j3NG%lt_qV-,]E==@%UE1l@L#9LTLKB9#%#q[(>L3ER)U:'48s!5gq+>B28Z4mI?bQ$,n%d)\Ft7YL.O(?0;g3O&U8^[_"i??%s.MM.`S\J]:ZR7k,q*S#<MHUY=JF/?Ll;7a9:f7iVUF0QZr+h@0eQVQ3#o;+YI\e5:(*>j?@R0[Z2E@0bWL]BCZ,ia:(+sUhJ)Qt%1[D%JL+FBhHDD2;b4d^$%_"Q%'Bj;UlH_fAiEp>HHlF8b[$m$3'*iVRFGScXi]l<)T=.jHdaOr8[`$eTYHK/UNj;enc[U]F.*8SV%pP]3OWp#m8.=r,#JmbU?:gG=uNL!!S/"YG$rGmDNW=EaIkfi.4KGMhC(9P]bI2P)mlSR+-PGW]_!T'/U#QFBc*12sNmmoDS7-4FD%l]T$2ZqSS66"Od`.c>i?h.;X@o5>`PQ6qm3($<4j;AaDh3Bc]omA1k(g_7#aCpo8mM2>-1C(iD.0nI4f9j?)MJR4#:3N4k9a(%t"%rci7N\*4N"/I3bbB"sED0t<HCT&cpGO;D"bAqRj@)tXVF^4k#)A8+1l2m9$G![nJW8;e,2?CSL-_`dAN#Yp7k1\g&LN=ah73mK`]%$#&TA?e)Kck?ZPm1tHZa0MI[1E/k*M_:V?H>1AtIn8BS.;/1J&%9nR,@l9K#UE[0uLD)KQW,W<"mOHBSBK.s=JkEs<d9jhkC([]u%Q`]5RNO%`XF!knon6TAI9&'drcdA4_oh'5LcL$*s,RS)*KTO4'A9=&iZAVf[9Z+*l[#sA-DsTp96O"Qu@m0uP^G)0^Ue@H8pM[8Y%4ZB+hpn-V^dY-EFrb:)Dkk'#iWS:;gncie:%,L=X;JDRH.nc.;l"LsmkrGkS8>I<lj(2=BM'eQ=YHd/[&X5q@*=]&qE5:Zb`C#o:%m0LDlU[^LlKn9^X`Q;P?l\&M'o'lC-!)a^2;hkl_Nh_o+-C:['imH#5]1b#r^/eEFObNNa_8)n=#.XRZFK^!'G)@37Bs6?b@X'Lb%-JKH[]s2B[$,Dh4S7d\Tl?K,[(Nk^K3!a<X0p`.`=:O/t*1@u8W.G"#?q]VPKRDd7QA`U'^(YQE=,7s#,J$7[gE";j^G=I9g!4+P%L_.(S0$$@d3IJtSJd0JC2ZZTJ<7!U^G]90X6rNmRd48R[AcG!@i<V)$X'FWcmYpf_11n)9Jt/.E`MaWAg,MW)7Of6t>p0R`K<(]B%=ue,LS2W$]b`oE%>`6(h#_IglJ$8REguph*du?i-@qbV.,\DTAEkAj=WXmjrSZ<)6PT4M*Op'a\,-f$c7`EZK:[UpXh]2SfC'niB%;m;FZg]`h6JrR^]d?r4?5C6=&V^"J5_g*]LL;5/g6hj2K/UO:6K(\m)W@LS0:]a[\P5Va(J>I^"NYjO]"UT#/))_`HoH8d&g8Hph%3Xpl;A:/2:k/f>a\mYU:nE/LoDS+:VfIap.T5u1]!`eP.W6LX,@-2_0^%t1XSG\%s?=?Q>Ia_f(mkhQ%Z3RX,ei7A<f%,>pBp]).%$"Isk.(eJ3)D1gZI-;#Zoba]KKLcI[&Gei2RiH!t^+_i&NRWS;FB9u]FG'/E!kWQ\H#0:c8[.%#Lm;1t=O*`:fPmK$RD9ZtKnC+t%4SmM\M![=U.U+M+jtYN?eX]&.7,@YM!s^6EgVBq$`F#*P"2"mp.bMmgeKC/eN:X[/>^cI[KggQ^TY9*$9+d*V)kjigq2MTm__:"E%`=JemDd@D6di0!dIcr_s0]O*O5%cfrV%bLH7;oEe,e!]DW\)FrKRb9Bo;.#TB2S*fF0='e;"u&jEgK'Sk+bN?N2FQV.MW83Q-D_2%T[3B:,a/34nTKI@1RPCPeU,M+r0Yr/FHR*^n6C:L[ft^X0*BU.Do7g\3DA`M/J9=N>qE297$J7A\"&[Og9G=;/0A1)<N5gh?$b3j%@;Tmk7$uI>an4#=W7_]\)n"AkLPQrT9/#4ni&6!U:ZD0&5j;h9%/kVLpLsH\VMUq:a(a@!iX1nl^(6AN#l/;+UM!l0)E_5iVVY(`%pp(&"]eJ5a/6I:4%T>j4e4Z:Ajs:ScD8MO6HiU*\V??o!7_L/rX-,B!>SEXQMm4c+m&&RtGeFS#fsf^t0n:c7I9C;=-hkjV_>l(9%H_Vf6mij6JhfKI?)6@o>UJsO)fB_[3,5Ifm2fYilq>`09O*3Z0\0sns0g!<k.3U*[L_o^iCV?VoN*ueKK%lN<\^TWjBV2#3+s/.b%.Nhu"OQXH5.Qs%C=/a<CV!r['Qi+ZcJiE0k-.aV'mdL5$9Lr\X=Bk-[C/g7!]>[)NH8gJ2#X'1%[5BR</#Ifbm],hh^mOrJ-r!)<%]a_p3]FELZh.W,+VTMoc*mS8WA+skoPnH5PQHDYIn0JmDqX6nTHl:*%n\?ZnU)tI)f?K27k.RIGDP2o)lu%?18E%-e7)qf/cL5%=%)_Khi'cfQDjW>.,*KKgQZc#8;HP6IU;2_1t.iCrSg]ckVP>tLZBH`%fh%%r>1glN&'A90c!u!(O2ANPT81-1\Rq*d&nC\A#D/M-1%Dd]qhpu1.O.[-\eMf;^EB90iU(^(dQ5+V1!]m2N>Y!%RbKmpTcJW8ns[fEkUH<`Td(XgU1aW1+uBc:A7\i1gn;TCW@ck%),Z4j0=%!uHhGkM+EL`#LP.cPYm.01+hW%"b2=1nA%nBW:3MM0OrI-N(J%Tl`Ro*@?=URRB]'A2G-3/fDg_rk_TRQ\fNsS,^Mi`KL'FNC"FU%+;5cC#)aK&J&]>r9p?FAX9^+j!%p<;'n,F7'aj]YmashU-$lg%%+_*d;cgV?<s-)`kH'O^@BGD!-02jse$($K'W4QoV=(JL#>)<o%8aZ^#)^4=p<*b1cMn3>;YJ]6?C>+pHN9AJWP,-`%+GcjS29b6ki3i#k@6GO;r6SP)=L3\>Vh;1P_qG[m1"(S^m\[dAb2pjB7:N88%%X#44b62MnB[BqpB$FZOU+V1;r/Ccb4>cXl.<g0Q:7/I`2n9.`h7X7EjC`5u`&09Z;g#D6`EB!fTFR%1OX\]cU:\B0HfJ4:*B%L>%%qlBmlGRkGdoCS:@+n7`S'u9f*iH8K0_%))-Ba4Gc7MX$c!En2bV%<rjrA0:0W64/h*_Te(NHmF2\/F19`Zo`AjV_9A]kkmoG^Ob%9hYEJ?$-KCO,!OsV+3&XN\6n95HQ@3[PeA;%B$tt:J9L23gAopF3T%N-E=If\5!LTdro=:\[jEPdu-A_3E=S:k$>A4-kTpeg,Hg7%,TArI<^kJV-#2<4mD*C<8(CPp#&#uLcd'2L`^a_[oXQtu+kk8AYH)?s;Q9_:%2=\hJ*nCSOj,B36gf+70_J7)9@u5!Ul?,\KLpGA%_Snk3/0jVBNuSqTG)'$,8oIO;?[A#m(S&uXE4_B&.Hh*WN0LA&hNK$uAX]kIja_\"Kj?TVbm;dP/jc5m@G(41D3##J7CehHo\gs]%O<Jn*8"h]k`?Y#9Fl>[L=u-*u(+30p_[1jW@:!BE_erQ_T)d'niR@:X_?I<N9s^WA]=6?U=5S\SQL6kV)1-k.r,<[*,J0g2J%,[q%%Wm]F)^EMGi0$]nT)Dr,]5S(L\>]jRKZ/OEJ8`]l["M]BUA1s-7%H!dH<Dts:GidO>3-8hK\PnR"HX8sQ/+2HJ4r@dcFLg=`$-6D%W"P]Cn2Ag-))m6JI$!_WWajYV0g*rgbIrQ3PLSo?9Q5Q,nZ_prM_D%3;[D/#+]KSe>&Pt=94Mtg;?,J25Q2!Ug26BbFFT!q=@\ft%FRdPi9AAA6_kp"Q(%-hG/g\BD"qH270XR6S^d]mZ/*sCZp2QjQlU/LcXJMasGp4o/YeU)g%*>"a6aHfKHPl%imAp:08R:/L/\SC@%IjG6=eUo=.m&UI&/L3hFoS,q4(ofA5?_+*7NDS<69\(K3RATSCkTF^]<\mf+&X>&g]Ps!KUPd?`AZbRIZ4.0da,([.=?Xp=ZRYEZ%p2^8;nf2(?J,[$(Q'5*&4SNSu7MsOi8#+B%E19.f-Al>KlXi9a4C$oLK(/G2j@6/3LpWj5.r:&dHnkdPa8N%LeZn%I,mat+p.Jog%D&Yt>4;Q<p]I^HYk+N[oqlmK.;:AQ;^4:X%AZ@6XYAk?Z8qW<p_!p>.#n%)XRLPQkDm0=#Ml)0SOQ6s\>(q$trNZR>-8H+]>ZnUV%lLi0frMYNM<:IpWU>gQJmZs6p&`uc[.&W/'mUOeIri8,%oZlK."?X(^mfFc">X9FE)uLp7KV]jdeCOEj@<Y3R5D7Q7G-7.b=AEK-%Jg:t%L!j:oYs4="_s;=hqo=k?+@k\E4LT;%*MuZR4YKMN:B0EY",nfk3Jt-q=Z?QH&<B'j8KHF'r2Udd2o(*&#brWO.:q0tfSsu9%jsqT!-cMEd5i1j(L$;2V`Rp>t-q]=PGsXBDiWM1qp[$8\1IHbG]Z8VHh_"T([[PVoCIeK#Y+:Z>M*VGH]c'O24)40&\Y)dZ0H6+5%)O(gDa`<ZL6,nS<O-8SBb2D`pPJ1[/NJQ89fpMW\S5+=L&kC@;p:-2Wmd,[k3iX;%5oXS3.t2VcIYEd+?\D/$r#$85NC$VM")EYE%7T:OdgJs/X:r#GZd-4?Bf)5K8BZ#^"\<Xar](VX=gQf@A<EC<0WFhXJ'ZmYul*[]b[MW@#$sCd(gRe#]n<r>4hWCX<\u'&2nf"sA%D:ajuF*Mf'H<E#oW1E$M0J.pH&"i>XA*<E0S?p]g>Jq^:&2;W.N+XHai2iXT_<[RQV\14P.*Q1Z"K/KCN>1oJ60Ra-%Qc_Djj!i%%fKVA.2n]FZh!=hNK+%-XqKj1rY(Q4Vfum^S`9EodFK,GTp7X=,94+^_Y%eFjMY<p6n@'c8R3MR.3NVM-QYd/Qlf!:tp]N5)Ubu$*%djQ[c42Wm'"%@c3#&o]!)FJPKX=VU:3%LQCa?^!ur?pj3oo$gpbJ?C(,TLLl88P%?"]!3A9^\9H/QHb4UB%<\PXrbhLJ3(N/^^dN%A5^^t?F'E=-X,V<A/`Po6Y!,H<_rEFVFu_TERd=17<=TqOk85phFrMfR)G_%]1\MWf^gdWjKi<&FR=KD6APr!52("Gb(Ct]U1p:S%0oA_EB-WAWi0M!JMRFZY&P1U$E/kn0,E<7T+>m-H..lu.DI!:>BNL(Qlua"c40H5(0W4o2\1GkI8p-D]&(VUgWhtM3"tSIRr;?dU%f?,\@!;`6PM.>6["[f:l)j%;<j9e,OI61nYTl5^fp_"ZdVs?ru:)R4oS"1oU9[-,8J_i1Gb10#;"R"AfQ`K7k3$u(Cal>:t?\KAD%5;JJg7KnPSRS;-d6W&bF9hZ@\SX446U6?1'+u5.^BZ-0j(r3$JArp3^;b-cs6Q?jZk:q$`3G?5d(I]-]>9!K+4]=SD?s(Opj(1hm%(>fLI)T5H?E]$-J[KIi""@pt"l-#`@@F,?m"8<K13l4\c)E:E*O,Q1$(5T4`aj3\$'F&97e8532n8J```8E_qZC2hG/Feab6t6lB%Jj<(9;S)d#0<X.M^niBZ7X*k13'2\f")n;gl)0(ZN/b[db9hTLPHVJ,pq2]ZETCZ'a9g$Y<EB^X%PWWWUG$?aqRGcJ]X%XtHD,'[%VNl#D;+dRp3Wt"\+otE^(X-tP&\\5CCbFL,I@h?[;qlJn"CT.sL$hE\S.IL@OUu%J5t'[m$8MF9J<q%AkcQs)f^/<XBl4$F'4$h*%fk\MM'>q+L.u6G7B"Wn3[p7KZVk=Is@&Gg4i:\jmD3p?u'm@+<Z_@b/]Yq>lk<>.i=N^kM49q%u5lePbGD^YV=8s1`P;EdQhS?VF%FNWKj4m\LhKs:%[S>Jk=_3-aKrc)($`cuN';'fKN$-%u<-m_s`:0BJQ:*`!D^qrfEpM,]C*qL<9qsWg%IOs]BM2dT`"=i(#<2QGP%CAg*s5;$>R.\9UZ^g6s2b>p0[nZnDYD5jK?659[oa&R_EW"==P0+1d5dc,FaCD`_M/6RcXQ,W*4W?m]53RH;J4iG0E;UZ@f8Au+8%VJAb"8ks>'g*tm/G!ju3,B[e:]-XNV&?%d!cMr/o<qG_j>p2IQ+d:B$/MX+l1+oH':TO+c<8i\+&L5(ig).;:]+r9oVe[%bju_-X%\aQ+#V`(lpSsKXGh.(^.+CDDoYqgKI7!_KQdglVRKUJU:jl'.[jo-6JRLIg.?Ar;5lSl-1c<$^*-eG-1-t\N25W1':&a*#TklXdi%+bnSt>2Oq\Ibpu&7jY%YZn-3m].XXnWfRWZ_=$fl&h@SZ7Gk,"cPqutOf]uoDk"kmfpCR]9TPdM*(2r-p!n\`BY^WIO`NFSc9u8A%YDEIZOq*QH`[1bLRDLA%s7J91.`nbXI0CJ(e(KLCOQD'8J[Nh>"Fn<K!)?rk4l%.X,ZUf2o[uQBRQbGj7e.+Olak754,J:b0G+sH%;L:gN#"9[g$I*:],X2ZJ5$^>,;Y[koOVQ66O`bV-Md?OS+);oVdRbf/P'#l.-]2s;Zjj4gVd$14=7\kW,&XmTeB?og^C4W&DaTMs%f8_[.(HXL\_NR\j]UD8WQTVNt"-OEMRHV"N9p&O&Cq3Mr0uUg:gn\DJYa$LqbV>P9aZD;5V9=uu_=:@65ho<*$Jh9$>uR!5/tZO_%:3e\dC6rsZf0lcZl4ai71?_7E8!PRq:g4dg9^""?EN-4SjuHVo#O`WR,d[i:M7ub$Qn2-dO=Pgl:;4>G:s])Ij6LVZY9Ra]EY8"M%[\PM`QC"V*<D($en=Q0@Ac)>!o^E8:3f`t,,!MAo`[s&H5qo4q*$^f(8^pWU(*t>8MAb:Z;0L`SE]cEQI<fLg"7Yj$?OB0.RS,RW%mLrnp$%kD_>J9Z0[(&.L;MR9k.W8O,.p7,!(L=s+MJB`aaZ7P>/Uu7RRl-(JcK,k6h8I,[A/Md@?&[s&$#?LskNsDU7QXMs-d"1c%b11fM,h$ah?l(g/p#D,Z10F^#K<uIY#q#>))HEtK+_<8WeJB-N-$q;mD.91Zb<oa>SHKE9?qTSV8.g2/cENG(AJ9Nh$e97(&FX3d%gTn.TBo-aDTUgQ2Hs)c1=-81-'8IL<\A]N;3'/XUbgjm.]<e"7L4*h=[CE)n(/ab=/^.2oC.Ca&:]lou'`/&FSagarR!kH3^Q$Dg%0W_,+8Yj!J"JB\dgW2GQRbd?OeIl3d:u7.CP4qbG+UI_Ejn+L1Di$_(m-a8([%X=S<rCjU_Gd9krB7Xa@`4:SYq^Wbg>FC.H<enH%A6Ed1M/?=X(n]c+XD0RH`g*?C>p?2_*#TAoau^b6Cb<;p.j8oeVaHAC"^,?m;D#$NPghBqM:Pk+*fDP]4J=QC?FSHDqP[OK*3Ve]%r*Ar=+a:.Q<#Lg[8\^B`q_HC"L3nu1X,aAX!W'9Z>OU=pc5#]80?a7]<TNqSmXTY(^G1pT]M>kVCWL:I?6+3D$9\X"2qN/F9!Lu]%;,'2>p_p\ul5i_\QjdVq:!qCE5r`eZ?T[+YSJkpn9/58chp1$P8*0MFCFOLA_p%fqCh3CTWWUj2qsRmorl_P#UE\(6Q8/N^eDEIZ%gm!@#8fj+rj25AM8,HAqhbp!UpmsG_,;74/*eZr\ERLT0dpFT(+^_"K#fj1iL<niAO3!_'[98Q"(jXPOiEAAh/,ASk?f0'f74;SB%(C>W32"319N]Ka*cd\7/[Fq\#d>f(m%cTB-1:YiKKJP:1MVhdL'>K"(KOTMO.<(/rWh#m0mpAYDOB6H*WR#q+ReL=M7^Vh,Vj0Gp%TqZK(o=OUDSA(:56b:$)?UqG=c3U1FcEK+Q$/eNk,_+9Yno/[lpsZnl7-&S1=@Om*>N+t$e!@.WGD&PQ-uaX2Y6g+M\[*pk=Qq/C%h`HrqlHhhW0nG7oVY!!NS)TLqH`1<hf@fDH>l5;&i,tG,9(afXL^HZ_3Gnmq&rJQ[?Y9KR^U!hH_+,<a`'%'+7Z=85nAmR\3d,+o%a/4$.rj!*UqQ&G[A`_dlZHk2I]$D8Nl7403n9oR#HM1ub_Ks7_FV60F,]D^KNd6,VU#!)VA4ITLY6pnlW$V;kg@oPuYi\h\Ab>GR%q;WB@JW4pHgGOoYdmf%NMmIejT=:XW-N7T:f%)ND21fW4h%n=j3blNoCE9rY/R:NH,bQ^:8C++C+*`e*G,JNpBN-AOC\K_I,]F1$%n\d4nIZ/_p:XitFWRP&<8VbBAWhWVN4TT-%>5[<#,8Zfq'jUiB+u%Th1ZD/ES.YI#W+16Q&R=.GLP=dIiEmcAi\RtQ6ARbiW*+Gi%YZp,DG_3kWG/83?4+7t!iK,>V#jja>nTMZhP_e-TRNi-)l)1RblUeEa]m"$Y#)o)/:OC:$&scW]WfDN=ZK3"p[r&VElW;O4rB3+t%A5P:&A[7=)#)4ZH(&XKaQa$C6+1jDb2;6#YBm$p&S-g(M/tM<_GP;u%NpWOs*&$Q',rE0t%@\!h@e8&_2`/h7T(7Z_nj:G5l?FrM%m;[T&R$slQ>g;k'b04k>o2O9YGM%jKqadrlad&mH=K0:S+DH,nrD"R/)^/F>ACR1mTs:mZgVBSNA%U!q[35dg-.)lB6@;Cn&+NM<%#eDO%e;`/%18lC*MAceN71fR.3s&p-Akha7U8/OCmtA%"e]QQH,0r/2eQKa[lt+PsfNi_-CN89lO'fHgY_RZWq;=C"E+R]@kKt=9%CuFa1YGUkpPV,l^Yj/f+Y'>&$5M<2pO&*/!=/+m:Bs:^)R:1ln8StQ&\UAkR(H+ZH1+Peq`b[ZT,$CUm`%"1OM*ZiL<]$2V@&1Pc%N0HYp83=8@9pe(DY!AV.6l%.hM<pR5;F$8)F:/(s'F/*Eq'B\DSkrBB78mm&QKchbcZc^,)5JA/F.@#sg-pl>(6+NEV$bU=9)@S-%b2^DAP<.',iU3$BWu7]1f:'Rl(9+1"[\9rp.^W#PZ+]C`\7EthYm%qQ\gCl,Z@qp20QjT8$9r"JJ&)TgUQ3S;>+eG^rl/o&pmBfs%0W/[=R`+UO9nk.;L/oDbH>;WV,BlHiRTV,e(1;:1GI.64bn8LRQKeJIbTAPJ_Qppsgf:(b\q2L*B=D"l_B8T>Kf\@7h9-lU!t9mV%d\"dA!Gr4N584t*8e$DJGmFgJ_50s;FC]B5nU>$G8X^Zr=GCKdG_br$SlLCd2/X),SeO=:;('tZi\[NECaQqg_22=N*))5NP&$jT%^=2<aD*q3-hIC;K5X?km\e`m(XBFA]G"PkR3@q,e3^RuVP,j!;CKaG,X0,A;0riD2\D=`PD9lbA]0G<?]pW:d)Kf\8(rL/hid+^+%<b?KO\$Bl/="kE$NCi,\ad"<"s/dC=L^4treKLsf3hm'SaW%0Ua*ECVjj;b+CdWuP[G%AP<!o^sSc/e8bas2$i'Agt=Od9<ZOkA`%oB@G4L=9?kPESeQ#]t;@;h&rVgmqRj:<74mY9d_jaL8@C\3si<glYkl\[ZWG*[i=!;O:5qGe.^`*qcBOaeB42bIXpOC^J@`'!o;)%Lc"Y2@X0!%BZ06"D)_#2<:!;VPLXP@\r-.K[TZcA;RAQ:fG2Y?HF&OPI"R.P4L?pPnRZ\E3SI1UXn*,.[19aDIK%1mHU&X^?,lqR%dM'dHW=]G6TIe_NhCtlo);S:C'3jiI)q'A@/i9su0JAHi7$_\2=@9U(>gfCdlVQj0cVm@kOpm3Y`?.dSUp+gC8FH&YqM7Rs'NXcb%E?cV;,(J)9AMAe7d<nVUJeOQ@7"Y"<&m1^/Du/mH\hLa06ZLp:<?o7.^G7i^h18D!\6/--Fl;qk\7eZpX=BH9]Q9U[0o$C&=rJhH%L-aO!O?3014ne88OMr;'$.k@BY)@I#cJ8GTi6&YnfM]LF`^XKWk&O4Yk!@Wkj`M#0T3'PP9@NXA]Pt%uOHCgh>soI'3s]2>,a1[Q%\L@&'Zri+SMWAbqhNjnl+gRF<H?,Y0#Mm@QETj@W+c7,LPLCs;@AZ>S\ZJ-A'DfRn.eVoB,h_>9)#n3SZ*-^*RLuYJDdgiVpi]D]%N9m`:nF-N%;oe]>h;89+_"g3"/c2^-9GT]OB"sgl(>*Va90@at_ZF%SqTQ/?nE(Au%?"J'PRIEES4pbQChD*(QuFHM0otm0X='5%%E#SRR@"0eo0eBLQ'a37C;f:cL#l9XF1L(#ETd<;Dc;)\n_G:8%&+NT2jeR+/5f%`G&?mis#c3B4#/6S9!H>n_NGR=E"e'NWq(RM/%h[F?t0UQ(#VF=E.R">P3J)Yt[T5TkmMMC3q0J<i2+k*m6':HKE3b#k>D.;,A/eBQck['K!L9HO+"+1b/4noDJ4Y]=l2H/sYo(?].%CKg@Wj"?M"WkFS1&S5B^ec:FLrhn;P?acmEROX0^ZQSi*O//[b!nZ6`"i]7iFm"3D,"J\@#l&)7),TRE)tk,X]5_V,.-.-[@NHK+%:jHP%?qn6@9hQ>ERJeE,0*7s?iB9'(79oXA4oD;jFU5TRb"QgOf3Ob%HbU$]rkfrjJAEE-;NJ=7?A;$$K_meCBAsGZ&<S7+rp_BO%VKt$6bcr3nON<q&"@E9j^$^k679BrWXrYU:D\e2>ObIS:<[tO<,6%,b)*f#NR1m:=+lfNnT(bFu+pPhAVqG<.0r01V6Ab$>2j2T^%AW9XFM4-i/q^S-Z4!nn%#W!f1HutWB@,<%POSs4n"Vt^F)LkYbmC=qBPC>XQ$E%[OBd)6KAhdV82cUQI*tJ6;?'sB"oq"E5<"0Xo%Yd)`fli^>j^rmS('.>ICB>q>g:NFH=Q[m\oo4?M(c9Kj4iHTW99I`^ec+N$ImJiuLFQ8!-D@%qFlJ3Rqa.=V/M&ej$LVLB3T.]Se%dX#$ZCR)+]YrS#0=J7jXlKkB>Ae$%8kQ.!`&ou\a7kM0Jj);"Kkt,,2TrX*6%M8540e?$3?RMm,jh_/j"uZ/fdmOSL`W0WpD5u$0%X9P\1C.)hFge-F7Yq/T^26eu/X@k%Da)<8K2MP<[^qMrpg;S&#9Jq[4"NOd.9B2Prk"`r<"jdh.@jGOKb&O]##qk'Q.e$$<:q6iF%&WR"f144Vu[OD81"(aMO[8rWbR(9%fg[s4K8rs%,?j+;r\u@7';krc4r+Rfs2,UD/Tg2CACe1;7"S;AnC+2*8Abm7$VbFc7V1fI"%42[*,,UFA'X]S:6jbH6f!AZQTb/#L]lsb^\(I8EAfq[3kl2pHk656c8]BTDj/;;HYB`1-PUZi/Sj,lk/L%B@%D2*[%'uXeF0p7"l%ae0I7&!:k+m.8)XA*&k4@K[ION.0?3n`O9)P2%ue]RViROblSjm>d&r>869<pf!uA];S75ru[8#@VehDP\hO1GD.4,9#Fl(:"W&5%h[L-V=Uk@<6-/6ZB/)_!kqaYH/FI?TIu32"\+G1u$r(jY8GdkU;S]DY0el`(cT_M3%s%:m<ijq751S`H#dTaCf>]\)@In%Q&_l'e%7ac-j!/P;D(!m'u&FQ?udQdjJJ,7i]egpN$9q2A?+gsouX&XlFDb%P"Ku8ShA9\L_$bkO_-GfQ&T%N&Iq%954>^r-P=Sp0kbC22W%iTK.3BK-&F,4((G^7Y]pq&:e&_n_33N\LeIT[?p\F_lS9_^&PDG`&+b'kEpVRYWqE"IW5)cG\&IO5h@[gs7PSl(#6mnAD`GE[$[^%3`*`9$/S[F$j3Cu(PilWDa.K.Aba;&R(?B.ORkqo=Zjpj_C$4e>,'It",[!qA^TM9'SWlacUGpPIUD%>"u(ZL"]^heJPDnQ.e<oR%K=Sh7a^6ocM3VBuJaE5[BWmfmMrP*/jS@XRMtW1[^(#mEs([`E()=Om;#gDJ*.\0!6ARd!mlM2]q"hh+.Y,JGTUH(KQi$No!>u4d%@'NQVFMO1i?HaC5cjF)9D'ncg2=Ce$#l0'S2f\8R<<um6X`/ML-;mq*HN9?pX$k/]cV]>\)p.t6FNBh*WHkM;dbm;bL'Bea:f#(7%c-0O#r2s9/8]=56/XK'*JiH6Y5u8SrfImp\^b\#+<"U]hU"[6&SF>G?WYC?]H0@cqjc[L3ekQD`#\CXE2C[g*P(q`6/s@V"Pl!F&%Z(E_,-ad4Eg)8od.K@EYo(/q`E.I-uY^T=Es&Oe-T?q,&:%AV`&8-F7j`X5)7Bi8nn=,fkMft9e;'F@1X8"#!$E=p0c0,*Xmn'\;%WYF0I!&MDD9;$!AB5kBB!(XD;G9DGtV8sV])H85s12fns6+q*qk("()FEU`D7?'-%FNLaAmj>TK14`Z0/eZ+*?j?k0As0R>$!gMm%^ebI?9PqW#W2[!4"u9UB]J7qbG9N=X9giu5<-JrTVq<[<J*0Y65W>-^-quJ`FiXM:DBWX6C=K:RAa3L[l)9']S`JF.`&RbBB[2N3%DYZ@]YjaCU-dbh1!ucYG5t$2sOg@dbka%GBR;cpgYr)=%D"9IO<Sm.7E_!@`,>\S'X19Ir?l-ul!m9_8,pp[DhKo8e(?@Z\Ia%og%=SUgIYB'E-UGO"1;RidZ;A(HG4i]D0F;M\#hN6WSdT!u25mc&M+[rkHQYf3fg`'Tf52<29R\nR2[ukW:W2D30)VbclIRoHp?o^;'%a:9B?"jn7i4\mjP!05#V>r6DOB@Z>J]RIXQ^RB+S2=M_7(98:_),$lp</'$to%$O*>i6;+;[\_W%u+1>%+Sl/o@<@krE=kte0Zoh%\V.jHS$\uV8266A@9W^GJVJOk!aLhn8o*e6!4'igeR@t+6*2s:X*.0uL[BF4K[B=M87+3I/2NICB60C\`J/pL2a+JtJ4*_>fIGFL%@Ibob8f%$eapAY7&qN"2@F@OGLW8)!1s3!k2N;5"XbsbBIq,d^Jtre`m1L]coFXeVp[VIQ3'GNV1dOtW'Y-cgQF:iA(DEsYqJ,V;%NaH60,bBW&9M(2k+lX<:IknOEd%.**L!ceXMoSek8OI%A[&2rX=;DSA_1)Y)\sQsA;'VfAKA]I`,I3aA_\l(pCn)drPWi*.DK+"$%8Si=4ODi$LoR+-9!!*<<;?"5>E@jrG1n9\;17,!fN-)uPM*SBFj*ddO)[UHP_X"4u4f7i:2Zu=W%HkZH<3PDXaM&&_Rf7&3dk2[`%f2-P%8OLWY4VuslkL7sgJ*Z(MD%J7MBpi38_))!PY6IO2,g6XTqs6lm)h)Gpm6QT3k2]TP8"P/W#rP@`;M+9,^#4SK!W-&sO93GZ%o9Qj%,bd"APC&?-.2]37K#W9\mD=k'`tuS5:/!25&2Es,,SJ[,I$]1%!(!jT<L785J/5EU,sE1f!d;*F[-@1iX^i(up<SA-O\"Q>%FdgA^GJUpO$J#>VG9%HE*-3?p/U:B;KgQ$-1CcUdFlsL%@;HS<f$RP%7Bp59j*r#<\&fJ=\ut'!L6Da8.V][e*[YkcY/)Oa8IQ7F%DSujYFj9Q##I+F0k*RHN[2-E2CMX@V?PMYQ>E==[&0?S%2dCbF[4&$[JYD?+eFln\$6A8TC]4dUBLX,Af<EVQ^#uO&)(g7>(0mnt%5`Np0m/`Uhl+G69LhN.^Z2T5gkH\mFFWAd^k^U)U!g6qoqu*`h<(dE(>el)2_4Cs$RudeqP6+2+d,2H97.*,!G&,/"!T*1C3`Z'F%4#8YO^sa\=>oH(^e?GU3r)e."^UqUM*\25l,KXoWP+Gb6;`C3Q9_!S`g3O+qB!l3[LgsMu"D2[<Urco2;l?Rh02Ii"9Hd+AT3r.3%kkV\oH*!B=:SptH:#pZt4>7I=],re/3Fs).n6i+5RO_5snM7"Z<-H_j<H9@Q('26]Eb0*NHW?jn6R<1L0hn7OkY&5Ta/%%Y/4iWo%_SFWD,uV\-VC:!/Rs0q&pSbc$nZ?;5i]^3(<J1h1_7Aqg]p0S=><PU##GEnXqbpZEMHh/6!n9O&in?FR,,gHA"WPOE`^`+EdHCsY%Y*`(l&)_pKWX3[L/D9;88IjX@!At:^)hKM-b.Or5N[VmlMnfY^SBtN#2ZQWas%_^(1fP`JlKN_[.fHO@;f%"oK^)5.Y#Od0dYML@%oN_9mkj6(t7R(.F;E!*7I9X/p0Mp<SY3nZa.dH]OI74b3[F4;)<c`ILY3[[eh:U^@Utpi6h'.S1p50JW'nD<Z:7Voua/%il_1gsU%dAk`t"N0?a6fIN%jTn"\,./bR8lTr>E*!iT:JPF-nc]]HBT=DhJG9&69fkS6;275*.q=R.OO[08-9*riS\P:";`$que@-Ike6_R`%?3\MA`D+Qa9PTG9aj0u0aRCdfq2C_f]bPNb>gn>7.4K$(A.XA%&)HUa7$U`O9uRM[)AschUqg&"Ho`@$.&@dQ5uA[U%8\&r7X8Lb%fuaRU'cdT]0;f@e/N8?-kALWFL*A/HgloD2V%r>s'!UdcMM==`=$!t/UZMeQ-2<ZTM_NC1'br1Zi[8)3VMHCt9lFB:35["d^bK9=%//2CF?X&7QqA)F*4mc'>lB-,.U6p*$;WJe:c05n[BD4^djQVcgbTbAB#Su5QTK(,!6#R^dbd0`(i)lurA&Y3&MHu*O6OQ7ghW]5T%?MEieQRjTr[qAd<@Rn*^L(VpAXRK6]6AX5FX[(d=Lr`VrTdIb?]UNYH3[]#C(f[e_Sr9:4*4sIDDJH\UGD(6WO4N2\"Wras)<).J%!6W*H.-]l]oG39%mSJi3@MGVWEGfT\0U1g.Xel[Q'Nsh=<Vmnc3&c.W)5nOSCct3=a^N1DpD.!6&'KAs>:EH,&sr'Q,0/&_<Ir"d%O6:9bV[]'uK,usKL[J6+2on]f.X,0u3F.u1l*.`l['qN#I8:1O3YL<k\h[^8pJ]RQ<2NG/Ec]V=)><0qQ3i2DLLhn1HOrbY%5ffC%de9d_$PR[smGi+`o16Wh946lfhiI38HWe2M2Q:Z1_[S@\d*["s,XB3`YXjaMs-aN@OVXf&F<QQN8OkpZ!\YEB1W.fqD6[%O**,6q%8JSaN2[LL``%o;(]Er.X&2W;UJ\jKfB;W.9*8<7U8:mk*.n6bOl+hD4iJh^bB+"BA`>I+:$u5f8HdFh`.\cK.ogV!(?!$5c[S*p\%p_>A?Tb::R#d;n@-4q0S'8Sj^_f1E4!:`DrF<EI0]a]Uj&rn0f#?T`4Z'`tV2`2e;+!)VE1'K&`+?sNjf]b8Kr($42?#`k/fJr60%PD013\nNTYhHDt8@EF.an?"?H*6uP4U^mYR(^/QZJZ&@<Xk<M%Z!2O!#T;RV7sRQqcA$3W*$W+rMt3(/(&d.A6BWak<&d"2eOSn^%!H?KH_eGLH=2@)D;a+OE55.TqDb.@o$e4J,j<9O"3&G=Ld'',N-YZV,WFNt8hj+N"(5h8@3MVsoakP2',^\O+Ci>"WM'8SYk$8X=%KK\'&WnLUbdp!hk!N3)oN+Qt\18o4h-cPJD2<^We+@k9k[goP9Cp_M-pj6lCA:np;nPPopg8;rEAV7`L8J=BB)4FA?D5[G+(3BqN%1*^cLDQ-6nWspWDWoICJ*q>XHg7btreoFrfo4gW-OCL4`Wr$qN"ABR<Iuj>BGTP%_T\Jed!1tpDj?3B,6O"ua4MJ&*k%&VMq#Dff%/sDk>Llh`U8;8I1a6o\IHi-^)9\h:WIi,ZiGJO$QQ<P]KFj^n:n+c)qEl73bf:P5TLk*b]=X/T7Yt)t<(EB?\btU4qC2\PL=Fctb%U@d.;q@BP85<'$1179*EMaT'5h+V'a.c3DWhm'/R>is(1gG5BjOZkSXQk2`b.1aYnE=%;0\_X"c?m\f0qPRIRQKh>.^a)8jg2OM-%&>GKeh/'_qOE8K.W`=kKo'"OoY]eer>m'G?\qa.0rLIVia6tDdqdpfJ.O+iWhZ8trXXiY6%c,XIjS>^;J?O[Z]FBC*KV+;8PKL)S%Y4]McCRTkcNsCGDK+.+ETWa@F[&M,G(f5+n,bT.Kd7&I#r[WWU]>6i*\;&c`D'pNd/VD2F_,g3h<K)FnC'\)!U-_V.?A;+<=KtmT%C2\++'NOu\$c4N=CpmHb<9Qr(f4s,BeZ/G:4=hg/1)MU/<'&?uFO>-O0gm<mYpq#__b4/c(<\G6djk$!%"3DoQL=D;hCe1='.e#\%4FPd(<=R#@P[;%W4TdaB8sLs%d5aW0$XnL$&&d0NC/>pC5Aoo"k5(nd2d+h8MD:Oc<c/]LN0@u]j^kfh"E)MnW4Mn<6_tTc#fh<&%+V?$UXX#+OluP.L'T2g(fJf8%;#-TqW8IY(QC<43C#-pd<TQ!!J?ad]I7b^]j_\LL+$18'E+/i^5*p(.*J\"?-`]XkOBCetfnGf[%6%dScf+&3pS[dM#DKNDD%qU,PUkT$1Z7*_G6.-JujJ/Q*_T$U%?Gs92`,]$,[3?o]/\TLhbc/9%3M`.a&?dDla]T%*e9p="S1Qsn%ar,F=JhottFq;knbZF>-@0^3u9>4+&M_r@P&!Mse0@FO<c=gd7_k7;6:-f"g7":VX0"rY[X#6f,T^(Cf#c$`R9V0-\)9WC_R+aE0%Flk*QP+UlN/uC*n:jJY?+U^re8el]L.8s5(&F4'cLpuhm(1V.0JJO:]Hjgf68HAJ@rcQH-l`Br!TNh)Mos#JEf6k#e/[T@"7/[%h%P8!#Mo\eU*:LM6/?P.7co<%JRIRp;":HKR"ErCI!/UY%+US"tsOf@a#PXM5`T"]EJ-6h6Qo6jQYq+\Tai?W7,H%*j*nC[(+,e7,I%:!YtMJIoB4e**YuD\!XYPerq>k>O/j1j_DN<32$ncCfs]!SqEPhGok_\6s@W_LKM'r5J+UnE^rnc%l]le&D7P6Pq5nq9@m%#asnf%I8da(T5Vn5);bYK9g0N9/bt>tqQ]5s[]D9U5(>L]\gaqYQ@R&jH##.Vj&:9?moT.`J0@C0!G?,tLpYLM-,J=`NCTQ6WN?`&nee&b%SP2R]7rh9YXoRdtcP90TX!j*I&4(_Y_/UNm9&bQP3KZu,\'X<P?tc6Pl2I)\.XT^dA!u<#D4C&9<62REqqIpgmT1"m8N6G_[9-*Y%Dcb,]q5aJj'>:?7N=VGc$sF@eOKJ+pK%SO'Aq@%\pkDW;4QO&&5");#m6f>O2L!lJm*MaEDTsWX]#/<l`T\L4hu0L9:O%uR^4[$Y%.GJd>Y0[o..Oo\M:^fQ@cM0(VhWEKVaSZl=-pEmhNosr.K/3$fnf8(MZd921;]AJlZJ%S^`Fh(X'Q?h3fug&Rq59u2(t-0G[pOUX%o9]LRcZ_>>)a-h,bV09=M4GhWk9:9P8T^bJ4VNLC^.(+.BE)RfB/bHS6DaNLGi^0;]L$DY$+S*r#L)1t9O"tj@2_T3$L'h6#_IfF%64(e./XS%Fk`h)U<c+e1T$Ru/G`Q9&FLoY@B]?rEQ+/\VLPt)u]^PA9og#Ih]UX)Hra$Lcl&8Rm`>p9o/rFiqbd#l\j#Z+8<_.Bo%XE,qm0n&o1eGSHIYG$8d;PMJJmFtB15/aF;=^<rKHtZD6JH_IAM'fXIh->K;.jlIRmjQ:Sc"Pf(mc<_d:-b6=_[$IQciG%R^,^Op%91dUcE/fdVe+3Yb_s"Z8A/:Ca)K5Gu'9;H'3M4q1cPU5FJ+`\GIJq'E^\QoF+92-7GMi>ff9^us9L&ENl5ofe5C`LZ^]4)H+2@]j%bKkY9l`WO#prfRbqu4WS\G#)=Is52oO4SkN"sG:g.G'V7;uud"Jl?#!2H8YccbkkC\ZHO.6R1UD<5sB69upi$J#@S`HXnZ+AqLPg%OF5D@2qs,-loo)`d3FRPDODarX'/>"bViFr)iR]4!IJ?,@0t<@Uet2!(^j!):422),#pq)FqqF#m(Od&pJf]?FaDo16Sd35$`m:i%Wm^e2D9"]AjCXl^Oab`Mb#E]bjF[I(\Ri4rNg3"i'_?2\^8a$m;s5Z2#Ag7T>K*_L?B307gr$QIYh1X3NZSsOYiUD5q2f`/drYlR%mi0MpbEQE`en@mf\ppGJY?W@f&:kCl*krR<ok(#uA4)a7+<QU"eftW2[B5:"bphkQXdW"*7_2)9BBZLUICuT6ZNPKdF[a5&<b#]I%H=iWA-;]KCg;mYh/.+WrOZKW&r_+(lm5^_c6G&>0^k)8/)lEstHq7H:8?<`>(+[<UY&@SlO@EE;<@em_O^``$E9Oe\=hloH_h;0m%PsK$[1+dZ!Y5EHi>MUX8!""HPriY;p>bUGu/s*M#Ua>tX7FL?DGRm.;7.Vp?mA`;;7hoJI\(,AYCCn?UL@.0J?<.S.&.!W4WQY6B%EobDd&,=,rTlLG<XF;Ms[RJOpiQUbPl[:\()*mY?ZGfg#jj>Hb$>6(o;B<:Wp)Vhd.bSWQVV;Y1Hp1L=[i2HO5i[^h5dVq"GdiuK%WHIo%o?tE*cqRPROSVFjTOf'%h-%?bHb]<\<ts4[3>qFYTtN-KN3W%[@`gDU]XgkIB&5h<dlHUJ?,VV*h7Un$I!FgSgFCpro[3<Q%dSoFe.Ku(=*(+Nsa(2p*-\DG::PN%J.@I1KA83`t&5g3Xqo,%m8oA=@g!@YpJ-DsCZ2,g4'_kmsPq2E!)!Z\'-[eiHV1SH8:rDfd%fqPVSs6X)]j9k2gd#iX144YSpSCB\n<&NU'k410ZZ3/bVg$TIDfUS[p^mif3^g"#D.^g\l]9)ZV.)"#RHQ;tYVB/:5pE4:'qg=5m%-t(HU;FECgK;C`.edceF`%ueaRgJU`m/[`9r\*_hnX"IOQmErb>Qo"U<_&+cL#GDKD*=;*IE+Bl*?!'i`^)L.j#^t0if[o>X]I`B%4?';Hhu]DEG%#BO^PAV#?ss+pK`NeB6;&`Xn:'`R`)sT>S/So8*Q?IY>@!;(c$2BCaL&/_ak]H1O=Tm@e:g\5.QM^;/#;qoZ16``%j,EJll9jQnjmdt%FZKFY]h=_\i2P$H\_Z0kR+p`t35ZT!`U:l&G,>9uF7j]&A<!9ob78YL4CX\\h-S@U8?Ei17R9)]H^1Sm6i=ir%L`r0<8/0"RM7&EfDB@t>M3oc\Gti6!K-qNV6i99<87HFM7tjC"BN];b>'C6aM\N*YZ^QAV%f92f\"F=mhYM'0I<;ECdFb900?oYO%N9ZT2f#GHeYuX='Mp&[hB0)He<318\mbJb5dtB^6_1^*+B^+AYk)Q?=KT:6*NS?k[`7F?`c:-/;#KdIr"bYG9V@+Jk^V7sF<N<<u%%G9kQ.@0ApSa\i:(K3E%Njfnk]NCt1ha!-Y1O9NQPj&5Zo7Vachn"ZWcCAF76]l6/.O&\op&*ah7rVN1,V2%LI7;f=QK^6-53$+O%:2QPe=Z6B$=*6bee#3Vp:CibQ+qW/2D5@H+Hko(\K3mn@-ONZ,<X@G-Ys\.sXPSQB>js4-X4Lop6nqs"2H0,%;Nb]l)^.J/"`%pF%$RPi6(2%G"!'9=ZQT_fac%[DL,?=iZ;PcfJF<n$#Y12qJ*`&<A%Y[b;c&mfqGo":ZfO@:Olt;S%6E?U"JSf*PpQ<CKj#XNo_H'6%%6[*/:d?HOZLO630:")#qYg^k5I@E?s5+ag\F,H1Vocoks`N-1+aYXc]Pt;'o:F\nRHs)`k7%ZpUkXNF*=[aa5f\NFWp%OLoW[Tb>%g3HX4`?Qbc1;br+F?u^_g%G+h@1b%jgPdD'\*bcg>l(JS&sJN$#Q62/.Uj0jjBVQoJR1'&;;YYq;>?22h:>.5##T<]fY06a5K]8-%Bj#ouRfWkNOusi@b!FCQ)R*nZ:e4HN>6Zl)6fs+V:Q^Z[]h)+(990Q?CLn("H^.b)jn-.%b=pM24`+\?Ya"pW\mhr\Z<FuEZf]$&%5?+kRZY8uGfTra<))&L\YZ^NB/"P))Q?hkFj>FLgRj!\b[9/+Hb*hA360*L1f3'P]*04ilda:Q@`[H^pfQ)##lZ9sUFO"S%(WG#^%TN/eU,e.mnB'S>m8G6uFG.CHp3onONJ!pI,#rXt8(e)nlD<j)dRj&)`Z_`K/i]7j[N\3,.<FY2Q-pBkOc,K>,\V3R5<Os[7c#Vh7%KCF_1QY$<j+[%&r@6"ti.U/+D8/BhuJsL04()@4FJ2n:'1Q-4r,[g2G[r:SUV19L6nlB_A]O:mm__K+g@Vm.V7=8AUEc$nDpI-Qa%![KB/,W!s:'iUMO-sS+Qm3QTTC!cM*PPpN=Bqg\dEt,UNMF''mj9[NKX4,QVWmRLf"EM_!EPNb1_E=qjj`^(q9Wuj'4GHnjU#NX7%gQ74RFkD<'PoRd=A,(;HCQ_b9CeUj\fPo9sk>_]c/kj9Q_q#)B@@O&urKCI(CS_kIEmsnna]7^>Fm_B,:#dRuFCa5+iVeXo5cmCq%[[93dlSsu=3!IY>&C&)?%qgI7NI@($"b)cQ=R)R@<U5Q?s"kst+S$RdU@J++>H]d2(9[/-fdkiWc)S$Wds`oR>^&fR)7Q:(?H%&N%KMg'i.Q#18Q&9;lor+8_G)`2c<`%CEVA9s[#PR2!d5h:t]!nmi8TeZt96SWi1/Nu_"2Nc*#FmlYg1iLJ!?0rnpRm0a6"dY.+>uEh%&S^APZh0c=XG@VSZ<6.)1'FJXWN@-MSL-LVU>j"6P\RE0D)=+h6&X50+W5R5YUP\XgX6K7WMC\;i/r1U1YcZT!ZG[?G[ZDE\e%)3%,H)I3)7V$Y*(5ZN%i%']l?W;^MCTKXPG<>%:E^D$>IK>4JNG1>.Oo!&4ruq?%]2gFVf3?Vd)-YeltQ5,//=Xsa]??b(5S0,>/=sl%GdH*_);K+ghlpP7'BC1IHi9sTdU.-QY<q@fSEo$m:!=c7XiBO$EP-2hA@(8fZZF?JC%3Oiq!qV9O7"Wa+rWjAR.2S!^bUiZ0X'])%Tufa7l%?5\).W6Mh,c'%o]d!pG2&b(Im5h+pKY.5m(E\;a=guNQr?;WD_*)5^D/J\\1pd9o@p^'lB`_K9:p&4mT)p'I(4">5eTA@%QoqiU;"GS_7VjI]VPE0#fhm0:5D<'oh"&TNPWbD$^25d#BZ*?*<jZ/(`s,G\+6Or#KDBVA$=rbTo.(I81%KUsk.Wn8?5<*CD[Frh%-(.r%rtiN[hV\m8?FP)*S<jB=MCP8$!\e(]m@`[u;BbUhAe0pX?"g"VMDs]Miia!dd4Ph='e!!kPFi"+Sp.[c+VLW5\!Ib:UYc$1%DL6ISJ=\O6`ul2o8L>s\E4JaU#5pGUXX6#)Fp2j/4k8;Wq(lYON0d[ceWAJ%5QrV-O/N1$,A^NB(jT9=5aJCu"jBusQEEPHQLg24%fhpX^%J#6TQi0JA,u]Y'rF3Z>'N3E1Qt@@7Z_To\@/G>ias+(XnL1kW`c"uufIBHaYof)m#ht.ATPCQ0KCM?9`-$g,.le4!/\VYt%%C2V6Fun_G>8<S15d7pe`@4E=D+%cmD,6ZScI"Vh*X1<O5)o$]^8M=6k`\Vpq65o+21A+ENebXVXe'B()B@C3=)@2,>CCYUU99Z>%D@ou2)]dLW8M>Xf<QLhYU[30iDf4RpF%'ksMe)a%C,9AH9mo$Q\R_(>Pm`G&n;`U#!rOjo>$97B9>l%.SrP23)<K0X5X7CqZEPN/%""4E3Ve`XD@U$nOWM'1ta(%4)$]liG-OQY]N3sWmCKl3%T.L*6P,>OUs&B1nK7P4nSDA_ZCPf:][g8XVr#>,#$9%#-2t(X?'j!a1%_$<Aeb!+b6KRQ0%eO1aF/tac2%a?H!*4mbc3[2k)XYcfZUlq6jbaZ.f0WZDeca^m)gs;=J$,r,o[&TXVo?e9+(r9OLE]EUs:dG1`%(^>-2nh<sd.E>Fi>8;i4`d7Eef6s'@B%mnk3#,PMU^*;t$tZ$[g`^cM0s#412s9;9HGG/WR'pQ5G<X/-]XB/-D8WK>ZcAgjs7Iqj%O0_fo!'Z=7h&SU+Mu"j7it,-<-QRic>G*`^.7-Vo3'o&:bEH\^1hKhrW^egpfqIHfj?.4A68Kc'oMLpcL)[jk^en10.PksN[q/0I%L*&7?ee]Rqoq!LeJ]<M2\BB#r?:u9kfZ&frOg<l,Tam#Q,6j)I()8H9>VWO,T;N>+:cc*qb9Dhc+_t;f!\2Y7=AZ6#J.YGC_Ui$s%i\`d*7r@3maAq@)eXHX!<(j1K85gsb,b(YT!tNO3Q=M^!=RMQH=VW%7OVQu>0e'4uoO7fN.*Ma.E!$GZHd(![-3mmmP@&Qo-)WO5%[4-DNA>&[RDs6X.;)X\lpnhg#MIZtuElBjL"2M3ZYnN#6Va0C]:=JaD$.so[+Z69M%0UeD4g5YEZ"U*f^Rs\sWj)k>#XE!&I]LSR%5UGX.4T0g5#gW`=CKcu]Zjt8^7V&LIQ4OJ\:t4!.:t:mnQIr7@>*=-hLB.ItU*HkqHFb?>eiu9sW"`7`LjhNXkS]9rpG4+Y0j]ZH%.:bgQ4R3Un9Z")<@GUe>YoY,CD+Q9CNU(=C4Y5,L.uAh!=h:D(M6Ku])e?(W9CKSt/[5^-Fe11k-U0%_,Tb^/%a=>"\c0P^I+l\a%NXu(cWR#j9:?sW+'(&B*T\=UN&7H;`IYbgd-I*@38g7Pg<N@u+/g_`=C=kiV%#1f\_R=5NiCK]*VqH\_nuDPF)'V"\]>!9.<6_L9%0XiJN<U<C?Ib]aM@9FA+-+n"\A-6ec]J\ntG/BsC>(ml?M&D-TA;"fVP9s"faOt/kWG0X$%+``N,`U!`0C&%nU87V`he;nbIc:.!%bY?&pU/sa\+RPHtWB#^<Pf6i$*CZRojh.S^,6g4A^F@t=ag9CClgLs;^pMcH9Ns+dq#<(^*,hNa8_S8<Tq[Yd:*m/o'J[Nffp$!/%,<i@VF-2qI'%jii*\eaQe_iY<BYZ'*1&L$/A1tmF'M%("T?FLa50p03/Y8Sp(3f3gF`JFdL8#k<mpjg\9ThgY5fhq>SOqna:dYP5%S*EALd")pI.#(VdkZK*M=K7Pu/6p;8b)X(cQdHeg`jVS5OSB<.P%@b`FXpA%A>mX<KC[FX`aP-;&/?5ra7GZ,AnA"f9:4-5opsmT%U7o?2.t%"VLgqH2g7hNSdK.IJO$?Zf`QI\PQi_12iq!_80@n)L_aCdrp7/Rj^bsHrTeLgQ]`7o#@5q5cF7HVi9<kI"AD0gY<$[qi%rX9We_5:Cn<([PI,]Z:5"a'ro&?*:[B!)_6@GD>.8:TQf^.FpPX'4.*7"jE>E5*_Pa@[bo$`@YH,n*N@DFJggV7*GGm]]Z*O`ra@%Yog<:+@[]V*7O"P$I[:Br'$/=d-kTWd/#ITXY&I.dAY]Qm=+FY]P9/^iGuWWUD"%AoL?>i7==77#jCo"NEb>5mA=X]MG5ZU]HK;G%M3^Rp9U=\h=$BXW4M;`X2)b\fW'9I2jbc4[)Dit1g$:p]A5-a':a6`r'6Ht/NAfZ<C0\##4:eHi3"dZS,hZe=f^gJ%CS_:j%i/J"%&l^Ta!5r[<flVgDI51Z!M]Z=t;5?[m4`O#]_T?>bI$N8-FPa-p9W"9Z(VKEP)Q0frgi<k%;%+I(P$kEW&quLakodDd>t2U>6j*g*%CVB]EP<QqL9Ku%t#1]<A#o2>s%5.eSP]X5=.oe*f<JSq#]J$5ui@Fj6,.cmD'lqoM>V-/^^B1A[]NJNQEpt5k2^Bhp;`T-?,+Y%"%K2JP>X6'5VI8a/KNKDZP_44rs1mc?$ht5mP3Iu:YU=LN,2&<c[#"3Q!Mc2Zk.Os=jl2_=oNd.A0P%fbp;c+]cb"f"G,ut,hN0_=;%_C;]YN(>>K1c^MWoMX8S.Gn>NKZ1_1bV$N>;3X47UIJ)D]c%.V\-l.SM;@o@5pgVHOsK>Pol&gm`pF</J?E&K[@Q\!Y)F!C(b;03%=(Da5UtlR"@$dk]ho0$Rc<79*7]HJ1;;P:-)%nD90@%\b@"_]Y\Mp]>@i4Rj"EGu(@AkW<^0ho(f!M=G0qJ*Gq3maMXCQ2L(C[:K%(c`gO"N1GnPDLXFW5(9`FoiAabV6.k17JW_U.D3R0o]ajUFf>?hM>Wl+dqNl8930KW?)o0,dn)q6BA5?B4L<hXip,59:T$NJ_,Vn%LDD5e*PBNo+arg2+BG=<X,$n:p]n)Q\D_6)%B+nS(@;]mN,glTeV#`jI]Ogt:ddISoUtQ]VKf%gh4io5U]>u.]ARc"UEu5/jj1bk%8=/8RTbKj3=VBP0W23<ajpd+F(2hqWhun90^g-WgLjcqM#b9?R7%pAIe4%)o"#7`$WBfF"Y=KAtFtkajI75<FXTl]A4T']BRRR++%I]Pkq#1[@-cu02<A4jukR32oZRfZTq2!f(RKq(o(6)c@A3oVb%JWF]*AAN2SV.!PYUBErJlH*iY?^)NTa_/V8Nq5kPMc#,IC^C3c%$PgEj%G=q)D\W^oZR;W1+TBY#gZ+6aXL=HXeI%KGf9f>@'8T7MmBq()cjH[TNq?:n'T!F1NG&*8m(Pn=OPOR<9@e'RWnPjfOn.C"%k8DCh12*WXOFbbs>NXs#TDu;'Jj!>#KFW&"-ETAq_.ZSqdOP?CJDcFq672cM'n!_""UBTVA_h@_)d.8s+lS&Z+"Y(YYb?-RC[eKo%o_c%V3jDDQ#Y;7+Qd0,I%sZL*?YWE;P;F/o*HhiA"G?u28jMV64Q8RGkDjnZd")seE^X=MG?:!e%pUn-E2XUBVjQ'Sf5rI?cf2i!%NsRg^o"[Y.ZjT;@=M4GdHqR5gYN?/Ibf1fW+2W)*")GO[=Ndl<L8ed<;K?L(-s$dp%D736*X,jdqIF@2.,2t!T=<D+p`2BOlVLqp%>'5PqVg!?*\/!Ua@@/04)hU%Z3@\1_-=qJGI4S#X2W0YH)0d!'Z`[I^n-_U6O[]\!KL+d5rDp76cD'[)<L5Hi$-bKu19;Ko6MOR&%T@=:cK!^):'\L4,6D*ujrX<WoM+fR]%4.,S:MBgeg31_toBB^fi@.Nhc7"+\a4T]_Pa6X)9;;lp#96Jk;$mL_#eUY%nlSD,pe<8'%kI"a;iYSmNRERRXM13X4:Z>FC7@OJe^HOW/hjPg&fnsM+Np.ImXZ5sK>V8-l9o@S#XTUA@$pc'Y,tYa71!l10&<^^oTWpVV-I^c<%:/]t$*e)P\!`M!l)fhV3=,_u?J[7$Jg+XD\CRC8#K-EHe4a3jF`stj]l&IP&XO/@fPsmaKY5o0dC8'H.kIr'Kh&:hFffhjfT:+oc%#,1ZKQK/3[,Sq[7(_`D&B[)4!M994^;DKfT)2DSVp95t$iLgM42n.PIe?:B-6`S1"$<,<'(0i_VV\6A0C_MF#epJsKSk%1LJfa1+%ToUWB8jA`.%WkEDN8`i`'s%Lh93(+E,r$3B2`P)<)2Gqe]1VR6$lG]5S8m"Wi=2gII"gQpD:gpL@^PB<M3*,[o(DE^*dg#)3$pig%MVic3H"1j86+A9iM;b7\T6/^T/6/j+K]_5E<nVp4WFVB$)G/(7oW^5\dD-T>m#>X1/H#XIm;9+;+2\T5USn1Fk>WZnIMJ@]T5.am%q+gcJo\-Q`8&5pY><gBd;D`E8m:I+ON7W,#("EQk^FV+a8&(f)b@+H%E&=uRenn\I"Y[;:-nl+D2e%?ZFB_ef%M/a$C\Fc/h%J!-%81fFn5j,(CI7Xq>_)=,3a0;G_kC#cHVW^F@5ocfEomCdpSG-_qJFu/hj+qAN)*r.`Gpo2]-#"d#54:mYb\%iG@2*0K.:ID/V-9<7%m2D2"YkL(O+]bl%.P.3Z<4CpC%fLdU-Cj5eiT6cE'iACOEBl$3Lg8hddd*C0nY?_\*MkdIY&r#kqrZ=trtP8UP;uVj>T4.oY)1Qg%@PqT!Ca-jEb0)*jeFHU-F4.-9g6<%cb-Y:=MLq8T:a5.L3q[_"iaj"uW+lVgQNcI;`)W<TTAmr:0"ug8b&MH:<+SE,Mis1s+_?om%<@B_(Hnh2(/CVod*,@8;Q@+JQP0TW*bN7sF=\Q^331i89UK$pkQ^"@<;G`os&cU_d15sFOP0%UucEW`[T#JGY+EQNH%SN26.dMFn%?:GhAUD:@nSBYN+fH%e70/;+0>P!,p$iC0FfZi$dF3;!j,#;o<m4D!@Pon9VL>u]77+=4GRN6%.YF;dS(%?O0(t&^U3;-+uJp(u4%q>*,+`G,f?>Yot^jRmQ7X@=EkEZV:_`GZ4FRKOcmNIIHD$?5iN3DB2C8:Ji4$#UopnPQ1T]m($!6Pk^CUXFU^r=Usd<YeG43cU=@%Vbp#Me1Q*00fnLL.%*).4""3?W`?<@NLQ_FOFnj=1`m>-*X]k.^O3p<'TiQlfe7rG05"R8@$PH[kLYbi.r+_4SZ3=u4148-BfUdg%e1kJiglZ]P^P,`J;@&@^Z3ggEb"&:\G-[ou69e(Z90WMJ.E6+'%@!,%>[lh0FVSEb,eBjh2#RAZo%[M0FeU`kVjTPcTR4uBh,Ppr%K$2"*gQ];*:_n4dMiL.C43N3g@r3Uf+M-J2_MW4.6Oj[(6mYrk1A#0g=s,"LIGKdQ;l9s=H,J&nQTEJb\+(ZXgk2S3##a/f:22<[%<FaFEV?GmOnKkg4%sFa41Tk@$UqBDnPk65HW`u(NC$>d*rXoG&\39NmrB-uRVW:pY&`4"_cYsEUV/h"lB+iqTfo`Kr'n$nqO!m%8%^PnkBUU1j@iq1=1YEoBFntI769ttu@;04cojXkB<A26uXCU]/h$g2[A*VG7$Mi:PpfrX]&!Hd=G,+pVXptuAn&9]$)[EAj=L@,o$%*r_kp'+Cf3SUJg=>e?F69l^rsn:8$*'c.<9aKqCIb/6WI_^0_u'(?67B?#1#(+:?]3a,36EMS6;e08@$'M!?T0e$hl'Llrh\EUm;%0G#;.RNBYJ$j:.#"9\9X9dD9=0kIJ;=q[J06&B#krh?#sj9_g-G2+mY?DqpRXW[%'k[!F$QrFguN,3+"H;9#=A*D!TiHGdZjAdM6%.[;/ET\D)OW)'t')7<>+JgcCe5;M0A>'k:"?hIp/YGJ3jA4`TtVA:fGc=;bm9c@uqT:XOn,&8)PFBhV9WEFg[T9&WR)8_(8GLR'd%.<F$:U7+o5H;c*T=iiQQb&mH#&/cb"_TQFcocc7#4[*$=5V.'4]b"G8fJL_YCP>?c#mg6IK2fY^Z:Ucn>kC%rdioU?Pb@AD];;mO%6_%s<M9.2+l5?$W(@kTs.6Ce7X4)>]$>(t_iC_cH,M#-<M="1D#krB__uq$)RU6+G;sB7N`&b?r-8YVNs%-q%HIAAm3_ct?cRW(s%U,&o.8u)M;ZDu'"WNP%45DQRBda!k=6MI6Z.c*$`+*9fGK_bQ;*N\H=3E(tCC=t/5alsO'#H/2mVdn44fJpWTEiR&FE[YKU[)R.r%VjKIQ(M9+53=N`<CT$2?@N8huNSu[YT]XEGs%qF769X0q%':d8=ZWJA#4"j$<g/$1J.YHkRa#4nYc.]`3.dMUWMF?2b:Mlr)0"-5%KF\a_cD1<2S24s@A4t*+P+6IQ780-Io(AV[f?:HJHJe'WfY^Z6.F9?@@lb;).@M[W_VgA!B;KcUpcHBWHa>oW0UmP>MSUC3/SZXr%A;Q[#X3aPTo42fT<8qDKCUD%FQfXH[nO5YWnUMMsSmDImK\J_F.?+QKEf"fsg4;E;0T7!+;'MPp&5A9Yd#e673e8O*##d)IK+.!.%L?LG*Y8N9a)?NA.s3c934FU:DJ4X"]:S4lb)*lO*o[C-'4T=gBfC-HMqOdZRJ,A&O^OGe+Dh%QD0Ah3Ne\?S)LN!4QLN!1en_5/B%rSc)[r9q*JhgG/=chmE3f>"uriJ2@Or8[N9I/EKts7uZoY["Z-bJ3o=\,Z"pn,=CUg@?o~>%AI9_PrivateDataEnd